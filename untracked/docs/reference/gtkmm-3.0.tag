<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="class">
    <name>Gdk::AppLaunchContext</name>
    <filename>classGdk_1_1AppLaunchContext.html</filename>
    <base>Gio::AppLaunchContext</base>
    <member kind="function">
      <type></type>
      <name>AppLaunchContext</name>
      <anchorfile>classGdk_1_1AppLaunchContext.html</anchorfile>
      <anchor>a8c01210d7ce374946c5ab42303009997</anchor>
      <arglist>(AppLaunchContext &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AppLaunchContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1AppLaunchContext.html</anchorfile>
      <anchor>a0baaf70860c015856b2ed27deab38ee4</anchor>
      <arglist>(AppLaunchContext &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AppLaunchContext</name>
      <anchorfile>classGdk_1_1AppLaunchContext.html</anchorfile>
      <anchor>a2355585322109f3ce70e06d952d8b48c</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkAppLaunchContext *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1AppLaunchContext.html</anchorfile>
      <anchor>a8bc3e6b3847b748d902276ba1cedee42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkAppLaunchContext *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1AppLaunchContext.html</anchorfile>
      <anchor>a3979b6e6e7e93aeb784e9f21d56e30f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GdkAppLaunchContext *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1AppLaunchContext.html</anchorfile>
      <anchor>ae2cfb2bff0e620e09e1203a86e251f03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_screen</name>
      <anchorfile>classGdk_1_1AppLaunchContext.html</anchorfile>
      <anchor>af95b3911778f44d3f6893d8583d617ee</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Screen &gt; &amp;screen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_desktop</name>
      <anchorfile>classGdk_1_1AppLaunchContext.html</anchorfile>
      <anchor>a562759a651c8fad69b6c16ee557ea636</anchor>
      <arglist>(int desktop)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_timestamp</name>
      <anchorfile>classGdk_1_1AppLaunchContext.html</anchorfile>
      <anchor>aebd5ce2b21a62cc7c3b223bd1b1c6c1d</anchor>
      <arglist>(guint32 timestamp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon</name>
      <anchorfile>classGdk_1_1AppLaunchContext.html</anchorfile>
      <anchor>aa1eee8f1afed8479c9fab7ecf6a3f582</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::Icon &gt; &amp;icon)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_name</name>
      <anchorfile>classGdk_1_1AppLaunchContext.html</anchorfile>
      <anchor>afd7328e81c9340a28b3812c06bc76dab</anchor>
      <arglist>(const Glib::ustring &amp;icon_name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Display &gt; &gt;</type>
      <name>property_display</name>
      <anchorfile>classGdk_1_1AppLaunchContext.html</anchorfile>
      <anchor>ae827beec41a4043e79aa9c7658b3cc22</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1AppLaunchContext.html</anchorfile>
      <anchor>ae6092a3a59fe206bbf623cf681eb24d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; AppLaunchContext &gt;</type>
      <name>create</name>
      <anchorfile>classGdk_1_1AppLaunchContext.html</anchorfile>
      <anchor>affc7a8941c53e3ff785b20e460f6ee63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>AppLaunchContext</name>
      <anchorfile>classGdk_1_1AppLaunchContext.html</anchorfile>
      <anchor>a5628652a695be62136401c2228116e39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::AppLaunchContext &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1AppLaunchContext.html</anchorfile>
      <anchor>a97da12504367f28d2f6e98beefe01b66</anchor>
      <arglist>(GdkAppLaunchContext *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::Color</name>
    <filename>classGdk_1_1Color.html</filename>
    <member kind="function">
      <type></type>
      <name>Color</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>a38b626b2a1229e3dd18d3be70b5d95b3</anchor>
      <arglist>(GdkColor *gobject, bool make_a_copy=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>aaf4c7297d0a75cbb9f2a9d4af79d685a</anchor>
      <arglist>(const Color &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Color &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>ae1b20e1c0b3cdc9a598375efabef2555</anchor>
      <arglist>(const Color &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>a213cfc94dd23a47df07061b7c326741e</anchor>
      <arglist>(Color &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Color &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>a82e0aa7081770205ee20443bb883cda7</anchor>
      <arglist>(Color &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Color</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>ac6a94eaf5a66753d0257c4118a3ff1af</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>a2f8dcf566d0b501b7106dcf0afa07986</anchor>
      <arglist>(Color &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GdkColor *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>adaf51356a25a8080fd117b3c0401f8d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkColor *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>ac9a63d39cf10b78c42553231c5a41664</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GdkColor *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>aec15d74b85ff96e0c35a0cafe8041646</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>a0336b76ae18bf528bf6d126dc56a04a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Color</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>a8d88d6826d957b23c63469f9a9301f10</anchor>
      <arglist>(const Glib::ustring &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_grey</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>ac99818ec1f5763bae69f8e51f679119a</anchor>
      <arglist>(gushort value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_grey_p</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>aa9c9b79aee1330d15607496aa58416c2</anchor>
      <arglist>(double g)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_rgb</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>a3b9039c60b8bbdf828563328f30ad9c1</anchor>
      <arglist>(gushort red_, gushort green_, gushort blue_)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_rgb_p</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>a145aa4df12014032c4f3d8a4e7584221</anchor>
      <arglist>(double red_, double green_, double blue_)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_hsv</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>ab204460cdc315e5114ae9be2e99cd80d</anchor>
      <arglist>(double h, double s, double v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_hsl</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>ab48ca94b934b1574597decc3c25c510a</anchor>
      <arglist>(double h, double s, double l)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>a7ada60cada9db85ff439edd5444adaf3</anchor>
      <arglist>(const Glib::ustring &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>gushort</type>
      <name>get_red</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>a0aa7063c10eecbdd1e8e622184682b83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>gushort</type>
      <name>get_green</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>a0a6775026d0016d27f449f3a48c5a62c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>gushort</type>
      <name>get_blue</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>a85ef9981171d27bb31a900f5a87370d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_red</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>aa49b85517031bb6c5064693fe8e97ebc</anchor>
      <arglist>(gushort value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_green</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>ae18d21bf970a2afa2b5a78526397b813</anchor>
      <arglist>(gushort value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_blue</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>ac50fbf99168661a3170a2117e22688d4</anchor>
      <arglist>(gushort value)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_pixel</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>a8646ca5885afa06af19b9273a01ac829</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_red_p</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>ab26f3b996a5a4fb65a25fa3c31e36dce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_green_p</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>aa123654f82e0f7b64f0cdc3a899dfbc3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_blue_p</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>a66e2303219d61e97f956a14fdaaf3bcd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>to_string</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>ac340ff044564bcf9531daee9ce994918</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>aae9c57ec4b2465cd7d35489537604753</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GdkColor *</type>
      <name>gobject_</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>a1dae95e856d042d4cb3387e37a26ef79</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>a8cbf40ce97eb2127b5bcd681c6fcdc4d</anchor>
      <arglist>(const Color &amp;lhs, const Color &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>a42634d2d9874c6d75cb9340d801862a2</anchor>
      <arglist>(const Color &amp;lhs, const Color &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>aa042c6bb29d57828bfcaa40cee7329b5</anchor>
      <arglist>(Color &amp;lhs, Color &amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Gdk::Color</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1Color.html</anchorfile>
      <anchor>a5bbf27dde61754494f9a2ed31fbb2b79</anchor>
      <arglist>(GdkColor *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::Cursor</name>
    <filename>classGdk_1_1Cursor.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>Cursor</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>acc25b4e5d1717db39f9b674aaec905c9</anchor>
      <arglist>(Cursor &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Cursor &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>ac3bd89e9442296204a55fc34b2da2778</anchor>
      <arglist>(Cursor &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Cursor</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>a4c01eb9a08d758411af82b54d3461770</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkCursor *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>a99bdcdf475a617556312520a45fa05c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkCursor *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>a05b7782b2b20e9a39172f69755a03813</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GdkCursor *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>a34e7a1b9ba6ebf990c89fe980e0670d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>af90467259384482626008b8b92980967</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>a416be18843c1252ab962feef7c0bcd43</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>get_image</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>a56d71b0b05cb1343b96e962102eade9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Pixbuf &gt;</type>
      <name>get_image</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>addf62706866350ccf81749f16f1ae22d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>::Cairo::RefPtr&lt; ::Cairo::Surface &gt;</type>
      <name>get_surface</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>acd67f8fca7304748d205ac351f5c9c7b</anchor>
      <arglist>(double &amp;x_hot, double &amp;y_hot)</arglist>
    </member>
    <member kind="function">
      <type>::Cairo::RefPtr&lt; const ::Cairo::Surface &gt;</type>
      <name>get_surface</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>a542cea4bbfffa51eff0014f52d2f3ce4</anchor>
      <arglist>(double &amp;x_hot, double &amp;y_hot) const </arglist>
    </member>
    <member kind="function">
      <type>CursorType</type>
      <name>get_cursor_type</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>af8a935eecb2724ebfbbeeb2b7e356cb5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>a09e0ccbec9d2e1f2453a89c52c065a58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Cursor &gt;</type>
      <name>create</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>a2395fc2f4b3f3ed477c42a9c03706262</anchor>
      <arglist>(CursorType cursor_type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Cursor &gt;</type>
      <name>create</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>a73311ad0d1f0b409090decce724023e3</anchor>
      <arglist>(const Glib::RefPtr&lt; Display &gt; &amp;display, CursorType cursor_type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Cursor &gt;</type>
      <name>create</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>aeb9e71127ed2c19f334983fce8754942</anchor>
      <arglist>(const Glib::RefPtr&lt; Display &gt; &amp;display, const Glib::RefPtr&lt; Pixbuf &gt; &amp;pixbuf, int x, int y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Cursor &gt;</type>
      <name>create</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>a369ffad2605e446e617847f176086602</anchor>
      <arglist>(const Glib::RefPtr&lt; Display &gt; &amp;display, const ::Cairo::RefPtr&lt; ::Cairo::Surface &gt; &amp;surface, double x, double y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Cursor &gt;</type>
      <name>create</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>a8f666ad52a4dbbc84b545d82f105e60b</anchor>
      <arglist>(const Glib::RefPtr&lt; Display &gt; &amp;display, const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Cursor</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>a1287d6481e9c60bca0ff9d49f6e7a42c</anchor>
      <arglist>(const Glib::RefPtr&lt; Display &gt; &amp;display, const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Cursor &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1Cursor.html</anchorfile>
      <anchor>aaf25140ea02e667d2bc74396846a9e20</anchor>
      <arglist>(GdkCursor *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::Device</name>
    <filename>classGdk_1_1Device.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>Device</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a5dd1f5444d52476a9781c9065a95c96f</anchor>
      <arglist>(Device &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Device &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>aa3471771d5b05f60692df218cd8e8da8</anchor>
      <arglist>(Device &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Device</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a2aa48319b4cf720a9a55a5175d616041</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkDevice *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>aeb0115eb479ffaa6f01314d5b09a84be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkDevice *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a3dcdc49a6707720f128de8377beb227c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GdkDevice *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>ad72b1db0d0407e69c976829bf1e7c620</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a455127cf1e0e98998c040b564e880932</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_has_cursor</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>adc29df9a1ab4edc6976d3ca74dd55b9f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>InputSource</type>
      <name>get_source</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>adccad74810fe8576e56ae1295b4437fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>InputMode</type>
      <name>get_mode</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>ad898f2090360b7195e887542ca1e834b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_mode</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a515ec77f056db9706a661f47eae1f9f7</anchor>
      <arglist>(InputMode mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_n_keys</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>ae03c438f4ca0197ef28cbcef5878461f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_key</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a2438c73f9b055ea7710ce34abc02a4b4</anchor>
      <arglist>(guint index_, guint &amp;keyval, ModifierType &amp;modifiers) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_key</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>ac8722bcabab37d383ae6b943e0450b3a</anchor>
      <arglist>(guint index_, guint keyval, ModifierType modifiers)</arglist>
    </member>
    <member kind="function">
      <type>AxisUse</type>
      <name>get_axis_use</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a286833e6f10b358370de9bb12e1a8918</anchor>
      <arglist>(guint index_) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_axis_use</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a550a8adf7e877ce7e0e4ae037a00b0fd</anchor>
      <arglist>(guint index_, AxisUse use)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_state</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>abfd2a2ba80433a8134a6c17d72026ac1</anchor>
      <arglist>(const Glib::RefPtr&lt; Window &gt; &amp;window, double &amp;axes, ModifierType &amp;mask)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; TimeCoord &gt;</type>
      <name>get_history</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a8bc78c4f3450780e6723416a26f14551</anchor>
      <arglist>(const Glib::RefPtr&lt; Window &gt; &amp;window, guint32 start, guint32 stop) const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; Gdk::Device &gt; &gt;</type>
      <name>list_slave_devices</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>af8d401eaa65f4cc87f464ac23f57fc16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_n_axes</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a83bd30917d8a244868eca57767fc1d9a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>list_axes</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a45926e03ecaf711b98af4294a6b1edbf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_axis_value</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a3dc6e8aac6e2a4233293553cfca9dfd3</anchor>
      <arglist>(double &amp;axes, GdkAtom axis_label, double &amp;value) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_axis</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a11368d857869b4a88e2d83704022672a</anchor>
      <arglist>(double &amp;axes, AxisUse use, double &amp;value) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a2a8201ff308802ad8b0c7c8d256cebb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a2e3160bcbe6ba834e866ef6483deb493</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Device &gt;</type>
      <name>get_associated_device</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>af6e1b68b8134b122076df4ee6a727ea0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Device &gt;</type>
      <name>get_associated_device</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a4bb8207b29ab9a0856bad14ee758a16c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DeviceType</type>
      <name>get_device_type</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a21617188111a21775fb456f96f6809f9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GrabStatus</type>
      <name>grab</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>aa3336ff0ef66bbe29c640fc48aff86cb</anchor>
      <arglist>(const Glib::RefPtr&lt; Window &gt; &amp;window, GrabOwnership grab_ownership, bool owner_events, EventMask event_mask, const Glib::RefPtr&lt; Cursor &gt; &amp;cursor, guint32 time_)</arglist>
    </member>
    <member kind="function">
      <type>GrabStatus</type>
      <name>grab</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a2d2f7bfbec6e1d90f54d6d5fe51c32ab</anchor>
      <arglist>(const Glib::RefPtr&lt; Window &gt; &amp;window, GrabOwnership grab_ownership, bool owner_events, EventMask event_mask, guint32 time_)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ungrab</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a0868876a231261d4f2b88e338b86ee52</anchor>
      <arglist>(guint32 time_)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>warp</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a8b781cfdbf835cd03bd29852cbb65848</anchor>
      <arglist>(const Glib::RefPtr&lt; Screen &gt; &amp;screen, int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_position</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a6336d188fa0a91a6d0a8024b6a24c419</anchor>
      <arglist>(int &amp;x, int &amp;y) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_position</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>ad5b6877a020285401ce6435d90bd361e</anchor>
      <arglist>(Glib::RefPtr&lt; Screen &gt; &amp;screen, int &amp;x, int &amp;y) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_position</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>aa7cd338ce2224d17960d6c7b29fa4aca</anchor>
      <arglist>(double &amp;x, double &amp;y) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_position</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a542bf81657a1d304b38144348c232eb9</anchor>
      <arglist>(Glib::RefPtr&lt; Screen &gt; &amp;screen, double &amp;x, double &amp;y) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Window &gt;</type>
      <name>get_window_at_position</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>af026611e4289932fe4d8857196ed3141</anchor>
      <arglist>(int &amp;win_x, int &amp;win_y)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Window &gt;</type>
      <name>get_window_at_position</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a1911346623bf6ed120f0d809be568932</anchor>
      <arglist>(int &amp;win_x, int &amp;win_y) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Window &gt;</type>
      <name>get_window_at_position</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>aa6e7d3a57a9e5860904a36ffc5d5bced</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Window &gt;</type>
      <name>get_window_at_position</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a1e36701e4f9b6179800364476b7a4da1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Window &gt;</type>
      <name>get_last_event_window</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>afa6c16680db8517d2a8e3feed9c241af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Window &gt;</type>
      <name>get_last_event_window</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a78378933313dc9342dfb295343f86927</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_vendor_id</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>aa4603259eb0b8d4b46da4694a028a4b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_product_id</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a50ed006ce61829a9e76b2794c82d2a1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Seat &gt;</type>
      <name>get_seat</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a6cfbe8318bce9f6a4dad63f293e88346</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Seat &gt;</type>
      <name>get_seat</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>aa3aa9bac37212b1f7009dcbbac24a455</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AxisFlags</type>
      <name>get_axes</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>af6a7022eae0fb07462246de8c9fcbb5c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_changed</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a20926291b1629adaab7be77543559e89</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Display &gt; &gt;</type>
      <name>property_display</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a3e66a5b082fd3119665ff5d491f93ebe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_name</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>abdbd5f2837df910c533b48ce4b9b61f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; DeviceType &gt;</type>
      <name>property_type</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a2ff4f66280a567a5934bee5e90cfbfaf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Device &gt; &gt;</type>
      <name>property_associated_device</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>acf27005ee3b0d7b975423ad88acc73ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; InputSource &gt;</type>
      <name>property_input_source</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a751f2480519f7ba35f585a0a5474f08d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; InputMode &gt;</type>
      <name>property_input_mode</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a7e33044bdf7d1824cd28e5508dcc065f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; InputMode &gt;</type>
      <name>property_input_mode</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a87ded0bc708449cff1446247eb25832b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_cursor</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a78f7a7b1b5f079220ab15d2410112336</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_n_axes</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a040185c11e22a6347d85348483cfc0f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_vendor_id</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>abbea0b6a9d0d657afac50108e0d3ce05</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_product_id</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>abb68116e1478d147fe253226e52f7b69</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Seat &gt; &gt;</type>
      <name>property_seat</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>acf0be32b906581a068c9185cd7fa819b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Seat &gt; &gt;</type>
      <name>property_seat</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a42269bfc80cf263c5625c8237165f23f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_num_touches</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>ae0f954a21be629bd4478c60fdd6f21f9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; AxisFlags &gt;</type>
      <name>property_axes</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>af3f57ea650c39d7097f090880a6a86cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>aef8b7c4a44789d88a65cd8f9103d581c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Device</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a7b7cf9284ccf9d2bbc061205446b5f40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Device &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1Device.html</anchorfile>
      <anchor>a8a6b8086fe4968ffed6f58f055a238c1</anchor>
      <arglist>(GdkDevice *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::DeviceManager</name>
    <filename>classGdk_1_1DeviceManager.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>DeviceManager</name>
      <anchorfile>classGdk_1_1DeviceManager.html</anchorfile>
      <anchor>ad2f50ef9b217e0d25e23d8f54b357667</anchor>
      <arglist>(DeviceManager &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>DeviceManager &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1DeviceManager.html</anchorfile>
      <anchor>a81b51e45d9c7bd179c3cbaeb0b7092e4</anchor>
      <arglist>(DeviceManager &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DeviceManager</name>
      <anchorfile>classGdk_1_1DeviceManager.html</anchorfile>
      <anchor>aaf5c903c031db007dd1213f1951d1f8a</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkDeviceManager *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1DeviceManager.html</anchorfile>
      <anchor>abc4d26178ed4446746ba71c5817e054e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkDeviceManager *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1DeviceManager.html</anchorfile>
      <anchor>a90e9338101d22628c522cca934c959ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GdkDeviceManager *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1DeviceManager.html</anchorfile>
      <anchor>ad7cb97ea3526c3fda790db17aae1b770</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1DeviceManager.html</anchorfile>
      <anchor>a3084af99095efb852755d6ab74be3c20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1DeviceManager.html</anchorfile>
      <anchor>ae5501aac0d87216c8ed1492990b29917</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; Device &gt; &gt;</type>
      <name>list_devices</name>
      <anchorfile>classGdk_1_1DeviceManager.html</anchorfile>
      <anchor>a05159a0f7261ce0d484d19bfaf30d8ee</anchor>
      <arglist>(DeviceType type)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; const Device &gt; &gt;</type>
      <name>list_devices</name>
      <anchorfile>classGdk_1_1DeviceManager.html</anchorfile>
      <anchor>aecdbdf11d3129be999ea20686fed9532</anchor>
      <arglist>(DeviceType type) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Device &gt;</type>
      <name>get_client_pointer</name>
      <anchorfile>classGdk_1_1DeviceManager.html</anchorfile>
      <anchor>ad6b957eb4305f485d451ca15d0566579</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Device &gt;</type>
      <name>get_client_pointer</name>
      <anchorfile>classGdk_1_1DeviceManager.html</anchorfile>
      <anchor>a597bda3d8d40f8354cd6cdb31462344f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1DeviceManager.html</anchorfile>
      <anchor>a1a7ffa78b4fee0ac4aa12802b6884174</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DeviceManager</name>
      <anchorfile>classGdk_1_1DeviceManager.html</anchorfile>
      <anchor>a30dced77b9ed98f8c443ae650414ebdd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::DeviceManager &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1DeviceManager.html</anchorfile>
      <anchor>a80d473785f54c9e8f94b9a6ac80a205b</anchor>
      <arglist>(GdkDeviceManager *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::Display</name>
    <filename>classGdk_1_1Display.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>Display</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>ae7d37751f4712891ff2d7df27f0cd6fc</anchor>
      <arglist>(Display &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Display &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a9ed2bdedf1c53372ee3c92dde3568878</anchor>
      <arglist>(Display &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Display</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a42dfa55c9dd99d81dce2a755a2488808</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkDisplay *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>aa5ba401c95c8f72ffbc974fa9ff7e2f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkDisplay *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a410d10d1aa86f043b3bbf1df1ba1d075</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GdkDisplay *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>ab90b102f28dc2ea9f1259b005acfba9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a81036bff74e1bb09cdd230743d433ec7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_n_screens</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>aa84e594f6dac8e7f77b031d57f13d504</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Screen &gt;</type>
      <name>get_screen</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a9bfae690b0a5c356ebd7dd7e2259c491</anchor>
      <arglist>(int screen_num=0)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Screen &gt;</type>
      <name>get_screen</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a756fa9493d0d08c372f0e65cc293605c</anchor>
      <arglist>(int screen_num=0) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Screen &gt;</type>
      <name>get_default_screen</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>ac58b63c93376019814c62e2bd1271a94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Screen &gt;</type>
      <name>get_default_screen</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a9e6f355e1b0563454a2fc649622ac300</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>device_is_grabbed</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a7a8134b883ffe30530f2dff8c16eab64</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gdk::Device &gt; &amp;device) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beep</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a63ff8a09aa81f2bf1f7581ddba39fe69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sync</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>ad772046a33c0a1c6d071b1cf339faf63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a00b18a2be2cd6216c30b64330e8817b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_closed</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a065b9acdb17f6d8377a58b9f08dbbdb2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GdkEvent *</type>
      <name>get_event</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a71ef8186ac0ebce17ab869eb77f5e9e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkEvent *</type>
      <name>get_event</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>af2619b3d9214ac40b38e571ed41be2a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GdkEvent *</type>
      <name>peek_event</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a3b7ad20b7a23a50c3b5b48482deac281</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GdkEvent *</type>
      <name>peek_event</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a7da16e716abf57a3dd27b1fc93b1b0da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put_event</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>afaca03c9f4b869fdd127c298869f948b</anchor>
      <arglist>(GdkEvent *event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_pending</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>aee82de38f93b0396ee48628169bf5a37</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_double_click_time</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>afd39ade2117b4fd825989dc25f9673bb</anchor>
      <arglist>(guint msec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_double_click_distance</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>af7f3d567cbc742ea19dba76043fd6038</anchor>
      <arglist>(guint distance)</arglist>
    </member>
    <member kind="function">
      <type>GdkKeymap *</type>
      <name>get_keymap</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>ad28f5bf65bb574fabfb145cae58af844</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkKeymap *</type>
      <name>get_keymap</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>aa4dce935b386c1782116cda227e464fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_selection_owner</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a12a762f4c63f159da0597bc007864ae9</anchor>
      <arglist>(const Glib::RefPtr&lt; Window &gt; &amp;owner, Glib::ustring &amp;selection, guint32 time_, bool send_event)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Window &gt;</type>
      <name>get_selection_owner</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a7a1f27f2a222be22b6fd9cdbbc77c2bd</anchor>
      <arglist>(const Glib::ustring &amp;selection)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selection_send_notify</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a423672d86fe26b4dcc7fd208871e0492</anchor>
      <arglist>(const Glib::RefPtr&lt; Window &gt; &amp;requestor, Glib::ustring &amp;selection, Glib::ustring &amp;target, Glib::ustring &amp;property, guint32 time_)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a0b8fa8a05a7208f9b717000fe1b74aa6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supports_cursor_alpha</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>abb60e53ec1440074fc6f93cdfaa94ac1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supports_cursor_color</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a7cba00a292c19da1da97ec9cf6b09eef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_default_cursor_size</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a3ae4cc7de8dd57745eba62c75b2a85c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_maximal_cursor_size</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a9f80dfeaece806cca2eae5e4fa5e2c5f</anchor>
      <arglist>(guint &amp;width, guint &amp;height)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Window &gt;</type>
      <name>get_default_group</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a15fbecbe204a75e0788b6df41d555d00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Window &gt;</type>
      <name>get_default_group</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>ad63eaa23ede9e626e5b5d2ffb358d3ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supports_selection_notification</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>ad9a895ff3dc878e5ff99eb4bb18ac2c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>request_selection_notification</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>ad2f39992d762deb3708166744fb833aa</anchor>
      <arglist>(const Glib::ustring &amp;selection)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supports_clipboard_persistence</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>aa93797c67cffeb621925a8d3e2e7f335</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>store_clipboard</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a0d31c8b4dfc1aca3b747497bfa2e60de</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Window &gt; &amp;clipboard_window, guint32 time_)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>store_clipboard</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a3bb2daf88d235d9cd4b5fcabf75b9ac8</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Window &gt; &amp;clipboard_window, guint32 time_, const std::vector&lt; Glib::ustring &gt; &amp;targets)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supports_shapes</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a3988d20d640b06fad1afcbd9d7ebc487</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supports_input_shapes</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a3e2aef74c6b3409148fca531e12d0580</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supports_composite</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>aeb030dde7590e1b649f398e99da0c9b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notify_startup_complete</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>afb9b36d3d1fab967f76f1f782319f5da</anchor>
      <arglist>(const Glib::ustring &amp;startup_id)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; DeviceManager &gt;</type>
      <name>get_device_manager</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a2d6aa5284d79bb968482ed34d0a2d51a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const DeviceManager &gt;</type>
      <name>get_device_manager</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>ae226895026d1de7dda179a297e9b668c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; AppLaunchContext &gt;</type>
      <name>get_app_launch_context</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>ad948d39943838839ea2ab31cd609ef22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const AppLaunchContext &gt;</type>
      <name>get_app_launch_context</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a0f9d4ace582ddefa2efba8f3f0fbfbfa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Seat &gt;</type>
      <name>get_default_seat</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a0752d93a9dcff539aaf0313d205bbf4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Seat &gt;</type>
      <name>get_default_seat</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a3f313bcc3b049d29a4f2ef7c1880827b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; Seat &gt; &gt;</type>
      <name>list_seats</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a70049908096f8483f38702e7f21e96ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; const Seat &gt; &gt;</type>
      <name>list_seats</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a49169e00c10462257ecad363a206e732</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_n_monitors</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>acc7eab113e5486dbe7db6853e44439e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Monitor &gt;</type>
      <name>get_monitor</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a1298d41e57a83e9eb987f2a630ff97b4</anchor>
      <arglist>(int monitor_num)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Monitor &gt;</type>
      <name>get_monitor</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>ae515dd054f9a781c58d6fae5c6b00ff9</anchor>
      <arglist>(int monitor_num) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Monitor &gt;</type>
      <name>get_primary_monitor</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a3777ab4cc5b7d20066b368e82e1e2161</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Monitor &gt;</type>
      <name>get_primary_monitor</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a242e6f03575aa975e712e9e375257f0a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Monitor &gt;</type>
      <name>get_monitor_at_point</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>aaa00d4780d536d9cf9d0b07e73ec6ff0</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Monitor &gt;</type>
      <name>get_monitor_at_point</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>adea28544dc06aa46b882adab7ad10262</anchor>
      <arglist>(int x, int y) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Monitor &gt;</type>
      <name>get_monitor_at_window</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a2cba4a82a9e86ba0ccbfb0f0f548290f</anchor>
      <arglist>(const Glib::RefPtr&lt; Window &gt; &amp;window)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Monitor &gt;</type>
      <name>get_monitor_at_window</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a0d6a453ad4d771625f4a46e2f017be77</anchor>
      <arglist>(const Glib::RefPtr&lt; Window &gt; &amp;window) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, bool &gt;</type>
      <name>signal_closed</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a76c3ce6d1ac117a97b9a39868aea6216</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_opened</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a8e7333ed4d10184563e1cac8d90800ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Seat &gt; &amp; &gt;</type>
      <name>signal_seat_added</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>afff3e19f19942edaa2ff1e6b51ac6a50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Seat &gt; &amp; &gt;</type>
      <name>signal_seat_removed</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>abb0ecdf7fe94b08719bc69dc6707fc81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Monitor &gt; &amp; &gt;</type>
      <name>signal_monitor_added</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a71dc5f4730cb4227f1a4a33034a4b3d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Monitor &gt; &amp; &gt;</type>
      <name>signal_monitor_removed</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>af36a2445c5c320310fa71545710438b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a394a1a77a07d3622b4cce1c3413945f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Display &gt;</type>
      <name>open</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a59cf8e3302a66aa24ba43b0c47dae946</anchor>
      <arglist>(const Glib::ustring &amp;display_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Display &gt;</type>
      <name>get_default</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a0cbfb8aa89b6d2a7047b93909894b763</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Display &gt;</type>
      <name>open_default_libgtk_only</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a131a4247aeaeb8edb5d1cabb9ced3174</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Display</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>a343b97f710d20562739337c3f7ae7a26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Display &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1Display.html</anchorfile>
      <anchor>af5e336efbe340163508427f1c476af68</anchor>
      <arglist>(GdkDisplay *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::DisplayManager</name>
    <filename>classGdk_1_1DisplayManager.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>DisplayManager</name>
      <anchorfile>classGdk_1_1DisplayManager.html</anchorfile>
      <anchor>a5609b13130294cfcf2890ae0d1673733</anchor>
      <arglist>(DisplayManager &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>DisplayManager &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1DisplayManager.html</anchorfile>
      <anchor>a67590f9bc9a35e605f21a72be395f0a7</anchor>
      <arglist>(DisplayManager &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DisplayManager</name>
      <anchorfile>classGdk_1_1DisplayManager.html</anchorfile>
      <anchor>ae3cea4e464ec8e4158b128cd33ecacb1</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkDisplayManager *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1DisplayManager.html</anchorfile>
      <anchor>a92183d8df699c7a9ce286cd8dd6a4fdc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkDisplayManager *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1DisplayManager.html</anchorfile>
      <anchor>a205077fcc126cc7b0021c756689d95bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GdkDisplayManager *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1DisplayManager.html</anchorfile>
      <anchor>a4040b551662c4550882dcbbc2f86267d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Display &gt;</type>
      <name>get_default_display</name>
      <anchorfile>classGdk_1_1DisplayManager.html</anchorfile>
      <anchor>abd8af5922c9387e779d7a5c4849a0290</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Display &gt;</type>
      <name>get_default_display</name>
      <anchorfile>classGdk_1_1DisplayManager.html</anchorfile>
      <anchor>acd62583e9a9ec3244a39ce349649a8fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_default_display</name>
      <anchorfile>classGdk_1_1DisplayManager.html</anchorfile>
      <anchor>aa35a8aae484348b5dc204c9eaadfdbca</anchor>
      <arglist>(const Glib::RefPtr&lt; Display &gt; &amp;display)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; Display &gt; &gt;</type>
      <name>list_displays</name>
      <anchorfile>classGdk_1_1DisplayManager.html</anchorfile>
      <anchor>aa46adeef6542b879a280c55fdd706540</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Display &gt;</type>
      <name>open_display</name>
      <anchorfile>classGdk_1_1DisplayManager.html</anchorfile>
      <anchor>a7a05b0efe4dbd84bd0bc0e9325957d6e</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Display &gt; &gt;</type>
      <name>property_default_display</name>
      <anchorfile>classGdk_1_1DisplayManager.html</anchorfile>
      <anchor>adf5eea65c547419ec7ba650a35b26b3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Display &gt; &gt;</type>
      <name>property_default_display</name>
      <anchorfile>classGdk_1_1DisplayManager.html</anchorfile>
      <anchor>a0adf64ec7d600541c97478a6c3740a57</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Display &gt; &amp; &gt;</type>
      <name>signal_display_opened</name>
      <anchorfile>classGdk_1_1DisplayManager.html</anchorfile>
      <anchor>af1a13dc3a5f591f5e8bd08ef14f1290f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1DisplayManager.html</anchorfile>
      <anchor>a7c20f9a19c0a8251db577a7b1e62766c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; DisplayManager &gt;</type>
      <name>get</name>
      <anchorfile>classGdk_1_1DisplayManager.html</anchorfile>
      <anchor>ac17b40997902dce84e1e9ed435e5e7bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::DisplayManager &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1DisplayManager.html</anchorfile>
      <anchor>a7b504d2596c8c203eba56d7899a21ff8</anchor>
      <arglist>(GdkDisplayManager *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::DragContext</name>
    <filename>classGdk_1_1DragContext.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>DragContext</name>
      <anchorfile>classGdk_1_1DragContext.html</anchorfile>
      <anchor>ab250ee7cb5aaaa2ef1cad6f3ced5a18e</anchor>
      <arglist>(DragContext &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>DragContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1DragContext.html</anchorfile>
      <anchor>a7a72b1626aa76b0d6fc27fcaffbb08c4</anchor>
      <arglist>(DragContext &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DragContext</name>
      <anchorfile>classGdk_1_1DragContext.html</anchorfile>
      <anchor>a8ad8833bd36c6eb4947e253ac9d08486</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkDragContext *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1DragContext.html</anchorfile>
      <anchor>a719395d176b20bc76696bc138d993843</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkDragContext *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1DragContext.html</anchorfile>
      <anchor>a2083e8d2d3d563ee8085a19d693be28c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GdkDragContext *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1DragContext.html</anchorfile>
      <anchor>aefe9c9832df9c10022ac4d882fbfc526</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drag_status</name>
      <anchorfile>classGdk_1_1DragContext.html</anchorfile>
      <anchor>a368eb26042a181638d995295417a2764</anchor>
      <arglist>(DragAction action, guint32 time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drag_refuse</name>
      <anchorfile>classGdk_1_1DragContext.html</anchorfile>
      <anchor>a69b69c67eab2d6e9900f11babc805928</anchor>
      <arglist>(guint32 time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drop_reply</name>
      <anchorfile>classGdk_1_1DragContext.html</anchorfile>
      <anchor>a65ad50572eeb791ef777cf397673815f</anchor>
      <arglist>(bool accepted, guint32 time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drop_finish</name>
      <anchorfile>classGdk_1_1DragContext.html</anchorfile>
      <anchor>ac962004e3323dc4b80a559d1a187b6ec</anchor>
      <arglist>(bool success, guint32 time)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_selection</name>
      <anchorfile>classGdk_1_1DragContext.html</anchorfile>
      <anchor>a9d3e0d0a3a08478a47ffbbc294937423</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drag_finish</name>
      <anchorfile>classGdk_1_1DragContext.html</anchorfile>
      <anchor>a395bdac1a325d243519b4bee29fbdb44</anchor>
      <arglist>(bool success, bool del, guint32 time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon</name>
      <anchorfile>classGdk_1_1DragContext.html</anchorfile>
      <anchor>a741822875fd4767827b42b88550eecfa</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Surface &gt; &amp;surface)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon</name>
      <anchorfile>classGdk_1_1DragContext.html</anchorfile>
      <anchor>ae281e3c452870c40c9467940fe8be8fe</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;pixbuf, int hot_x, int hot_y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon</name>
      <anchorfile>classGdk_1_1DragContext.html</anchorfile>
      <anchor>af93ae8e081be969a9914f79e6afc2247</anchor>
      <arglist>(const Glib::ustring &amp;stock_id, int hot_x, int hot_y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_name</name>
      <anchorfile>classGdk_1_1DragContext.html</anchorfile>
      <anchor>ae092d80417150411714e9eb21eba00eb</anchor>
      <arglist>(const Glib::ustring &amp;name, int hot_x, int hot_y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon</name>
      <anchorfile>classGdk_1_1DragContext.html</anchorfile>
      <anchor>a90eb57cd7bb8d7137d2b7c2b9b1e83ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Window &gt;</type>
      <name>get_source_window</name>
      <anchorfile>classGdk_1_1DragContext.html</anchorfile>
      <anchor>ad96790b1e09f8a190c0f54216c5c9028</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Window &gt;</type>
      <name>get_source_window</name>
      <anchorfile>classGdk_1_1DragContext.html</anchorfile>
      <anchor>a5cbc4280c4f0c94d74ffa547787238d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Window &gt;</type>
      <name>get_dest_window</name>
      <anchorfile>classGdk_1_1DragContext.html</anchorfile>
      <anchor>a4cbb0af358b0ff246e2ca8bc20f41a59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Window &gt;</type>
      <name>get_dest_window</name>
      <anchorfile>classGdk_1_1DragContext.html</anchorfile>
      <anchor>a23d18297b6964389655a1a1cc5ed714d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DragProtocol</type>
      <name>get_protocol</name>
      <anchorfile>classGdk_1_1DragContext.html</anchorfile>
      <anchor>a3554b9e9c9d6327fb4cf9f0a4d310840</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_device</name>
      <anchorfile>classGdk_1_1DragContext.html</anchorfile>
      <anchor>ad8f0f32b255725dc6c5d76886cf02ce6</anchor>
      <arglist>(const Glib::RefPtr&lt; Device &gt; &amp;device)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Device &gt;</type>
      <name>get_device</name>
      <anchorfile>classGdk_1_1DragContext.html</anchorfile>
      <anchor>ad0e715d40758d423276e2d796e5420d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Device &gt;</type>
      <name>get_device</name>
      <anchorfile>classGdk_1_1DragContext.html</anchorfile>
      <anchor>aa9a99bebfec9681664a9d99390c05947</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>list_targets</name>
      <anchorfile>classGdk_1_1DragContext.html</anchorfile>
      <anchor>a6aeaee90be428f12d893036771dd5260</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DragAction</type>
      <name>get_actions</name>
      <anchorfile>classGdk_1_1DragContext.html</anchorfile>
      <anchor>a589ec76681bc6d2a3dc6e21f0105dab2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DragAction</type>
      <name>get_suggested_action</name>
      <anchorfile>classGdk_1_1DragContext.html</anchorfile>
      <anchor>a2bbc9ed395bbbd0623bbd6915c6d36a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DragAction</type>
      <name>get_selected_action</name>
      <anchorfile>classGdk_1_1DragContext.html</anchorfile>
      <anchor>a369c437c1ba2c6837dab6d757810780a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>find_window_for_screen</name>
      <anchorfile>classGdk_1_1DragContext.html</anchorfile>
      <anchor>a75ae4160dd171e181b33c81ffff562fd</anchor>
      <arglist>(const Glib::RefPtr&lt; Window &gt; &amp;drag_window, const Glib::RefPtr&lt; Screen &gt; &amp;screen, int x_root, int y_root, Glib::RefPtr&lt; Window &gt; &amp;dest_window, DragProtocol &amp;protocol) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1DragContext.html</anchorfile>
      <anchor>a7d807a9497c6e1817444ef4a7510bdee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::DragContext &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1DragContext.html</anchorfile>
      <anchor>a95c1145cb30eed489f8412e8e682fd2d</anchor>
      <arglist>(GdkDragContext *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::DrawingContext</name>
    <filename>classGdk_1_1DrawingContext.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>DrawingContext</name>
      <anchorfile>classGdk_1_1DrawingContext.html</anchorfile>
      <anchor>ad35d873a5d18bebad72e822622a5eaa9</anchor>
      <arglist>(DrawingContext &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>DrawingContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1DrawingContext.html</anchorfile>
      <anchor>ac92fe76ab7bd8ec4651a74c2b8be0337</anchor>
      <arglist>(DrawingContext &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DrawingContext</name>
      <anchorfile>classGdk_1_1DrawingContext.html</anchorfile>
      <anchor>a8e50a03b5662161ae7e7eb98a6f50c2b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkDrawingContext *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1DrawingContext.html</anchorfile>
      <anchor>a3893615ae2536255041b5937e8ef29df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkDrawingContext *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1DrawingContext.html</anchorfile>
      <anchor>abc16dcd37a50ae6ed691fc8719a85abd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GdkDrawingContext *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1DrawingContext.html</anchorfile>
      <anchor>a4ae91063ebed6ef0da0c8fd55720619d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Window &gt;</type>
      <name>get_window</name>
      <anchorfile>classGdk_1_1DrawingContext.html</anchorfile>
      <anchor>a10fccb104242853ff83e181ef53258e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Window &gt;</type>
      <name>get_window</name>
      <anchorfile>classGdk_1_1DrawingContext.html</anchorfile>
      <anchor>a26300185f7b853294d8a2f072de0f90a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>::Cairo::RefPtr&lt; ::Cairo::Region &gt;</type>
      <name>get_clip</name>
      <anchorfile>classGdk_1_1DrawingContext.html</anchorfile>
      <anchor>af28a365e18f1904fcbc12d8165353fff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid</name>
      <anchorfile>classGdk_1_1DrawingContext.html</anchorfile>
      <anchor>a5d4d67e02a1d5c41e5f7964c2fed9139</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>::Cairo::RefPtr&lt; ::Cairo::Context &gt;</type>
      <name>get_cairo_context</name>
      <anchorfile>classGdk_1_1DrawingContext.html</anchorfile>
      <anchor>a623511c085f150821bbc1243e88579c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>::Cairo::RefPtr&lt; const ::Cairo::Context &gt;</type>
      <name>get_cairo_context</name>
      <anchorfile>classGdk_1_1DrawingContext.html</anchorfile>
      <anchor>a5babbd046fe13f826f8621e28afcd03d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Window &gt; &gt;</type>
      <name>property_window</name>
      <anchorfile>classGdk_1_1DrawingContext.html</anchorfile>
      <anchor>a79124647474bb52d695ec37bdc6590a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1DrawingContext.html</anchorfile>
      <anchor>a58ac50229381fca50c2d45c66026f2d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; DrawingContext &gt;</type>
      <name>get_drawing_context_from_cairo_context</name>
      <anchorfile>classGdk_1_1DrawingContext.html</anchorfile>
      <anchor>a9f3c6cd9f5f7ad13a664cbab1e4cd4a0</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;cr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DrawingContext</name>
      <anchorfile>classGdk_1_1DrawingContext.html</anchorfile>
      <anchor>a9a44eabdd70042268d32625cfae16f79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::DrawingContext &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1DrawingContext.html</anchorfile>
      <anchor>adca428cfa28ebe41f410cff3ff6cb3f2</anchor>
      <arglist>(GdkDrawingContext *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::Event</name>
    <filename>classGdk_1_1Event.html</filename>
    <member kind="function">
      <type></type>
      <name>Event</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>ae03c66bcd189f44073891575592b7677</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Event</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>af5f1d2094cb30b218c337c29e0764925</anchor>
      <arglist>(GdkEvent *gobject, bool make_a_copy=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Event</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a130915030025da8d1653506122c84385</anchor>
      <arglist>(const Event &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Event &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>abd217b33d80155460a6c5d6339f914bc</anchor>
      <arglist>(const Event &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Event</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>ac3443807dfedcd86648dcfde1ba5e826</anchor>
      <arglist>(Event &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Event &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>aa729a6ac1eff249a4a4b795278ed9ed5</anchor>
      <arglist>(Event &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Event</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a2d9c0c4567eb52a27e91c86dd249db0b</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>abd800bbc8db14371782c902bfeca4593</anchor>
      <arglist>(Event &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GdkEvent *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a21a5ddedef8a375f19412ce2d6c37d90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkEvent *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a63e34d8c6300a5fe4939e4dc4fcbf440</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GdkEvent *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a322551c2b247575997ef1e3bc498751a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a7e9830470be83a7206db3a8c5436ef08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>guint32</type>
      <name>get_time</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a6d785b16c3532cdcd0794d7d4161c40e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_state</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>adcd60bfd108f761e7f52505eefddf7e7</anchor>
      <arglist>(ModifierType &amp;state) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_coords</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>aa509fcaf5f106ca22379ccea781ceb06</anchor>
      <arglist>(double &amp;x_win, double &amp;y_win) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_root_coords</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a08b20bab46fdea9b34b7e7c612110c69</anchor>
      <arglist>(double &amp;x_root, double &amp;y_root) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_axis</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a647640a87ff5976a4ad442d86e7799cc</anchor>
      <arglist>(AxisUse axis_use, double &amp;value) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Screen &gt;</type>
      <name>get_screen</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a1a0386cc3586fc098ddb5feabc37226e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Screen &gt;</type>
      <name>get_screen</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>aea9ca52d43535409b3ee18ac6c18830e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>afe3fdfc5c3f24b80ec1a958c9c4f500d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Event</type>
      <name>get</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>aeac82b61cdde5e8e6477f1835a5095de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Event</type>
      <name>peek</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>ab3a63d0588191feb265efb712c46f411</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>events_pending</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>ad3844a1151ae6549af4ac19f7abd41dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>set_show_events</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>aca840aa197d7ea9ea36c7e0061300607</anchor>
      <arglist>(bool show_events)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>get_show_events</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>ac4498a06c7bdf8804f91af934e5d2b7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GdkEvent *</type>
      <name>gobject_</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a297866c4cc91dbe6cacb3236361301a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a70a8ff6ccb090a9cea2ebb67bad65a58</anchor>
      <arglist>(Event &amp;lhs, Event &amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Gdk::Event</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1Event.html</anchorfile>
      <anchor>a90bf6ff26dda59432c3ac822dde33098</anchor>
      <arglist>(GdkEvent *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::FrameClock</name>
    <filename>classGdk_1_1FrameClock.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>FrameClock</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>a878eab863e01cea2ca355fe5d92f9dd2</anchor>
      <arglist>(FrameClock &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>FrameClock &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>a775b6985ac530d746efd79ce73989918</anchor>
      <arglist>(FrameClock &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FrameClock</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>a9dde8589ba6df2a4f070c9e72f8f59f9</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkFrameClock *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>a98616130a67192e9b80faffe12ae9527</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkFrameClock *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>a64631e63f3bf456894088997a934de3e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GdkFrameClock *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>a4eb716a9cf947b703e4e870fbcb63527</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>get_frame_time</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>a60840f3e338c78fe0b2d19e4bd18abf2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>request_phase</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>a8805b4d46f2d32a22baa2cd4953c267e</anchor>
      <arglist>(FrameClockPhase phase)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>begin_updating</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>ac8de211e1e1921683eafc64e8a2eaa48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>end_updating</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>a7bb3338b17a7b2c6abb6ecef99bd9967</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>get_frame_counter</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>a03c5dbffbb9abb50f3955e396ed86472</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>get_history_start</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>ae5e86be0fd13c6d35593b47ef8f91173</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; FrameTimings &gt;</type>
      <name>get_timings</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>adba4b1b47b6a4595e6ca74b6bca7713a</anchor>
      <arglist>(gint64 frame_counter)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const FrameTimings &gt;</type>
      <name>get_timings</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>abfe77f592dbd21cf117f507c45760187</anchor>
      <arglist>(gint64 frame_counter) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; FrameTimings &gt;</type>
      <name>get_current_timings</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>a187f6f6838c4170d80ecebfe17e70f28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const FrameTimings &gt;</type>
      <name>get_current_timings</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>a7db353f1d9e2e5e3c5e2773c66bc35df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_refresh_info</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>a43dc4a99d0c23c8cf4d4765443d9f9f2</anchor>
      <arglist>(gint64 base_time, gint64 &amp;refresh_interval_return, gint64 &amp;presentation_time_return) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_update</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>ae25f1ddc3527cfd335e055ec983e8c2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_layout</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>a175ed4162007f4ada8127bc10895ce84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_paint</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>a4e571a9c3fd1efd118481fb0cf1c8708</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>ae478f37dbc97171c6420920c71b41344</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::FrameClock &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1FrameClock.html</anchorfile>
      <anchor>a96b9e47a44f74b1c7a65b250aed35542</anchor>
      <arglist>(GdkFrameClock *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::FrameTimings</name>
    <filename>classGdk_1_1FrameTimings.html</filename>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGdk_1_1FrameTimings.html</anchorfile>
      <anchor>afcc260e1791cacca55633a3bff3c8fad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGdk_1_1FrameTimings.html</anchorfile>
      <anchor>a3db38214e5bb832e78d17bbff71fb2f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GdkFrameTimings *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1FrameTimings.html</anchorfile>
      <anchor>a9d97138c17d60b81ba22827434f164ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkFrameTimings *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1FrameTimings.html</anchorfile>
      <anchor>ad62b7956230efc546c0a134137a91ed3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GdkFrameTimings *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1FrameTimings.html</anchorfile>
      <anchor>ad7f9706004a4550b1720a8d00fe4751e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FrameTimings</name>
      <anchorfile>classGdk_1_1FrameTimings.html</anchorfile>
      <anchor>a1084773c7995e14fbcafab3b287ab92c</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FrameTimings</name>
      <anchorfile>classGdk_1_1FrameTimings.html</anchorfile>
      <anchor>a6403ed1ac16dd0bc80d1dccf260c94dd</anchor>
      <arglist>(const FrameTimings &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>FrameTimings &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1FrameTimings.html</anchorfile>
      <anchor>a6570501a0e5bb95321d7429c34641fd7</anchor>
      <arglist>(const FrameTimings &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>get_frame_counter</name>
      <anchorfile>classGdk_1_1FrameTimings.html</anchorfile>
      <anchor>a829ba64c3f005dbbbca7095a9c08e6a4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_complete</name>
      <anchorfile>classGdk_1_1FrameTimings.html</anchorfile>
      <anchor>a924aea5375df4b00f635ff0b7b75d272</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>get_frame_time</name>
      <anchorfile>classGdk_1_1FrameTimings.html</anchorfile>
      <anchor>a7f8f53afa816760afd83e7ea480b3aea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>get_presentation_time</name>
      <anchorfile>classGdk_1_1FrameTimings.html</anchorfile>
      <anchor>ab2c353c1aa4c2b38ca7c7d4615a6f8f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>get_refresh_interval</name>
      <anchorfile>classGdk_1_1FrameTimings.html</anchorfile>
      <anchor>a7699628fe865a11942563d38040c5c14</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>gint64</type>
      <name>get_predicted_presentation_time</name>
      <anchorfile>classGdk_1_1FrameTimings.html</anchorfile>
      <anchor>aba58128544ddd07307b7276a26add1a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGdk_1_1FrameTimings.html</anchorfile>
      <anchor>a5ccc72613776c43a4b631d60b7f20848</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::FrameTimings &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1FrameTimings.html</anchorfile>
      <anchor>ad1678a1cc0ccadcfde73661d7e04defe</anchor>
      <arglist>(GdkFrameTimings *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::GLContext</name>
    <filename>classGdk_1_1GLContext.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>GLContext</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a9e9e358eeae4c655dd1f3941c63a8fa6</anchor>
      <arglist>(GLContext &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GLContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a6a29deb062ccbb56318335dfe497e337</anchor>
      <arglist>(GLContext &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GLContext</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a53c4d2be805fe96e93ee2d56ffbfe4de</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkGLContext *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a1b68f4768b95eead91818aada3002338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkGLContext *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>aa3b63567ed0cc4ce2b4bb3022731dad0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GdkGLContext *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a6bc3e23ffe1e17c0c028fa9cde5a2bc5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>ace74dbb1713bb91c2cf4cc59956f270a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a49ca07dc958062b08377445a22ae97b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Window &gt;</type>
      <name>get_window</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>ab8fb767fb68f712b991d57d79b715adc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Window &gt;</type>
      <name>get_window</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>aa246a5295c3f06e391fface96416ed63</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; GLContext &gt;</type>
      <name>get_shared_context</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>aa27d122e3afca6c31a526c01ce382b78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const GLContext &gt;</type>
      <name>get_shared_context</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a089eb835ed96a106383e40e6c735e077</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_version</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>aa9433e641bf02da1d30b77ea44369a61</anchor>
      <arglist>(int &amp;major, int &amp;minor) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_legacy</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a83f162e30684eefeeeeb252d80a102de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_required_version</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>ac52bd69a165056d356ea1f6c162e78b1</anchor>
      <arglist>(int &amp;major, int &amp;minor) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_required_version</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>aaff54e69a94c9d3a96205310dfe97301</anchor>
      <arglist>(int major, int minor)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_debug_enabled</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>ac1ecc455722c502690dcb9349157f43f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_debug_enabled</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a6d8dbc3f6a28fdae24948a221e558253</anchor>
      <arglist>(bool enabled=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_forward_compatible</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>ac752e04a6c80c789798c1d72a39c07bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_forward_compatible</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>abac1723daeb06a2e7877c2e2de475bb1</anchor>
      <arglist>(bool compatible=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_es</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>aaeaaee7a42aa4efede8bf1938dfca8bc</anchor>
      <arglist>(bool use_es=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_use_es</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a20004ca7638cbbd1221b0fa1a8433e2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_use_es</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a90946eadc5901d1fd3da6ffa2d83610a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>realize</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a436a1f34ae0e1e0f3dd1b5d7b1c3da46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>make_current</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>ae8d0dfddc44e5b48ece1534b8a1a4e9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Display &gt; &gt;</type>
      <name>property_display</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a44b4700fadcb89f40880af3608b63951</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; GLContext &gt; &gt;</type>
      <name>property_shared_context</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>adba63f285363cf81f874eab164417dbf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Window &gt; &gt;</type>
      <name>property_window</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a5334be019ab335081143bf0ee19e310e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a436f5edab9973f964f81f30dd041ddb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; GLContext &gt;</type>
      <name>get_current</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>ad30b00c25f995de29b2aee4ab1f27380</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>clear_current</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a767e4d190329a0ad78d9e0570e7ce9ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GLContext</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>a0d55396de934d6da23d7b15c09b6a6d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::GLContext &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1GLContext.html</anchorfile>
      <anchor>abaa009f166b755ff080fdf5e5d6b2b18</anchor>
      <arglist>(GdkGLContext *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::GLError</name>
    <filename>classGdk_1_1GLError.html</filename>
    <base>Glib::Error</base>
    <member kind="enumeration">
      <type></type>
      <name>Code</name>
      <anchorfile>classGdk_1_1GLError.html</anchorfile>
      <anchor>a395d27b57f41adb39ebc2981d0999657</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOT_AVAILABLE</name>
      <anchorfile>classGdk_1_1GLError.html</anchorfile>
      <anchor>a395d27b57f41adb39ebc2981d0999657aa6c5f0a14f1e71c85dafdba0b3828d1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSUPPORTED_FORMAT</name>
      <anchorfile>classGdk_1_1GLError.html</anchorfile>
      <anchor>a395d27b57f41adb39ebc2981d0999657a1690d9863f562bce14aab6c7bbd5a6ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSUPPORTED_PROFILE</name>
      <anchorfile>classGdk_1_1GLError.html</anchorfile>
      <anchor>a395d27b57f41adb39ebc2981d0999657a9b0db9b80bdbb3adda1e724880e18f76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOT_AVAILABLE</name>
      <anchorfile>classGdk_1_1GLError.html</anchorfile>
      <anchor>a395d27b57f41adb39ebc2981d0999657aa6c5f0a14f1e71c85dafdba0b3828d1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSUPPORTED_FORMAT</name>
      <anchorfile>classGdk_1_1GLError.html</anchorfile>
      <anchor>a395d27b57f41adb39ebc2981d0999657a1690d9863f562bce14aab6c7bbd5a6ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSUPPORTED_PROFILE</name>
      <anchorfile>classGdk_1_1GLError.html</anchorfile>
      <anchor>a395d27b57f41adb39ebc2981d0999657a9b0db9b80bdbb3adda1e724880e18f76</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GLError</name>
      <anchorfile>classGdk_1_1GLError.html</anchorfile>
      <anchor>af704b04471dd969a97249cc440e16039</anchor>
      <arglist>(Code error_code, const Glib::ustring &amp;error_message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GLError</name>
      <anchorfile>classGdk_1_1GLError.html</anchorfile>
      <anchor>aaca6ad5d1cca8ec9aa2eed8251fb10a3</anchor>
      <arglist>(GError *gobject)</arglist>
    </member>
    <member kind="function">
      <type>Code</type>
      <name>code</name>
      <anchorfile>classGdk_1_1GLError.html</anchorfile>
      <anchor>a6ef075fdafc6212f94e62f08542f88ea</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::Monitor</name>
    <filename>classGdk_1_1Monitor.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>Monitor</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a9dd0fb29505009bc526d4b2679b1eaf2</anchor>
      <arglist>(Monitor &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Monitor &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>ad41b944a45af24b189539ee71195c7dd</anchor>
      <arglist>(Monitor &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Monitor</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>aa535486ac5d460786ff857717ba99698</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkMonitor *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a5231d7e777d4c5398c335418f2a15533</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkMonitor *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a9f67538b5a17bffcdc23dfe4001425f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GdkMonitor *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a97d52173e17c89b36303ff66cb5f6e68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a22c307d45ae8afcb876ae65f9267f6a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>aba963d0b504e28101b32c5fadf3183a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_geometry</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>aeecf84253a10b61ca201fd77933ffcb3</anchor>
      <arglist>(Rectangle &amp;geometry) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_workarea</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a013fd89af41e819b8f7f3e71845bf5e2</anchor>
      <arglist>(Rectangle &amp;workarea) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_width_mm</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>ae70ca7bfce6b291627ac5c766a835c7e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_height_mm</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a0afc552a0d1f3c9f3fbcaa3845e45e1c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_manufacturer</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>aee37a9d89fbef3e052196551bcb13e2f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_model</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a4d666e5bcd001964a649cafd04c7312c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_scale_factor</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a72a5dd01118958504f715b7055d0717c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_refresh_rate</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>ac98849d7b9fddfd202096809695c38ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SubpixelLayout</type>
      <name>get_subpixel_layout</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a6ee6c54393eff172c309812d44b97b9b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_primary</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>af516875f7fdaf4830c12d195ce12d73a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Display &gt; &gt;</type>
      <name>property_display</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a5622e47684cf9ff8cd7b436e5cab7e21</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_manufacturer</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>abae4c7367cdc62bfe43c0cb2cadca92c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_model</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a86df5532a78b7af22a81ca9e0f0a4937</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_scale_factor</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a4ee20d0760e4b55088a984c5ac431ddd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::Rectangle &gt;</type>
      <name>property_geometry</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a8c2d10e1533ae86a01e9d8cd0efabbf2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::Rectangle &gt;</type>
      <name>property_workarea</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a1779f2ead21e3add5ab68999d79f59e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_width_mm</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a6c128c7349f2dfcbe6025a03c0db0bad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_height_mm</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a55b7a010be91fd8040f193e8ea80f363</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_refresh_rate</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a1b4a30d5bbef0484b76ed481c0c2632e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; SubpixelLayout &gt;</type>
      <name>property_subpixel_layout</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a7e293073b262b7c875b9773c9703b408</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a820f6b61af25c2a9b1bbffeca08a12c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Monitor</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a8eecedd95aaae18b2eeff2fb6bef3929</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Monitor &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1Monitor.html</anchorfile>
      <anchor>a532de1e0f37bdcd042d3354b6ad25c83</anchor>
      <arglist>(GdkMonitor *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::Pixbuf</name>
    <filename>classGdk_1_1Pixbuf.html</filename>
    <base>Glib::Object</base>
    <base>Gio::Icon</base>
    <member kind="typedef">
      <type>sigc::slot&lt; void, const guint8 * &gt;</type>
      <name>SlotDestroyData</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a0d6aea44bfbf45635b461e2cf2a12c68</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pixbuf</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a52b21528ec115d65475a2ea604261d51</anchor>
      <arglist>(Pixbuf &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Pixbuf &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a69554f490192e2adde55d0198ad42ce9</anchor>
      <arglist>(Pixbuf &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Pixbuf</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a79aa33fa1854d1a3ae653161e1b7924a</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkPixbuf *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a13edc3418dd409e931ed8f83b93b4cdd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkPixbuf *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a9b76fd288e49f110a07558d35193fdc2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GdkPixbuf *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>ab339b9473c5d4f2eb646dc94d1606f40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>copy</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>aa29db4f8d4410dc74916b53d231a1fbd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Colorspace</type>
      <name>get_colorspace</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a61c4798177de9429c58db866e9a7d35f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_n_channels</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>aadda0282837e2815927179c6af91286d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_has_alpha</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>af467c7efa88fa42b067de1b98428fad7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_bits_per_sample</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>ae9e2312c80e5ebc911c469c822dee96e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>guint8 *</type>
      <name>get_pixels</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>adf7f4e324769b180dc0f0bfd053ff47a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_width</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>aa465be4bf65b9fedf471848c21bfab98</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_height</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a2a65cd750a2048a621a8f199cb2c3d68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_rowstride</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>aef37137e7f42a5734deb0f9be25ef030</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>gsize</type>
      <name>get_byte_length</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>ad023c117c8556505e1f934a41c62f324</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a15afdfdd5d5d75b0b692f987e74cbae4</anchor>
      <arglist>(guint32 pixel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a32ef63686fc58a26d9776dc42190f566</anchor>
      <arglist>(const std::string &amp;filename, const Glib::ustring &amp;type) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>ad0c406bdb9baa2ba37a6004a9525faf2</anchor>
      <arglist>(const std::string &amp;filename, const Glib::ustring &amp;type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>ac164cc3569648ac5fee15453f05a963a</anchor>
      <arglist>(const std::string &amp;filename, const Glib::ustring &amp;type, const std::vector&lt; Glib::ustring &gt; &amp;option_keys, const std::vector&lt; Glib::ustring &gt; &amp;option_values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a729b73e6619d783e8a5224b170195b80</anchor>
      <arglist>(const std::string &amp;filename, const Glib::ustring &amp;type, const std::vector&lt; Glib::ustring &gt; &amp;option_keys, const std::vector&lt; Glib::ustring &gt; &amp;option_values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save_to_buffer</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a95e7378ee7b6267b5fc9436d4a917e6b</anchor>
      <arglist>(gchar *&amp;buffer, gsize &amp;buffer_size, const Glib::ustring &amp;type=&quot;png&quot;) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save_to_buffer</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>acfa7bec224e7296ec70510f375c457e9</anchor>
      <arglist>(gchar *&amp;buffer, gsize &amp;buffer_size, const Glib::ustring &amp;type=&quot;png&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save_to_buffer</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a75f14167effc3187670d28065251ac76</anchor>
      <arglist>(gchar *&amp;buffer, gsize &amp;buffer_size, const Glib::ustring &amp;type, const std::vector&lt; Glib::ustring &gt; &amp;option_keys, const std::vector&lt; Glib::ustring &gt; &amp;option_values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save_to_buffer</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a4c319e0671eb11414f35edd7b776a62a</anchor>
      <arglist>(gchar *&amp;buffer, gsize &amp;buffer_size, const Glib::ustring &amp;type, const std::vector&lt; Glib::ustring &gt; &amp;option_keys, const std::vector&lt; Glib::ustring &gt; &amp;option_values)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>add_alpha</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a573577de851722e9a14b287e6a8038b2</anchor>
      <arglist>(bool substitute_color, guint8 r, guint8 g, guint8 b) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy_area</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>aabf9cf1e0b94659da02fc86aa80d6602</anchor>
      <arglist>(int src_x, int src_y, int width, int height, const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;dest_pixbuf, int dest_x, int dest_y) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saturate_and_pixelate</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a8435f1c148800c46440d35699c32575a</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;dest, float saturation, bool pixelate) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>aae5d9d6b41607425eed948645a3a76f5</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;dest, int dest_x, int dest_y, int dest_width, int dest_height, double offset_x, double offset_y, double scale_x, double scale_y, InterpType interp_type) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>composite</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a8425e18bd16f6059cc5f763a138a19cb</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;dest, int dest_x, int dest_y, int dest_width, int dest_height, double offset_x, double offset_y, double scale_x, double scale_y, InterpType interp_type, int overall_alpha) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>composite_color</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a7a9f2f801f1f18ce4cd735dbb4afd16d</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;dest, int dest_x, int dest_y, int dest_width, int dest_height, double offset_x, double offset_y, double scale_x, double scale_y, InterpType interp_type, int overall_alpha, int check_x, int check_y, int check_size, guint32 color1, guint32 color2) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>scale_simple</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a73e2c7be0469e402cc20fbad27015767</anchor>
      <arglist>(int dest_width, int dest_height, InterpType interp_type) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>composite_color_simple</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>ae77f26e8ceef4340ea412949cfb3fff8</anchor>
      <arglist>(int dest_width, int dest_height, InterpType interp_type, int overall_alpha, int check_size, guint32 color1, guint32 color2) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>rotate_simple</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a91a5dc6fba52403feeb32318b7f8510a</anchor>
      <arglist>(PixbufRotation angle) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>flip</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a30439c05aa086c565671772a9fd32efc</anchor>
      <arglist>(bool horizontal=true) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_option</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a020d67bf052da46a0ae1c689f18102be</anchor>
      <arglist>(const Glib::ustring &amp;key) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_option</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>aba414125fa2d70271e9331797f171f80</anchor>
      <arglist>(const Glib::ustring &amp;key, const Glib::ustring &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove_option</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a8e130d8de14efc90f86e6929de326aa2</anchor>
      <arglist>(const Glib::ustring &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copy_options</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>afc330759b28ed09051c1be0de049ea60</anchor>
      <arglist>(const Glib::RefPtr&lt; Pixbuf &gt; &amp;dest_pixbuf) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>apply_embedded_orientation</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>af1808b7279e47d7df62748a54b16a2a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Colorspace &gt;</type>
      <name>property_colorspace</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>ad8eaab15e172f4c98411a58039974414</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_n_channels</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a5d985320959289058e3d63f9a6d512c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_alpha</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a8262d503f5033446a60d04fd8e68c81b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_bits_per_sample</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a98cfd95ee71c2f65db26eec821daf84d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_width</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a5432db69e0d7f42ed6207c24ca900df9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_height</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>ae49274770275ff75a738e2c3a5f72c2a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_rowstride</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a27cdaa7e4b1e5b17c0022aad2f8c0415</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; void * &gt;</type>
      <name>property_pixels</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a488db69c734c02638934ba77a3c5a715</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a2db5672d540799a640706e7da87ffd72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>create</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a940ac5b1eb6ae80cb54d9013faf761a5</anchor>
      <arglist>(const Glib::RefPtr&lt; Window &gt; &amp;src, int src_x, int src_y, int width, int height)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>create</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a2cf65f435b4e3747d6e78fb8e09819cb</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Surface &gt; &amp;src, int src_x, int src_y, int width, int height)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>create</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a8c635f730b93c774c35a32e4338fda9f</anchor>
      <arglist>(Colorspace colorspace, bool has_alpha, int bits_per_sample, int width, int height)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>create_subpixbuf</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a35e610247014f8e2fe7969ff6c8da074</anchor>
      <arglist>(const Glib::RefPtr&lt; Pixbuf &gt; &amp;src_pixbuf, int src_x, int src_y, int width, int height)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>create_from_file</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a20d7a2a52dab246e4bb758ecba38e4ca</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>create_from_file</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a5000775e43142f3e764ba64236c95d47</anchor>
      <arglist>(const std::string &amp;filename, int width, int height, bool preserve_aspect_ratio=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>create_from_resource</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>aed492f5942ef53f12a20469ba72cecf4</anchor>
      <arglist>(const std::string &amp;resource_path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>create_from_resource</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>ad932ebff2c5dd0892c92d64cc038b1c2</anchor>
      <arglist>(const std::string &amp;resource_path, int width, int height, bool preserve_aspect_ratio=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>create_from_data</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a8a3b524f26acd2f9efc4abe9c294d341</anchor>
      <arglist>(const guint8 *data, Colorspace colorspace, bool has_alpha, int bits_per_sample, int width, int height, int rowstride)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>create_from_data</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a526129d481ff04e8953c18b0b12c4c55</anchor>
      <arglist>(const guint8 *data, Colorspace colorspace, bool has_alpha, int bits_per_sample, int width, int height, int rowstride, const SlotDestroyData &amp;destroy_slot)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>create_from_xpm_data</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>ad00762020e4802e9bb0cbd7645a44032</anchor>
      <arglist>(const char *const *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>create_from_inline</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>aaac78677d8310866334827db2a9f753c</anchor>
      <arglist>(int data_length, const guint8 *data, bool copy_pixels=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>create_from_stream</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a1e29a1ac165b38764136eb26a9fd3c18</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::InputStream &gt; &amp;stream, const Glib::RefPtr&lt; Gio::Cancellable &gt; &amp;cancellable)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>create_from_stream</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>ae757183c249a0e6d48b798482b0e3004</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::InputStream &gt; &amp;stream)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>create_from_stream_at_scale</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a200f8adc8eb8903c09ded7c5685e5d7b</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::InputStream &gt; &amp;stream, int width, int height, bool preserve_aspect_ratio, const Glib::RefPtr&lt; Gio::Cancellable &gt; &amp;cancellable)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>create_from_stream_at_scale</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a97aba56587ee9faa6ca358efcd1a9948</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::InputStream &gt; &amp;stream, int width, int height, bool preserve_aspect_ratio)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; PixbufFormat &gt;</type>
      <name>get_formats</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a4469806e3c612bd9dd54641afc7ba1c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Pixbuf</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>aee9aacffbe81190ab7deadb2c8d0f593</anchor>
      <arglist>(const Glib::RefPtr&lt; Window &gt; &amp;src, int src_x, int src_y, int width, int height)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Pixbuf</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a9c0cdf8b381fcb1b9b181798f19b5dd2</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Surface &gt; &amp;src, int src_x, int src_y, int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1Pixbuf.html</anchorfile>
      <anchor>a0688e4500d3b17ffcf12a93da257c312</anchor>
      <arglist>(GdkPixbuf *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::PixbufAnimation</name>
    <filename>classGdk_1_1PixbufAnimation.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>PixbufAnimation</name>
      <anchorfile>classGdk_1_1PixbufAnimation.html</anchorfile>
      <anchor>affda68c1f75c646e17d6bf4b00c7caa4</anchor>
      <arglist>(PixbufAnimation &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PixbufAnimation &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1PixbufAnimation.html</anchorfile>
      <anchor>aa86b4f518a1c5952e19ab0a6d7bbc008</anchor>
      <arglist>(PixbufAnimation &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PixbufAnimation</name>
      <anchorfile>classGdk_1_1PixbufAnimation.html</anchorfile>
      <anchor>af0aeed6c8bfe4882788637b8955d5d66</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkPixbufAnimation *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1PixbufAnimation.html</anchorfile>
      <anchor>a2bd240996977822cb78fe557fc8c07f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkPixbufAnimation *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1PixbufAnimation.html</anchorfile>
      <anchor>a48e7979c35a6a4482db6137d179fe10e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GdkPixbufAnimation *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1PixbufAnimation.html</anchorfile>
      <anchor>a4eba6a2ff85859cfc4171015861ffcbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_width</name>
      <anchorfile>classGdk_1_1PixbufAnimation.html</anchorfile>
      <anchor>a50a299f886fcad0bfed2a7c81986be39</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_height</name>
      <anchorfile>classGdk_1_1PixbufAnimation.html</anchorfile>
      <anchor>a5caa2145a85dbb488ca60b03c72b2782</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_static_image</name>
      <anchorfile>classGdk_1_1PixbufAnimation.html</anchorfile>
      <anchor>ac80a08e196de1df9282e851e22a642e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pixbuf &gt;</type>
      <name>get_static_image</name>
      <anchorfile>classGdk_1_1PixbufAnimation.html</anchorfile>
      <anchor>a4efed6e73f1034242e787b454f485566</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>G_GNUC_BEGIN_IGNORE_DEPRECATIONS Glib::RefPtr&lt; PixbufAnimationIter &gt;</type>
      <name>get_iter</name>
      <anchorfile>classGdk_1_1PixbufAnimation.html</anchorfile>
      <anchor>a841e8a5334634d9d2b7f62fa5f017c81</anchor>
      <arglist>(const GTimeVal *start_time)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1PixbufAnimation.html</anchorfile>
      <anchor>a265bac68cda7306ca04c184a58270261</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PixbufAnimation &gt;</type>
      <name>create_from_file</name>
      <anchorfile>classGdk_1_1PixbufAnimation.html</anchorfile>
      <anchor>a039f247eb93253b2242c4eadfa7f0a79</anchor>
      <arglist>(const Glib::ustring &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::PixbufAnimation &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1PixbufAnimation.html</anchorfile>
      <anchor>a2685688544b6da7582ab2eb2d4e51111</anchor>
      <arglist>(GdkPixbufAnimation *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::PixbufAnimationIter</name>
    <filename>classGdk_1_1PixbufAnimationIter.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>PixbufAnimationIter</name>
      <anchorfile>classGdk_1_1PixbufAnimationIter.html</anchorfile>
      <anchor>a229a2e7585e709ce01d560d75a0848b6</anchor>
      <arglist>(PixbufAnimationIter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PixbufAnimationIter &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1PixbufAnimationIter.html</anchorfile>
      <anchor>aeb4b08d000e2e2c57d20f2ed3c1e01cb</anchor>
      <arglist>(PixbufAnimationIter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PixbufAnimationIter</name>
      <anchorfile>classGdk_1_1PixbufAnimationIter.html</anchorfile>
      <anchor>a73fcd4706530f2819ff6220c0072cf7b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkPixbufAnimationIter *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1PixbufAnimationIter.html</anchorfile>
      <anchor>a5aac29041dd100a119b8aa703dbafe3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkPixbufAnimationIter *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1PixbufAnimationIter.html</anchorfile>
      <anchor>a8d6407acb0d49bc5ff6ed415d93b536b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GdkPixbufAnimationIter *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1PixbufAnimationIter.html</anchorfile>
      <anchor>ae2e23368fa026c6deeaacd4168074a44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_delay_time</name>
      <anchorfile>classGdk_1_1PixbufAnimationIter.html</anchorfile>
      <anchor>a59be27954e4c177236c5bebfa6c84602</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>get_pixbuf</name>
      <anchorfile>classGdk_1_1PixbufAnimationIter.html</anchorfile>
      <anchor>a66d583297b87ac3f2b1424526afe962c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Pixbuf &gt;</type>
      <name>get_pixbuf</name>
      <anchorfile>classGdk_1_1PixbufAnimationIter.html</anchorfile>
      <anchor>a2b0c8610e86dd96f49425d48396797be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>on_currently_loading_frame</name>
      <anchorfile>classGdk_1_1PixbufAnimationIter.html</anchorfile>
      <anchor>ad50a6088b03fb35fe65dea11debecd84</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>advance</name>
      <anchorfile>classGdk_1_1PixbufAnimationIter.html</anchorfile>
      <anchor>ac4f9496b9197f968656760fa16218f25</anchor>
      <arglist>(const Glib::TimeVal &amp;current_time)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>advance</name>
      <anchorfile>classGdk_1_1PixbufAnimationIter.html</anchorfile>
      <anchor>a1bd10ac0d757e79e1d0e4fda7778d0a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1PixbufAnimationIter.html</anchorfile>
      <anchor>a31e2babdc64bd6bd10ee3c05178204f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::PixbufAnimationIter &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1PixbufAnimationIter.html</anchorfile>
      <anchor>a0c68bd7a2e248042af42c41d2aa11016</anchor>
      <arglist>(GdkPixbufAnimationIter *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::PixbufError</name>
    <filename>classGdk_1_1PixbufError.html</filename>
    <base>Glib::Error</base>
    <member kind="enumeration">
      <type></type>
      <name>Code</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>a88236f7854c155dba4d50f5e41469833</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CORRUPT_IMAGE</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>a88236f7854c155dba4d50f5e41469833a8ee4bb924471ed440528905d97ab5c21</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INSUFFICIENT_MEMORY</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>a88236f7854c155dba4d50f5e41469833afc3853c0bb4343a7f01500a1d3667db2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BAD_OPTION</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>a88236f7854c155dba4d50f5e41469833abb31a5f2cebe695aced7bd48ad8669ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNKNOWN_TYPE</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>a88236f7854c155dba4d50f5e41469833aa8a68e071b921e214387642eb2873929</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSUPPORTED_OPERATION</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>a88236f7854c155dba4d50f5e41469833aae731d26b4d7379e223ca56c8462e07c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FAILED</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>a88236f7854c155dba4d50f5e41469833a63eef36d9606b5b80dc748081f1a563e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INCOMPLETE_ANIMATION</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>a88236f7854c155dba4d50f5e41469833a4613489e2f824e39c72d0b19b05b9181</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CORRUPT_IMAGE</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>a88236f7854c155dba4d50f5e41469833a8ee4bb924471ed440528905d97ab5c21</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INSUFFICIENT_MEMORY</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>a88236f7854c155dba4d50f5e41469833afc3853c0bb4343a7f01500a1d3667db2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BAD_OPTION</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>a88236f7854c155dba4d50f5e41469833abb31a5f2cebe695aced7bd48ad8669ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNKNOWN_TYPE</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>a88236f7854c155dba4d50f5e41469833aa8a68e071b921e214387642eb2873929</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNSUPPORTED_OPERATION</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>a88236f7854c155dba4d50f5e41469833aae731d26b4d7379e223ca56c8462e07c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FAILED</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>a88236f7854c155dba4d50f5e41469833a63eef36d9606b5b80dc748081f1a563e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INCOMPLETE_ANIMATION</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>a88236f7854c155dba4d50f5e41469833a4613489e2f824e39c72d0b19b05b9181</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PixbufError</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>ab1f966ba0378e2253e56c268e87e50d7</anchor>
      <arglist>(Code error_code, const Glib::ustring &amp;error_message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PixbufError</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>a04996cf35ac4f3b39a47795d618ec2c4</anchor>
      <arglist>(GError *gobject)</arglist>
    </member>
    <member kind="function">
      <type>Code</type>
      <name>code</name>
      <anchorfile>classGdk_1_1PixbufError.html</anchorfile>
      <anchor>a1a82201fc97ad43d03cb22983e4a858f</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::PixbufFormat</name>
    <filename>classGdk_1_1PixbufFormat.html</filename>
    <member kind="function">
      <type></type>
      <name>PixbufFormat</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>affe69f159c677f39d534e4a7fc7b0565</anchor>
      <arglist>(GdkPixbufFormat *gobject, bool make_a_copy=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PixbufFormat</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>a789c15bc347849baa3596d9e6c086af5</anchor>
      <arglist>(const PixbufFormat &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>PixbufFormat &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>a0329767246dcb32c9deb1ce52d93eb7d</anchor>
      <arglist>(const PixbufFormat &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PixbufFormat</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>abccd65afceb6a9acf006a3c516eccd4c</anchor>
      <arglist>(PixbufFormat &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PixbufFormat &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>a24abccbd469f8717fd71392956d3c44a</anchor>
      <arglist>(PixbufFormat &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PixbufFormat</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>a3f1f274ec13f6f0ce56334bf5371ffb5</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>ac626e88abff7026670434dfa2ac5a025</anchor>
      <arglist>(PixbufFormat &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GdkPixbufFormat *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>af7c227a346029e1810a158621d83c041</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkPixbufFormat *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>a09a86ed2154606405b854ba70fd5114d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GdkPixbufFormat *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>a9dff0d1bfc2199c60a5b0229e64c7e12</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PixbufFormat</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>a3ede944d34e83194d621ce33df84c263</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>a9dcb4ec5ad2b4ad663aadbde1aa42e4e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_description</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>a443e131ad70a5df24d4745c23f1ffcbd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>get_mime_types</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>a22f533118816010c731ae0921a7e4248</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>get_extensions</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>a6619d7dddd4fa7ebb123ce9f839cf64a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_save_option_supported</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>ad7038f796ee45b8769c4ba83a5fa70c7</anchor>
      <arglist>(const Glib::ustring &amp;option_key) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_writable</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>a8edfd0d77c074d7aa87a2b07b3ff1b3e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_scalable</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>aaf63eb393f44f50a1250bbb8803f49ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_disabled</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>ad8e1fa5580658fa5cf9ceca8c9c3e38d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_disabled</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>a3f732791ce581721ebbcff8fd2ac2971</anchor>
      <arglist>(bool disabled=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_license</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>ac58d2bfb4fd8c2ce5a08a160123a9fab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>a0a771b8747ea04bf6003f62a4348af55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GdkPixbufFormat *</type>
      <name>gobject_</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>a328714fac2d71be3d81c02b9fba8ea69</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>a0b0944aec77c35dfe1eaf372e7a6b2fd</anchor>
      <arglist>(PixbufFormat &amp;lhs, PixbufFormat &amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Gdk::PixbufFormat</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1PixbufFormat.html</anchorfile>
      <anchor>ab5c5c21ce37bb09cfc9f30b830919e14</anchor>
      <arglist>(GdkPixbufFormat *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::PixbufLoader</name>
    <filename>classGdk_1_1PixbufLoader.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>PixbufLoader</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>acfc3d4ce5b818556ee04e509a31b8f11</anchor>
      <arglist>(PixbufLoader &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PixbufLoader &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>add207f0999051f15907b46fb978cefb5</anchor>
      <arglist>(PixbufLoader &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PixbufLoader</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>a8cc86d90339f09335380efdcde51ec4b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkPixbufLoader *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>a68a692fc8f18fac87659cb9ce4219df6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkPixbufLoader *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>a99541d054d563108b0bfe05c31b870c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GdkPixbufLoader *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>ab86dda7f88d82cf1374617ad978466c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_size</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>a295cd5abb9e14975a6836f1bb568db58</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>a90ce41040208597527cf2251631aad45</anchor>
      <arglist>(const guint8 *buf, gsize count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>a9512407e3feac5405a6ac6e12ef23bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>get_pixbuf</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>a4aa818981d7690da1fd23a10f5cde21a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::PixbufAnimation &gt;</type>
      <name>get_animation</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>a9e69e076ec80ee35b0acaaf6824a3570</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PixbufFormat</type>
      <name>get_format</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>ab1785b9798362416ffb03ce02dd267d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_area_prepared</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>a0f3648e44eae0e38faa832098c2cd58d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, int, int, int, int &gt;</type>
      <name>signal_area_updated</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>ae2ea75cf5935d66fe54a6879c2a50af8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_closed</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>ad0678d93920fbf0f4a5326d19757a986</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, int, int &gt;</type>
      <name>signal_size_prepared</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>a696ae627c1c643aba47b186325ff7664</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>ab992c7f075ced8a0eb1a24b44da2d972</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PixbufLoader &gt;</type>
      <name>create</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>ae671a5fd6f63039b761f5d78475a3f92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PixbufLoader &gt;</type>
      <name>create</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>a5d0a2be7c289b8b83e3ee9c8570b37ff</anchor>
      <arglist>(const Glib::ustring &amp;image_type, bool mime_type=false)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PixbufLoader</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>a373c249cdae4df4563736169f68915f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PixbufLoader</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>a8bb93227a052da0b9db5c51372a75351</anchor>
      <arglist>(const Glib::ustring &amp;image_type, bool mime_type=false)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_area_prepared</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>a291dd42961d273faf6589f7400e30c29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_area_updated</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>a16df36c7bc304ff980973924133342e7</anchor>
      <arglist>(int x, int y, int width, int height)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_closed</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>ade3595deb97cad8b7c569f9a66bfe03f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_size_prepared</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>a8a53cb6a2d39a6cf97b80f5950136320</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::PixbufLoader &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1PixbufLoader.html</anchorfile>
      <anchor>ab9193291650c2cca2b9367be62217339</anchor>
      <arglist>(GdkPixbufLoader *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::Point</name>
    <filename>classGdk_1_1Point.html</filename>
    <member kind="function">
      <type></type>
      <name>Point</name>
      <anchorfile>classGdk_1_1Point.html</anchorfile>
      <anchor>af4665bd41c8079300a333a184047edb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Point</name>
      <anchorfile>classGdk_1_1Point.html</anchorfile>
      <anchor>ad9d7e657c0a681e3ad6cb1def6aba201</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Point</name>
      <anchorfile>classGdk_1_1Point.html</anchorfile>
      <anchor>a5d95856fc64203390d0857fb6325b96b</anchor>
      <arglist>(const Point &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Point &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Point.html</anchorfile>
      <anchor>abe3676a076b9b989a6687c82e0935e39</anchor>
      <arglist>(const Point &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Point</name>
      <anchorfile>classGdk_1_1Point.html</anchorfile>
      <anchor>ab5f4050fd5059d253b6957144153755d</anchor>
      <arglist>(Point &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Point &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Point.html</anchorfile>
      <anchor>a8897050e1d75ee3971124364c17ac162</anchor>
      <arglist>(Point &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_x</name>
      <anchorfile>classGdk_1_1Point.html</anchorfile>
      <anchor>a0d96ac95212f24839b4680018073c5a9</anchor>
      <arglist>(int x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_y</name>
      <anchorfile>classGdk_1_1Point.html</anchorfile>
      <anchor>a6c0a9663aed8194361613a85615f1783</anchor>
      <arglist>(int y)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_x</name>
      <anchorfile>classGdk_1_1Point.html</anchorfile>
      <anchor>a9cdf86063fd8a56ecfb3aa3f313a4950</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_y</name>
      <anchorfile>classGdk_1_1Point.html</anchorfile>
      <anchor>a4e841b424ebfc0151f0e6c3e127e0b92</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equal</name>
      <anchorfile>classGdk_1_1Point.html</anchorfile>
      <anchor>a57e80df96d23e0e0d92cc5c9cef6460d</anchor>
      <arglist>(const Gdk::Point &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>GdkPoint *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Point.html</anchorfile>
      <anchor>abf82decf2edb021e9ad90cbcbb516406</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkPoint *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Point.html</anchorfile>
      <anchor>a2e363a7d4da542c289df040862780469</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GdkPoint</type>
      <name>gobject_</name>
      <anchorfile>classGdk_1_1Point.html</anchorfile>
      <anchor>af8dfba2120044a3c1f96cc5c80da240b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classGdk_1_1Point.html</anchorfile>
      <anchor>ad32019380665fdd1d07e75f3482544a3</anchor>
      <arglist>(const Point &amp;lhs, const Point &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classGdk_1_1Point.html</anchorfile>
      <anchor>a4eca57992960bc714c74f0bf6a9fd18d</anchor>
      <arglist>(const Point &amp;lhs, const Point &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>Gdk::Point &amp;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1Point.html</anchorfile>
      <anchor>a8dc7017c23dc649a4715ad2b26dd80ed</anchor>
      <arglist>(GdkPoint *object)</arglist>
    </member>
    <member kind="function">
      <type>const Gdk::Point &amp;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1Point.html</anchorfile>
      <anchor>a0f9fbf7111dd5997dd3eb38961023ac6</anchor>
      <arglist>(const GdkPoint *object)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::Rectangle</name>
    <filename>classGdk_1_1Rectangle.html</filename>
    <member kind="function">
      <type></type>
      <name>Rectangle</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>a7e9e1877d21525d7ad19b1ac1222ee18</anchor>
      <arglist>(const Rectangle &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Rectangle &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>af3c88badd0508cb920783b0372c692d5</anchor>
      <arglist>(const Rectangle &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Rectangle</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>ab4b9b3749802792dd7e4e6787cfdc40d</anchor>
      <arglist>(Rectangle &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Rectangle &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>aeda6b8a264f8d06f2abb508d551a7078</anchor>
      <arglist>(Rectangle &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Rectangle</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>a4355c251991e793a3d1223a570636a73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Rectangle</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>a6a5cee08222e450ce0634133f0b2dcdc</anchor>
      <arglist>(const GdkRectangle *gobject)</arglist>
    </member>
    <member kind="function">
      <type>GdkRectangle *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>a523818baad192ae7116554867446a8cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkRectangle *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>af758f3fa5443c2f0dad975bdfed112df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Rectangle</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>a4fc9fdc9c79bfb6e290630c91ed36796</anchor>
      <arglist>(int x, int y, int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>abf571dc0a6009071d1ecc0f7958e6d0b</anchor>
      <arglist>(const Rectangle &amp;src) const </arglist>
    </member>
    <member kind="function">
      <type>Rectangle &amp;</type>
      <name>join</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>aa3482aa592511793902d1eedcb854ba7</anchor>
      <arglist>(const Rectangle &amp;src2)</arglist>
    </member>
    <member kind="function">
      <type>Rectangle &amp;</type>
      <name>intersect</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>af7188c817c550890323012e543a96594</anchor>
      <arglist>(const Rectangle &amp;src2)</arglist>
    </member>
    <member kind="function">
      <type>Rectangle &amp;</type>
      <name>intersect</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>a0de9fe1fd7955800242844a35eb3cf5f</anchor>
      <arglist>(const Rectangle &amp;src2, bool &amp;rectangles_intersect)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>intersects</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>a05aa85d4ebaafa7f6e265642fdd53ba1</anchor>
      <arglist>(const Rectangle &amp;src2) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_zero_area</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>ab1936e7e0a1fc241ca889ffeefe03e93</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_x</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>a9617a6b06556cf678a349d943dc90662</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_x</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>ab4cdda52ab2748841ee867406a80e3bb</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_y</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>aa733ca00ef7dc830e42c7687daf1fc7c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_y</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>ac001c280afb816507db7ee1448b51ff4</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_width</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>a6768444395a35be136dcbcb96c092eeb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_width</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>a4ee72346a08bf546dc0763f19f6f713b</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_height</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>a712def0281db83c9a5db54efdf08716a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_height</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>a0fe5422ce2c1cdef0e54802390bb6d63</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>aff96bb222b0aa56f34006dbc61e35068</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GdkRectangle</type>
      <name>gobject_</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>afdbfa8f303faffbb217db17de152eda7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Rectangle</type>
      <name>join</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>aadf7d3c02a3817ab4d656dd4055190ca</anchor>
      <arglist>(const Rectangle &amp;src1, const Rectangle &amp;src2)</arglist>
    </member>
    <member kind="function">
      <type>Rectangle</type>
      <name>intersect</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>a291ca74c1aa0f0e32845c53fd945b232</anchor>
      <arglist>(const Rectangle &amp;src1, const Rectangle &amp;src2)</arglist>
    </member>
    <member kind="function">
      <type>Rectangle</type>
      <name>intersect</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>ae99fb9c8d4e5c4bbe48ab96f6062e816</anchor>
      <arglist>(const Rectangle &amp;src1, const Rectangle &amp;src2, bool &amp;rectangles_intersect)</arglist>
    </member>
    <member kind="function">
      <type>Gdk::Rectangle &amp;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>ade8b8c02001ee3d868068c10743a13dc</anchor>
      <arglist>(GdkRectangle *object)</arglist>
    </member>
    <member kind="function">
      <type>const Gdk::Rectangle &amp;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1Rectangle.html</anchorfile>
      <anchor>abdb81cb65b494d2e4a50888a1e29f64b</anchor>
      <arglist>(const GdkRectangle *object)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::RGBA</name>
    <filename>classGdk_1_1RGBA.html</filename>
    <member kind="function">
      <type></type>
      <name>RGBA</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a2115e798cad936178eb2881c1f5aae63</anchor>
      <arglist>(GdkRGBA *gobject, bool make_a_copy=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RGBA</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a387617df9015b6ae4a64fead6e82c620</anchor>
      <arglist>(const RGBA &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>RGBA &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a0183f5ab571f2b280a5a1d653ceee49a</anchor>
      <arglist>(const RGBA &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RGBA</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a5a18b4f2256a941ac597a8dd899ab8b5</anchor>
      <arglist>(RGBA &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>RGBA &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a5d17f602d848d0ca91ae2b621270df71</anchor>
      <arglist>(RGBA &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RGBA</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a78d12d74a3977de79b59ef01b8ccd7eb</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a5022e4b777cb94d8e0431ab537c18875</anchor>
      <arglist>(RGBA &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GdkRGBA *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a641a928b6fae31357413a4d7f62b8f0d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkRGBA *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>ab9fdef4b77d7b6bfa1fb6bda5885de8a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GdkRGBA *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a359d8ee809059de2b7f63349abeeaed0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RGBA</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a225c4a2932fb62f58043836735d0c577</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RGBA</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>af8571dcfabcee0090ac9f0bc8fc7c1f7</anchor>
      <arglist>(const Glib::ustring &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_grey_u</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>af847ac1842ada91dff450e587f4e14bc</anchor>
      <arglist>(gushort value, gushort alpha=65535)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_grey</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a6b1c768ace315c43293ebefbb9b3c9b7</anchor>
      <arglist>(double g, double alpha=1.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_rgba_u</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a316020bdba50565eec26e20662cf707d</anchor>
      <arglist>(gushort red_, gushort green_, gushort blue_, gushort alpha_=65535)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_rgba</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a34ff955c392937561cd9fb5cae14a252</anchor>
      <arglist>(double red_, double green_, double blue_, double alpha_=1.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_hsv</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>aa2531c07ef8e69ef1a26106ebaac7f52</anchor>
      <arglist>(double h, double s, double v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_hsl</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>ae89773d2e74334117d00988694424542</anchor>
      <arglist>(double h, double s, double l)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a8a75cacaf30f5db4252d43ad00bce735</anchor>
      <arglist>(const Glib::ustring &amp;spec)</arglist>
    </member>
    <member kind="function">
      <type>gushort</type>
      <name>get_red_u</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a4b3920ff9b5299613d692ce4d428d671</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>gushort</type>
      <name>get_green_u</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>ae76234f15ccb8f048f1cc3324a050d15</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>gushort</type>
      <name>get_blue_u</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>ac5e46942df28feb0ee3b56d0db5573fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>gushort</type>
      <name>get_alpha_u</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>adcc7a0c88339afa68dc1c808c1d17c66</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_red_u</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>ae713444b58bd84d0c5eda398ac2dc869</anchor>
      <arglist>(gushort value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_green_u</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a89ce3ec51b21c76d307c06d922e7fb0c</anchor>
      <arglist>(gushort value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_blue_u</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>aa238998dd7638240e8178d4d7c5faf1c</anchor>
      <arglist>(gushort value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_alpha_u</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a5eb1bb08e62b5abe4a0ad00dee254b92</anchor>
      <arglist>(gushort value)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_red</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a2af30f00a8a89ae4cf293ef49859ca8b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_green</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>aede0ac741f8eea18a38be7866b07d95d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_blue</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>af59fbf7d37a852b45b4ec8309e1b6b06</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_alpha</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>abb45486a6071a1f73295ce6d23ad2e9a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_red</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>aa13e566ee72d539c4a08a9dd4f9702e2</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_green</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a4e53bd8c004043533ae352afd6645e54</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_blue</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a99285c9ec7a81a6bcb4d7b1188cda143</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_alpha</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>adc2b10de847656dd600b77ec035fe3ca</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>to_string</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>af055be203e413f20f0abd4852cfcca97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a0685ce57286ea3f72712198505427a17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GdkRGBA *</type>
      <name>gobject_</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a4d0cd0765f7a9ba4a8d491e424fe4a85</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a664191a133d17b5cf49621203faf49a2</anchor>
      <arglist>(const RGBA &amp;lhs, const RGBA &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a4dede59ab7d7b336f22fde3724286b66</anchor>
      <arglist>(const RGBA &amp;lhs, const RGBA &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a7603c42d6861082abff42f27f9f666d0</anchor>
      <arglist>(RGBA &amp;lhs, RGBA &amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Gdk::RGBA</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1RGBA.html</anchorfile>
      <anchor>a54eb086546a60f78bbc595b8b5c07ac4</anchor>
      <arglist>(GdkRGBA *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::Screen</name>
    <filename>classGdk_1_1Screen.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>Screen</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>a83c96bbc9e2bf3e61b770de34d73983b</anchor>
      <arglist>(Screen &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Screen &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>afc2df8a3eac03f7abd94327d9e78d167</anchor>
      <arglist>(Screen &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Screen</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>a0384cdea8f81b937573a81d702922f21</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkScreen *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>a47bd96f3873d1a839a405fb25a7e6841</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkScreen *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>ad1cdbb6f90e29485640ac98ede8f7d30</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GdkScreen *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>a52b998dac033ef60f30bebe018e8db3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Visual &gt;</type>
      <name>get_system_visual</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>afbc7f0ced954e5d7cc4b3b823f09955e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Visual &gt;</type>
      <name>get_system_visual</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>ae3e8b28ce7fe261c2f389683f3c98bef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Visual &gt;</type>
      <name>get_rgba_visual</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>a20af3907afd8fc3098b0c9a34062c1d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Visual &gt;</type>
      <name>get_rgba_visual</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>a67ba73f5f8d0941c91512995c3db82bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_composited</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>a6e0312586b935b1df1d9184d4d1e2417</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Window &gt;</type>
      <name>get_root_window</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>a04843c5046eb14a175bbbdcc490e481f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Window &gt;</type>
      <name>get_root_window</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>a0ad4282fd382723bda580e7db4cc2c64</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>a09a937007c4c386f2e32bd09e6017072</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>a7f4c4078d1576c6903b82df52bdd6c6a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_number</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>a5b7ad1652ea1b6df39b943d25198a904</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_width</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>a0ea643f504cd7aba79ce0c987e0dee3e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_height</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>a4d0b1a971c87761d79e64c9e04ffe355</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_width_mm</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>ad6a037463ce810b4d19f2fa0d6d38644</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_height_mm</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>af49c58dd81e12e9106b3e25fcb0af6e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; Visual &gt; &gt;</type>
      <name>list_visuals</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>a4ed44c5d958b82ee07fd35d02c2e0798</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; Window &gt; &gt;</type>
      <name>get_toplevel_windows</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>aefb475d138272e603436046048aaa210</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>make_display_name</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>ab2317142ac88cf9f3975734092b049dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_n_monitors</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>afa47b24f2c133204be5816106a2d87a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_primary_monitor</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>a2c5c01fd7b837c41c5258d652cee65d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_monitor_geometry</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>adf65c0053fa073c8c44fa1bbeb21c02a</anchor>
      <arglist>(int monitor_num, Rectangle &amp;dest) const </arglist>
    </member>
    <member kind="function">
      <type>Rectangle</type>
      <name>get_monitor_workarea</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>af6b1ece101c4fd83edce05d3f82d68b1</anchor>
      <arglist>(int monitor_num=0) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_monitor_at_point</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>aa79c0e9c13fcf293c471b6498d3689e5</anchor>
      <arglist>(int x, int y) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_monitor_at_window</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>a49e39d52b90bef267647b0c801e53a5b</anchor>
      <arglist>(const Glib::RefPtr&lt; Window &gt; &amp;window) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_monitor_width_mm</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>ae215fcc31b1f639fcf905f49959bf520</anchor>
      <arglist>(int monitor_num) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_monitor_height_mm</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>a166fb73562b2ae649702b9e76adddb36</anchor>
      <arglist>(int monitor_num) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_monitor_plug_name</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>a939ebaa453cea402629539e4b5e37f9e</anchor>
      <arglist>(int monitor_num) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_monitor_scale_factor</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>a9703b5c75b00a0c45ae0b53ea0806213</anchor>
      <arglist>(int monitor_num)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_setting</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>a0c6da7b249da3e97301d92fa5e33d00e</anchor>
      <arglist>(const Glib::ustring &amp;name, ValueType &amp;value) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_font_options</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>afc233f62e195aef2fd55bc0892059d00</anchor>
      <arglist>(const ::Cairo::FontOptions &amp;options)</arglist>
    </member>
    <member kind="function">
      <type>::Cairo::FontOptions</type>
      <name>get_font_options</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>abed488ad9a300352edf9fd09d2ccd9d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_resolution</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>a81127d3b076d0f5b87f7662309f340f7</anchor>
      <arglist>(double dpi)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_resolution</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>a24cb66feedc0f8047ddb5b1e89e2a7fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Window &gt;</type>
      <name>get_active_window</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>a17229eacb4d31243f41ba18ef1d2e510</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Window &gt;</type>
      <name>get_active_window</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>a382b1d7bdd6ebc832146ec3b4aac3c96</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; Window &gt; &gt;</type>
      <name>get_window_stack</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>aa3f2a37e845efcdd1d10c6ce275db544</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_size_changed</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>ab97c939dd17addd66a55571a719af92f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_composited_changed</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>aa9d0d79ec086d8366a7767f276f87f92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_monitors_changed</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>a6edae465f83bfa63ae73e9fd6ea2337e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; ::Cairo::FontOptions &gt;</type>
      <name>property_font_options</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>a90c93c095586ca53bf32365f6c4b7339</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; ::Cairo::FontOptions &gt;</type>
      <name>property_font_options</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>a10b680c4ff545377a7018d5f80c12e52</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_resolution</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>a3d2df8830b5f5065e2fae007930040f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_resolution</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>a0d876a8f26b28a3b8117266535ec887c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>ac0e806b92e04aec14344f10e11e84990</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Screen &gt;</type>
      <name>get_default</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>a9f9cb21db16c3c12c0c19210e788098c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Screen &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1Screen.html</anchorfile>
      <anchor>a2eba3d45c2bfa999442a0930118dfae3</anchor>
      <arglist>(GdkScreen *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::Seat</name>
    <filename>classGdk_1_1Seat.html</filename>
    <base>Glib::Object</base>
    <member kind="typedef">
      <type>sigc::slot&lt; void, const Glib::RefPtr&lt; Window &gt; &amp; &gt;</type>
      <name>SlotGrabPrepare</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a2586c5ca1dd1de9da6763ed33e285d6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Seat</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>aa062464e3bbe7993f099ccb30ae1168f</anchor>
      <arglist>(Seat &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Seat &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a489a7ed2d3f407c6a609ddc02729e4c1</anchor>
      <arglist>(Seat &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Seat</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a6f26d7604ba2d2e98ee5d00984676514</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkSeat *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a644bab54313c45918ad0c934aee519a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkSeat *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>ac19a0aeef914c326673ba25773382f2a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GdkSeat *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a58272ac9d394c2fbd72d9ab3d604a10f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GrabStatus</type>
      <name>grab</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a38a7f4c70c94256cf274578ef29068d3</anchor>
      <arglist>(const Glib::RefPtr&lt; Window &gt; &amp;window, SeatCapabilities capabilities, bool owner_events, const Glib::RefPtr&lt; Cursor &gt; &amp;cursor=Glib::RefPtr&lt; Cursor &gt;(), const GdkEvent *event=nullptr, const SlotGrabPrepare &amp;slot=SlotGrabPrepare())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ungrab</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a2ca84f1cdb802ed4652ce6ecb954410a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a5a4270da723ac130c5b1227a397709b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a1f89d9d340900a93a5da14d65bd6b341</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SeatCapabilities</type>
      <name>get_capabilities</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a475e284db03c5029a3018d1c60c86dd7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; Device &gt; &gt;</type>
      <name>get_slaves</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>aa147b29bea3989f25fa3be02cc178c7b</anchor>
      <arglist>(SeatCapabilities capabilities)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; const Device &gt; &gt;</type>
      <name>get_slaves</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a1c11f7cbd190aefb9a9dd2ed55755a07</anchor>
      <arglist>(SeatCapabilities capabilities) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Device &gt;</type>
      <name>get_pointer</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a252060543f9c2d992fd172a1117339eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Device &gt;</type>
      <name>get_pointer</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>ac4f14a808984e1f6322026395e78748c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Device &gt;</type>
      <name>get_keyboard</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a73d701fa197e66709eeab3af9abc90e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Device &gt;</type>
      <name>get_keyboard</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a0e553a36b0bcd7082bde62427a939377</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Device &gt; &amp; &gt;</type>
      <name>signal_device_added</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>afa7fbfb9d24fd74debe1ba321eb83258</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Device &gt; &amp; &gt;</type>
      <name>signal_device_removed</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>aeeeee245359218a6796ffbd9cfbc3de7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Display &gt; &gt;</type>
      <name>property_display</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>ac7db7da09e7429cb209c8bc788d6f487</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a28a966f22f4826ffc9d606f9a9d3c909</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Seat</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>ad3513d75c33c51aee51e435bc8f4b48c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Seat &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1Seat.html</anchorfile>
      <anchor>a2092ed11ab0654ba6f888d875864e02d</anchor>
      <arglist>(GdkSeat *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::TimeCoord</name>
    <filename>classGdk_1_1TimeCoord.html</filename>
    <member kind="function">
      <type></type>
      <name>TimeCoord</name>
      <anchorfile>classGdk_1_1TimeCoord.html</anchorfile>
      <anchor>affa1b537033c92543e3b04ea1a6bafc4</anchor>
      <arglist>(GdkTimeCoord *castitem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TimeCoord</name>
      <anchorfile>classGdk_1_1TimeCoord.html</anchorfile>
      <anchor>a7a8793feda0b63b3e1f672dc1f6d26bd</anchor>
      <arglist>(TimeCoord &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TimeCoord &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1TimeCoord.html</anchorfile>
      <anchor>a3f9b5e3a26a9c4653b8ae9012d47d2f0</anchor>
      <arglist>(TimeCoord &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>guint32</type>
      <name>get_time</name>
      <anchorfile>classGdk_1_1TimeCoord.html</anchorfile>
      <anchor>ad4838e9848cc5de3d56cd176038a38ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_value_at_axis</name>
      <anchorfile>classGdk_1_1TimeCoord.html</anchorfile>
      <anchor>a70fc6d793acfefa46e61b652b8b580cf</anchor>
      <arglist>(guint index) const </arglist>
    </member>
    <member kind="function">
      <type>GdkTimeCoord *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1TimeCoord.html</anchorfile>
      <anchor>af515d6def273ed3d05962e8d343ee486</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkTimeCoord *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1TimeCoord.html</anchorfile>
      <anchor>acbc415a0a3abef9596539d090e49a0b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GdkTimeCoord *</type>
      <name>gobject_</name>
      <anchorfile>classGdk_1_1TimeCoord.html</anchorfile>
      <anchor>a521b90160149b582a61f66c9ec1e15ab</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::Visual</name>
    <filename>classGdk_1_1Visual.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>Visual</name>
      <anchorfile>classGdk_1_1Visual.html</anchorfile>
      <anchor>a806c2f7c666c1679ead8636d36b78385</anchor>
      <arglist>(Visual &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Visual &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Visual.html</anchorfile>
      <anchor>a5bfeedf96601feba316bcc697b5530e8</anchor>
      <arglist>(Visual &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Visual</name>
      <anchorfile>classGdk_1_1Visual.html</anchorfile>
      <anchor>ad231226d0558f17ab1c52f3ffdb3557b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkVisual *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Visual.html</anchorfile>
      <anchor>a23e5a76ba206f65d763186a9161b1f00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkVisual *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Visual.html</anchorfile>
      <anchor>a3452bcc88c3ef7b9d9d1489ac84e3629</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GdkVisual *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1Visual.html</anchorfile>
      <anchor>aac860c63e6f3740145653aef122bdf11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Screen &gt;</type>
      <name>get_screen</name>
      <anchorfile>classGdk_1_1Visual.html</anchorfile>
      <anchor>a7e10f47bbec94749bf683969e52927a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Screen &gt;</type>
      <name>get_screen</name>
      <anchorfile>classGdk_1_1Visual.html</anchorfile>
      <anchor>a194d4df865f1a72171bae1de27571ca4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>VisualType</type>
      <name>get_visual_type</name>
      <anchorfile>classGdk_1_1Visual.html</anchorfile>
      <anchor>af615a02cb1a5bf13d748250d3202e552</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_depth</name>
      <anchorfile>classGdk_1_1Visual.html</anchorfile>
      <anchor>a0093c5b3fbc21bed2ca0b7383eb5ef2c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ByteOrder</type>
      <name>get_byte_order</name>
      <anchorfile>classGdk_1_1Visual.html</anchorfile>
      <anchor>a3df15d1041143c6f20075e1469034d3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_colormap_size</name>
      <anchorfile>classGdk_1_1Visual.html</anchorfile>
      <anchor>a1b3bc9654ddb15048c89e08e8dbc2b2e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_bits_per_rgb</name>
      <anchorfile>classGdk_1_1Visual.html</anchorfile>
      <anchor>a000f87fd3dc00651046fa2c9dbaae05d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_red_pixel_details</name>
      <anchorfile>classGdk_1_1Visual.html</anchorfile>
      <anchor>ac9713165720bebfa769b274dfc1ae272</anchor>
      <arglist>(guint32 &amp;mask, int &amp;shift, int &amp;precision) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_green_pixel_details</name>
      <anchorfile>classGdk_1_1Visual.html</anchorfile>
      <anchor>a00950ae087e9e5cb3f720f9ab033b830</anchor>
      <arglist>(guint32 &amp;mask, int &amp;shift, int &amp;precision) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_blue_pixel_details</name>
      <anchorfile>classGdk_1_1Visual.html</anchorfile>
      <anchor>ad322b8a271797fd244b43bd25d981f1f</anchor>
      <arglist>(guint32 &amp;mask, int &amp;shift, int &amp;precision) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1Visual.html</anchorfile>
      <anchor>a675c5005f86616e3000d2e0052e7ecc4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Visual &gt;</type>
      <name>get_system</name>
      <anchorfile>classGdk_1_1Visual.html</anchorfile>
      <anchor>a4724a117dabcb795c406fea0172e3d08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Visual &gt;</type>
      <name>get_best</name>
      <anchorfile>classGdk_1_1Visual.html</anchorfile>
      <anchor>a8d67541c7ac1cca24b20f1e04a654c9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Visual &gt;</type>
      <name>get_best</name>
      <anchorfile>classGdk_1_1Visual.html</anchorfile>
      <anchor>a2f44b4029c4b3091f567903f6991e88a</anchor>
      <arglist>(int depth)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Visual &gt;</type>
      <name>get_best</name>
      <anchorfile>classGdk_1_1Visual.html</anchorfile>
      <anchor>a23a87ca05f0ff38962c341fad1698239</anchor>
      <arglist>(VisualType visual_type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Visual &gt;</type>
      <name>get_best</name>
      <anchorfile>classGdk_1_1Visual.html</anchorfile>
      <anchor>aa58e64d37a98afc31f4a09412b558863</anchor>
      <arglist>(int depth, VisualType visual_type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>get_best_depth</name>
      <anchorfile>classGdk_1_1Visual.html</anchorfile>
      <anchor>a4033654c987ba7208b7f1ab8e53c04a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VisualType</type>
      <name>get_best_type</name>
      <anchorfile>classGdk_1_1Visual.html</anchorfile>
      <anchor>a9653abce581c94fca4dca322ffb4e16d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Visual</name>
      <anchorfile>classGdk_1_1Visual.html</anchorfile>
      <anchor>a04412275c902225a6bd103d0a5f3ad2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Visual &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1Visual.html</anchorfile>
      <anchor>a151170bd9f613ba53f811871166a6f55</anchor>
      <arglist>(GdkVisual *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gdk::Window</name>
    <filename>classGdk_1_1Window.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>Window</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a04d134684c22399def9878f8ded5bcf8</anchor>
      <arglist>(Window &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Window &amp;</type>
      <name>operator=</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a7e3e2e27cefc14a31073702194dc8bb6</anchor>
      <arglist>(Window &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Window</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>ab970a3120cc4765baabc470d80561f2e</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GdkWindow *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a0bc9fc92bac3c509b0a0d754488903b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkWindow *</type>
      <name>gobj</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a9cd1fbdc140ff77e1b005938bd439f49</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GdkWindow *</type>
      <name>gobj_copy</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>addb464bdf61c63040afe7bae6d1ed4bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WindowType</type>
      <name>get_window_type</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>aa5d6f691b65a70deae5ee6d5883e9a6d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Visual &gt;</type>
      <name>get_visual</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>aabc72c3289d98337ccd9f6aefe3ce73e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Visual &gt;</type>
      <name>get_visual</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a580477f095475cdd8e95e2fff639c7ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Screen &gt;</type>
      <name>get_screen</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a920547238d11df9caac830cb2b34b422</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Screen &gt;</type>
      <name>get_screen</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>add4e4705ed662f072205228466825bea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>ad0e14b3c95f183a8dbff3a8104184efc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a30d56b5d03afdb4c25ef783b747fd479</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>show</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>ad850f17e45522107fb498de8641766f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hide</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a2850d6c550e5c2f73f82fe0043b091b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>withdraw</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>aa7a5705224d062fe6351a426781597fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>show_unraised</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a2c6d829cf3fc060ab52a4bdc7d77973a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>abdaf2a58abef5b8bc4f7a36d7109076e</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>ac24547040d1662585c8ee64fe56780f6</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_resize</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>afa7df5ed11a3b022c567e644d64ada07</anchor>
      <arglist>(int x, int y, int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reparent</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a1de4d3f12a7f2e7e866f1d9909a9a001</anchor>
      <arglist>(const Glib::RefPtr&lt; Window &gt; &amp;new_parent, int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>raise</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a6eef65b862344ad01b01e527f2c39741</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lower</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a275d4424691fee615c469f7c6bdd59bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restack</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a8f8b1a1988ee739869b683082bf6746c</anchor>
      <arglist>(const Glib::RefPtr&lt; Window &gt; &amp;sibling, bool above)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restack</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a15acff14c1947278d1e1d20fc0115e89</anchor>
      <arglist>(bool above)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>focus</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a7b30990c3efc8d50215fcb6f8cde0546</anchor>
      <arglist>(guint32 timestamp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_user_data</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a6e895c78858224262b90564b68759b62</anchor>
      <arglist>(gpointer user_data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_override_redirect</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>aad09335b20323d81cb214e549ba201e6</anchor>
      <arglist>(bool override_redirect=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_filter</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a413863a30bbac24d6d1a207401c07caf</anchor>
      <arglist>(GdkFilterFunc function, gpointer data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_filter</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>aa0b04aed6d338ce78f10060b025ceb3f</anchor>
      <arglist>(GdkFilterFunc function, gpointer data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scroll</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a7c96ca3674bbf8dbd71602d2f7893b8e</anchor>
      <arglist>(int dx, int dy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_region</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a9a6e8f65eafd31950efdbb90b0cf2776</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Region &gt; &amp;region, int dx, int dy)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ensure_native</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a2e9608e67a7d3ee02d4a94139b9213d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shape_combine_region</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>aeb55446aa2313551d016b1eec262b854</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Region &gt; &amp;shape_region, int offset_x=0, int offset_y=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_child_shapes</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a0573c6c2876784956e463eccebb55c6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_composited</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a4ca088effd48d610849dca1912c0b0b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_composited</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>aba9d5bea3de05b31eff0da2bed753db8</anchor>
      <arglist>(bool composited=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>merge_child_shapes</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a48118e2ebc867bc3c726d85f5eec0659</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>input_shape_combine_region</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>aac2c9d614a46435a7812681fd95678d1</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Region &gt; &amp;shape_region, int offset_x, int offset_y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_child_input_shapes</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a4c4a3eff84349ff97ecf1d24972cc751</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>merge_child_input_shapes</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>adf4f0442926e39a327843a6b5946e4c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_pass_through</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>aa9a4aff6371ac7cc5ef44112c3b5af56</anchor>
      <arglist>(bool pass_through=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_pass_through</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a701d9c160880d2fd99e5ab48dc33bc28</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_visible</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a44d6daf9e5cd55b18891a5173956d3bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_viewable</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a9e4506546231e69eebebc398627de723</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_input_only</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a93048bb6eea2a051a5b88a0227f848ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_shaped</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>ae0f8676d3c9b69be7b0e613b4eda30b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WindowState</type>
      <name>get_state</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a0e3921982caec87dedde90140e134d3f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_static_gravities</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a7886467cef616c0c07ba482888490059</anchor>
      <arglist>(bool use_static=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_native</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a452e3fb67d720d99bd83c800bd35ac39</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_type_hint</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a4505331d1882e0e02d076782ddfaa2ff</anchor>
      <arglist>(WindowTypeHint hint)</arglist>
    </member>
    <member kind="function">
      <type>WindowTypeHint</type>
      <name>get_type_hint</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a7c0dd035d50de014a5abe8b0a41b82b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_modal_hint</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a56629a916ebc38ee9c10d925e5bba44b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_modal_hint</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a22dc81b0749d30bbbdf5906059459482</anchor>
      <arglist>(bool modal=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_geometry_hints</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a6ec3d94409fddef481e3e57714c577fa</anchor>
      <arglist>(const Geometry &amp;geometry, WindowHints geom_mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>begin_paint_rect</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>aa9221d62e29d510b5164789ba8a70ea2</anchor>
      <arglist>(const Rectangle &amp;rectangle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>begin_paint_region</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>ae9aa18f0a8e182f7f6aca3dca5270db4</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Region &gt; &amp;region)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>end_paint</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a21c920c3f5903e7d338b68c68f09e645</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a2cbd12adcdaf1039d215cd2c11e32962</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_title</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a89c47b105ce213eb1b075d1c8dd34ab6</anchor>
      <arglist>(const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_role</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>af0af1130cfb882913b80d9a82123479e</anchor>
      <arglist>(const Glib::ustring &amp;role)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_startup_id</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a246b2c39068bf02f4e981fde58f8d776</anchor>
      <arglist>(const Glib::ustring &amp;startup_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_transient_for</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>ab8e6f4a6758057f249a41eccb3c59061</anchor>
      <arglist>(const Glib::RefPtr&lt; Window &gt; &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_background</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a3beabdcf6f6f2c36f03288aaba209863</anchor>
      <arglist>(const Color &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_background</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a2b5b22cd0d02d9b372f260bbd917ab32</anchor>
      <arglist>(const RGBA &amp;rgba)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_background</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a764c79b614f5a4060c648a3497525840</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Pattern &gt; &amp;pattern)</arglist>
    </member>
    <member kind="function">
      <type>::Cairo::RefPtr&lt; ::Cairo::Pattern &gt;</type>
      <name>get_background_pattern</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a504bf5ba34b904a5db7b713ba00e5d97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>::Cairo::RefPtr&lt; const ::Cairo::Pattern &gt;</type>
      <name>get_background_pattern</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a3e36911ce7e063b7113a600123585fad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_cursor</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a14bf94a3685fcdfa43785743b0ccf322</anchor>
      <arglist>(const Glib::RefPtr&lt; Cursor &gt; &amp;cursor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_cursor</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>aba9323e496965a473e37566140cc9a10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_device_cursor</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a313df95acc0b87f745a99e6df6b2a7cf</anchor>
      <arglist>(const Glib::RefPtr&lt; Device &gt; &amp;device, const Glib::RefPtr&lt; Cursor &gt; &amp;cursor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_device_cursor</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>aea35dce3419c6acc0620cf7e4a6e2a08</anchor>
      <arglist>(const Glib::RefPtr&lt; Device &gt; &amp;device)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Cursor &gt;</type>
      <name>get_device_cursor</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>abd71e3072e8dffeeb10662b2546e9f54</anchor>
      <arglist>(const Glib::RefPtr&lt; Device &gt; &amp;device)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Cursor &gt;</type>
      <name>get_device_cursor</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a4eef311836a1629cec2a6a287e75b046</anchor>
      <arglist>(const Glib::RefPtr&lt; const Device &gt; &amp;device) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Cursor &gt;</type>
      <name>get_cursor</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>af7568694510c085c95e65ccd2ff68a6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Cursor &gt;</type>
      <name>get_cursor</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a464e04ca2979942945e03b8bd54baabe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_user_data</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a82d50ebb9c1f2bce00437eecc3f2b21c</anchor>
      <arglist>(gpointer *data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_geometry</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>ab66d6bb7f1b8bb2e3cfa19dda75aaa07</anchor>
      <arglist>(int &amp;x, int &amp;y, int &amp;width, int &amp;height) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_width</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a38a8d33efb536561d975c71346e51f67</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_height</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>ab136e3c46305bbad2960ce3e40867c28</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_position</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a86dcf2d6fe032353e1ef76c69887dae7</anchor>
      <arglist>(int &amp;x, int &amp;y) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_origin</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>af7eef7c273c02fbc0fd02c075b57309f</anchor>
      <arglist>(int &amp;x, int &amp;y) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_root_coords</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a1be3c81129f5b1aac0cfa4344717fb80</anchor>
      <arglist>(int x, int y, int &amp;root_x, int &amp;root_y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coords_to_parent</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a2c659a54a8f1d84562a3f5befcf62d26</anchor>
      <arglist>(double x, double y, double &amp;parent_x, double &amp;parent_y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coords_from_parent</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a1b187b52dd8fefc49aca3d02d05882ed</anchor>
      <arglist>(double parent_x, double parent_y, double &amp;x, double &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_root_origin</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>ae886fd01bfaa25d1c843bafeb745790f</anchor>
      <arglist>(int &amp;x, int &amp;y) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_frame_extents</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>ab518e9b6a14392722f71cb2174c40d55</anchor>
      <arglist>(Rectangle &amp;rect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_frame_extents</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>aa1cefd00a01aa7075c23622e952f6761</anchor>
      <arglist>(Rectangle &amp;rect) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_scale_factor</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a1ed56ced1904251331b0f0e439b6bba4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Window &gt;</type>
      <name>get_pointer</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a7b72ec86d47d628bd9112a803d61089f</anchor>
      <arglist>(int &amp;x, int &amp;y, ModifierType &amp;mask)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Window &gt;</type>
      <name>get_parent</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>ac09f2facb64137aa5b05623c2b41063a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Window &gt;</type>
      <name>get_parent</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>ab5485601dc363c5aa40862113a1a40ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Window &gt;</type>
      <name>get_toplevel</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a13b651e86823b82bb7c06249b30f95de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Window &gt;</type>
      <name>get_toplevel</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a025df98a25bb99ef3144004cb9547878</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Window &gt;</type>
      <name>get_device_position</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a37dfbd885e04cc322b1e2e10264894b6</anchor>
      <arglist>(const Glib::RefPtr&lt; const Device &gt; &amp;device, int &amp;x, int &amp;y, ModifierType &amp;mask) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Window &gt;</type>
      <name>get_device_position</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a8e66f976b542a622657f939441210f4e</anchor>
      <arglist>(const Glib::RefPtr&lt; const Device &gt; &amp;device, double &amp;x, double &amp;y, ModifierType &amp;mask) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Window &gt;</type>
      <name>get_effective_parent</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a10d716ddea592b6cae558f9462a21244</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Window &gt;</type>
      <name>get_effective_parent</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a969ef8f54573f9535839b03c08a30589</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Window &gt;</type>
      <name>get_effective_toplevel</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a585079dc5788f71aec8be74463720636</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Window &gt;</type>
      <name>get_effective_toplevel</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>ae03d69ae34392a0892f52e1e314957c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; Window &gt; &gt;</type>
      <name>get_children</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>ae201dc6af37555bd5ae5a04af951c22a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; const Window &gt; &gt;</type>
      <name>get_children</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>ae599e5c46388f0dd62b39f0d84da52c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventMask</type>
      <name>get_events</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a41eaa04d1b75d309be5be8639b1bf1b0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_events</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>abe022e72429562865fa0d31587056890</anchor>
      <arglist>(EventMask event_mask)</arglist>
    </member>
    <member kind="function">
      <type>EventMask</type>
      <name>get_device_events</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a34e38b496cfde501ad2f68bc022fd496</anchor>
      <arglist>(const Glib::RefPtr&lt; const Device &gt; &amp;device) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_device_events</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a79c89817e716b0f78752dfaef5fca3e3</anchor>
      <arglist>(const Glib::RefPtr&lt; Device &gt; &amp;device, EventMask event_mask)</arglist>
    </member>
    <member kind="function">
      <type>EventMask</type>
      <name>get_source_events</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a607764deae432b7bb365a3c18dc9e4a5</anchor>
      <arglist>(InputSource source) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_source_events</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a968151d3a0583e79a3cb9050ca23d97f</anchor>
      <arglist>(InputSource source, EventMask event_mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_list</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>ab625ecdce59d8d11d0d103f1e85c361d</anchor>
      <arglist>(const std::vector&lt; Glib::RefPtr&lt; Gdk::Pixbuf &gt; &gt; &amp;pixbufs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_icon</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a700b396befa605d159f2cd697a1f6014</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_name</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>ac5e3fbd4f07bed0a5060b32a07a127b6</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_group</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>ac45fc54f035a56f9b8c6a1f5a8a63ed3</anchor>
      <arglist>(const Glib::RefPtr&lt; Window &gt; &amp;leader)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Window &gt;</type>
      <name>get_group</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>ad151acb64c1a34158cd3ace71889f260</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Window &gt;</type>
      <name>get_group</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a1faf6b134e161a09ad9ce937585176bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_decorations</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a851f5cf4a7e203d8f6f6078818b7f80d</anchor>
      <arglist>(WMDecoration decorations)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_decorations</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>af006eb45e3ce4884a731a33913493290</anchor>
      <arglist>(WMDecoration &amp;decorations) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_functions</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a2ada3527bed8ba03670d83203c09a446</anchor>
      <arglist>(WMFunction functions)</arglist>
    </member>
    <member kind="function">
      <type>::Cairo::RefPtr&lt; ::Cairo::Surface &gt;</type>
      <name>create_similar_surface</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>aa0da846d10377ba7935f371c2fe9df08</anchor>
      <arglist>(::Cairo::Content content, int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>::Cairo::RefPtr&lt; ::Cairo::Surface &gt;</type>
      <name>create_similar_image_surface</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a617f0ef63211de3fcd777401cc2a1a40</anchor>
      <arglist>(::Cairo::Format format, int width, int height, int scale)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beep</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>afba92b3ac4244483186e68cc17ded2d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>iconify</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a6d14f032c5f40a83ded5e9817cafaae3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deiconify</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a2c43698b27dc5e31b4c7c1ca76496a03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stick</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a72cddee1b5ed8a663b6f245e59132473</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unstick</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a22e499aeadc19f7373972355ae2872cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>maximize</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a4cc88ddb51aff3135603a5282073f625</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unmaximize</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>ad9325d93af96ee6774ffa4fa354d1d25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_dnd</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a53a80a911aab9875900da568c57b0cee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DragProtocol</type>
      <name>get_drag_protocol</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a31302c204071366c9868a1d0457318d8</anchor>
      <arglist>(Glib::RefPtr&lt; Window &gt; &amp;target) const </arglist>
    </member>
    <member kind="function">
      <type>DragProtocol</type>
      <name>get_drag_protocol</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a2f81342b29d63b305dcd5f218a0a2919</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>begin_resize_drag</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a4e2292672c3e82f7b25503db8d9c0266</anchor>
      <arglist>(WindowEdge edge, int button, int root_x, int root_y, guint32 timestamp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize_drag</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>adb8b6731002b8ba7f2c158a16289711e</anchor>
      <arglist>(WindowEdge edge, const Glib::RefPtr&lt; Device &gt; &amp;device, int button, int root_x, int root_y, guint32 timestamp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>begin_move_drag</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>af6a0afd0f7d850e04a3cdc5d76115c56</anchor>
      <arglist>(int button, int root_x, int root_y, guint32 timestamp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>begin_move_drag</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a66fb2f244fb6848ff5be7565b3da982e</anchor>
      <arglist>(const Glib::RefPtr&lt; Device &gt; &amp;device, int button, int root_x, int root_y, guint32 timestamp)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; DragContext &gt;</type>
      <name>drag_begin</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>aba6ab22b2a602537ea30611a67b3a567</anchor>
      <arglist>(const std::vector&lt; Glib::ustring &gt; &amp;targets)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidate_rect</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>afd705d134dd0753dfd5d76bcb4988c27</anchor>
      <arglist>(const Rectangle &amp;rect, bool invalidate_children)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidate</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>ab7cec9c90d9a9738ec59a0686fc832cc</anchor>
      <arglist>(bool invalidate_children)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidate_region</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>ae0a24a414459b1754f3b021852b8f491</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Region &gt; &amp;region, bool invalidate_children=true)</arglist>
    </member>
    <member kind="function">
      <type>::Cairo::RefPtr&lt; ::Cairo::Region &gt;</type>
      <name>get_update_area</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>aef9d7b0f91152d2d7bcd24b2448d355f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeze_updates</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a15ebab2c454f75f0a5342542626cbdde</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>thaw_updates</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a128616c32cb210b0181a74d6f6bfa4a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process_updates</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a6ec5f7e788470159672511c964771285</anchor>
      <arglist>(bool update_children)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable_synchronized_configure</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a356e4e19207606e91f87346a378e1b1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>configure_finished</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>aebb7266930dad01675f28abe8e5c4cf1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_skip_taskbar_hint</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a34b9d99e30afd4e4106d66408d007fdd</anchor>
      <arglist>(bool skips_taskbar=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_skip_pager_hint</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>aa4900976eda16fc8a6280eb0bd325f8c</anchor>
      <arglist>(bool skips_pager=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_urgency_hint</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a9f22c1db8469dbe6fa8229e80d344434</anchor>
      <arglist>(bool urgent=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fullscreen</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a09a8cf95b58f8cdcc819d6064f6dc984</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_fullscreen_mode</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a3466c5082422623a3fc658e832f5d327</anchor>
      <arglist>(FullscreenMode mode)</arglist>
    </member>
    <member kind="function">
      <type>FullscreenMode</type>
      <name>get_fullscreen_mode</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>afd328f32a12b993e6c0c0a2e12bfb841</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unfullscreen</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a46d71da2107832855f8d047b3effbb67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_keep_above</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a2e961a8cba7b796e7787ab1857340ded</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_keep_below</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a1e740ff027fc23170a1fd3cd12cbd3d0</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_opacity</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>af70da6bc12c5997b6cd77f4cd14e5129</anchor>
      <arglist>(double opacity)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_accept_focus</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a5008b5bb10128e510ef8c7cc199f2151</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_accept_focus</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>acb1d7d6cbd6691a38b699a39d2eecc30</anchor>
      <arglist>(bool accept_focus=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_focus_on_map</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a8d742b2e4c4f7b616ad2ac2c794a06dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_focus_on_map</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>adf1d9237560226bc8b78ae48c9172e08</anchor>
      <arglist>(bool focus_on_map)</arglist>
    </member>
    <member kind="function">
      <type>::Cairo::RefPtr&lt; ::Cairo::Surface &gt;</type>
      <name>get_offscreen_surface</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>afe640cf31289dd0297175680803d4290</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>::Cairo::RefPtr&lt; const ::Cairo::Surface &gt;</type>
      <name>get_offscreen_surface</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a5bcc0e009b0fbe6cd43999386f00d647</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Window &gt;</type>
      <name>get_offscreen_embedder</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a50471ca056168fa50117f7458ba0fbac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Window &gt;</type>
      <name>get_offscreen_embedder</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>aba399e89ed40c05ca86508c174c57437</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_offscreen_embedder</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>abc5878a18ad2da8f7ae9af24601baff4</anchor>
      <arglist>(const Glib::RefPtr&lt; Window &gt; &amp;embedder)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>geometry_changed</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>af3885543eb728625b093cb5373734c40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_support_multidevice</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>ae030e88d59841547e9e7412458960df3</anchor>
      <arglist>(bool support_multidevice=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_support_multidevice</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>afdb959f13174296d364d74e7be12701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; FrameClock &gt;</type>
      <name>get_frame_clock</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a5deced1a8f3d7ad725110e2a464867d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const FrameClock &gt;</type>
      <name>get_frame_clock</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a6dec783fe841eba980ac8742f6a285d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>::Cairo::RefPtr&lt; ::Cairo::Region &gt;</type>
      <name>get_clip_region</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a01d520c86b845e55edd6a10ac6a9f5a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>::Cairo::RefPtr&lt; ::Cairo::Region &gt;</type>
      <name>get_visible_region</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>ac90ecf17a3116759bea5f0c10a35df77</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>::Cairo::RefPtr&lt; ::Cairo::Context &gt;</type>
      <name>create_cairo_context</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>abb9195d68d992dce25ef2cd84589d273</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_opaque_region</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>ae1816776f67ed2c29af52531021abf6d</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; const ::Cairo::Region &gt; &amp;region)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_event_compression</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a96ff108c0f44adc8d820ac7e485725b0</anchor>
      <arglist>(bool event_compression=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_event_compression</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a1fd5c800193f8062f12fb9026b77f8a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_shadow_width</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a1816712c3c68d8a05d0fc9532530eba7</anchor>
      <arglist>(int left, int right, int top, int bottom)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>show_window_menu</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a843cfb191c96c46f09919cf52b7c7daa</anchor>
      <arglist>(GdkEvent *event)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::GLContext &gt;</type>
      <name>create_gl_context</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a2f5311df11542d157e5ef95609e0b378</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; DrawingContext &gt;</type>
      <name>begin_draw_frame</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>aa608595eae20aaa04680c912ed4b0d34</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; const ::Cairo::Region &gt; &amp;region)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>end_draw_frame</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>ab48fcc22f8e7060fa7e21d775b1354a7</anchor>
      <arglist>(const Glib::RefPtr&lt; DrawingContext &gt; &amp;context)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Cursor &gt; &gt;</type>
      <name>property_cursor</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a6919a237b7776a424baf491c815d4236</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Cursor &gt; &gt;</type>
      <name>property_cursor</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>ad79baae33aeb662d46d9e73cefa774f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>aa992916a5f12325c688c86d53f52f144</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Window &gt;</type>
      <name>create</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a4895a2e0fd6d5dcc1c6f1ffe712c65a6</anchor>
      <arglist>(const Glib::RefPtr&lt; Window &gt; &amp;parent, GdkWindowAttr *attributes, int attributes_mask)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>process_all_updates</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a3fc76fbdf9948b92dacfd1a9e340184b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>set_debug_updates</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a736baef4396a9255cc820ba60245769a</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>constrain_size</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a79cdc422025b7ce7be99ef20ff20bafe</anchor>
      <arglist>(const Geometry &amp;geometry, guint flags, int width, int height, int &amp;new_width, int &amp;new_height)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Window &gt;</type>
      <name>get_default_root_window</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a67dd93686b7a8542e9eb4f464a3f4265</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Window</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>a8442ac0f1bfbfcdd748903685589fa5e</anchor>
      <arglist>(const Glib::RefPtr&lt; Window &gt; &amp;parent, GdkWindowAttr *attributes, int attributes_mask)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Window &gt;</type>
      <name>wrap</name>
      <anchorfile>classGdk_1_1Window.html</anchorfile>
      <anchor>ae98904081f47d74962592bafe3695244</anchor>
      <arglist>(GdkWindow *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Glib::Value&lt; Glib::RefPtr&lt; Gtk::RecentInfo &gt; &gt;</name>
    <filename>classGlib_1_1Value_3_01Glib_1_1RefPtr_3_01Gtk_1_1RecentInfo_01_4_01_4.html</filename>
    <base>Glib::ValueBase_Boxed</base>
    <member kind="typedef">
      <type>Glib::RefPtr&lt; Gtk::RecentInfo &gt;</type>
      <name>CppType</name>
      <anchorfile>classGlib_1_1Value_3_01Glib_1_1RefPtr_3_01Gtk_1_1RecentInfo_01_4_01_4.html</anchorfile>
      <anchor>ace5bee59af50db7dcddd7844ce291f0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GtkRecentInfo *</type>
      <name>CType</name>
      <anchorfile>classGlib_1_1Value_3_01Glib_1_1RefPtr_3_01Gtk_1_1RecentInfo_01_4_01_4.html</anchorfile>
      <anchor>a03c3634552b0e7ab76fab4f3bd50b8c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGlib_1_1Value_3_01Glib_1_1RefPtr_3_01Gtk_1_1RecentInfo_01_4_01_4.html</anchorfile>
      <anchor>a1d0b4d0dff9c2cbd10a9c1557a3a805b</anchor>
      <arglist>(const CppType &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>CppType</type>
      <name>get</name>
      <anchorfile>classGlib_1_1Value_3_01Glib_1_1RefPtr_3_01Gtk_1_1RecentInfo_01_4_01_4.html</anchorfile>
      <anchor>a724a229e2fb3af84c2eabe632e9d15ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>value_type</name>
      <anchorfile>classGlib_1_1Value_3_01Glib_1_1RefPtr_3_01Gtk_1_1RecentInfo_01_4_01_4.html</anchorfile>
      <anchor>afb8299f863bf79eef3768c25fa616369</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Glib::Value&lt; Glib::RefPtr&lt; Gtk::TargetList &gt; &gt;</name>
    <filename>classGlib_1_1Value_3_01Glib_1_1RefPtr_3_01Gtk_1_1TargetList_01_4_01_4.html</filename>
    <base>Glib::ValueBase_Boxed</base>
    <member kind="typedef">
      <type>Glib::RefPtr&lt; Gtk::TargetList &gt;</type>
      <name>CppType</name>
      <anchorfile>classGlib_1_1Value_3_01Glib_1_1RefPtr_3_01Gtk_1_1TargetList_01_4_01_4.html</anchorfile>
      <anchor>ae2605b55534d2e4d7efb699a04f03d2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GtkTargetList *</type>
      <name>CType</name>
      <anchorfile>classGlib_1_1Value_3_01Glib_1_1RefPtr_3_01Gtk_1_1TargetList_01_4_01_4.html</anchorfile>
      <anchor>a46f48bbc0c22e906bf8501c4a01a9faf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGlib_1_1Value_3_01Glib_1_1RefPtr_3_01Gtk_1_1TargetList_01_4_01_4.html</anchorfile>
      <anchor>a139a11438b07eb313b66185564d4f8c7</anchor>
      <arglist>(const CppType &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>CppType</type>
      <name>get</name>
      <anchorfile>classGlib_1_1Value_3_01Glib_1_1RefPtr_3_01Gtk_1_1TargetList_01_4_01_4.html</anchorfile>
      <anchor>a790ca57daeed76945e8d8eff36903643</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>value_type</name>
      <anchorfile>classGlib_1_1Value_3_01Glib_1_1RefPtr_3_01Gtk_1_1TargetList_01_4_01_4.html</anchorfile>
      <anchor>a0f40bcb704db77ad3169ccec11e39028</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Glib::Value&lt;::Cairo::RefPtr&lt;::Cairo::Surface &gt; &gt;</name>
    <filename>classGlib_1_1Value_3_1_1Cairo_1_1RefPtr_3_1_1Cairo_1_1Surface_01_4_01_4.html</filename>
    <base>Glib::ValueBase_Boxed</base>
    <member kind="typedef">
      <type>::Cairo::Surface</type>
      <name>T</name>
      <anchorfile>classGlib_1_1Value_3_1_1Cairo_1_1RefPtr_3_1_1Cairo_1_1Surface_01_4_01_4.html</anchorfile>
      <anchor>a3d7297eacb4f9a3465798603f6dd6252</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::Cairo::RefPtr&lt; T &gt;</type>
      <name>CppType</name>
      <anchorfile>classGlib_1_1Value_3_1_1Cairo_1_1RefPtr_3_1_1Cairo_1_1Surface_01_4_01_4.html</anchorfile>
      <anchor>a5060a990a20953d7a4b5b352cb0b0c98</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T::cobject</type>
      <name>CType</name>
      <anchorfile>classGlib_1_1Value_3_1_1Cairo_1_1RefPtr_3_1_1Cairo_1_1Surface_01_4_01_4.html</anchorfile>
      <anchor>a4d247fe9c22ad44fa35fed8c7e3c4f41</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGlib_1_1Value_3_1_1Cairo_1_1RefPtr_3_1_1Cairo_1_1Surface_01_4_01_4.html</anchorfile>
      <anchor>ada1af239dc73ab00e868d89056049cd5</anchor>
      <arglist>(const CppType &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>CppType</type>
      <name>get</name>
      <anchorfile>classGlib_1_1Value_3_1_1Cairo_1_1RefPtr_3_1_1Cairo_1_1Surface_01_4_01_4.html</anchorfile>
      <anchor>aeb864e2c277dba291864d21c1af743cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>value_type</name>
      <anchorfile>classGlib_1_1Value_3_1_1Cairo_1_1RefPtr_3_1_1Cairo_1_1Surface_01_4_01_4.html</anchorfile>
      <anchor>a0418d87dc533e6a893c33d2efe02f254</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::AboutDialog</name>
    <filename>classGtk_1_1AboutDialog.html</filename>
    <base>Gtk::Dialog</base>
    <member kind="function">
      <type></type>
      <name>AboutDialog</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a39d0f0369a03e1f6d7d3f686600dc562</anchor>
      <arglist>(AboutDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AboutDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>ad0dff15c0d513f1691ad7bba9e212f81</anchor>
      <arglist>(AboutDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AboutDialog</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a5583d0d373df4b47f68941717069ea91</anchor>
      <arglist>(const AboutDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AboutDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a89f927e0466e750b9ea1690345a6bf60</anchor>
      <arglist>(const AboutDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AboutDialog</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a1e705a5eb1b1dc721791ccb54b4d6d50</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkAboutDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a154a7b18752a8770891c424aee419763</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkAboutDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a72c054536026167d3c2b5fbb5773faff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AboutDialog</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a93f3de1d206303a208b5eaec8cd935d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AboutDialog</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>ab283d314678e33c6944329a17b35ee90</anchor>
      <arglist>(bool use_header_bar)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_program_name</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>afbef4fd77af6f815e7108364c3c1d381</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_program_name</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a7a53fe5b7fcc8061a096a8183ae117e9</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_version</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a5ad52d2ff18abccf74f3eba51366a72a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_version</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a46ba72a65a81ed6e528730de0fc02e29</anchor>
      <arglist>(const Glib::ustring &amp;version)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_copyright</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>ad2eee859178bc4265efb9661e7b4fde2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_copyright</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a3a7889f5da5f0d92495628fa9d67580a</anchor>
      <arglist>(const Glib::ustring &amp;copyright)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_comments</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>aef0a9ea83b766b743bc3dacb7981068f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_comments</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a90e175fa9d686f78f793dffe74fa9a64</anchor>
      <arglist>(const Glib::ustring &amp;comments)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_license</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a2947b9c41fd03b1c80d7be655b1d25a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_license</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>ace39ba43998ef0962da1f02830ab322c</anchor>
      <arglist>(const Glib::ustring &amp;license)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_license</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>add1520455f44bded57344a1c6394ce14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>License</type>
      <name>get_license_type</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a8992e9d04edf82d1e64bf2ab2c3b7268</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_license_type</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a9b89d7db70042a375d34c33999f3adf3</anchor>
      <arglist>(License license_type)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_website</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a383d689bdfbb11da01bb6e492a39ed96</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_website</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a34ba00172f995f95d9b70984df76b607</anchor>
      <arglist>(const Glib::ustring &amp;website)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_website_label</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a055e9bc4fb24f47480ac4589600d7615</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_website_label</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>aa3d04115d068363be314414899703caa</anchor>
      <arglist>(const Glib::ustring &amp;website_label)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>get_authors</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>aeb8f78370a1f86d09683ae26ee717e5b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_authors</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a8b547d3fe5d33ddd587931a5b46be007</anchor>
      <arglist>(const std::vector&lt; Glib::ustring &gt; &amp;authors) const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>get_documenters</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a19c17409ef47ab2ee7aacac0356ef1be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_documenters</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a4e361487d99c5dd83b312ae68a9049b0</anchor>
      <arglist>(const std::vector&lt; Glib::ustring &gt; &amp;documenters)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>get_artists</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a33734370166cdc3c710b39015f255229</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_artists</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>afef0904b49ea5cca887efd4bc90b5491</anchor>
      <arglist>(const std::vector&lt; Glib::ustring &gt; &amp;artists)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_translator_credits</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>aeda6f20985d1fa0f1c635e0f382074e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_translator_credits</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>afbe5045ba430d8e882ec9753eece7a01</anchor>
      <arglist>(const Glib::ustring &amp;translator_credits)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>get_logo</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>aad6620efface5326a3acf57113e36bc9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Pixbuf &gt;</type>
      <name>get_logo</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a06d80e08d2203100e3d11855a8d75c13</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_logo</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>ad8087eac6ce1894b41f5f7215210703a</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;logo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_logo_default</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a4e6cdd7f8df55e4f84e7067a7105f74c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_logo_icon_name</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a8c19dc25f12b2b5aeba4b45c2af957b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_logo_icon_name</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a8a22c3c62a25d80433276a5f1e8e79e6</anchor>
      <arglist>(const Glib::ustring &amp;icon_name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_wrap_license</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a4563a8f18b7595f055d634203dede425</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_wrap_license</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>ad05699f5a01a4084f06a07aeaefcc0a1</anchor>
      <arglist>(bool wrap_license)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_credit_section</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a98874e2a3b6b83e400dc528a1dc0d5b4</anchor>
      <arglist>(const Glib::ustring &amp;section_name, const std::vector&lt; Glib::ustring &gt; &amp;people)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_program_name</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>aef1fe3cf0b1e050c3d19c5286be00f94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_program_name</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a01b37859e73d7b5b43db60a8787b544a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_version</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a768a9a017a4d833e851682db9915357e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_version</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a2424ff8dd602b3dd0f1f7929dd0f7eda</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_copyright</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>aff17aa4c79b3d392b50ff7073c9465a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_copyright</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a92a9c96183ffbeaa86346c7b0f823f5e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_comments</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a67c8b3823b2c0462da00240b9ef3e863</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_comments</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a1e0ef165690abc8c0c384f8de8ca2e80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_website</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a3ab156130c303fe4c9da6c009f2f80ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_website</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>ad2fd5cdc98f0bc12e942bb62f89cc5d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_website_label</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a95f6eacfbebbfb06a5a4c6858a05bbde</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_website_label</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a7b50b6a86e38c20e99bc6ad59feda9a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_license</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a5caba781a4fc15505c471844dcb5a0fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_license</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a49ddf1fd6b4412781ec74de329a26bae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; License &gt;</type>
      <name>property_license_type</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a5fea7602311347436bb4fb390e5dea30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; License &gt;</type>
      <name>property_license_type</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>aaa7fd5ffa19b6986c3128af68b3b3eeb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; std::vector&lt; Glib::ustring &gt; &gt;</type>
      <name>property_authors</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a601ba4926bf675bfd5396e3b3476f66c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; std::vector&lt; Glib::ustring &gt; &gt;</type>
      <name>property_authors</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a3c680c2f4be2c9b4cf1a71bf08bee186</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; std::vector&lt; Glib::ustring &gt; &gt;</type>
      <name>property_documenters</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>aad501c64622b208b93ab2ee42c18efce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; std::vector&lt; Glib::ustring &gt; &gt;</type>
      <name>property_documenters</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>add8c4c6bae52a6578bd301592435616b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; std::vector&lt; Glib::ustring &gt; &gt;</type>
      <name>property_translator_credits</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a9bb8e94c7aff30ed0973120165a9705d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; std::vector&lt; Glib::ustring &gt; &gt;</type>
      <name>property_translator_credits</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a4cbd8249798836076e8143bbbbfaf33a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; std::vector&lt; Glib::ustring &gt; &gt;</type>
      <name>property_artists</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a041780902a44e06c11d992d82271ea6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; std::vector&lt; Glib::ustring &gt; &gt;</type>
      <name>property_artists</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a10edfae11b84769483cecb901bdbbd78</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gdk::Pixbuf &gt; &gt;</type>
      <name>property_logo</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>acd77c1e72d69b1b7dcf2380f03601910</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::Pixbuf &gt; &gt;</type>
      <name>property_logo</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a9e0bcae480ac466394b4a8da6b6cdd32</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_logo_icon_name</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>ad0e10a4e2eedef2d998ae53dfbb52aa7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_logo_icon_name</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a61db7e1db6a4fd4234743c21cd44e7c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_wrap_license</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a92ba02fbec2cb56bedb3bb9e3cc09b0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_wrap_license</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>ad1d52502165d0a3116e37b5bb3c2e2c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, const std::string &amp; &gt;</type>
      <name>signal_activate_link</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a705d0addbe9120ef0c0db62b205d36ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a139f10a3ea108791f646365d50ce2a30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_activate_link</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>a5871f5692ccda7f249a256c6d009ebb1</anchor>
      <arglist>(const std::string &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::AboutDialog *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1AboutDialog.html</anchorfile>
      <anchor>aa5d5873b3e3da742bcefe338fd47d47b</anchor>
      <arglist>(GtkAboutDialog *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::AccelGroup</name>
    <filename>classGtk_1_1AccelGroup.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>AccelGroup</name>
      <anchorfile>classGtk_1_1AccelGroup.html</anchorfile>
      <anchor>a8c40aad453e6f55c2dfc536acac0a58f</anchor>
      <arglist>(AccelGroup &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AccelGroup &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1AccelGroup.html</anchorfile>
      <anchor>aa87d93859f68e68c9c92785a06f596c6</anchor>
      <arglist>(AccelGroup &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AccelGroup</name>
      <anchorfile>classGtk_1_1AccelGroup.html</anchorfile>
      <anchor>afa8c7cc8a6e26fb5cb507bcfeb3beecb</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkAccelGroup *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1AccelGroup.html</anchorfile>
      <anchor>ae8ca2f2497370a596bdf0449b0e098ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkAccelGroup *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1AccelGroup.html</anchorfile>
      <anchor>a99694998d55ecd7fabc812d631a77fea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkAccelGroup *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1AccelGroup.html</anchorfile>
      <anchor>a41105a95dd1df662b3e7f24c5b554864</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_is_locked</name>
      <anchorfile>classGtk_1_1AccelGroup.html</anchorfile>
      <anchor>acf8fe4511f6a53f163b7f2d8ca72e7ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Gdk::ModifierType</type>
      <name>get_modifier_mask</name>
      <anchorfile>classGtk_1_1AccelGroup.html</anchorfile>
      <anchor>afcae77f222e1537309e1721619f68dde</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lock</name>
      <anchorfile>classGtk_1_1AccelGroup.html</anchorfile>
      <anchor>ae126cbabe5dd6262e341ee9b8be0e709</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlock</name>
      <anchorfile>classGtk_1_1AccelGroup.html</anchorfile>
      <anchor>af164d66f76728aa1606f9eddde5a7ef0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disconnect_key</name>
      <anchorfile>classGtk_1_1AccelGroup.html</anchorfile>
      <anchor>a5fa48d11aeeac0bd1e680e523dad727b</anchor>
      <arglist>(guint accel_key, Gdk::ModifierType accel_mods)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>activate</name>
      <anchorfile>classGtk_1_1AccelGroup.html</anchorfile>
      <anchor>a2e355f6b213074e91efc9f05204e5002</anchor>
      <arglist>(GQuark accel_quark, const Glib::RefPtr&lt; Glib::Object &gt; &amp;acceleratable, guint accel_key, Gdk::ModifierType accel_mods)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, const Glib::RefPtr&lt; Glib::Object &gt; &amp;, guint, Gdk::ModifierType &gt;</type>
      <name>signal_accel_activate</name>
      <anchorfile>classGtk_1_1AccelGroup.html</anchorfile>
      <anchor>a153caf769908d7d0dd34caec214380eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, guint, Gdk::ModifierType, GClosure * &gt;</type>
      <name>signal_accel_changed</name>
      <anchorfile>classGtk_1_1AccelGroup.html</anchorfile>
      <anchor>a4e8de47ed17941a9707cad6a0890f253</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxyDetailedAnyType&lt; void, guint, Gdk::ModifierType, GClosure * &gt;</type>
      <name>signal_accel_changed</name>
      <anchorfile>classGtk_1_1AccelGroup.html</anchorfile>
      <anchor>a15fa536831ec327029b5c7f67515175b</anchor>
      <arglist>(const Glib::ustring &amp;accel_name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_is_locked</name>
      <anchorfile>classGtk_1_1AccelGroup.html</anchorfile>
      <anchor>abfc005881335bd5b7df26b1a46c6e56a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::ModifierType &gt;</type>
      <name>property_modifier_mask</name>
      <anchorfile>classGtk_1_1AccelGroup.html</anchorfile>
      <anchor>a290dd055a9a6417cbbcde51fdc54af05</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1AccelGroup.html</anchorfile>
      <anchor>a418a69a8373b3473ffd867cfd60aeec9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; AccelGroup &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1AccelGroup.html</anchorfile>
      <anchor>a935480b98985d9a8c2905e68eafae839</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>valid</name>
      <anchorfile>classGtk_1_1AccelGroup.html</anchorfile>
      <anchor>a4c5da10b8e3b51dcd4fe403959e2d4a3</anchor>
      <arglist>(guint keyval, Gdk::ModifierType modifiers)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>parse</name>
      <anchorfile>classGtk_1_1AccelGroup.html</anchorfile>
      <anchor>a0035b04d82a93f3fb4ed26812da9144a</anchor>
      <arglist>(const Glib::ustring &amp;accelerator, guint &amp;accelerator_key, Gdk::ModifierType &amp;accelerator_mods)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::ustring</type>
      <name>name</name>
      <anchorfile>classGtk_1_1AccelGroup.html</anchorfile>
      <anchor>a173b659482b4abc35862ae3c8d0645d3</anchor>
      <arglist>(guint accelerator_key, Gdk::ModifierType accelerator_mods)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::ustring</type>
      <name>get_label</name>
      <anchorfile>classGtk_1_1AccelGroup.html</anchorfile>
      <anchor>af182fea262e6d23952ebc49d8e1a6fba</anchor>
      <arglist>(guint accelerator_key, Gdk::ModifierType accelerator_mods)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>set_default_mod_mask</name>
      <anchorfile>classGtk_1_1AccelGroup.html</anchorfile>
      <anchor>a42258983a28aa7f0c4ba65b1abf9806c</anchor>
      <arglist>(Gdk::ModifierType default_mod_mask)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Gdk::ModifierType</type>
      <name>get_default_mod_mask</name>
      <anchorfile>classGtk_1_1AccelGroup.html</anchorfile>
      <anchor>a1e2f9b75e06dc4d3e915261e351525d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>AccelGroup</name>
      <anchorfile>classGtk_1_1AccelGroup.html</anchorfile>
      <anchor>aea3002ff86e240ca8e95eba9bb8ffc2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::AccelGroup &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1AccelGroup.html</anchorfile>
      <anchor>a6dd6cb005299768bbfc173eb56319fc7</anchor>
      <arglist>(GtkAccelGroup *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::AccelKey</name>
    <filename>classGtk_1_1AccelKey.html</filename>
    <member kind="function">
      <type></type>
      <name>AccelKey</name>
      <anchorfile>classGtk_1_1AccelKey.html</anchorfile>
      <anchor>a1a3ff31a0cb67142659342eb9896feb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AccelKey</name>
      <anchorfile>classGtk_1_1AccelKey.html</anchorfile>
      <anchor>ac615d97162fa1814e7e0b6342c1bd622</anchor>
      <arglist>(guint accel_key, Gdk::ModifierType accel_mods, const Glib::ustring &amp;accel_path=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AccelKey</name>
      <anchorfile>classGtk_1_1AccelKey.html</anchorfile>
      <anchor>aaa4ca433f961ba40ee5a501f2b818d5b</anchor>
      <arglist>(const Glib::ustring &amp;accelerator, const Glib::ustring &amp;accel_path=Glib::ustring())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AccelKey</name>
      <anchorfile>classGtk_1_1AccelKey.html</anchorfile>
      <anchor>a26e7c5af7f5bdfa1948d03c418c1755e</anchor>
      <arglist>(const AccelKey &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>AccelKey &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1AccelKey.html</anchorfile>
      <anchor>abe7f9eebbe73ed3a30bc5942b3027eac</anchor>
      <arglist>(const AccelKey &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classGtk_1_1AccelKey.html</anchorfile>
      <anchor>aa3b1e0719428cce25aad0c88d9d4818b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_key</name>
      <anchorfile>classGtk_1_1AccelKey.html</anchorfile>
      <anchor>a75f3a07ffe5b3ec113e88ba4f9c37f6c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Gdk::ModifierType</type>
      <name>get_mod</name>
      <anchorfile>classGtk_1_1AccelKey.html</anchorfile>
      <anchor>a63f99a124e77cb4601c10857560bf020</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_path</name>
      <anchorfile>classGtk_1_1AccelKey.html</anchorfile>
      <anchor>a1d6d84467e3920a6af204f511dceb6d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_abbrev</name>
      <anchorfile>classGtk_1_1AccelKey.html</anchorfile>
      <anchor>a2ec5c2905850275fbd2a6f39402366fe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>guint</type>
      <name>key_</name>
      <anchorfile>classGtk_1_1AccelKey.html</anchorfile>
      <anchor>ad29fd938a58696299af2fc3a5403940d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Gdk::ModifierType</type>
      <name>mod_</name>
      <anchorfile>classGtk_1_1AccelKey.html</anchorfile>
      <anchor>a884a3b68a6860a609b0cbc9b988dfd03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Glib::ustring</type>
      <name>path_</name>
      <anchorfile>classGtk_1_1AccelKey.html</anchorfile>
      <anchor>a115c69bb0f29e66757db3dfd3ae78fa6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::AccelLabel</name>
    <filename>classGtk_1_1AccelLabel.html</filename>
    <base>Gtk::Label</base>
    <member kind="function">
      <type></type>
      <name>AccelLabel</name>
      <anchorfile>classGtk_1_1AccelLabel.html</anchorfile>
      <anchor>aa733711e15cae35b7377e70a75669c57</anchor>
      <arglist>(AccelLabel &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AccelLabel &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1AccelLabel.html</anchorfile>
      <anchor>ae2b64dd730a0cf3830f5ec21c7dd66e0</anchor>
      <arglist>(AccelLabel &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AccelLabel</name>
      <anchorfile>classGtk_1_1AccelLabel.html</anchorfile>
      <anchor>affcc5437d58d6c7d1d5c43db566ae9d1</anchor>
      <arglist>(const AccelLabel &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AccelLabel &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1AccelLabel.html</anchorfile>
      <anchor>a1565f432b1c650d0c35349b046da9ecf</anchor>
      <arglist>(const AccelLabel &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AccelLabel</name>
      <anchorfile>classGtk_1_1AccelLabel.html</anchorfile>
      <anchor>ac3f3efd622255e6462d3812db0c63a41</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkAccelLabel *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1AccelLabel.html</anchorfile>
      <anchor>a5fbd19abe44e2f850b3f8bcc2257ccd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkAccelLabel *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1AccelLabel.html</anchorfile>
      <anchor>ac04ee56b0e32063a9b2594b372227608</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AccelLabel</name>
      <anchorfile>classGtk_1_1AccelLabel.html</anchorfile>
      <anchor>a01e589afec7f99f6abb13e827be4a76f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AccelLabel</name>
      <anchorfile>classGtk_1_1AccelLabel.html</anchorfile>
      <anchor>aaf9f7daf8891be167d3bd956aa30fa82</anchor>
      <arglist>(const Glib::ustring &amp;label, bool mnemonic=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_accel_widget</name>
      <anchorfile>classGtk_1_1AccelLabel.html</anchorfile>
      <anchor>aecf1b97252d576dc7a5176f6e6988667</anchor>
      <arglist>(const Widget &amp;accel_widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_accel_widget</name>
      <anchorfile>classGtk_1_1AccelLabel.html</anchorfile>
      <anchor>a1dc2170ba4199d9e29fda010123fe326</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_accel_widget</name>
      <anchorfile>classGtk_1_1AccelLabel.html</anchorfile>
      <anchor>ab2f31db74d8902846e9dedea6141c5d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_accel_widget</name>
      <anchorfile>classGtk_1_1AccelLabel.html</anchorfile>
      <anchor>ad609c595f59ab4ac1364fa09db2b944d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_accel_width</name>
      <anchorfile>classGtk_1_1AccelLabel.html</anchorfile>
      <anchor>a0154593e55afadbced586b0ffaa0af9a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>refetch</name>
      <anchorfile>classGtk_1_1AccelLabel.html</anchorfile>
      <anchor>aebe3c1bbcf21e50b2088f85528d76a83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_accel</name>
      <anchorfile>classGtk_1_1AccelLabel.html</anchorfile>
      <anchor>a7194086f17345c8d5b3cfe339aafd2d1</anchor>
      <arglist>(guint accelerator_key, Gdk::ModifierType accelerator_mods)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_accel</name>
      <anchorfile>classGtk_1_1AccelLabel.html</anchorfile>
      <anchor>a5cae531f52ccf2f2fed2896f911f1e2e</anchor>
      <arglist>(guint &amp;accelerator_key, Gdk::ModifierType &amp;accelerator_mods)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gtk::Widget * &gt;</type>
      <name>property_accel_widget</name>
      <anchorfile>classGtk_1_1AccelLabel.html</anchorfile>
      <anchor>a6de117d74bb973e19b7bd78997dae04e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gtk::Widget * &gt;</type>
      <name>property_accel_widget</name>
      <anchorfile>classGtk_1_1AccelLabel.html</anchorfile>
      <anchor>ab4b498818661421ba60a70df38c07671</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1AccelLabel.html</anchorfile>
      <anchor>a392d1435c790f08c66231ba512f612df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::AccelLabel *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1AccelLabel.html</anchorfile>
      <anchor>ac41d89481b7d145d6b8531dcb8826202</anchor>
      <arglist>(GtkAccelLabel *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Action</name>
    <filename>classGtk_1_1Action.html</filename>
    <base>Glib::Object</base>
    <base>Gtk::Buildable</base>
    <member kind="typedef">
      <type>sigc::slot&lt; void &gt;</type>
      <name>SlotActivate</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a5138503f3592a0fa8625f5058207d807</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Action</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a86be4a359fd254220052735986c19702</anchor>
      <arglist>(Action &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Action &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a04e635985c5a4765589f013c98ec4bd4</anchor>
      <arglist>(Action &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Action</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a95e5ed198b98a6132f8cd74a4731dbb2</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkAction *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a225dd5a8ec7a7fd862a279538db1835f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkAction *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a26fdb0ae841261537abc535ff19dbec2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkAction *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a79b2040ea1ba4b6c446e5bc26b28486c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a84538309bf4efb4965d25eae5abb185e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_sensitive</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a70220b37e73d268911599ca5061744d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_sensitive</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a60323f3a9462087883e3243e7c3e21f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sensitive</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>ac6af572728c7b5db1649f39ece5ad76e</anchor>
      <arglist>(bool sensitive=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_visible</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>ae28a58bf5be245fc02b069b108117345</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_visible</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a84741a146865e011ff76e5cff56a1663</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visible</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a172c1c3b80690671a3ac672034e0084d</anchor>
      <arglist>(bool visible=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>activate</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a00af03175043e1a41ada3f0f18723674</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Image *</type>
      <name>create_icon</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a4955afbc214b9a1685cd02b44bc3bc1c</anchor>
      <arglist>(IconSize icon_size)</arglist>
    </member>
    <member kind="function">
      <type>MenuItem *</type>
      <name>create_menu_item</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a2900998d5d0adb5249393f0f919c2e21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ToolItem *</type>
      <name>create_tool_item</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a995de6ff14f60319bc7c9fe52dcc811d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Menu *</type>
      <name>create_menu</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>ac3c7a44b9cb73d9c0d2dfba6607333e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Widget * &gt;</type>
      <name>get_proxies</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a95a99561245b380cd1748c415eaca4fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const Widget * &gt;</type>
      <name>get_proxies</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a9422def839c79bd9a0774cdc88a309b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect_accelerator</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a98aff2a881a326b2d477d060e6ff0de7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disconnect_accelerator</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>aeb9d3535d153b859162a1db21fec1ca5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_accel_path</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>aa4ab07ca5b166114c4179a9ad08895fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_activate</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a95c821e29ce365f5681e7cbd994d1ae6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_accel_path</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a59e3390e4a456553a97536bcae625ff1</anchor>
      <arglist>(const Glib::ustring &amp;accel_path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_accel_group</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a6bbd1d31aac64ef53be04c115a78dc03</anchor>
      <arglist>(const Glib::RefPtr&lt; AccelGroup &gt; &amp;accel_group)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_label</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a9b79fa78584605e95c78842a624d316f</anchor>
      <arglist>(const Glib::ustring &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_label</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>ae8634a92ce90e899b9d8596457cf7889</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_short_label</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a74a40c4f7431d93ad889e7d4040fa62c</anchor>
      <arglist>(const Glib::ustring &amp;short_label)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_short_label</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>ab86f05267ce2432dafc2f7de8f6a30d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tooltip</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a41aae93abf243459b56bde780c03799e</anchor>
      <arglist>(const Glib::ustring &amp;tooltip)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_tooltip</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a6a1a88cae2a96879acf77c6e0c0c37fe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_stock_id</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>ab2dd069da31693e2e5fb9af44d5ecd8c</anchor>
      <arglist>(const StockID &amp;stock_id)</arglist>
    </member>
    <member kind="function">
      <type>StockID</type>
      <name>get_stock_id</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a827e5bfa59701f437cad23163eb38663</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_gicon</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a90416e0b2157be6a4929ddaac7c4f8c2</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::Icon &gt; &amp;icon)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::Icon &gt;</type>
      <name>get_gicon</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>afe608d23e306330f5efdb678ac5c1c53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::Icon &gt;</type>
      <name>get_gicon</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a9b2841695daf32194f505e69fa11675f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_name</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a92e1e2a6676cbc6b03df3a761d177aeb</anchor>
      <arglist>(const Glib::ustring &amp;icon_name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_icon_name</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>abd29cabc60a3353f3fd16824648fe6c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visible_horizontal</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>ab580d144d003ca4aa3ab3828d062aee0</anchor>
      <arglist>(bool visible_horizontal=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_visible_horizontal</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>ad518c8d02c06444eab0d614ab135517c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visible_vertical</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a8bda01730a7a8a240a87e617447ab109</anchor>
      <arglist>(bool visible_vertical=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_visible_vertical</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>ac4ab7c32221b66e708fd65edf499c182</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_is_important</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>ae204fab5cd660944e9486d479da34c58</anchor>
      <arglist>(bool is_important=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_is_important</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a134b435e26523b4ba08093ea449bf1b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_always_show_image</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>aa27c43c73d6c0a0ee9958eba002ba86e</anchor>
      <arglist>(bool always_show=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_always_show_image</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>abcf9b097c90ecfa9c06dd83d80e9b729</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>block_activate</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a159bd4acb2005f6b91ec438e1e49815e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unblock_activate</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>ae8f7374140ee171b9bf83357c126ee87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_name</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a589750d664390902ff3522243e7626ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_label</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a4a2e03f37bb6bce15e460a1ac9fcf0bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_label</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a25a98535335e08e904dd671eda364674</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_short_label</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>ad5313efc706f68a5e583e859e35a5767</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_short_label</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a99a46cefe93bc548eb19145caa1d0729</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_tooltip</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a95a5b93f8ec0c7866ec3bf80c2904bf0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_tooltip</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>af4af6a920035ded592ac0d104f555f0e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; StockID &gt;</type>
      <name>property_stock_id</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>ab1ddb4cbe5110b686616ab25f3f7517f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; StockID &gt;</type>
      <name>property_stock_id</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>acc146d0421a724e338bcf0ef6eca3268</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::Icon &gt; &gt;</type>
      <name>property_gicon</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a9608f8d0561d24a02f91c9d6eda34e8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::Icon &gt; &gt;</type>
      <name>property_gicon</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>adbb8e92062e17eb24acc6df1ab0ce514</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_icon_name</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a3f1354463f6bcf80dea0c0fc29a960bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_icon_name</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a72ab304994f5dfcea6994cc70323f825</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_visible_horizontal</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a15df45d85319bdfb1b40c08261c2ae09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_visible_horizontal</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>afb3ebd7e3d74d201e4ba2781d1ba10b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_visible_vertical</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a51c5f3e5b1f968395d3c0e31fedb5514</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_visible_vertical</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a54bb8cf0b85f88dfbe9f895ee1811bf5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_visible_overflown</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a5a875cfc1e681738836972447cd98312</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_visible_overflown</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a9e4911244a2e5e451e4906e1e3d168e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_is_important</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a9fa7237edfb9167a70ccf5f0a6dbf42e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_is_important</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a4932a882a4cee6d17e770dc338ffb226</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_hide_if_empty</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>ad3b8b7e1419efb61a1fc95d5a6890ef6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_hide_if_empty</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>ad553c8f86abd4d96026f2ba3c714144c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_sensitive</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a0878b21aaab037ef1db19751fffa101d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_sensitive</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a59563227b89f4db90bb39eed5d180ef9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_visible</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>abfe5af584a77fc877868292bd5e01714</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_visible</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>aecf4174a2350a240437c707220978567</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; ActionGroup &gt; &gt;</type>
      <name>property_action_group</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a41d1c93bb7621b696d022bf2ddb5eb9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; ActionGroup &gt; &gt;</type>
      <name>property_action_group</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a37979a6e6dd73b25deaac23f5647cf77</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_always_show_image</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a57383726bf9be641573c56d8e6516496</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_always_show_image</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>ab5c75a84a1c347f6be34c5e85f022997</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a5dfe000666a2877142284d357956ea53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Action &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>ad6fb66a24f9413bcc114ed9a20a8b73c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Action &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>aebf25ebf0ec850314ad85e4cfde9173b</anchor>
      <arglist>(const Glib::ustring &amp;name, const Glib::ustring &amp;label=Glib::ustring(), const Glib::ustring &amp;tooltip=Glib::ustring())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Action &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a243f002b8d3528e4876cb23225fa757b</anchor>
      <arglist>(const Glib::ustring &amp;name, const Gtk::StockID &amp;stock_id, const Glib::ustring &amp;label=Glib::ustring(), const Glib::ustring &amp;tooltip=Glib::ustring())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Action &gt;</type>
      <name>create_with_icon_name</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a934c93ccc254faa8b8513a2077ca63e9</anchor>
      <arglist>(const Glib::ustring &amp;name, const Glib::ustring &amp;icon_name, const Glib::ustring &amp;label, const Glib::ustring &amp;tooltip)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Action</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>ad5bd93ab0357990cfb8fbf6049ec991a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Action</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a87bcdb56cff934d15eb23b47c290e3f0</anchor>
      <arglist>(const Glib::ustring &amp;name, const StockID &amp;stock_id=StockID(), const Glib::ustring &amp;label=Glib::ustring(), const Glib::ustring &amp;tooltip=Glib::ustring())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Action</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a84024d577410832e4d384077a079df39</anchor>
      <arglist>(const Glib::ustring &amp;name, const Glib::ustring &amp;icon_name, const Glib::ustring &amp;label=Glib::ustring(), const Glib::ustring &amp;tooltip=Glib::ustring())</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Widget *</type>
      <name>create_menu_item_vfunc</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a573e7c969a3141707649d4a1b37cb359</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Widget *</type>
      <name>create_tool_item_vfunc</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a4bcc92576e6ee74d8ea47e0589daa826</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>connect_proxy_vfunc</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>aa805f1a04326fdd423aea01f757ccb0b</anchor>
      <arglist>(Widget *proxy)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>disconnect_proxy_vfunc</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>a59c8ad3e7b16ab5a84eeecf31f580738</anchor>
      <arglist>(Widget *proxy)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_activate</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>ae94054a2ed6365fefcdf850b8835715c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Action &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Action.html</anchorfile>
      <anchor>aadd65dec7050e69be7e195d5a563f057</anchor>
      <arglist>(GtkAction *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Actionable</name>
    <filename>classGtk_1_1Actionable.html</filename>
    <base>Glib::Interface</base>
    <member kind="function">
      <type></type>
      <name>Actionable</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>a12b7a59d171da682d7589ee26044a2cb</anchor>
      <arglist>(Actionable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Actionable &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>aa7729fce25ea2543285fc56bc3eabae8</anchor>
      <arglist>(Actionable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Actionable</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>a3f74643abd35dd42ac22f182d04d3c9b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkActionable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>a375aae8d2cdb58867689450482a491a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkActionable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>a368f786837416afe8cb30c7d628aa86b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_action_name</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>ac752c5aeb2e432dfcc28e44f6389f493</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_action_name</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>a223ed1e1c45daf3d1191d07150dd9ee1</anchor>
      <arglist>(const Glib::ustring &amp;action_name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::VariantBase</type>
      <name>get_action_target_value</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>a15f974d3408629cddd2516e57b8481b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Glib::VariantBase</type>
      <name>get_action_target_value</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>aba562e5cd556800b10e93c09b867aa0a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_action_target_value</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>a965dbe405c294039a9cb4a081483ba1d</anchor>
      <arglist>(const Glib::VariantBase &amp;target_value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_detailed_action_name</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>a78e2d6b01cc8b6f1fd80a5cb7f0c9536</anchor>
      <arglist>(const Glib::ustring &amp;detailed_action_name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_action_name</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>abf6dd9c25556577d239b31ef35cc205b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_action_name</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>a7bf9ffd7d545031d3c3f4275ebf30ca2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::VariantBase &gt;</type>
      <name>property_action_target</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>a1f3f45de00fd93c40a82ac79e39ed006</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::VariantBase &gt;</type>
      <name>property_action_target</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>a1a06c9efdc1baf87f44e958361e36e74</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Glib::ustring</type>
      <name>get_action_name_vfunc</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>aca9cae3b174a4cbc485f8ce24ed101ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_action_name_vfunc</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>a45b52f602357b31f39ca72e5c1a4fba4</anchor>
      <arglist>(const Glib::ustring &amp;action_name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Glib::VariantBase</type>
      <name>get_action_target_value_vfunc</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>adad9b4d9cc0bab855647537918d266d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_action_target_value_vfunc</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>aab5972b6f2b717ef582e64f151a32045</anchor>
      <arglist>(const Glib::VariantBase &amp;action_target_value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>a4245615913e22b7da65043bf2afdd2a5</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>aa8e3b577137e91b92b3c67f87acb8a71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Actionable</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>acb9d8d2f5662c92b55fecffba29bcaff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Actionable &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Actionable.html</anchorfile>
      <anchor>a3335fa012919e672c9e5fe10ad219dcb</anchor>
      <arglist>(GtkActionable *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ActionBar</name>
    <filename>classGtk_1_1ActionBar.html</filename>
    <base>Gtk::Bin</base>
    <member kind="function">
      <type></type>
      <name>ActionBar</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>aff8bafee5f78944b26f8e4a262865bb0</anchor>
      <arglist>(ActionBar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ActionBar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>a61d93e6a55caa58fd9848e3fafd8163a</anchor>
      <arglist>(ActionBar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ActionBar</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>aff9522143f36780c4026b6b56eaac01e</anchor>
      <arglist>(const ActionBar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ActionBar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>a33a8edd0a77f23865cbe2dad4a535e90</anchor>
      <arglist>(const ActionBar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ActionBar</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>af49c3cc1b50db411e80bc9b427302ec5</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkActionBar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>a8230362369ef3e5858b5aa8c78bd89ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkActionBar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>a96ea6d113d99931c5caa10815322a9d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ActionBar</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>a9d0e1451025979c869f6438fc8d2e743</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack_start</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>a1ae8ecc84d841be13af9440c4c58d51f</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack_end</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>a0fe43d007543c53c5f3077a847243492</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_center_widget</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>ad0b739ca8cd0855ae54a6c36ef59b3cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_center_widget</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>a4d155bc9cda2c805bacb40d871beffe4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_center_widget</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>a9fff196e6b53254d6a914936e43c8ac5</anchor>
      <arglist>(Widget &amp;center_widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_center_widget</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>a95cfc99eb634d8b53e7543efadd99e9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>aa4fe6bc434c344037e22d3c14de75462</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ActionBar *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ActionBar.html</anchorfile>
      <anchor>ade1185220b7e629eb9f700df6134e88c</anchor>
      <arglist>(GtkActionBar *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ActionGroup</name>
    <filename>classGtk_1_1ActionGroup.html</filename>
    <base>Glib::Object</base>
    <base>Gtk::Buildable</base>
    <member kind="function">
      <type></type>
      <name>ActionGroup</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>aed658c56a674e6606abe2b6b698f5613</anchor>
      <arglist>(ActionGroup &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ActionGroup &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>a0d3447d4abc1bbdbed000a1d4f96ad9a</anchor>
      <arglist>(ActionGroup &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ActionGroup</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>a9bb8719452236bf787615020a2196f94</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkActionGroup *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>a3f276c349f04d715ce2c63b2416bd6e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkActionGroup *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>a861cbc54afdd731e662a477584b1de3b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkActionGroup *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>a9985de97d7fa0270fb102a73082523ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>a02a431ba864002155932d05c275c49dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_sensitive</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>a043c8908c2cc0e8b70f0e737d6f53919</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sensitive</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>a3debf72a544aeb48a2c53679316e4f44</anchor>
      <arglist>(bool sensitive=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_visible</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>a1ca198030991b285b2e29d599ce1957c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visible</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>a1c16118f646707ac642800d797b57fab</anchor>
      <arglist>(bool visible=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; AccelGroup &gt;</type>
      <name>get_accel_group</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>ab2658801a6c8354f35e41d38962f98f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const AccelGroup &gt;</type>
      <name>get_accel_group</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>a5f5575013a682727ab50ad4d85f5b4d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_accel_group</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>ab91e714bad2609a4718dfa5a2d4ac390</anchor>
      <arglist>(const Glib::RefPtr&lt; AccelGroup &gt; &amp;accel_group)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Action &gt;</type>
      <name>get_action</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>a93162c945b633f535f7723be49c5c097</anchor>
      <arglist>(const Glib::ustring &amp;action_name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Action &gt;</type>
      <name>get_action</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>acbab162210c65750e834fdc1fb12b7ac</anchor>
      <arglist>(const Glib::ustring &amp;action_name) const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; Action &gt; &gt;</type>
      <name>get_actions</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>ab72c439ca173898efe4dc5cc39c5aca1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; const Action &gt; &gt;</type>
      <name>get_actions</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>a7029bf8ad636898fa9418eee3115a297</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>aa6c4f627e4699c17e0a6127a80f0fc8b</anchor>
      <arglist>(const Glib::RefPtr&lt; Action &gt; &amp;action)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>adec09906e140ffae35bd3e7bcae813ce</anchor>
      <arglist>(const Glib::RefPtr&lt; Action &gt; &amp;action, const AccelKey &amp;accel_key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>abebfb0dd6a695fc61678b291630fbd82</anchor>
      <arglist>(const Glib::RefPtr&lt; Action &gt; &amp;action, const Action::SlotActivate &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>acc3679c55d256b727540f15983470947</anchor>
      <arglist>(const Glib::RefPtr&lt; Action &gt; &amp;action, const AccelKey &amp;accel_key, const Action::SlotActivate &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>a852c2224a3944042d4977c4064ab835a</anchor>
      <arglist>(const Glib::RefPtr&lt; Action &gt; &amp;action)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>translate_string</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>a09616050bafb4b0796d6034259b3123c</anchor>
      <arglist>(const Glib::ustring &amp;string) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Action &gt; &amp;, Widget * &gt;</type>
      <name>signal_connect_proxy</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>a76934aeff4a5bc3778bb4b545e96d6bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Action &gt; &amp;, Widget * &gt;</type>
      <name>signal_disconnect_proxy</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>afb966fe57a87333a0dabb6add65d8f50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Action &gt; &amp; &gt;</type>
      <name>signal_pre_activate</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>a62a77c0df2c24a32ef09764b72178c3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Action &gt; &amp; &gt;</type>
      <name>signal_post_activate</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>a15fb7df9b9493e0fb0785a7db9a12abc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_name</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>a9bbc999d60c6687f30a9cd502d238132</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_sensitive</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>a6f2c979e8b327daf74114b46418b9a59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_sensitive</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>a79f30496b067a04219fb2c258e6a125c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_visible</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>a00d93a3bd539d832da1421774f8a26ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_visible</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>a93aa2857072b13bd9f5dd0d62f98fef4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; AccelGroup &gt; &gt;</type>
      <name>property_accel_group</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>a477aa1eb26baa87914abb42d66410332</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; AccelGroup &gt; &gt;</type>
      <name>property_accel_group</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>a3af1d41428581e515a852d830fe5356a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>ae57da55961186a5b0ff10f804b99111e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; ActionGroup &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>a729f21f2bf2bbd238390770217a3dc0b</anchor>
      <arglist>(const Glib::ustring &amp;name=Glib::ustring())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ActionGroup</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>a28aaeb3bc678f3267756ae6c623c4313</anchor>
      <arglist>(const Glib::ustring &amp;name=Glib::ustring())</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::ActionGroup &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ActionGroup.html</anchorfile>
      <anchor>a8b53b26c64b2be944a196e0ab8402e50</anchor>
      <arglist>(GtkActionGroup *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Activatable</name>
    <filename>classGtk_1_1Activatable.html</filename>
    <base>Glib::Interface</base>
    <member kind="function">
      <type></type>
      <name>Activatable</name>
      <anchorfile>classGtk_1_1Activatable.html</anchorfile>
      <anchor>a2312faf5122f0516dac1e5e188e07600</anchor>
      <arglist>(Activatable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Activatable &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Activatable.html</anchorfile>
      <anchor>a88d8840e162462e4c8cf2ed3f4261037</anchor>
      <arglist>(Activatable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Activatable</name>
      <anchorfile>classGtk_1_1Activatable.html</anchorfile>
      <anchor>a839ff5bdd9e780aa0158fc2cf50a4255</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkActivatable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Activatable.html</anchorfile>
      <anchor>a2c56156cd0908e2cda41be373cb6a418</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkActivatable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Activatable.html</anchorfile>
      <anchor>a51afc18115d01603f5b851186767beaa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>do_set_related_action</name>
      <anchorfile>classGtk_1_1Activatable.html</anchorfile>
      <anchor>af298882960c97b52f23baf88ecc39244</anchor>
      <arglist>(const Glib::RefPtr&lt; Action &gt; &amp;action)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Action &gt;</type>
      <name>get_related_action</name>
      <anchorfile>classGtk_1_1Activatable.html</anchorfile>
      <anchor>a3e0bc78f47afb22e91ea30d53381cb4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Action &gt;</type>
      <name>get_related_action</name>
      <anchorfile>classGtk_1_1Activatable.html</anchorfile>
      <anchor>af0bc4a12ced4d9b12c68d60e8e68ce14</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_use_action_appearance</name>
      <anchorfile>classGtk_1_1Activatable.html</anchorfile>
      <anchor>ac2029fb33a2b14417051d00a1bc9b592</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sync_action_properties</name>
      <anchorfile>classGtk_1_1Activatable.html</anchorfile>
      <anchor>af9b8ce1cf67419978c49caae59b4602e</anchor>
      <arglist>(const Glib::RefPtr&lt; Action &gt; &amp;action)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_related_action</name>
      <anchorfile>classGtk_1_1Activatable.html</anchorfile>
      <anchor>a1f5010ca913e20455e7c7eb2ff1a0c45</anchor>
      <arglist>(const Glib::RefPtr&lt; Action &gt; &amp;action)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_action_appearance</name>
      <anchorfile>classGtk_1_1Activatable.html</anchorfile>
      <anchor>adf2a66b8a9834161daa283a82e2ed3b5</anchor>
      <arglist>(bool use_appearance=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Action &gt; &gt;</type>
      <name>property_related_action</name>
      <anchorfile>classGtk_1_1Activatable.html</anchorfile>
      <anchor>aab80092c9e997cc8e0ec0476a6a262d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Action &gt; &gt;</type>
      <name>property_related_action</name>
      <anchorfile>classGtk_1_1Activatable.html</anchorfile>
      <anchor>a4516b5eec6b21121cda5aec00e9f0731</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_action_appearance</name>
      <anchorfile>classGtk_1_1Activatable.html</anchorfile>
      <anchor>ab61616c17c6d06449098f8b400a03035</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_action_appearance</name>
      <anchorfile>classGtk_1_1Activatable.html</anchorfile>
      <anchor>a9ced35d421c775796ffbb762741bdf32</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>update_vfunc</name>
      <anchorfile>classGtk_1_1Activatable.html</anchorfile>
      <anchor>a28030e0b75146c2928e87edcbfa1a4d3</anchor>
      <arglist>(const Glib::RefPtr&lt; Action &gt; &amp;action, const Glib::ustring &amp;property_name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sync_action_properties_vfunc</name>
      <anchorfile>classGtk_1_1Activatable.html</anchorfile>
      <anchor>a9ffad21bf5d037c6b5c8b24d998abc71</anchor>
      <arglist>(const Glib::RefPtr&lt; Action &gt; &amp;action)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1Activatable.html</anchorfile>
      <anchor>a81e20adb433841acbd90b0b39c6f8cf0</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Activatable.html</anchorfile>
      <anchor>ac9f42c6db5ea39c4382747b3d51d4ae3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Activatable</name>
      <anchorfile>classGtk_1_1Activatable.html</anchorfile>
      <anchor>a7b4cbbad7929ddb7ead4b4d865a20d81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Activatable &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Activatable.html</anchorfile>
      <anchor>a9f974c0da2d012a1083845a65c9d645d</anchor>
      <arglist>(GtkActivatable *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Adjustment</name>
    <filename>classGtk_1_1Adjustment.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>Adjustment</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a918f7a00af8fb5094281f349feeb0927</anchor>
      <arglist>(Adjustment &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Adjustment &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>af149d5e3d3a9f5ab6fb92df0b93022eb</anchor>
      <arglist>(Adjustment &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Adjustment</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a31f563c422b2e25941461df2197fce53</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkAdjustment *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a73a1955c20e1a90ffffe17a597e43ffb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkAdjustment *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a323ca8d81fe1ed6d052ec4f906e364dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkAdjustment *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a59e77a6c2ec4317cf1605697b4ba936a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changed</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a01b4c0118ac26897ac783f041a032765</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>value_changed</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>aa9e2a66bf8702196201db86a88da2567</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clamp_page</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a721b1e2ccde935f7c7c13c7ebfba4c44</anchor>
      <arglist>(double lower, double upper)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_value</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>ac585ad50e95018cd4d0fe7b014102591</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_value</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>ab6bc8e8ad1e4a544eeb8b67eff3d0380</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_lower</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a8b64cd68e91a24d6b7dfc03d8d199437</anchor>
      <arglist>(double lower)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_lower</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>acdc5682423c6c3f2bf6107c784b0264f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_upper</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>ab093897a15d80dba99969abb9bce039f</anchor>
      <arglist>(double upper)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_upper</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>ad5e83e6a664db2b5c0dff303f8425860</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_step_increment</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a0057e49eb57b09341b96a7c419ff1dfb</anchor>
      <arglist>(double step_increment)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_step_increment</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a0750aed1cce1f48c7d2dbd7c56ce214a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_page_increment</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a7cb297efb8bf3bb30aa51c754718f22a</anchor>
      <arglist>(double page_increment)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_page_increment</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a137b202f7a1db39e4ced997e29d8e1b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_page_size</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a8ce619f778049f760ef25269d9da7273</anchor>
      <arglist>(double page_size)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_page_size</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>ae106f84761de4b8e2dc8f1decb9da278</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>configure</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a02b7d411bd640215392a4f1911028104</anchor>
      <arglist>(double value, double lower, double upper, double step_increment, double page_increment, double page_size)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_minimum_increment</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a1386d4890ab54ed50fe09e0b2218d9dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_changed</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a4b7d438bc800a2a1bdb12bcd1cf46819</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_value_changed</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a23f9c5c1e9f2673113da8e18d8d5dd21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_value</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>aac369bfd56d9c3867d8e7f19360d74ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_value</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a6ed119ceca950cbe2f10b87db61ecfbb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_lower</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a1e033745b6cb320717825ed34d92ae3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_lower</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a29e9dffb8fc3c55604693832d7d2bb03</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_upper</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>aaf06b3b17c338b48e160d9670a589f2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_upper</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a9a2df28e82be8a770cd670c2969928e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_step_increment</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a723c8bc20104f0b1497c895d3b07a9bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_step_increment</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a96685b7af1db6c4481c806087a6ab0e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_page_increment</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a558e75fb1d1a8d6bd26aae45dbb095b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_page_increment</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a2b3dace6a7371305e496064affa1d10e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_page_size</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a51ae8f796a0a04a4414a32ec178e632d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_page_size</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>af6ea4fafb300787d034f6da70874a079</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>adef454f7653695b5d46db99e3e5efd69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Adjustment &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>ae9b576b1d64173dbf9d1b035ff8e03ca</anchor>
      <arglist>(double value, double lower, double upper, double step_increment=1, double page_increment=10, double page_size=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Adjustment</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a46faef0350c12e09a3e0249af5673d75</anchor>
      <arglist>(double value, double lower, double upper, double step_increment=1, double page_increment=10, double page_size=0)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_changed</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>afd8640b87aa243aa63cf0b4205f26df6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_value_changed</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a2aa54b26614f6824a3dce58afe1080b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Range</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>acfd895dc66f5fefeceaa97f725374689</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>HScrollbar</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>ae69c6aaa3a137d794d097e2af6efa842</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>VScrollbar</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>ade450f306f5819b3bff930f39105ec87</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Adjustment &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Adjustment.html</anchorfile>
      <anchor>a30d460e02add4a1c6e7b3577237b8bb6</anchor>
      <arglist>(GtkAdjustment *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Alignment</name>
    <filename>classGtk_1_1Alignment.html</filename>
    <base>Gtk::Bin</base>
    <member kind="function">
      <type></type>
      <name>Alignment</name>
      <anchorfile>classGtk_1_1Alignment.html</anchorfile>
      <anchor>a04623730b7ef250f50364d9f999a59a7</anchor>
      <arglist>(Alignment &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Alignment &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Alignment.html</anchorfile>
      <anchor>adaabd5617609bf073337f0df84d4b571</anchor>
      <arglist>(Alignment &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Alignment</name>
      <anchorfile>classGtk_1_1Alignment.html</anchorfile>
      <anchor>a0e39d10a718247df06cdf7dcba6efc6a</anchor>
      <arglist>(const Alignment &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Alignment &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Alignment.html</anchorfile>
      <anchor>a09131cea91091667564c5e7ded759ff9</anchor>
      <arglist>(const Alignment &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Alignment</name>
      <anchorfile>classGtk_1_1Alignment.html</anchorfile>
      <anchor>a60d6f1ebc629364b088dfc660acd7b38</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkAlignment *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Alignment.html</anchorfile>
      <anchor>a316b3e3c159e7c63be312083b0930b13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkAlignment *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Alignment.html</anchorfile>
      <anchor>a49d98a89370b430fd5394d784cdc70b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Alignment</name>
      <anchorfile>classGtk_1_1Alignment.html</anchorfile>
      <anchor>a48c234eed3522e71607862afbedfd823</anchor>
      <arglist>(float xalign=0.5, float yalign=0.5, float xscale=1.0, float yscale=1.0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Alignment</name>
      <anchorfile>classGtk_1_1Alignment.html</anchorfile>
      <anchor>a7519fadbde77fa9bceb3db8f9661b71f</anchor>
      <arglist>(Align xalign, Align yalign=Gtk::ALIGN_CENTER, float xscale=1.0, float yscale=1.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGtk_1_1Alignment.html</anchorfile>
      <anchor>aa2daad6822068b163245872caa355bed</anchor>
      <arglist>(float xalign=0.5, float yalign=0.5, float xscale=1.0, float yscale=1.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGtk_1_1Alignment.html</anchorfile>
      <anchor>a70f86bfd4f88e0541254c440ead82331</anchor>
      <arglist>(Align xalign, Align yalign=Gtk::ALIGN_CENTER, float xscale=1.0, float yscale=1.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_padding</name>
      <anchorfile>classGtk_1_1Alignment.html</anchorfile>
      <anchor>aa0b23d97c47609dc87b3ca7dc006ff26</anchor>
      <arglist>(guint padding_top, guint padding_bottom, guint padding_left, guint padding_right)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_padding</name>
      <anchorfile>classGtk_1_1Alignment.html</anchorfile>
      <anchor>ac39fb7517548f3f54d4a854721a447f9</anchor>
      <arglist>(guint &amp;padding_top, guint &amp;padding_bottom, guint &amp;padding_left, guint &amp;padding_right)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; float &gt;</type>
      <name>property_xalign</name>
      <anchorfile>classGtk_1_1Alignment.html</anchorfile>
      <anchor>a4cd47a0176c7c89a649c78bdaa0908b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; float &gt;</type>
      <name>property_xalign</name>
      <anchorfile>classGtk_1_1Alignment.html</anchorfile>
      <anchor>aad69de415aeca7e35e024beb19ba3946</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; float &gt;</type>
      <name>property_yalign</name>
      <anchorfile>classGtk_1_1Alignment.html</anchorfile>
      <anchor>a4104c96ee41a86744ccd788a06785199</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; float &gt;</type>
      <name>property_yalign</name>
      <anchorfile>classGtk_1_1Alignment.html</anchorfile>
      <anchor>a383f03f712c83bec55227fd6d348953d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; float &gt;</type>
      <name>property_xscale</name>
      <anchorfile>classGtk_1_1Alignment.html</anchorfile>
      <anchor>a5680c4942947e1122a0b63cc33895355</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; float &gt;</type>
      <name>property_xscale</name>
      <anchorfile>classGtk_1_1Alignment.html</anchorfile>
      <anchor>a217d9d9ef0630efabda4889bf2d71d0b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; float &gt;</type>
      <name>property_yscale</name>
      <anchorfile>classGtk_1_1Alignment.html</anchorfile>
      <anchor>a6e62f8ce03d711eac849e00da6acf02e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; float &gt;</type>
      <name>property_yscale</name>
      <anchorfile>classGtk_1_1Alignment.html</anchorfile>
      <anchor>a758a590fdaf3b9f69441a47c172410ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_top_padding</name>
      <anchorfile>classGtk_1_1Alignment.html</anchorfile>
      <anchor>aebd3bc273c8fbab6fb707041e96192c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_top_padding</name>
      <anchorfile>classGtk_1_1Alignment.html</anchorfile>
      <anchor>a2284039da133b162507de91d3dc8a51b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_bottom_padding</name>
      <anchorfile>classGtk_1_1Alignment.html</anchorfile>
      <anchor>ab8b9da91bfe844c835fac8153e42b942</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_bottom_padding</name>
      <anchorfile>classGtk_1_1Alignment.html</anchorfile>
      <anchor>ad41e3fa354110c2e6a3aaa4c469969df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_left_padding</name>
      <anchorfile>classGtk_1_1Alignment.html</anchorfile>
      <anchor>ad395770e8e6ca83e10311aeb740db359</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_left_padding</name>
      <anchorfile>classGtk_1_1Alignment.html</anchorfile>
      <anchor>aef6b58d1545fb3929dc7a8bab2e94db0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_right_padding</name>
      <anchorfile>classGtk_1_1Alignment.html</anchorfile>
      <anchor>a6114c6ad2d7d612da51142508b843d20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_right_padding</name>
      <anchorfile>classGtk_1_1Alignment.html</anchorfile>
      <anchor>a61dcd1f41345d2b1a428e1262aaf2336</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Alignment.html</anchorfile>
      <anchor>a10868e82eb096bedf2d5945ac6193f08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Alignment *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Alignment.html</anchorfile>
      <anchor>a6246e305ca948fdb6b6f52d57f99f2f1</anchor>
      <arglist>(GtkAlignment *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::AppChooser</name>
    <filename>classGtk_1_1AppChooser.html</filename>
    <base>Glib::Interface</base>
    <member kind="function">
      <type></type>
      <name>AppChooser</name>
      <anchorfile>classGtk_1_1AppChooser.html</anchorfile>
      <anchor>a0339e14a8f3c6d6d8b85da92e35a847d</anchor>
      <arglist>(AppChooser &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AppChooser &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1AppChooser.html</anchorfile>
      <anchor>a3d05afcfeec09916f0da9683dd085369</anchor>
      <arglist>(AppChooser &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AppChooser</name>
      <anchorfile>classGtk_1_1AppChooser.html</anchorfile>
      <anchor>a2c37115966b6cd83507a921c786908c8</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkAppChooser *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1AppChooser.html</anchorfile>
      <anchor>a9de0cbb13a32fc548398ec285660bf66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkAppChooser *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1AppChooser.html</anchorfile>
      <anchor>a43d34804a064f6ce3dd65bd49bc773fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::AppInfo &gt;</type>
      <name>get_app_info</name>
      <anchorfile>classGtk_1_1AppChooser.html</anchorfile>
      <anchor>a51a4e87cdd125c6b5682c998948dd280</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::AppInfo &gt;</type>
      <name>get_app_info</name>
      <anchorfile>classGtk_1_1AppChooser.html</anchorfile>
      <anchor>a895308820faa82ec9c65a4762ee7ab14</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_content_type</name>
      <anchorfile>classGtk_1_1AppChooser.html</anchorfile>
      <anchor>abaf2ee56a7eb870e1e2bf99d5fa9417e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>classGtk_1_1AppChooser.html</anchorfile>
      <anchor>ad1f9bf49bcb8425312a812556905418f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_content_type</name>
      <anchorfile>classGtk_1_1AppChooser.html</anchorfile>
      <anchor>a3342e7419a821add1209719eda1e6730</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1AppChooser.html</anchorfile>
      <anchor>aab274009015bf6e3b57a8a3a53e2359f</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1AppChooser.html</anchorfile>
      <anchor>acc433b3d5e80408c5d526d1392be1b4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>AppChooser</name>
      <anchorfile>classGtk_1_1AppChooser.html</anchorfile>
      <anchor>a4e4dba06e67047f62a0bceeea80e9ffb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::AppChooser &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1AppChooser.html</anchorfile>
      <anchor>ad2cf2cfbc6c8241f9cda1e9ef4246c92</anchor>
      <arglist>(GtkAppChooser *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::AppChooserButton</name>
    <filename>classGtk_1_1AppChooserButton.html</filename>
    <base>Gtk::ComboBox</base>
    <base>Gtk::AppChooser</base>
    <member kind="function">
      <type></type>
      <name>AppChooserButton</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a4be45cd641e5a97f257a4a1bade3787b</anchor>
      <arglist>(AppChooserButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AppChooserButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a09f366cf64db7ad4dd092c03fd218923</anchor>
      <arglist>(AppChooserButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AppChooserButton</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a600b889255047a3bd61c1203894a308f</anchor>
      <arglist>(const AppChooserButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AppChooserButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>aecf63c4f4563fd0892ef4bf40df5fd37</anchor>
      <arglist>(const AppChooserButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AppChooserButton</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a12f044653cc01f130af54092f99b696a</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkAppChooserButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>abb43b363a96c73be3d118bce2d954011</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkAppChooserButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a39cbc2cb644f020b4ce449e7ed083965</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AppChooserButton</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>aeffd4e3d87c3e9b7928fe2273ddcbde1</anchor>
      <arglist>(const Glib::ustring &amp;content_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append_separator</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>ac05c294c7296eb4d8a51c3ffddfb3d2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append_custom_item</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a5fed67201ec59314a11ec948c7c72beb</anchor>
      <arglist>(const Glib::ustring &amp;name, const Glib::ustring &amp;label, const Glib::RefPtr&lt; Gio::Icon &gt; &amp;icon)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_active_custom_item</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>aae0e6e40a720b32c5f6cf98d18db60e5</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_dialog_item</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>abc62b96274a1f3be93a1fd534e0002ef</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_dialog_item</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>ad34c063ecde7753a7c594c4a684cfaa5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_heading</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a5b7698873f37a6abc5c4e46568a6720c</anchor>
      <arglist>(const Glib::ustring &amp;heading)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_heading</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a105065421b97391103562041604bea82</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_default_item</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>ac1b550aa14fd1902348a40fe531c7b9a</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_default_item</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>afeee6c432448a2c6a20a437807117d15</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::ustring &amp; &gt;</type>
      <name>signal_custom_item_activated</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a9979a2ebfff6eef98e9f2fe95f9c46f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxyDetailedAnyType&lt; void, const Glib::ustring &amp; &gt;</type>
      <name>signal_custom_item_activated</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a9012b42357a1027ec8f0706d5fa354be</anchor>
      <arglist>(const Glib::ustring &amp;custom_item_name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_dialog_item</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a92c12014074249e532ea742be6992cc6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_dialog_item</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>af11d367d4d4d56213264c0ab857eefa1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_heading</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>ada21d12b1417d0a604e13c69d5039f35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_heading</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a4bde1c6cf6f1396bb36ed695f086deb2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_default_item</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>abea0bb57dd18013a9f5ba9f55beea162</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_default_item</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>ac7ec5ebb14abfe209863871e602c81ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a7ecdd0da12c02007dc7e1d6918933c47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_custom_item_activated</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a220a33581bd1526468629c0b0fe16ffb</anchor>
      <arglist>(const Glib::ustring &amp;item_name)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::AppChooserButton *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1AppChooserButton.html</anchorfile>
      <anchor>a80919bc53d7a9c1f18f87ffb7644c368</anchor>
      <arglist>(GtkAppChooserButton *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::AppChooserDialog</name>
    <filename>classGtk_1_1AppChooserDialog.html</filename>
    <base>Gtk::Dialog</base>
    <base>Gtk::AppChooser</base>
    <member kind="function">
      <type></type>
      <name>AppChooserDialog</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>a15ca415f3a13dac3a57f0f3cd5eeba24</anchor>
      <arglist>(AppChooserDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AppChooserDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>a9cc14c180aa1ac3df211a725dea5450f</anchor>
      <arglist>(AppChooserDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AppChooserDialog</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>aa65081816ebc07e3b05eb79a0c1bbcd8</anchor>
      <arglist>(const AppChooserDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AppChooserDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>aa32f166c9523750807f254ce2277637c</anchor>
      <arglist>(const AppChooserDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AppChooserDialog</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>ab8c80d158bc03af3b8f0575b38860c55</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkAppChooserDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>a3c854ea97f4f8affc5721b148721e1c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkAppChooserDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>a8ff04118e7be80d94d4e52fc2f5053f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AppChooserDialog</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>add9dbcb66e68af508d528186aed46321</anchor>
      <arglist>(const Glib::ustring &amp;content_type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AppChooserDialog</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>ad0f6656db818880bb290255cfbda4117</anchor>
      <arglist>(const Glib::ustring &amp;content_type, Gtk::Window &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AppChooserDialog</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>a5c3a9a752fe2bc881fa9bd9c3c21b7f0</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::File &gt; &amp;file)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AppChooserDialog</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>a7d17e152baade671ceaf15f33a684900</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::File &gt; &amp;file, Gtk::Window &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_widget</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>af06daacc5cdab0ccda4dcbd3daa08012</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_widget</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>a0b6bf8582784e34dff4dabd5e5167b27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_heading</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>a211d2a4a6f043d8549b3ddc0f7e17553</anchor>
      <arglist>(const Glib::ustring &amp;heading)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_heading</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>a9273a5774012072751ce79c09c3aec8d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::File &gt; &gt;</type>
      <name>property_gfile</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>ae6ec10bd423893a2e89968ec0e1da56b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_heading</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>a596a1b7b0aeb85e27de94f226dd1b532</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_heading</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>a66abdc6ae3792d80de326448fdc3374f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>a39a856f4ad0b2b2e578af4b5a9f4df1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::AppChooserDialog *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1AppChooserDialog.html</anchorfile>
      <anchor>a26b36696ffdfd2b14a3004e436522c69</anchor>
      <arglist>(GtkAppChooserDialog *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::AppChooserWidget</name>
    <filename>classGtk_1_1AppChooserWidget.html</filename>
    <base>Gtk::Box</base>
    <base>Gtk::AppChooser</base>
    <member kind="function">
      <type></type>
      <name>AppChooserWidget</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a2c95d91c9e0c3328c1cce5295ee6323e</anchor>
      <arglist>(AppChooserWidget &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AppChooserWidget &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a4d1e1dc8b046ed0e38cfc74d07dda36c</anchor>
      <arglist>(AppChooserWidget &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AppChooserWidget</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a8a042027dc74a8562e7dac3b670b2dcf</anchor>
      <arglist>(const AppChooserWidget &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AppChooserWidget &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a7520aba69fac12bdcddf28b53240d67d</anchor>
      <arglist>(const AppChooserWidget &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AppChooserWidget</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>af6193870c57775d9e64c023a85888bf5</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkAppChooserWidget *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>afbf06341fb55a5f48caa9a04479f07e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkAppChooserWidget *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a153d738167ec0f6af402081761efb982</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AppChooserWidget</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a17fda5c170c6bf12b214ab9e3da4f3b6</anchor>
      <arglist>(const Glib::ustring &amp;content_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_default</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a77084e5887425d9360d1cd66a5748cc1</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_default</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a88b22f41f32c35a6d8c1e23dae6117bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_recommended</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a2bd21c65e999587fb97c81e0017901e2</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_recommended</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a778b267e807efdf6688c4f14b9e8b890</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_fallback</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a72a0111b3a2b6f8cced51b49fc32e67c</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_fallback</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a454e9b170e5abd5d3bb556e77fd2cf18</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_other</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a7cc72e081df6ae56d71b30e1a456bc47</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_other</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a4eedfe6718f9c2be419da017cf142606</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_all</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a8552fa1fa25255025cfa138bbbff1c37</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_all</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a4740a65553f572b31619a7290945b579</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_default_text</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a952fc27fb2a5363d3fac16486134922e</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_default_text</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>af43c08b23d00b699a1aa99389947760b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Gio::AppInfo &gt; &amp; &gt;</type>
      <name>signal_application_selected</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>ad7dccd4e43165ecc19cf0f38ccd2c13f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Gio::AppInfo &gt; &amp; &gt;</type>
      <name>signal_application_activated</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>ae263f34f1a7a96582239ced7a7887980</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, Menu *, const Glib::RefPtr&lt; Gio::AppInfo &gt; &amp; &gt;</type>
      <name>signal_populate_popup</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a0ba46896067f6216f19869663b869081</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_default</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a146f9d5f1ea426a17d371c5b77458cc2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_default</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>aa456090882e5a067523541399d5b8fdb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_recommended</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a4f2ae7e5c59cbb2df35452bd0f190eda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_recommended</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>aefa70d476f9b394d6c20fbfe68259b2b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_fallback</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>aacd088ea9379a135e243b0c7e859b965</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_fallback</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a55374303aaba90386db5d5ffcb2bd2cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_other</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>adb598c550ab19bfe1e488f65177f995e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_other</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>acad7fb039db9812faca0daa54706dfd8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_all</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a5ae611096a61d1652345b8f804d66229</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_all</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>affe38b5e99198724fdad2948212c0e35</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_default_text</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a8ab1d24c4d424163bc31590da317b6d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_default_text</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a5a4c642112cce541c3c5051a4657deb6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>ad6254816b4df82d72374dbf185ecd40f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_application_selected</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>afd200b2a812b0e5af8fc0a6c4b5573e4</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::AppInfo &gt; &amp;app_info)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_application_activated</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a5ed84757c321fc87c04e88436c8895e8</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::AppInfo &gt; &amp;app_info)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_populate_popup</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>a17674149dd15c026f88d423bc7872bfa</anchor>
      <arglist>(Menu *menu, const Glib::RefPtr&lt; Gio::AppInfo &gt; &amp;app_info)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::AppChooserWidget *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1AppChooserWidget.html</anchorfile>
      <anchor>ab3e4d09f387468db6e333a93dab5f259</anchor>
      <arglist>(GtkAppChooserWidget *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Application</name>
    <filename>classGtk_1_1Application.html</filename>
    <base>Gio::Application</base>
    <member kind="function">
      <type></type>
      <name>Application</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a166483551669c74538d18df475c02503</anchor>
      <arglist>(Application &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Application &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a04077936b1aa7398749d54528b9064c9</anchor>
      <arglist>(Application &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Application</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a0fd81236de4d175fd829f8a20a7ceaaa</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkApplication *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>aeb538b778c1d17c710b824ac0e383970</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkApplication *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>af4e0f99e0a71b31502185d30b30ab770</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkApplication *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a96b38ed46d42370aeb42afa1023053d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Window * &gt;</type>
      <name>get_windows</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a3ae48f4f9566b2a97a3f4c05c42d1eb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const Window * &gt;</type>
      <name>get_windows</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a12e151bd0069a4c15b9a28c03f78be06</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_window</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a2d2f04c1cb6c3093747626c4889376f1</anchor>
      <arglist>(Window &amp;window)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_window</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>afe36cb32c2f4dc3ddbc35faae81cfb8a</anchor>
      <arglist>(Window &amp;window)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>run</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a41ede16109c06bbefce5194f4b601780</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>run</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a349b70fb52c8a5c62fac581676675e87</anchor>
      <arglist>(Window &amp;window, int argc, char **argv)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>run</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a6eba85ca96882d3db9c3d7a889fdd686</anchor>
      <arglist>(Window &amp;window)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>run</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a2772d9f33a86b259238356d2fcf8048c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::MenuModel &gt;</type>
      <name>get_app_menu</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a004854ed84e7c01a441981d6bce2623f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::MenuModel &gt;</type>
      <name>get_app_menu</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a824fc52dd49da41bcb656a8d4c91e9ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_app_menu</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a452a8bad7e3a34846647073243e0920f</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::MenuModel &gt; &amp;app_menu)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::MenuModel &gt;</type>
      <name>get_menubar</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a172cbaf9caf30aeb6bd12fcfa2e9d23e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::MenuModel &gt;</type>
      <name>get_menubar</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a15c01ae31b6b35bfc0be3064c8432a97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_menubar</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>aef25d09a3867f74fc48c36c65b3b2e7f</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::MenuModel &gt; &amp;menubar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_accelerator</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a6969609d1fcd75871918003bc16afdeb</anchor>
      <arglist>(const Glib::ustring &amp;accelerator, const Glib::ustring &amp;action_name, GVariant *parameter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_accelerator</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>ab9d3281d4e9289adcebcafc585b0fa1b</anchor>
      <arglist>(const Glib::ustring &amp;accelerator, const Glib::ustring &amp;action_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_accelerator</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>afb5c4d4e1833edfcca58e6897ddcd904</anchor>
      <arglist>(const Glib::ustring &amp;action_name, GVariant *parameter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_accelerator</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a0a65e411c9c2d19b4f6f90d49637798d</anchor>
      <arglist>(const Glib::ustring &amp;action_name)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>inhibit</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a3d2a1f464239bf5c99423a733c438bb9</anchor>
      <arglist>(Window &amp;window, ApplicationInhibitFlags flags, const Glib::ustring &amp;reason)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uninhibit</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a9fb884b154e49195ebf245f2eabcaa78</anchor>
      <arglist>(guint cookie)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_inhibited</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>aafa39b0dc2bbef0e70cf0cb4a9773809</anchor>
      <arglist>(ApplicationInhibitFlags flags) const </arglist>
    </member>
    <member kind="function">
      <type>Window *</type>
      <name>get_window_by_id</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>aa98871f45913f320abead5ff24fa2b63</anchor>
      <arglist>(guint id)</arglist>
    </member>
    <member kind="function">
      <type>const Window *</type>
      <name>get_window_by_id</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a7202845f13de7b9b2926339893f4939d</anchor>
      <arglist>(guint id) const </arglist>
    </member>
    <member kind="function">
      <type>Window *</type>
      <name>get_active_window</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a6772829e0fb11aff67e836aeaa54bec8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Window *</type>
      <name>get_active_window</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a80d7a04db2b1ad32db2ac4a10f6976d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>list_action_descriptions</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a5b919cbef96a2667e669df32c57fda8e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>get_accels_for_action</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a543612facf6f15b87f2412abe9c4e8bc</anchor>
      <arglist>(const Glib::ustring &amp;detailed_action_name) const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>get_actions_for_accel</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a3f3cefad613b6a0a45a3c3770bc8a7bd</anchor>
      <arglist>(const Glib::ustring &amp;accel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_accels_for_action</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>af6e771048a9a77c94c36a25f93c66243</anchor>
      <arglist>(const Glib::ustring &amp;detailed_action_name, const std::vector&lt; Glib::ustring &gt; &amp;accels)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_accel_for_action</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>aff87b73d32976adda9bdc6398a7d1274</anchor>
      <arglist>(const Glib::ustring &amp;detailed_action_name, const Glib::ustring &amp;accel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_accels_for_action</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a4f1a68e98dfc9659c1fe1f95cd9f1ce4</anchor>
      <arglist>(const Glib::ustring &amp;detailed_action_name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>prefers_app_menu</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a0c0c43e074dc0399c85d5cc7fda706ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::Menu &gt;</type>
      <name>get_menu_by_id</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a987caa0b6660118ac529577dbaebd50f</anchor>
      <arglist>(const Glib::ustring &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::Menu &gt;</type>
      <name>get_menu_by_id</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a4d80ce07022b5aee93738a370b127edb</anchor>
      <arglist>(const Glib::ustring &amp;id) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::MenuModel &gt; &gt;</type>
      <name>property_app_menu</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a49b1d8058b0a0462ecc5bf1758ea729b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::MenuModel &gt; &gt;</type>
      <name>property_app_menu</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>ab881ea32510686227739513dda40d4c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::MenuModel &gt; &gt;</type>
      <name>property_menubar</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a40dc9251e23f5b6849d582a3b5a2e948</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::MenuModel &gt; &gt;</type>
      <name>property_menubar</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a8c4c9c74da54b43c95fc93022d579cdb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_register_session</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a8f4d0dcbe37bb11e3bbfaea10af39c4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_register_session</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>aa6fc2c688b821d8c6894d98a262c832c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Window * &gt;</type>
      <name>property_active_window</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>ad0d55f36a74687ba78534bea728c5baa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, Window * &gt;</type>
      <name>signal_window_added</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>ad65829f77d9d29cda4cec4fe5bc23675</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, Window * &gt;</type>
      <name>signal_window_removed</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a14a23cfd4295bc031c4c8d1bdbc9d9c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a2fad1bb7a36614589ca9a4ed6b9c2253</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Application &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a0521e314658e75606184c53dcb4b8cef</anchor>
      <arglist>(const Glib::ustring &amp;application_id=Glib::ustring(), Gio::ApplicationFlags flags=Gio::APPLICATION_FLAGS_NONE)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Application &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a6432c724238bf3bf6dd24dd16ed56795</anchor>
      <arglist>(int &amp;argc, char **&amp;argv, const Glib::ustring &amp;application_id=Glib::ustring(), Gio::ApplicationFlags flags=Gio::APPLICATION_FLAGS_NONE)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Application</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a2a9af1ce23733014bd025c662a1ed6f7</anchor>
      <arglist>(const Glib::ustring &amp;application_id=Glib::ustring(), Gio::ApplicationFlags flags=Gio::APPLICATION_FLAGS_NONE)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Application</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a419fa0d9bb11feb93b2ba0e8fef1537e</anchor>
      <arglist>(int &amp;argc, char **&amp;argv, const Glib::ustring &amp;application_id=Glib::ustring(), Gio::ApplicationFlags flags=Gio::APPLICATION_FLAGS_NONE)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_window_added</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>aa5f0f182f2292e4bf095a618eba5ac0c</anchor>
      <arglist>(Window *window)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_window_removed</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a3ee1588b96238b6d68cbda7c284727fa</anchor>
      <arglist>(Window *window)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Application &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Application.html</anchorfile>
      <anchor>a07644ff178af026cdb2c2aaa0758c15c</anchor>
      <arglist>(GtkApplication *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ApplicationWindow</name>
    <filename>classGtk_1_1ApplicationWindow.html</filename>
    <base>Gtk::Window</base>
    <base>Gio::ActionGroup</base>
    <base>Gio::ActionMap</base>
    <member kind="function">
      <type></type>
      <name>ApplicationWindow</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>a77330587d69ad0f2773836668cd87972</anchor>
      <arglist>(ApplicationWindow &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ApplicationWindow &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>a9d0ac13142d247ed8045ad91e2d980fa</anchor>
      <arglist>(ApplicationWindow &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ApplicationWindow</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>a7ea4691abd9f123e7513673ab7415f38</anchor>
      <arglist>(const ApplicationWindow &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ApplicationWindow &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>afb212692f8fe646b1d2f7a849719c4f5</anchor>
      <arglist>(const ApplicationWindow &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ApplicationWindow</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>a398497f433eddd6e69a04cdc94aa5e9b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkApplicationWindow *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>af201f48ff47067c4bc996531927105bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkApplicationWindow *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>ab819e3561a25dd34dffe72d08ff27766</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ApplicationWindow</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>a73c76ebb6d745cd0e86105eff8f5ea9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ApplicationWindow</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>a1aeabd5e36597952c244d47f9008dfc7</anchor>
      <arglist>(const Glib::RefPtr&lt; Application &gt; &amp;application)</arglist>
    </member>
    <member kind="function">
      <type>GtkApplicationWindow *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>a2b2f46f4fc38ff987d49a801931bfed0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_menubar</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>a2643a0163bb874bfe42ba0af40349f75</anchor>
      <arglist>(bool show_menubar=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_menubar</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>a597fce556d4087253ef83242084d016a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_id</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>a8ec4bdb5dedba30b316b535888e58440</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_help_overlay</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>a2db8d78832081c8e46dac7072d58018b</anchor>
      <arglist>(ShortcutsWindow &amp;help_overlay)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_help_overlay</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>acecee55375beb705b7bb69f42a8ed003</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ShortcutsWindow *</type>
      <name>get_help_overlay</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>a6152cf00ab92feb6fa343eb761b3c232</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ShortcutsWindow *</type>
      <name>get_help_overlay</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>a1032418ae98b326d2c619f4a45506ef8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_menubar</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>a1a057778fb255ce90fb8e894f80c8ed0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_menubar</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>afd1956531bb747567e920d6559e0494a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>a0f93b87680ab1537c86bc94415a725d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::ApplicationWindow &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ApplicationWindow.html</anchorfile>
      <anchor>af6b0dac24ef773f897383680f5ff6b8f</anchor>
      <arglist>(GtkApplicationWindow *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Arrow</name>
    <filename>classGtk_1_1Arrow.html</filename>
    <base>Gtk::Misc</base>
    <member kind="function">
      <type></type>
      <name>Arrow</name>
      <anchorfile>classGtk_1_1Arrow.html</anchorfile>
      <anchor>a30b7b5c507aff90850e7edef15955df6</anchor>
      <arglist>(Arrow &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Arrow &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Arrow.html</anchorfile>
      <anchor>a11b6b4267dffe79816cc673745ed0e97</anchor>
      <arglist>(Arrow &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Arrow</name>
      <anchorfile>classGtk_1_1Arrow.html</anchorfile>
      <anchor>a36a09cc91e1d02b5611cc8b074e5052e</anchor>
      <arglist>(const Arrow &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Arrow &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Arrow.html</anchorfile>
      <anchor>a9322fc11327130eb9e30dd093ba628cb</anchor>
      <arglist>(const Arrow &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Arrow</name>
      <anchorfile>classGtk_1_1Arrow.html</anchorfile>
      <anchor>a1023ebd9d85800e6d27b0dfba30546e6</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkArrow *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Arrow.html</anchorfile>
      <anchor>a2611ac3fb3517e9ff8495cc85ba5a73c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkArrow *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Arrow.html</anchorfile>
      <anchor>ad2749351deb48664df28b16880bf9217</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Arrow</name>
      <anchorfile>classGtk_1_1Arrow.html</anchorfile>
      <anchor>a92e98864c99ce96a1ee1619f1bade481</anchor>
      <arglist>(ArrowType arrow_type, ShadowType shadow_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGtk_1_1Arrow.html</anchorfile>
      <anchor>aeb3e9a6d02d21f10d417c10402f25713</anchor>
      <arglist>(ArrowType arrow_type, ShadowType shadow_type)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; ArrowType &gt;</type>
      <name>property_arrow_type</name>
      <anchorfile>classGtk_1_1Arrow.html</anchorfile>
      <anchor>a38e9975c80334afda4efa7c0eff5b101</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; ArrowType &gt;</type>
      <name>property_arrow_type</name>
      <anchorfile>classGtk_1_1Arrow.html</anchorfile>
      <anchor>a3763bfbcc24710ebf1b0fc787428575f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; ShadowType &gt;</type>
      <name>property_shadow_type</name>
      <anchorfile>classGtk_1_1Arrow.html</anchorfile>
      <anchor>a121733965801dd578113934532ea43f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; ShadowType &gt;</type>
      <name>property_shadow_type</name>
      <anchorfile>classGtk_1_1Arrow.html</anchorfile>
      <anchor>ad04814ee76a19913aca40f72a71dee02</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Arrow.html</anchorfile>
      <anchor>ad3c9ca60c7899219a342437f6a864a0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Arrow *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Arrow.html</anchorfile>
      <anchor>aa2054c1fa350f88374a790ff87814c57</anchor>
      <arglist>(GtkArrow *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::AspectFrame</name>
    <filename>classGtk_1_1AspectFrame.html</filename>
    <base>Gtk::Frame</base>
    <member kind="function">
      <type></type>
      <name>AspectFrame</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>ae2d19cd03358407ee08e484690049a50</anchor>
      <arglist>(AspectFrame &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AspectFrame &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a307f2eeb01bab216477e0cf3e78e02b3</anchor>
      <arglist>(AspectFrame &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AspectFrame</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a2cb0be72d7bee216990b7e00aef423c1</anchor>
      <arglist>(const AspectFrame &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AspectFrame &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a20a4fbc91d5720e47d672f65c253f0a6</anchor>
      <arglist>(const AspectFrame &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AspectFrame</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a8b2b9055566f6cb3388b6c7de21c8a53</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkAspectFrame *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a094c8844ef320a9736eba7f3a9d0bd66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkAspectFrame *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a9054d57c75b29e8f5991173fd012a860</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AspectFrame</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a3c87486ada05e0c330539bb47186ab8a</anchor>
      <arglist>(const Glib::ustring &amp;label=Glib::ustring(), Align xalign=Gtk::ALIGN_CENTER, Align yalign=Gtk::ALIGN_CENTER, float ratio=1.0, bool obey_child=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AspectFrame</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a6a87059865ecceb1330759b79e617f93</anchor>
      <arglist>(const Glib::ustring &amp;label, float xalign, float yalign, float ratio=1.0, bool obey_child=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>ad689dee3c8a0febb2340cc4eda5fe922</anchor>
      <arglist>(float xalign, float yalign, float ratio, bool obey_child=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a0c8015b02ca727d16c180a8624f84967</anchor>
      <arglist>(Align xalign, Align yalign, float ratio, bool obey_child=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; float &gt;</type>
      <name>property_xalign</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a501f1dc1593539616ed318174af9a13c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; float &gt;</type>
      <name>property_xalign</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>ae1a5322f9c8d869f9fccb8b6fe571f06</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; float &gt;</type>
      <name>property_yalign</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>ac4c6b9408c47c846a74253c0389283ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; float &gt;</type>
      <name>property_yalign</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a74f9c37c62831b2ee047ac8f5a4b1407</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; float &gt;</type>
      <name>property_ratio</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>af3871a93e6ca278739ecf82052aa6a5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; float &gt;</type>
      <name>property_ratio</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>ad91990c4776b1f997399706eb3bc93b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_obey_child</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a4afce989c7195ce1158af8a2ddb1cd26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_obey_child</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>acd0576cd958cb3d3115ec7abfaaeeb4e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>a6f737c53b579c3aa7363b2c186673f6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::AspectFrame *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1AspectFrame.html</anchorfile>
      <anchor>ab19eaa639f8f64ce540bee038e121fdc</anchor>
      <arglist>(GtkAspectFrame *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Assistant</name>
    <filename>classGtk_1_1Assistant.html</filename>
    <base>Gtk::Window</base>
    <member kind="typedef">
      <type>sigc::slot&lt; int, int &gt;</type>
      <name>SlotForwardPage</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a7326470851a3e83b10aa2023409e6a32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Assistant</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>af6a8c3a9bb29b32c717920508e6285b0</anchor>
      <arglist>(Assistant &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Assistant &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>adf0c024603ae73480b6ea456e2aa38c2</anchor>
      <arglist>(Assistant &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Assistant</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>ad67f438a8ae63daeea633c434eef60f2</anchor>
      <arglist>(const Assistant &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Assistant &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>aea5be1ef05b6292b26446c2cd2a0c6bc</anchor>
      <arglist>(const Assistant &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Assistant</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a2e01792f4937772592e0bc9f1afa2aa4</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkAssistant *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a78d17b7343a51083a6b1b9e02d32b730</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkAssistant *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>ae800c8149e8e6b3daa32f61a5862ffab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Assistant</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a907f6de87e742c7174eaa95e6a536324</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>next_page</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a4daa611140246d50429f7b2d6ba44c09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>previous_page</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a91052d897d6517a7bdbd794bd2a61ee4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_current_page</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a86f6fde497bf4e1c356f918d226510a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_current_page</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>ad9b263c4058a718fcaf560a6a1e9d847</anchor>
      <arglist>(int page_num)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_n_pages</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>addd90d0ebcb5d5403c3e20f157ed1c39</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_nth_page</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>af71ab8d6e2bd0e0d5d6631190388deaa</anchor>
      <arglist>(int page_num)</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_nth_page</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a093c3c536d875da20eaec3081efbc175</anchor>
      <arglist>(int page_num) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>prepend_page</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a25de78cb8625390ad5a41eb3163b3443</anchor>
      <arglist>(Widget &amp;page)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>append_page</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>ab8f7c8233130394b2180c109ae7cf71e</anchor>
      <arglist>(Widget &amp;page)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>insert_page</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>abfe5aac9da831bd99cd5c64a1bd5de23</anchor>
      <arglist>(Widget &amp;page, int position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_page</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a4e804ddd9e0830ecd3aa3f628a271ce2</anchor>
      <arglist>(int page_num)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_forward_page_func</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>ab8cc9c392b6690da67c0b4ee4b309869</anchor>
      <arglist>(const SlotForwardPage &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_page_type</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>acf47c5b95dd64ffd7415d724f18b178d</anchor>
      <arglist>(const Widget &amp;page, AssistantPageType type)</arglist>
    </member>
    <member kind="function">
      <type>AssistantPageType</type>
      <name>get_page_type</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a90b5c7f6bf1ba77d8609a92df8ba5e40</anchor>
      <arglist>(const Widget &amp;page) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_page_title</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a8c146518969bda1e9a003d36a4c0a086</anchor>
      <arglist>(const Widget &amp;page, const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_page_title</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>ac24d116d8b92040c201db363a7a046b4</anchor>
      <arglist>(const Widget &amp;page) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_page_header_image</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a8df579b8b96827711c320374f3dca85a</anchor>
      <arglist>(const Widget &amp;page, const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;pixbuf)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>get_page_header_image</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a33901fb13ebddeabea8fa33910a6f3c1</anchor>
      <arglist>(const Widget &amp;page)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Pixbuf &gt;</type>
      <name>get_page_header_image</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a3db74dcabe52f18bc61790a70b1a9a64</anchor>
      <arglist>(const Widget &amp;page) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_page_side_image</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a144eb1e3290c8254a073eabb88caff4b</anchor>
      <arglist>(const Widget &amp;page, const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;pixbuf)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>get_page_side_image</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>aa3a9d09a703d923ea5f69ddab324d58d</anchor>
      <arglist>(const Widget &amp;page)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Pixbuf &gt;</type>
      <name>get_page_side_image</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a59a448e05847cbdb768adb4002f034a3</anchor>
      <arglist>(const Widget &amp;page) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_page_complete</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a65f6446ad7ec44df70ac55ceb859e30a</anchor>
      <arglist>(const Widget &amp;page, bool complete=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_page_complete</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a74e1f0a27640d1c5c83e3aff7126f71d</anchor>
      <arglist>(const Widget &amp;page) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_action_widget</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>acaca72842488d02a69c70f5887579aef</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_action_widget</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a2979d33243ff74a9ef8a711960902b2f</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update_buttons_state</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a7d791a2376d7e804e4dc598d370e7680</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>commit</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a331e783f3f63f83392dd5506e5256d09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_page_has_padding</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a027f09a6a8abc0607c339ee16263b11b</anchor>
      <arglist>(const Widget &amp;page, bool has_padding=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_page_has_padding</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a88247278a96699c9c614894285ecc348</anchor>
      <arglist>(const Widget &amp;page) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, Gtk::Widget * &gt;</type>
      <name>signal_prepare</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a6698a33e062781efb811aeafe0b6cfc2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_apply</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>af7a25fba94cf94b9bb24e4f1639bc0e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_close</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a90b65f324dec5caf34181490195158a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_cancel</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>ac7ad32ed3c38248514e32e0d9f71bfd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_header_bar</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a6f3e22cf2e50dd2abd21e2c312c306b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>ac710ec78f187541fffe1499e8ce9587a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_prepare</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>ac7b7308394dd9c5985ecd0dc69167b59</anchor>
      <arglist>(Gtk::Widget *page)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_apply</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>aca17cedc0c87fc1b5f21113e672393a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_close</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>a2f5bedd0787ccf334d4224cf24641d1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_cancel</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>af4d8858cd18fb44396c8a717e65f1751</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Assistant *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Assistant.html</anchorfile>
      <anchor>abf6f2a854862d49bd3c354eab9528cfb</anchor>
      <arglist>(GtkAssistant *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Bin</name>
    <filename>classGtk_1_1Bin.html</filename>
    <base>Gtk::Container</base>
    <member kind="function">
      <type></type>
      <name>Bin</name>
      <anchorfile>classGtk_1_1Bin.html</anchorfile>
      <anchor>a6c4616b40581a174d2e5768c03e64876</anchor>
      <arglist>(Bin &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Bin &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Bin.html</anchorfile>
      <anchor>a0ab4413cbe9b15c87c52452243486474</anchor>
      <arglist>(Bin &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Bin</name>
      <anchorfile>classGtk_1_1Bin.html</anchorfile>
      <anchor>a243916b13c95e0606968601fb7e6ac56</anchor>
      <arglist>(const Bin &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Bin &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Bin.html</anchorfile>
      <anchor>a5ce307e83c722e173b5f0167fe105a85</anchor>
      <arglist>(const Bin &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Bin</name>
      <anchorfile>classGtk_1_1Bin.html</anchorfile>
      <anchor>ae1c4f4425c3056f549183ad7ef59ea90</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkBin *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Bin.html</anchorfile>
      <anchor>a6fef1f41c67a588dd33087ea479e0ad1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkBin *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Bin.html</anchorfile>
      <anchor>ad6db11cd388872c6ee36aee075478374</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1Bin.html</anchorfile>
      <anchor>a7afc2bbea00b279e85fbefacf6f51c97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Gtk::Widget *</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1Bin.html</anchorfile>
      <anchor>a8e7fef9251afa541318bb53dcf3098db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classGtk_1_1Bin.html</anchorfile>
      <anchor>aa1e7fba8461ffc4e8676ea3be6f40f2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_label</name>
      <anchorfile>classGtk_1_1Bin.html</anchorfile>
      <anchor>a1ee817897a75be90dbf6de3c71162707</anchor>
      <arglist>(const Glib::ustring &amp;label, bool mnemonic=false, double x_align=0.5, double y_align=0.5)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_label</name>
      <anchorfile>classGtk_1_1Bin.html</anchorfile>
      <anchor>a681849ee3721c96b322ee2ebfa61aebb</anchor>
      <arglist>(const Glib::ustring &amp;label, bool mnemonic, Align x_align, Align y_align=ALIGN_CENTER)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_pixlabel</name>
      <anchorfile>classGtk_1_1Bin.html</anchorfile>
      <anchor>ab427e5821a49c556a4885144c03e985b</anchor>
      <arglist>(const std::string &amp;pixfile, const Glib::ustring &amp;label, double x_align=0.5, double y_align=0.5)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_pixlabel</name>
      <anchorfile>classGtk_1_1Bin.html</anchorfile>
      <anchor>a4766b1f72e34f96008e849601e937106</anchor>
      <arglist>(const std::string &amp;pixfile, const Glib::ustring &amp;label, Align x_align, Align y_align=ALIGN_CENTER)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Bin.html</anchorfile>
      <anchor>ad458a37548f6c0b4053b92a10eab68b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Bin</name>
      <anchorfile>classGtk_1_1Bin.html</anchorfile>
      <anchor>a30c4f95f2734bcd253e279a42117f9c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Bin *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Bin.html</anchorfile>
      <anchor>a3fef7943ef681ada63356ac3ec232f90</anchor>
      <arglist>(GtkBin *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Border</name>
    <filename>classGtk_1_1Border.html</filename>
    <member kind="function">
      <type></type>
      <name>Border</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>a69b6866fc29d10f4561a8bfef57dbdae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Border</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>addb7469760afb844fa3da19ad121a692</anchor>
      <arglist>(GtkBorder *gobject, bool make_a_copy=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Border</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>a9276d025ac8ae896da7a6daf63199574</anchor>
      <arglist>(const Border &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Border &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>aebff09946686f815ec1521e259b1d7b5</anchor>
      <arglist>(const Border &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Border</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>a4d320a532aa0ad96a3eac2b1956ec44e</anchor>
      <arglist>(Border &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Border &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>a257bcb34efb3911ee2376673cd543ea2</anchor>
      <arglist>(Border &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Border</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>acf2636c9b6b3d7691665be9ab11ec564</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>ab7855f9d7ff3bbd48c5adcc72832b493</anchor>
      <arglist>(Border &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GtkBorder *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>adb055977f797045375454ee7a69c81f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkBorder *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>a85713ee43225e0e8c28864dd6238d4d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkBorder *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>abc6d250fbee6866c06fb82f61ef15bcc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_left</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>acedffdcb4b7efbd8c7b1e47b1386a0a4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_left</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>ac07e35dfa5d2c3424e24336d9e8b0876</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_right</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>a987328ec9806183fac7c9fb49462bc62</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_right</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>aaeedd2506a8e421c8ec5d466279cf309</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_top</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>abc222e5d78880d327817bbc28ac2fe63</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_top</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>a2c9d581c9f2013de4fffeab17ae5ec18</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_bottom</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>a11674a60d5abc37c2c61e9db16cbbf02</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_bottom</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>a8e13fe8d68ddd34d51c95e3b42e1b267</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>a955400a9c20d2fe9b5ed2eb7d85a8448</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GtkBorder *</type>
      <name>gobject_</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>ad99a0f06f9433ed845b737f017e5bcfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>a9acdf5876177f576856858afb69063b1</anchor>
      <arglist>(Border &amp;lhs, Border &amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Border</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Border.html</anchorfile>
      <anchor>a85817bb7b03f5ffc79ee1c73e4e64c3f</anchor>
      <arglist>(GtkBorder *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Box</name>
    <filename>classGtk_1_1Box.html</filename>
    <base>Gtk::Container</base>
    <base>Gtk::Orientable</base>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>afc18d8b087bbb8c541772ff4a4c1ed62</anchor>
      <arglist>(Box &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Box &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>aae389e4406b2ba12d78f73d3fcce4c02</anchor>
      <arglist>(Box &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a38bd7f171a310ecc9d5d828a10ed40ca</anchor>
      <arglist>(const Box &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Box &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a591c88c05918c1ff2ea988b58f750490</anchor>
      <arglist>(const Box &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Box</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a0f7bf8db9c36d028589e330d647b74c4</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a0c7fda2b5be79b4bd7937f5d0c4be32d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>afe3f8f57d7f557a2625ac718f704d1f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a1080805aaf2c965f01183dc0d943ad80</anchor>
      <arglist>(Orientation orientation=ORIENTATION_HORIZONTAL, int spacing=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack_start</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a31aa59034a669239c4b99a9ced5742d6</anchor>
      <arglist>(Widget &amp;child, bool expand, bool fill, guint padding=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack_start</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>ae1a2ca6c5de8ad4442ed93c2c20eec87</anchor>
      <arglist>(Widget &amp;child, PackOptions options=PACK_EXPAND_WIDGET, guint padding=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack_end</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a1a2894c6723be6147d5c80995fed843a</anchor>
      <arglist>(Widget &amp;child, bool expand, bool fill, guint padding=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack_end</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>ad7b7d66b8d38b11e222da9bb945f036e</anchor>
      <arglist>(Widget &amp;child, PackOptions options=PACK_EXPAND_WIDGET, guint padding=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_homogeneous</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a1598f08c7a2b29fe26ccd5987c339328</anchor>
      <arglist>(bool homogeneous=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_homogeneous</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a719b7898e3e738af429ac96a4c752d65</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_spacing</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>ab5396cb1385f8259bb49a0c78b55087b</anchor>
      <arglist>(int spacing)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_spacing</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a9b1fb932799d7c28b430ade1f65d2fe6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_baseline_position</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a72dfb07ad798a201f12be42de439dff7</anchor>
      <arglist>(BaselinePosition position)</arglist>
    </member>
    <member kind="function">
      <type>BaselinePosition</type>
      <name>get_baseline_position</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a1c60627312179e6bbd1a4a508e6234b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reorder_child</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a2e499a610ba1342ce5859ae421b501d3</anchor>
      <arglist>(Widget &amp;child, int position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_center_widget</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>ae3204f9a5204aa56f8a509bf07d05dd3</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_center_widget</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a85ba349a6d0d6ec3b7e38146e1d2d04b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_center_widget</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a744905e86ccb5b5a3d32eebdbfa8d92a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_center_widget</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>af13507d0e9de243a60deda68de6d9893</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_spacing</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a1143958089177cb9667b227afe134cee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_spacing</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a2782eba574601e95cb84f72fbf4015d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_homogeneous</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a5c541e19f6ce03ca08d47d23a30442f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_homogeneous</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>ae499fe59bb3060a117cbba30aae8f926</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; BaselinePosition &gt;</type>
      <name>property_baseline_position</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a2eb1c39853666369683789ec8f83b584</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; BaselinePosition &gt;</type>
      <name>property_baseline_position</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a98d9331807dbd26ced4fe42756eb7f8c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; bool &gt;</type>
      <name>child_property_expand</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a750785d8cbf17eaeb80b596cab3f1e83</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>child_property_expand</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a27e12512cc0cb8f0b885fbc28acd22df</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; bool &gt;</type>
      <name>child_property_fill</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>ae3d256128e1d0f630f2958e2c17f50e0</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>child_property_fill</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a683be914a63aba2120311867da2c5bd8</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; guint &gt;</type>
      <name>child_property_padding</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>acddf9d502958a720e97716dc0ecc1120</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>child_property_padding</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a28055e3ae350e28769aaad9a26f28d82</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; PackType &gt;</type>
      <name>child_property_pack_type</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a2022dafc87d6962f9985fa4463b6da86</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; PackType &gt;</type>
      <name>child_property_pack_type</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a9e85033ef35e011d0ae76609c48d96a5</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; int &gt;</type>
      <name>child_property_position</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a4befa86069bef6fb32c0740b971b946d</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>child_property_position</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a510a6d4c4019070bedc7475af86683ba</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>aaf23834665f4e2f86c613cd2658ae636</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Box *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Box.html</anchorfile>
      <anchor>a780f8b0bce530c8dbacb01f64615cefd</anchor>
      <arglist>(GtkBox *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Buildable</name>
    <filename>classGtk_1_1Buildable.html</filename>
    <base>Glib::Interface</base>
    <member kind="function">
      <type></type>
      <name>Buildable</name>
      <anchorfile>classGtk_1_1Buildable.html</anchorfile>
      <anchor>a169bd168906310ae757491fc66caba41</anchor>
      <arglist>(Buildable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Buildable &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Buildable.html</anchorfile>
      <anchor>afc542f6365f1ddd771b68fc95009819b</anchor>
      <arglist>(Buildable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Buildable</name>
      <anchorfile>classGtk_1_1Buildable.html</anchorfile>
      <anchor>af70a624155fb5e254be59080412468de</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkBuildable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Buildable.html</anchorfile>
      <anchor>a7985d36d675f0b8bb3bc8ce5cca2e986</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkBuildable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Buildable.html</anchorfile>
      <anchor>a473a9829001f8f0136eecd7bb5ddb523</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_name</name>
      <anchorfile>classGtk_1_1Buildable.html</anchorfile>
      <anchor>a2928e9710be2d55fa34441f400224806</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>classGtk_1_1Buildable.html</anchorfile>
      <anchor>af9815004b205f4dc75c85e6214cd2500</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1Buildable.html</anchorfile>
      <anchor>a3088b7f65ac16a03e2ec7606cfec8ca4</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Buildable.html</anchorfile>
      <anchor>a6b3029d1f7713b06bcd79784ebbad44d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Buildable</name>
      <anchorfile>classGtk_1_1Buildable.html</anchorfile>
      <anchor>afb1d5472f77f9f9176756ce0a3b94d5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Buildable &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Buildable.html</anchorfile>
      <anchor>a988f06e5798940f0934ea76767d79d0e</anchor>
      <arglist>(GtkBuildable *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Builder</name>
    <filename>classGtk_1_1Builder.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>Builder</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a5a42baaaeb35446b0b341461a0796b12</anchor>
      <arglist>(Builder &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Builder &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a74a33dadbd26676d08cdd0af67d66e33</anchor>
      <arglist>(Builder &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Builder</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>ae2f9332bb1b8bad02fcf6a94c4e77d0c</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkBuilder *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a16ab17cd36e636c3f1495ca2ef2a4f49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkBuilder *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a0d39f2751484ec95216add8f6629cc7d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkBuilder *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a43185cdda8ad880fab2b3a9a2c1332d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_from_file</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>aa3f4af4e7eaf7861c8283dc0dbd5254c</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_from_file</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a80771efbfbe5bbc053e8deee93e1e118</anchor>
      <arglist>(const std::string &amp;filename, const char *object_id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_from_file</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a1f9c1e96d66b561bf63df23a32561f9f</anchor>
      <arglist>(const std::string &amp;filename, const Glib::ustring &amp;object_id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_from_file</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a91e457709626ac8e94172cee0ec7173a</anchor>
      <arglist>(const std::string &amp;filename, const std::vector&lt; Glib::ustring &gt; &amp;object_ids)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_from_resource</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a8d8d4cd407615fef3b71da364c1720a0</anchor>
      <arglist>(const std::string &amp;resource_path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_from_resource</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a6f80afb3deb00ab1ca7416d7f5e7c6b8</anchor>
      <arglist>(const std::string &amp;resource_path, const char *object_id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_from_resource</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a25d428b4bff9b39d91c6887524483bd5</anchor>
      <arglist>(const std::string &amp;resource_path, const Glib::ustring &amp;object_id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_from_resource</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a516f4c7802dde8bdc6e022ecec20140d</anchor>
      <arglist>(const std::string &amp;resource_path, const std::vector&lt; Glib::ustring &gt; &amp;object_ids)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_from_string</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>ae3520ee31a98ac30b728f93522de8df5</anchor>
      <arglist>(const Glib::ustring &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_from_string</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>aac7d6c42f7a53f8be084841948b157d0</anchor>
      <arglist>(const Glib::ustring &amp;buffer, const char *object_id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_from_string</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a4fa5d22555a5e0f6e532685fde688734</anchor>
      <arglist>(const Glib::ustring &amp;buffer, const Glib::ustring &amp;object_id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_from_string</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a994c45b0c9649b1cd48bb1f5cd545735</anchor>
      <arglist>(const Glib::ustring &amp;buffer, const std::vector&lt; Glib::ustring &gt; &amp;object_ids)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_from_string</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>ab8c6679c1296d6c4d8590ef907de4d5a</anchor>
      <arglist>(const char *buffer, gsize length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expose_object</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a03e6205cda3bf808c4814a0421465882</anchor>
      <arglist>(const Glib::ustring &amp;name, const Glib::RefPtr&lt; Glib::Object &gt; &amp;object)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expose_widget</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a22180b25c753955cd90d27f316931a8c</anchor>
      <arglist>(const Glib::ustring &amp;name, Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Glib::Object &gt;</type>
      <name>get_object</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a2e2dfd63721cf7dd648e262ed6630f0c</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Glib::Object &gt;</type>
      <name>get_object</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a4bfea876f92fcf4b50642d50257350ca</anchor>
      <arglist>(const Glib::ustring &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_widget</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>ae525dfa187377dcdc1179a52df3d160a</anchor>
      <arglist>(const Glib::ustring &amp;name, T_Widget *&amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_widget</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>aa3fec8b2dc543cf85495e619b3dfd9fd</anchor>
      <arglist>(const Glib::ustring &amp;name, const T_Widget *&amp;widget) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_widget_derived</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>af8b9510f6146cde5364f830494114191</anchor>
      <arglist>(const Glib::ustring &amp;name, T_Widget *&amp;widget, Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_widget_derived</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>abb76b0cf26ba641dc3eb6e11efd452fb</anchor>
      <arglist>(const Glib::ustring &amp;name, const T_Widget *&amp;widget, Args &amp;&amp;...args) const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; Glib::Object &gt; &gt;</type>
      <name>get_objects</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>ad66ffbd57ad7db95963daddfedec920e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; const Glib::Object &gt; &gt;</type>
      <name>get_objects</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a85ede3fdc79dbab53c424f5a2c7e5c04</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_translation_domain</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a9f696bcf8d214f38d61d0d558d641245</anchor>
      <arglist>(const Glib::ustring &amp;domain)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_translation_domain</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a15fbbeccac6df2f40343a688a3ab7257</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_application</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a84489c3dc4fa016fc767e6ab5cbe3dd1</anchor>
      <arglist>(const Glib::RefPtr&lt; Application &gt; &amp;application)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Application &gt;</type>
      <name>get_application</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a8c2a9b465fab3cd72b1f1c4c9ddde9b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Application &gt;</type>
      <name>get_application</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>acc63ffbd4ed3bc52e87ade9e0f7776b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_translation_domain</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a85a82715ada487e10d4f26de1a578f18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_translation_domain</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>ab7a428c017b439a7720bafccbab7c9f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a6064c85a8a8f5be8edaaa182d30ac7fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Builder &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a3e7bd7f95c1ea1f06b4c2c16458403ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Builder &gt;</type>
      <name>create_from_file</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a6c5ea61bdb933606650e7f437d544edd</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Builder &gt;</type>
      <name>create_from_file</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>ae851b019aeb1b8c0891be99ece184146</anchor>
      <arglist>(const std::string &amp;filename, const Glib::ustring &amp;object_id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Builder &gt;</type>
      <name>create_from_file</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a85a5dbb75e4d2fbdcfee52870eb582f0</anchor>
      <arglist>(const std::string &amp;filename, const char *object_id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Builder &gt;</type>
      <name>create_from_file</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a8dbdea67bb752eb66adec24451516df2</anchor>
      <arglist>(const std::string &amp;filename, const std::vector&lt; Glib::ustring &gt; &amp;object_ids)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Builder &gt;</type>
      <name>create_from_resource</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>adfd8cc8a1e10e53c6db6acf46e1c43c9</anchor>
      <arglist>(const std::string &amp;resource_path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Builder &gt;</type>
      <name>create_from_resource</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a0eccb3ffec9dc9eb10d8eff8c81c11ac</anchor>
      <arglist>(const std::string &amp;resource_path, const Glib::ustring &amp;object_id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Builder &gt;</type>
      <name>create_from_resource</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a75140285cc33a3e61c333366224864a7</anchor>
      <arglist>(const std::string &amp;resource_path, const char *object_id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Builder &gt;</type>
      <name>create_from_resource</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>acacd7a1a7cf55a17f0d4dd450c8fb4c6</anchor>
      <arglist>(const std::string &amp;resource_path, const std::vector&lt; Glib::ustring &gt; &amp;object_ids)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Builder &gt;</type>
      <name>create_from_string</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a05f80c899de87e17683af6e5efcb4b41</anchor>
      <arglist>(const Glib::ustring &amp;buffer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Builder &gt;</type>
      <name>create_from_string</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>abba4d2c8c9eca2663137611854423f3f</anchor>
      <arglist>(const Glib::ustring &amp;buffer, const char *object_id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Builder &gt;</type>
      <name>create_from_string</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a500d841b1e8c9b25034ed24625076227</anchor>
      <arglist>(const Glib::ustring &amp;buffer, const Glib::ustring &amp;object_id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Builder &gt;</type>
      <name>create_from_string</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>adca4bd102fa23f4e5b824797699887da</anchor>
      <arglist>(const Glib::ustring &amp;buffer, const std::vector&lt; Glib::ustring &gt; &amp;object_ids)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Builder</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a0ba100f27aca463391d4399f6f1880ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Gtk::Widget *</type>
      <name>get_widget_checked</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>aff746219ab6618caab01984c57ee0161</anchor>
      <arglist>(const Glib::ustring &amp;name, GType type)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>GtkWidget *</type>
      <name>get_cwidget</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a94c23a6163a95da0cb5184dcf2544d4a</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Buildable_Class</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>aff70e86ce70a48bcda46397dd2ad3465</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Builder &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Builder.html</anchorfile>
      <anchor>a0eed615bfe0b8ce06257406172956946</anchor>
      <arglist>(GtkBuilder *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::BuilderError</name>
    <filename>classGtk_1_1BuilderError.html</filename>
    <base>Glib::Error</base>
    <member kind="enumeration">
      <type></type>
      <name>Code</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_TYPE_FUNCTION</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9aa5dc4c393471582267494fcfedae3682</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNHANDLED_TAG</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a7d368b087ffbcc231be2de527b7e3301</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MISSING_ATTRIBUTE</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9abf19cfed11a94160e5c1531e5219a4ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_ATTRIBUTE</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a23dc485dcda432b523c307c4c52b43d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_TAG</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a5681960f6d33aefe7fba19c9e083062d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MISSING_PROPERTY_VALUE</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9ae4af3b6fe81af26e835df022726decc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_VALUE</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a89c9f4349f8b394c04872234f0ae145b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VERSION_MISMATCH</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a0e56f05948ca1101e08ed8afe026878e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DUPLICATE_ID</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9ae83ab35f8108f9e8c15f497ef5f8822b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OBJECT_TYPE_REFUSED</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a1bf738e5834f1def6b47b305cb1a7e97</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEMPLATE_MISMATCH</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a5c50660b3d4a92791df017db4f9c95f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_PROPERTY</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a1e40df6edeb155701f4989b24a7fcbbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_SIGNAL</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a6ace9e20aa9d544e4d5f858e5a9d1040</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_ID</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a6831711fd1460104cf2341705112b34e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_TYPE_FUNCTION</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9aa5dc4c393471582267494fcfedae3682</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNHANDLED_TAG</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a7d368b087ffbcc231be2de527b7e3301</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MISSING_ATTRIBUTE</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9abf19cfed11a94160e5c1531e5219a4ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_ATTRIBUTE</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a23dc485dcda432b523c307c4c52b43d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_TAG</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a5681960f6d33aefe7fba19c9e083062d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MISSING_PROPERTY_VALUE</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9ae4af3b6fe81af26e835df022726decc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_VALUE</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a89c9f4349f8b394c04872234f0ae145b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VERSION_MISMATCH</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a0e56f05948ca1101e08ed8afe026878e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DUPLICATE_ID</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9ae83ab35f8108f9e8c15f497ef5f8822b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OBJECT_TYPE_REFUSED</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a1bf738e5834f1def6b47b305cb1a7e97</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEMPLATE_MISMATCH</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a5c50660b3d4a92791df017db4f9c95f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_PROPERTY</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a1e40df6edeb155701f4989b24a7fcbbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_SIGNAL</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a6ace9e20aa9d544e4d5f858e5a9d1040</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_ID</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>aac9b5e60d4306f8ce1d74e06af3413e9a6831711fd1460104cf2341705112b34e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BuilderError</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>a688d7bb3fa83eb006cb7ec51ec10a939</anchor>
      <arglist>(Code error_code, const Glib::ustring &amp;error_message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BuilderError</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>a18b0b1431b3b0a0519dd5e48b40ffebd</anchor>
      <arglist>(GError *gobject)</arglist>
    </member>
    <member kind="function">
      <type>Code</type>
      <name>code</name>
      <anchorfile>classGtk_1_1BuilderError.html</anchorfile>
      <anchor>a3c14f936234ef288e2cdf3bdcd7c7e31</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Gtk::BuiltinStockID</name>
    <filename>structGtk_1_1BuiltinStockID.html</filename>
    <member kind="variable">
      <type>const char *</type>
      <name>id</name>
      <anchorfile>structGtk_1_1BuiltinStockID.html</anchorfile>
      <anchor>a670c65fbf2cce049af1ef4ae45883dba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Button</name>
    <filename>classGtk_1_1Button.html</filename>
    <base>Gtk::Bin</base>
    <base>Gtk::Activatable</base>
    <member kind="function">
      <type></type>
      <name>Button</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a5485e46625682236051028e0dad1a9a8</anchor>
      <arglist>(Button &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Button &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>ad140d910740624195667ca6bb4d27dc5</anchor>
      <arglist>(Button &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Button</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a262eeb4749b6477a064ca771f5c64fdc</anchor>
      <arglist>(const Button &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Button &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a1bfd7be1d1d0a9f6a585e41bcfd825bc</anchor>
      <arglist>(const Button &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Button</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a273b4e38a5bb8ac755b2279682ccc261</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>aac9db3896fa8b7576c6f3720846faa1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a9ea06156c54545902608286d1a0d0e42</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Button</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a122a26893f0efe761712c453b83e6714</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Button</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a405a4a0363e4be77a71ed83c8fb61b44</anchor>
      <arglist>(const Glib::ustring &amp;label, bool mnemonic=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Button</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>af44d6e2efbb8342da17f7259626e67cc</anchor>
      <arglist>(const StockID &amp;stock_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clicked</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>af4b7ec50762018dac1ce42b8d1a4a797</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_relief</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>ae219b757173e9a91d911aef04a01a6bc</anchor>
      <arglist>(ReliefStyle relief)</arglist>
    </member>
    <member kind="function">
      <type>ReliefStyle</type>
      <name>get_relief</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a2c902cb0c0ac00b26d23a2b04571f9b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_label</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>ad3f9e419fc13a942f679a8545f0d96b6</anchor>
      <arglist>(const Glib::ustring &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_label</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>ae377dbb125d9beb6e6fdd5b191f785aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_underline</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a9c5e6c68d197342c751a22e0403c8e95</anchor>
      <arglist>(bool use_underline=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_use_underline</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a6570250c1d48265aae83b8b6b1eb662f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_stock</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>ad50fe8ec5243d13e8d146c54d12cf5a8</anchor>
      <arglist>(bool use_stock=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_use_stock</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>aa79490e3b6c63a89d0552790792e1b9b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_focus_on_click</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>aab691cee055c3e2850dcb968f7bf94c9</anchor>
      <arglist>(bool focus_on_click=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_focus_on_click</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>ab1800f6488996503da0e80613d52e6fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_alignment</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a7b204372b3ee1395290cfad7033c08fb</anchor>
      <arglist>(float xalign, float yalign)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_alignment</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a5077c50492734651ff9669f7ef1c8d47</anchor>
      <arglist>(float &amp;xalign, float &amp;yalign)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_image_from_icon_name</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a6c027e7c1a2d28ce397c719551e5036b</anchor>
      <arglist>(const Glib::ustring &amp;icon_name, IconSize size=ICON_SIZE_BUTTON)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_image_from_icon_name</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a549bcbbf1b8bcfb71aebcfbb59f3ee0c</anchor>
      <arglist>(const Glib::ustring &amp;icon_name, IconSize size, bool use_fallback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_image</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>ac49972018a8ed3392e897cdf9da66391</anchor>
      <arglist>(Widget &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_image</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a18bc83ac500da4a119c67fbf2dd03b76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_image</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a05db2376a19eae4c44379c94def46685</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_image_position</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a4d4ebee42b3c2255147999f3d385e19c</anchor>
      <arglist>(PositionType position)</arglist>
    </member>
    <member kind="function">
      <type>PositionType</type>
      <name>get_image_position</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>ab84644d4051e2d3fd5015360f2bef426</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_always_show_image</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a4fc0d5c823a3fe1db135eb772e3107ff</anchor>
      <arglist>(bool always_show=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_always_show_image</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>af91c6c1cdb47c240b8991ff16f80e9f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Window &gt;</type>
      <name>get_event_window</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a2f5566c4321c392a2fe6654b0db9ad0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Window &gt;</type>
      <name>get_event_window</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>ab5239dd4a1b3308742d6d3840289b457</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_pressed</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a3703813b7398a9b0f63cb489a8842b0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_released</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>af8cbda1eac2aeb4309e1005340074452</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_clicked</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a2fa59b52db13af1de45b2745ea6d70c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_enter</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>acdb3e1e931b8ac6eaf8b7c2cbb27664e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_leave</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a23abc23545f8d3bfe629667012a3a80e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_activate</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a632e9d6d465bb6fec34e419f01abde41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_label</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a010a4c64957e08a2a2274d8b7ba457e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_label</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a2eb502c8607e071acee3a04d0d4424f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; ReliefStyle &gt;</type>
      <name>property_relief</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a1ae36f6e5465719831f0e70cac366ec0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; ReliefStyle &gt;</type>
      <name>property_relief</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>aadc1ed34a92e812f4859f8cf3f1db47d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_underline</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>ace742e092adfca1c411d934dd7f23e32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_underline</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a3fbcf9ca96f57846985ec067ebac1ef1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_stock</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a2f5592c510d0ae65557faf7996703eef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_stock</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a64fe1ee971ee4fb2d996e607865bbf9a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_focus_on_click</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a4f1ab612514c8beb5ffabd6a0cc9ab3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_focus_on_click</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a56447855f61adfcd5070de5248f2dcc9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; float &gt;</type>
      <name>property_xalign</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a4381bdd975343e77e374a5956a43e47a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; float &gt;</type>
      <name>property_xalign</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a48955f8cf60472be98338b088b974b40</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; float &gt;</type>
      <name>property_yalign</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a324dcc0b96fb2b3d369426012669719d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; float &gt;</type>
      <name>property_yalign</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>ade1f62d38006f94866ae64e470311608</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gtk::Widget * &gt;</type>
      <name>property_image</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a5a841fff1911ad764e4fea913f25d6ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gtk::Widget * &gt;</type>
      <name>property_image</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>aa33fd5552296fd1a341baf52eb1a54c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; PositionType &gt;</type>
      <name>property_image_position</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a6c0f6f8f4ad562f38e8988f2add6292f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; PositionType &gt;</type>
      <name>property_image_position</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a5a669cab5ea75c7df342ad55ae58b895</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_always_show_image</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a1624e64213ae82b8ef07bfbf1908ec87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_always_show_image</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a2e07701d2cbe1ddb7c8b67602f11afd2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a2c1da221200a5abac95338416094ba79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_pressed</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>ab7cb1b5d352e7ca2d21ea5e8243c0a8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_released</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>ac10be7bca1f046b9fe1b5e1acf47c1cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_clicked</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>abdd079e988525e00b432190866cdc59f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_enter</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a9de0aa98cfb93f5867d7b2facfbf70ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_leave</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>aef824780a36ce218b400e228d46cc21a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_activate</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>ac5b1ec6552c46f56f10302556372baae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Button *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Button.html</anchorfile>
      <anchor>a97111e31bc75c69c524fa2a944719a03</anchor>
      <arglist>(GtkButton *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ButtonBox</name>
    <filename>classGtk_1_1ButtonBox.html</filename>
    <base>Gtk::Box</base>
    <member kind="function">
      <type></type>
      <name>ButtonBox</name>
      <anchorfile>classGtk_1_1ButtonBox.html</anchorfile>
      <anchor>a6d5a5992548cc38f89ce5e1fdfb90f17</anchor>
      <arglist>(ButtonBox &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ButtonBox &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ButtonBox.html</anchorfile>
      <anchor>abfd3060df43fe7a578e37dc880b64caf</anchor>
      <arglist>(ButtonBox &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ButtonBox</name>
      <anchorfile>classGtk_1_1ButtonBox.html</anchorfile>
      <anchor>a641831441a1ae307bba38ed2c90bb911</anchor>
      <arglist>(const ButtonBox &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ButtonBox &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ButtonBox.html</anchorfile>
      <anchor>a004203857f35ef0fc350aca96412cbc0</anchor>
      <arglist>(const ButtonBox &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ButtonBox</name>
      <anchorfile>classGtk_1_1ButtonBox.html</anchorfile>
      <anchor>a9d13c4cc942bd88b2f1ebfde21e613c5</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkButtonBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ButtonBox.html</anchorfile>
      <anchor>adec8c517273a81eb821ee4276adeed31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkButtonBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ButtonBox.html</anchorfile>
      <anchor>a803d54bafb50a56aaa41e1c3fdc9e7e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ButtonBox</name>
      <anchorfile>classGtk_1_1ButtonBox.html</anchorfile>
      <anchor>a3c6d385294f94aa6b039ed91df65d69e</anchor>
      <arglist>(Orientation orientation=ORIENTATION_HORIZONTAL)</arglist>
    </member>
    <member kind="function">
      <type>ButtonBoxStyle</type>
      <name>get_layout</name>
      <anchorfile>classGtk_1_1ButtonBox.html</anchorfile>
      <anchor>a1800f85282ada142addf5001594a0902</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_layout</name>
      <anchorfile>classGtk_1_1ButtonBox.html</anchorfile>
      <anchor>a15811a904e7b59fddcdb0f4e863717a4</anchor>
      <arglist>(ButtonBoxStyle layout_style)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_child_secondary</name>
      <anchorfile>classGtk_1_1ButtonBox.html</anchorfile>
      <anchor>a13d4f662a85207efa73aeb6be5caec7b</anchor>
      <arglist>(Widget &amp;child, bool is_secondary=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_child_secondary</name>
      <anchorfile>classGtk_1_1ButtonBox.html</anchorfile>
      <anchor>a693bb72957205bc11e832516aedfd1b9</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_child_non_homogeneous</name>
      <anchorfile>classGtk_1_1ButtonBox.html</anchorfile>
      <anchor>a2418269d2b3a8c9833d907792ec1bf20</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_child_non_homogeneous</name>
      <anchorfile>classGtk_1_1ButtonBox.html</anchorfile>
      <anchor>aa0eb71ddf38681ba7674d44c0f01c5e1</anchor>
      <arglist>(Gtk::Widget &amp;child, bool non_homogeneous=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; ButtonBoxStyle &gt;</type>
      <name>property_layout_style</name>
      <anchorfile>classGtk_1_1ButtonBox.html</anchorfile>
      <anchor>a6c37b77486a4bd5c3ec74c8b1b9eeb38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; ButtonBoxStyle &gt;</type>
      <name>property_layout_style</name>
      <anchorfile>classGtk_1_1ButtonBox.html</anchorfile>
      <anchor>a75c7a734435dd613245a7944fdba5c99</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ButtonBox.html</anchorfile>
      <anchor>a3c73fcccff706563142299bec3db7e9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ButtonBox *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ButtonBox.html</anchorfile>
      <anchor>a79244660dffe3c1053c6843ddbc580db</anchor>
      <arglist>(GtkButtonBox *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Calendar</name>
    <filename>classGtk_1_1Calendar.html</filename>
    <base>Gtk::Widget</base>
    <member kind="typedef">
      <type>sigc::slot&lt; Glib::ustring, guint, guint, guint &gt;</type>
      <name>SlotDetails</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>ac704f81ab8d5a973066ea03e1654c656</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Calendar</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>ade57bbfd07fb3efaf9d500a0678e48a9</anchor>
      <arglist>(Calendar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Calendar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a87d62a957a0b8d488bff03736fc9e28b</anchor>
      <arglist>(Calendar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Calendar</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>add1c5e6f15c1b04fc4e34c7d49579c0d</anchor>
      <arglist>(const Calendar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Calendar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>ae9c447b5c4e524d0fe3b6833b34a8da9</anchor>
      <arglist>(const Calendar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Calendar</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>adde14f7cbbc34f540164321da6c705bf</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCalendar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a5c77fb789d84dbd63f0a9cbc289ca3d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCalendar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a4e47c8486de0a1bcf2bec3fa3f6111d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Calendar</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a44069a16e8d7d2fff4b2bea6d2191661</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select_month</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>aefcdaf1927e0a6fc14f56e3744e48ee2</anchor>
      <arglist>(guint month, guint year)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select_day</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a00e76de4a5407ea3a63538cdccff6daa</anchor>
      <arglist>(guint day)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mark_day</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>af92533fa25818edd3cb67f3fd9b971d7</anchor>
      <arglist>(guint day)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unmark_day</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a500a98035164ca01e0d7e063f41d9011</anchor>
      <arglist>(guint day)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_marks</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>ae0a2704feea898f8d788a6549b09bcc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_display_options</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>ae58391c81deeec0bd7addccef24085b7</anchor>
      <arglist>(CalendarDisplayOptions flags)</arglist>
    </member>
    <member kind="function">
      <type>CalendarDisplayOptions</type>
      <name>get_display_options</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>add5cafabebdbc6b75bf36f00d6e85ab0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_date</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a6632384e2a350a75dc2f348325db24bc</anchor>
      <arglist>(guint &amp;year, guint &amp;month, guint &amp;day) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_date</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>ae19f2790242828c1dcbcee73068293dc</anchor>
      <arglist>(Glib::Date &amp;date) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_detail_func</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a26c7652793bda53f093700246512ed40</anchor>
      <arglist>(const SlotDetails &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_detail_width_chars</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>ab06e1330709dca61bde3e26c9e5fa9d6</anchor>
      <arglist>(int chars)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_detail_height_rows</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a7629cb2d35fd2a69aea34a4189e3dcea</anchor>
      <arglist>(int rows)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_detail_width_chars</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a76efcc8bf4c580df3ea939ed48803488</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_detail_height_rows</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a76d5fdf4012f897e97596d25bd898be3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_day_is_marked</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>af67032c1d7ed7b85893bbc7534617571</anchor>
      <arglist>(guint day) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_month_changed</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>ada656f0c32b4e6d1074edb09d5c63978</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_day_selected</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a5cb121b81c168a138ab2168416345b97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_day_selected_double_click</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a3f33e6c8f6dd65934c3332b59962a9ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_prev_month</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>aaef02f81ffe8abdc8311b7303ee4721c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_next_month</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a1dd63a2bdca594776b1564ba162aae8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_prev_year</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>adeaf5eef0670b85dff4bcbe4afdb08f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_next_year</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a6fcd4f852dce7f4b3b9702481309f013</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_year</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a0827d9e2cc2989fc9bd19c072defa3f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_year</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a31602c2413c736e5e1dfb2a1e4a8c3a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_month</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a1f7f38b4ac96d91fdbd4f78495380e34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_month</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>ac36ee855093fa8b8c56a985d94d0b1bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_day</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>aca8612f01e641072e27a2b620ff5e0d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_day</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>af1f3934bbc6a4de3975d740685427631</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_heading</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>ac6ebca5272de3bb89b92a90f707e803e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_heading</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>aeaf982f597a63e610c9aff722a42f79a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_day_names</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a6e7aa2bb303e55dce412a74d48da38b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_day_names</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a0ebdd7eed65fb98f57cdf2d48a2f9d13</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_no_month_change</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a8cc9d3fca46b47c30d9890f025e75839</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_no_month_change</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a2e9e7cacb9041b6dee494ce85067de00</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_week_numbers</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a3c1e5c710d6227bfb0c216249b7f4559</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_week_numbers</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a606047533c60acce617c9b17419a5b0c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_details</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>aea362d15f11bbce65cd2065a54915c9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_details</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a4853bc0691d33718b329f6d1bc47e41b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_detail_width_chars</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>aba7323e408bb50e20849c93294c8d9e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_detail_width_chars</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a9df7f68c4aaf9942cb9c9ec98e8cb7fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_detail_height_rows</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a2ba093085e8cea033af17d0c96fca690</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_detail_height_rows</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>ae519ce780b25aceac4f5ccc28d691ec6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a818f9a159d40703379724fad58e8405d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_month_changed</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a7a1a64524f92f030fef52a88357cbb15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_day_selected</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>acfc9a50eca9659bc0869d35e74b9bb7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_day_selected_double_click</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a2b365af88044c0d062b8d2c662c96e16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_prev_month</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a221655a445be980e0e902e0d2f8339da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_next_month</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a0dc6411af54a669a92d9f8b85a4183e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_prev_year</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a8a393a6d33a5f24181cf6a39af7eec69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_next_year</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>a1336b7e42f2e355a9e51235dd27ade7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Calendar *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Calendar.html</anchorfile>
      <anchor>ae5253278f825c59dc7e971814fe74c6e</anchor>
      <arglist>(GtkCalendar *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CellArea</name>
    <filename>classGtk_1_1CellArea.html</filename>
    <base>Glib::Object</base>
    <base>Gtk::Buildable</base>
    <base>Gtk::CellLayout</base>
    <member kind="typedef">
      <type>sigc::slot&lt; bool, CellRenderer * &gt;</type>
      <name>SlotForeach</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a2219c8d5cb45045d393bd5324bad5c61</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; bool, CellRenderer *, const Gdk::Rectangle &amp;, const Gdk::Rectangle &amp; &gt;</type>
      <name>SlotForeachAlloc</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>ac628fc26a46577724eabd09f6ddba579</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellArea</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a13603471814adcdaec95f57976bc9841</anchor>
      <arglist>(CellArea &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CellArea &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a71c8a02d72e5cf28f77f4cdde8c8e43a</anchor>
      <arglist>(CellArea &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellArea</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a8eb401b360fd80167a67b20ed40cda15</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCellArea *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>aab368879a43f6d4f8c035c467c8c2bba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCellArea *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a9458e202368299b5554e6ab36d15396f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkCellArea *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a456fc286d5c27399f6aab21a9e58412b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>ac9b1cfdfcf3b8ccfe4e60b4eb1871b65</anchor>
      <arglist>(CellRenderer &amp;renderer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a520a63f3a112b55ed1ea3d1af9d34854</anchor>
      <arglist>(CellRenderer &amp;renderer)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_renderer</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a3de0adce00b8d27a667202d7953814f1</anchor>
      <arglist>(CellRenderer &amp;renderer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>foreach</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a203eda500f751518538321346d5761f0</anchor>
      <arglist>(const SlotForeach &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>foreach</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>ae43e394cdb508af89d8d61a96718c0e8</anchor>
      <arglist>(const Glib::RefPtr&lt; CellAreaContext &gt; &amp;context, Widget *widget, const Gdk::Rectangle &amp;cell_area, const Gdk::Rectangle &amp;background_area, const SlotForeachAlloc &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>event</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a11d0badf509def5a4cfd534c6df7c742</anchor>
      <arglist>(const Glib::RefPtr&lt; CellAreaContext &gt; &amp;context, Widget &amp;widget, GdkEvent *gdk_event, const Gdk::Rectangle &amp;cell_area, GtkCellRendererState flags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a3499067eaeb303c76580115bd440f618</anchor>
      <arglist>(const Glib::RefPtr&lt; CellAreaContext &gt; &amp;context, Widget &amp;widget, const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;cr, const Gdk::Rectangle &amp;background_area, const Gdk::Rectangle &amp;cell_area, CellRendererState flags, bool paint_focus)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_cell_allocation</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a12ba3d906675a5e7d249f85da141f123</anchor>
      <arglist>(const Glib::RefPtr&lt; CellAreaContext &gt; &amp;context, Widget &amp;widget, CellRenderer &amp;renderer, const Gdk::Rectangle &amp;cell_area, Gdk::Rectangle &amp;allocation)</arglist>
    </member>
    <member kind="function">
      <type>CellRenderer *</type>
      <name>get_cell_at_position</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a524935afa72300fe831edd257d1bcfc4</anchor>
      <arglist>(const Glib::RefPtr&lt; CellAreaContext &gt; &amp;context, Widget &amp;widget, const Gdk::Rectangle &amp;cell_area, int x, int y, Gdk::Rectangle &amp;alloc_area)</arglist>
    </member>
    <member kind="function">
      <type>const CellRenderer *</type>
      <name>get_cell_at_position</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a678a9ce73be27fa65ecb3a35ac819083</anchor>
      <arglist>(const Glib::RefPtr&lt; CellAreaContext &gt; &amp;context, Widget &amp;widget, const Gdk::Rectangle &amp;cell_area, int x, int y, Gdk::Rectangle &amp;alloc_area) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; CellAreaContext &gt;</type>
      <name>create_context</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a3507e405af9e6d2c7f682ca101783e9a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; CellAreaContext &gt;</type>
      <name>copy_context</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a7f4b713ffbb96a563ef394180bd6da75</anchor>
      <arglist>(const Glib::RefPtr&lt; const CellAreaContext &gt; &amp;context)</arglist>
    </member>
    <member kind="function">
      <type>SizeRequestMode</type>
      <name>get_request_mode</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a7a3445e0f9cfebd8620ae7600f30e11d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_preferred_width</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>aeba5a9755f2369479ea2faceaebd8afd</anchor>
      <arglist>(const Glib::RefPtr&lt; CellAreaContext &gt; &amp;context, Widget &amp;widget, int &amp;minimum_width, int &amp;natural_width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_preferred_height_for_width</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a4691ab7cbc3defef40d7b7d9b1677582</anchor>
      <arglist>(const Glib::RefPtr&lt; CellAreaContext &gt; &amp;context, Widget &amp;widget, int width, int &amp;minimum_height, int &amp;natural_height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_preferred_height</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>af06a85fee1082f16d6d8b3c672d30c04</anchor>
      <arglist>(const Glib::RefPtr&lt; CellAreaContext &gt; &amp;context, Widget &amp;widget, int &amp;minimum_height, int &amp;natural_height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_preferred_width_for_height</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a2d0412e210d4422950980e9dcd7ccb8f</anchor>
      <arglist>(const Glib::RefPtr&lt; CellAreaContext &gt; &amp;context, Widget &amp;widget, int height, int &amp;minimum_width, int &amp;natural_width)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_current_path_string</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>adc9ebb76c770dd53a71cdb6b32536509</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply_attributes</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>aa54e30a4ab94bc79c06fd79a0ec8d74e</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;tree_model, const TreeModel::iterator &amp;iter, bool is_expander, bool is_expanded)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attribute_connect</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a5eb99d3b2a0cbf7b37545d66f8b5ec46</anchor>
      <arglist>(CellRenderer &amp;renderer, const Glib::ustring &amp;attribute, int column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attribute_disconnect</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a66d20f296654d49bd1707629293c79d5</anchor>
      <arglist>(CellRenderer &amp;renderer, const Glib::ustring &amp;attribute)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>attribute_get_column</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a6cce80b9e54ac8e4ca21aede76f2edb2</anchor>
      <arglist>(CellRenderer &amp;renderer, const Glib::ustring &amp;attribute) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cell_set_property</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a229254fadbf6b1933ed9f92c04dec852</anchor>
      <arglist>(CellRenderer &amp;renderer, const Glib::ustring &amp;property_name, const Glib::ValueBase &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cell_get_property</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a667cec55417983c01ef76a57b7f30c6d</anchor>
      <arglist>(CellRenderer &amp;renderer, const Glib::ustring &amp;property_name, Glib::ValueBase &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_activatable</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a1636e2ed16243d33ddacf3ce24ad319c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>activate</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a33eef08789f8eed37be26f8e6ce6f162</anchor>
      <arglist>(const Glib::RefPtr&lt; CellAreaContext &gt; &amp;context, Widget &amp;widget, const Gdk::Rectangle &amp;cell_area, CellRendererState flags, bool edit_only)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>focus</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a0dc4a1301f7fd3593488ec243e884b86</anchor>
      <arglist>(DirectionType direction)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_focus_cell</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a8cadd20af1162268c82ebc10df1ca5f3</anchor>
      <arglist>(CellRenderer &amp;renderer)</arglist>
    </member>
    <member kind="function">
      <type>CellRenderer *</type>
      <name>get_focus_cell</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>ae0588a1de3d41637ce6c85c659efebbb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CellRenderer *</type>
      <name>get_focus_cell</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a5da21487da6c77be565f19a0b5233d41</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_focus_sibling</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>af602c09ddd7817febcc66d252be76835</anchor>
      <arglist>(CellRenderer &amp;renderer, CellRenderer &amp;sibling)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_focus_sibling</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a223df15eae8c8420fb65f2e6e1d029f5</anchor>
      <arglist>(CellRenderer &amp;renderer, CellRenderer &amp;sibling)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_focus_sibling</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a7566fdf7e64b442779b4d09e02d0dc4d</anchor>
      <arglist>(CellRenderer &amp;renderer, CellRenderer &amp;sibling)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; CellRenderer * &gt;</type>
      <name>get_focus_siblings</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>ae99bbdbcd4ae1a6a960e632cf0fdafdc</anchor>
      <arglist>(CellRenderer &amp;renderer)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const CellRenderer * &gt;</type>
      <name>get_focus_siblings</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>ab84d4874fe45f094e36947b59f7f9909</anchor>
      <arglist>(const CellRenderer &amp;renderer) const </arglist>
    </member>
    <member kind="function">
      <type>CellRenderer *</type>
      <name>get_focus_from_sibling</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a1f0eefd01fac75cbc959bbf8dfe385b0</anchor>
      <arglist>(CellRenderer &amp;renderer)</arglist>
    </member>
    <member kind="function">
      <type>const CellRenderer *</type>
      <name>get_focus_from_sibling</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a1f8b93cd14c1a60f94bcb0c113b49c1a</anchor>
      <arglist>(CellRenderer &amp;renderer) const </arglist>
    </member>
    <member kind="function">
      <type>CellRenderer *</type>
      <name>get_edited_cell</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a84636f609ecd4768fa64481ae41d5710</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CellRenderer *</type>
      <name>get_edited_cell</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a4dcc7feb800717db0562b0d1ae2ee073</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CellEditable *</type>
      <name>get_edit_widget</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a079f52e24a977e2c79e87a4a2f439466</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CellEditable *</type>
      <name>get_edit_widget</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>aab4277fd4e0a1ef7280780b606cc3f2a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>activate_cell</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>aa749fb09b65a8e96104e943852fdd9c5</anchor>
      <arglist>(Widget &amp;widget, CellRenderer &amp;renderer, GdkEvent *gdk_event, const Gdk::Rectangle &amp;cell_area, CellRendererState flags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop_editing</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>aeb0488f07c84c8b5b93f66650c309114</anchor>
      <arglist>(bool canceled)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>inner_cell_area</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a5e774b5a79721ab4743acbe086d60c75</anchor>
      <arglist>(Widget &amp;widget, const Gdk::Rectangle &amp;cell_area, Gdk::Rectangle &amp;inner_area)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>request_renderer</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>ab345aa630cec25fca8791eec098671f5</anchor>
      <arglist>(CellRenderer &amp;renderer, Orientation orientation, Widget &amp;widget, int for_size, int &amp;minimum_size, int &amp;natural_size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a1cf48a42d767811dc34fb771587aadce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>CellArea</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a7f8391dd7d29a8dc8214f7c198494acf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; TreeModel &gt; &amp;, const TreeModel::iterator &amp;, bool, bool &gt;</type>
      <name>signal_apply_attributes</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a32fab31be4a6d0c7b108c9ed4d101005</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Glib::SignalProxy&lt; void, CellRenderer *, CellEditable *, const Gdk::Rectangle &amp;, const Glib::ustring &amp; &gt;</type>
      <name>signal_add_editable</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a8c1695ee6743cd36ba71626437df4807</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Glib::SignalProxy&lt; void, CellRenderer *, CellEditable * &gt;</type>
      <name>signal_remove_editable</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a5a972ea760aeac79ccc1cc1e3b5ecaa1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Glib::SignalProxy&lt; void, CellRenderer *, const Glib::ustring &amp; &gt;</type>
      <name>signal_focus_changed</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a17776b715454021a3a7de5883c47e7ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual SizeRequestMode</type>
      <name>get_request_mode_vfunc</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a06514021b72dc6f81fbd6c9789db2324</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>get_preferred_width_vfunc</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a0dd921aaa76582b45412bd5f9c61d709</anchor>
      <arglist>(const Glib::RefPtr&lt; CellAreaContext &gt; &amp;context, Widget &amp;widget, int &amp;minimum_width, int &amp;natural_width)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>get_preferred_height_for_width_vfunc</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a7ff719a02f2ba9a17e29891e66bc28e0</anchor>
      <arglist>(const Glib::RefPtr&lt; CellAreaContext &gt; &amp;context, Widget &amp;widget, int width, int &amp;minimum_height, int &amp;natural_height)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>get_preferred_height_vfunc</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a2cff57661051a69e0f01b74f3763f607</anchor>
      <arglist>(const Glib::RefPtr&lt; CellAreaContext &gt; &amp;context, Widget &amp;widget, int &amp;minimum_height, int &amp;natural_height)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>get_preferred_width_for_height_vfunc</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a31f558684fc4fe74370dc4a53c165f27</anchor>
      <arglist>(const Glib::RefPtr&lt; CellAreaContext &gt; &amp;context, Widget &amp;widget, int height, int &amp;minimum_width, int &amp;natural_width)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Glib::PropertyProxy&lt; CellRenderer * &gt;</type>
      <name>property_focus_cell</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>ad2c194d4107bc99b7a67584f49de8a4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Glib::PropertyProxy_ReadOnly&lt; CellRenderer * &gt;</type>
      <name>property_focus_cell</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a9c5f43bf70b8deccd3c3bd7b360f9717</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Glib::PropertyProxy_ReadOnly&lt; CellRenderer * &gt;</type>
      <name>property_edited_cell</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a157f7b328d13fa082a6d3c3d04d1a226</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Glib::PropertyProxy_ReadOnly&lt; CellEditable * &gt;</type>
      <name>property_edit_widget</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a18e3da753fd9b9b6baa1a54348a3ce7e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::CellArea &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CellArea.html</anchorfile>
      <anchor>a0033f6f33520fe06a8c37f96e6dc4477</anchor>
      <arglist>(GtkCellArea *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CellAreaBox</name>
    <filename>classGtk_1_1CellAreaBox.html</filename>
    <base>Gtk::CellArea</base>
    <base>Gtk::Orientable</base>
    <member kind="function">
      <type></type>
      <name>CellAreaBox</name>
      <anchorfile>classGtk_1_1CellAreaBox.html</anchorfile>
      <anchor>a48958cfb39929e3c9c52b006616f77ae</anchor>
      <arglist>(CellAreaBox &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CellAreaBox &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellAreaBox.html</anchorfile>
      <anchor>a4377c3aa675a590b694bf4944baad81f</anchor>
      <arglist>(CellAreaBox &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellAreaBox</name>
      <anchorfile>classGtk_1_1CellAreaBox.html</anchorfile>
      <anchor>aec5b75b209dacae18f7e393c341202ad</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCellAreaBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellAreaBox.html</anchorfile>
      <anchor>aa393a19a0e95c95aef928b27db0f7450</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCellAreaBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellAreaBox.html</anchorfile>
      <anchor>ab1a398c97555198dec1f9ea4f2ce207c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkCellAreaBox *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1CellAreaBox.html</anchorfile>
      <anchor>a3a306f162ac4139b10dcedebc20b44d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack_start</name>
      <anchorfile>classGtk_1_1CellAreaBox.html</anchorfile>
      <anchor>aab3173195c0e0c84698b3810339ed6bc</anchor>
      <arglist>(CellRenderer &amp;renderer, bool expand=false, bool align=true, bool fixed=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack_end</name>
      <anchorfile>classGtk_1_1CellAreaBox.html</anchorfile>
      <anchor>a462deec31ada9ce4d0b585e710175b57</anchor>
      <arglist>(CellRenderer &amp;renderer, bool expand=false, bool align=true, bool fixed=false)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_spacing</name>
      <anchorfile>classGtk_1_1CellAreaBox.html</anchorfile>
      <anchor>abf68a184c9df4c20840075f55d206c00</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_spacing</name>
      <anchorfile>classGtk_1_1CellAreaBox.html</anchorfile>
      <anchor>ad34b290ac2f3372c592c928ad1d10ec3</anchor>
      <arglist>(int spacing)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_spacing</name>
      <anchorfile>classGtk_1_1CellAreaBox.html</anchorfile>
      <anchor>a71926f3fa61529ae3c91bb908c03cbb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_spacing</name>
      <anchorfile>classGtk_1_1CellAreaBox.html</anchorfile>
      <anchor>a0713cb6e041eef25154fd370b15c0c62</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CellAreaBox.html</anchorfile>
      <anchor>a2bcf520adbf06cc105a4833309447aa3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; CellAreaBox &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1CellAreaBox.html</anchorfile>
      <anchor>a1aacc4dda14cb40bedc4db44facd0274</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>CellAreaBox</name>
      <anchorfile>classGtk_1_1CellAreaBox.html</anchorfile>
      <anchor>ab385612a0affb9021cb9ee444c0f184b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::CellAreaBox &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CellAreaBox.html</anchorfile>
      <anchor>a9ccc19f3e2da47a483c253644ea7b6b3</anchor>
      <arglist>(GtkCellAreaBox *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CellAreaContext</name>
    <filename>classGtk_1_1CellAreaContext.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>CellAreaContext</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>a39c2f723c5e3cd4e5efcedd9daa7dacc</anchor>
      <arglist>(CellAreaContext &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CellAreaContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>af2bc094231aa022c21819967d55a597a</anchor>
      <arglist>(CellAreaContext &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellAreaContext</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>a4f5946bc0c7b0cf0b540f904bf4bb1b8</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCellAreaContext *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>a023479acaaaea05bc24e62e58037610b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCellAreaContext *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>aff39dc802c0e28a3d56a93ab9a79c056</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkCellAreaContext *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>aa1b1b9b871976dcb77abafe15e66bd0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; CellArea &gt;</type>
      <name>get_area</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>aa8f20a6c5614feac8130102aeab13aec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const CellArea &gt;</type>
      <name>get_area</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>a11ffdee6561505ac8a30d36cf1b969fe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>allocate</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>abf46a8a29730c4894c957093080d2133</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>a0024e5b765c99cbe5f2d5e96b1f07ec2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_preferred_width</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>aa3d50ede2f8907edba650754f7917163</anchor>
      <arglist>(int &amp;minimum_width, int &amp;natural_width) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_preferred_height</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>ac4a1a5189b933c20975eb723dce6bfe8</anchor>
      <arglist>(int &amp;minimum_height, int &amp;natural_height) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_preferred_height_for_width</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>ad852567cbc32957347d9ab709be5a612</anchor>
      <arglist>(int width, int &amp;minimum_height, int &amp;natural_height) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_preferred_width_for_height</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>a72cbbaf148e95aec362e3f5a0e2e50ed</anchor>
      <arglist>(int height, int &amp;minimum_width, int &amp;natural_width) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_allocation</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>a40f7a3d1ca835d0baf467968f4f203a8</anchor>
      <arglist>(int &amp;width, int &amp;height) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_preferred_width</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>af6c9524566779feba52e19ee35ec3737</anchor>
      <arglist>(int minimum_width, int natural_width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_preferred_height</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>afc04823b475bfa715232d94f3edfcf6f</anchor>
      <arglist>(int minimum_height, int natural_height)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; CellArea * &gt;</type>
      <name>property_area</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>ad21d51a697f6a7d05a1fd9a6d925c7c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_minimum_width</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>ae50c962c04d9eeb7485b46f8ab5dbaaa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_natural_width</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>ad5adbc74b2a80bf37dd3e6443c9f64b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_minimum_height</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>a6b228628a160f19e48e7e55e0cee3d3f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_natural_height</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>a04914abfcf80474b785877e557c0db4f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>a6b77bbd75822bc65aa96d08a424e1dd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::CellAreaContext &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CellAreaContext.html</anchorfile>
      <anchor>ad75e8519b766d7bb7c034c0a182a1332</anchor>
      <arglist>(GtkCellAreaContext *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CellEditable</name>
    <filename>classGtk_1_1CellEditable.html</filename>
    <base>Glib::Interface</base>
    <member kind="function">
      <type></type>
      <name>CellEditable</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>a3984e6dda5c04127e5aa928b46b9740d</anchor>
      <arglist>(CellEditable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CellEditable &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>aea25990e221667877b4674af38837f84</anchor>
      <arglist>(CellEditable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellEditable</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>a69aea9f1ee9f990e911ba9177ddf453e</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCellEditable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>a4ed72c5448845c421858991de86b31b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCellEditable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>a7e8a60fe66ff18136a128143c5298eb2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start_editing</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>a199f3c59ea243cc19e8f4950c8d98fa3</anchor>
      <arglist>(GdkEvent *event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>editing_done</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>a364374949e443a813185aa53f324e681</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_widget</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>a5dabc928ae791ae02651c50f93aeeb2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_editing_done</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>a1d284887ce7c17b68e6e996e5a17db1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_remove_widget</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>a9a6db631d34738122eee319249ea1d53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_editing_canceled</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>a3902995583b263b9d7445ff1b1d5e7af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_editing_canceled</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>afdbe1f09fb60ff9d0ed44961df37c5ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>a824be5e18538271f751d56b8fa230902</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>ae830c61582b208385f600ca0d642ad1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>CellEditable</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>af29917f3ffa67959c570f7df88b59a80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>start_editing_vfunc</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>a0c509104afe076d304acf4012defc2d9</anchor>
      <arglist>(GdkEvent *event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_editing_done</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>a93264b6708468f580cbd1966ee028ef6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_remove_widget</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>a479fb3237d999c65677383ff1959a53a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::CellEditable &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CellEditable.html</anchorfile>
      <anchor>a8809c69ce71c7b9b889988ce0224ac3c</anchor>
      <arglist>(GtkCellEditable *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CellLayout</name>
    <filename>classGtk_1_1CellLayout.html</filename>
    <base>Glib::Interface</base>
    <member kind="typedef">
      <type>sigc::slot&lt; void, const TreeModel::const_iterator &amp; &gt;</type>
      <name>SlotCellData</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>aefa8f02e6c9757cbc89651985c6b65d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellLayout</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a57c8016404d666c9cb13a5347e61b8b7</anchor>
      <arglist>(CellLayout &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CellLayout &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a678bf45502c8a5f31db88942f75d429c</anchor>
      <arglist>(CellLayout &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellLayout</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a84414aa5789871b840569beaaeb6643a</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCellLayout *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a175c08fa974896e5fe1cad77ac3de6f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCellLayout *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a75876a398f347198156e8cbf81e30ffd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack_start</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a89207728ee8a7fce871f8b5afd2843c4</anchor>
      <arglist>(const TreeModelColumn&lt; ColumnType &gt; &amp;model_column, bool expand=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack_start</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a9bf15a714d0740e6f3e76e2b0223ddf7</anchor>
      <arglist>(CellRenderer &amp;cell, bool expand=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack_end</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a83e9262b85ca69cd513a110b1d5af4bc</anchor>
      <arglist>(CellRenderer &amp;cell, bool expand=true)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; CellRenderer * &gt;</type>
      <name>get_cells</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a667bb6d38468750a30600575c540b9d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const CellRenderer * &gt;</type>
      <name>get_cells</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>afd982de221438cd4b66bb32017963b55</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CellRenderer *</type>
      <name>get_first_cell</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>aa822386b173fcc643b354a85e87bb03e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CellRenderer *</type>
      <name>get_first_cell</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>ab94f17cd5f54dcb65e69d860870077e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>ab87faf407763c4df8985ac7ff985fad8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_attribute</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>ae1e828ee890b1a27ea8992e67a43faa8</anchor>
      <arglist>(CellRenderer &amp;cell, const Glib::ustring &amp;attribute, int column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_attribute</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>ae5f84edaa30e5c586ca9266961bb4f96</anchor>
      <arglist>(const Glib::PropertyProxy_Base &amp;property, const TreeModelColumnBase &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_attribute</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a26f3fdcf770420862d59de5d81c63192</anchor>
      <arglist>(CellRenderer &amp;cell, const Glib::ustring &amp;attribute, const TreeModelColumnBase &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_cell_data_func</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>ac23a02cf056ff0187092f15051ca4433</anchor>
      <arglist>(CellRenderer &amp;cell, const SlotCellData &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_attributes</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>af6f996cbf2f5f5a447b3f3a3f7399512</anchor>
      <arglist>(CellRenderer &amp;cell)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reorder</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>ae29bdb7e0a9944c2ce45a70f43bcb5fc</anchor>
      <arglist>(CellRenderer &amp;cell, int position)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; CellArea &gt;</type>
      <name>get_area</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a57a4c6c385897e41e8d1cd83376f1c0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const CellArea &gt;</type>
      <name>get_area</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>ab7fa6e620ec3342c21a56f4a5ed8ed79</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack_start</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>ac844de9fca57125f55e64bf288b6d0c4</anchor>
      <arglist>(const TreeModelColumn&lt; T_ModelColumnType &gt; &amp;column, bool expand)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a9531924552d5f7d9d7edee932274fc29</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a648edf6000ee040c77ea1595235d4923</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>CellLayout</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a4ab166e93c529908830b3889c6116bf3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>pack_start_vfunc</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a0a7dc4f737ca7ceb5567ae90fefdfd20</anchor>
      <arglist>(CellRenderer *cell, bool expand)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>pack_end_vfunc</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a1db89a56eaf75ded6d722477b4ee02d3</anchor>
      <arglist>(CellRenderer *cell, bool expand)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>clear_vfunc</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a64ab4021e702f8715af7deb604561b52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>add_attribute_vfunc</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>afc73bf38d630376599ba75a811c84051</anchor>
      <arglist>(CellRenderer *cell, const Glib::ustring &amp;attribute, int column)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>clear_attributes_vfunc</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>af8e8726f66d164f8ea663a026dc0bc38</anchor>
      <arglist>(CellRenderer *cell)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>reorder_vfunc</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a7b815026301beba230e7bbac3634c3c5</anchor>
      <arglist>(CellRenderer *cell, int position)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::CellLayout &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CellLayout.html</anchorfile>
      <anchor>a539219463fddd9da31cd97bbc5f622c1</anchor>
      <arglist>(GtkCellLayout *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CellRenderer</name>
    <filename>classGtk_1_1CellRenderer.html</filename>
    <base>Gtk::Object</base>
    <member kind="function">
      <type></type>
      <name>CellRenderer</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a08ed25222fd88344a8b5ad39a129ab78</anchor>
      <arglist>(CellRenderer &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CellRenderer &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a78846c9dd4dd1b053afae6327615c7c8</anchor>
      <arglist>(CellRenderer &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRenderer</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a773794b7cedbb5a48ebb5e6db0c6d92a</anchor>
      <arglist>(const CellRenderer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CellRenderer &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>abe7702f0a6596f93a12339f572103612</anchor>
      <arglist>(const CellRenderer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellRenderer</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>acef02e679e35c1a7cd917be9e19d8b40</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCellRenderer *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>ae40a869d68ddeb2601ed46c955514688</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCellRenderer *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a8405f042907b039b6bd78882f4bdf8e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SizeRequestMode</type>
      <name>get_request_mode</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>ae59fac729449269bd295d3cf4903f382</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_preferred_width</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a24081eac9512cbe1bfb535679f067ccc</anchor>
      <arglist>(Widget &amp;widget, int &amp;minimum_width, int &amp;natural_width) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_preferred_height_for_width</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a57b27691169b5a243676cccccf931cf1</anchor>
      <arglist>(Widget &amp;widget, int width, int &amp;minimum_height, int &amp;natural_height) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_preferred_height</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>acffeffa12b2d07105dceeb8672f33572</anchor>
      <arglist>(Widget &amp;widget, int &amp;minimum_height, int &amp;natural_height) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_preferred_width_for_height</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a42f7418cb042a079b480c439781d0b71</anchor>
      <arglist>(Widget &amp;widget, int height, int &amp;minimum_width, int &amp;natural_width) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_preferred_size</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>aff30bacc26d6a4aa4a0affc2dd23c17d</anchor>
      <arglist>(Widget &amp;widget, Requisition &amp;minimum_size, Requisition &amp;natural_size) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_aligned_area</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a7c18422faefd1fabdc83608639a56bf3</anchor>
      <arglist>(Widget &amp;widget, CellRendererState flags, const Gdk::Rectangle &amp;cell_area, Gdk::Rectangle &amp;aligned_area)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>aa2f27b9b22dd6eeb71941e96968b954a</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;cr, Widget &amp;widget, const Gdk::Rectangle &amp;background_area, const Gdk::Rectangle &amp;cell_area, CellRendererState flags)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>activate</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>aa345ce649c2b2dced98c865ea2eec55d</anchor>
      <arglist>(GdkEvent *event, Widget &amp;widget, const Glib::ustring &amp;path, const Gdk::Rectangle &amp;background_area, const Gdk::Rectangle &amp;cell_area, CellRendererState flags)</arglist>
    </member>
    <member kind="function">
      <type>CellEditable *</type>
      <name>start_editing</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>aa21fc6826b9a3b0cb8a4dc364df7331e</anchor>
      <arglist>(GdkEvent *event, Widget &amp;widget, const Glib::ustring &amp;path, const Gdk::Rectangle &amp;background_area, const Gdk::Rectangle &amp;cell_area, CellRendererState flags=CellRendererState(0))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_fixed_size</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a342d024078f987be56fe4e3d0e7fd3c4</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_fixed_size</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>ad1913dacd0141352029934ed6e96dd45</anchor>
      <arglist>(int &amp;width, int &amp;height) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_alignment</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a4e9285de25fa7c05d48d6b45cbc36498</anchor>
      <arglist>(float xalign, float yalign)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_alignment</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a885d825836256119e16df0e995fd81a4</anchor>
      <arglist>(float &amp;xalign, float &amp;yalign) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_padding</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>ab1aac5488c6d6340d6a3ec6065383381</anchor>
      <arglist>(int xpad, int ypad)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_padding</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a730191d2c7cd5623f96ca1458ff4aee6</anchor>
      <arglist>(int &amp;xpad, int &amp;ypad) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visible</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a8b70ee1d03b79b89d4b537bd1a49d8fe</anchor>
      <arglist>(bool visible=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_visible</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>af8eb8055f961005e0c73fee0bfac7439</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sensitive</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a464a4354cce4b7cf948d3fa7bccf1ddb</anchor>
      <arglist>(bool sensitive=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_sensitive</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a25b0c5a7d474e60dc16337ed0933e991</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_activatable</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>ad4d3e2b9d0426eec0e1cc01ddde7f70c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop_editing</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>ab77106d860fed2839efeec69becde2a2</anchor>
      <arglist>(bool canceled=false)</arglist>
    </member>
    <member kind="function">
      <type>StateFlags</type>
      <name>get_state</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>af230aa3c205b2f1f67fdeb110cb3cb99</anchor>
      <arglist>(Widget &amp;widget, CellRendererState cell_state) const </arglist>
    </member>
    <member kind="function">
      <type>StateFlags</type>
      <name>get_state</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>afa4a76d178e9543d06be985cfc94259c</anchor>
      <arglist>(CellRendererState cell_state) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_editing_canceled</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a7a9e1b577da34a65fd7fb101d877fe84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, CellEditable *, const Glib::ustring &amp; &gt;</type>
      <name>signal_editing_started</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>af8880f851bbb20252262dbbcbf01522a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; CellRendererMode &gt;</type>
      <name>property_mode</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a3deb3b229d34f94dfed24f126a8a22a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; CellRendererMode &gt;</type>
      <name>property_mode</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a8601d9b681fac8cceef00064c0b616a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_visible</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>af53c9a1f308d36c6a67aaeee8a0639f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_visible</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a1f178e4d721133c849cd1c62cedfa953</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_sensitive</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a02d86b5d3e6d8c01933005735eb8e3d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_sensitive</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a3f452bce914a2edaf5225c85b1f55c8a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; float &gt;</type>
      <name>property_xalign</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a4b7c2f7b770b15ddbb054a908e4fc4f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; float &gt;</type>
      <name>property_xalign</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a04a5739aca52bce6175522ed6f7acca4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; float &gt;</type>
      <name>property_yalign</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>ac8d2a9a1df611b36924bb35fb99bb3f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; float &gt;</type>
      <name>property_yalign</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a488308c6e42ae10a4671bdd844d11c2f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; unsigned int &gt;</type>
      <name>property_xpad</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a3086fd79c791011c53af6d30f8c869f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; unsigned int &gt;</type>
      <name>property_xpad</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>aa8a72f3718b0e5d521cd94693129c1ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; unsigned int &gt;</type>
      <name>property_ypad</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a300c8c7165aa2027b2b02d7017847888</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; unsigned int &gt;</type>
      <name>property_ypad</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>ac83ab03cc7cccbb55433fe9d3f2c8805</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_width</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a9cd8190dff5232319e47c9744c09e579</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_width</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a50f20ba57f100d7adb4208914b74864b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_height</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a3bd864a4b69cc7f12d2d65128fc0c473</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_height</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>ac9494446ea871ccc0fd124b72e2d7919</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_is_expander</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a2b13f9463d1153b87f0d200714c30613</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_is_expander</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a4055aea52dd16d8d6e825bf6a2f65849</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_is_expanded</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>ab07bdc9a8dcaea453516a8490bad8adb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_is_expanded</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a19a8cda9b10b2630166600db6c0c6ff4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_WriteOnly&lt; Glib::ustring &gt;</type>
      <name>property_cell_background</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a1ea01a610f9c4f5b158f96a6b2c2898a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::Color &gt;</type>
      <name>property_cell_background_gdk</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a0d2520461f8042aa7524b699463e9f6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::Color &gt;</type>
      <name>property_cell_background_gdk</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a3174150bd182fdc2e3d28739413ac70b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::RGBA &gt;</type>
      <name>property_cell_background_rgba</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>accc70bdc6ae285a4a9b951c58c0143b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::RGBA &gt;</type>
      <name>property_cell_background_rgba</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a423724ccdd485e081c81e28b2f35a9c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_cell_background_set</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a24ac2b32c9fd6ade15c5884448453209</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_cell_background_set</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a0ab6a8fe1117f68b7346b70f14a66e14</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_editing</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>ab5727620c167faa86c80ef982289443f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>af01767676fbce8db0179a10fd29e60a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_editing_canceled</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a107db713a7444f11af9bd72d6201cc9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_editing_started</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>ad15dd496e9fb3636e8c81156a9e85ee5</anchor>
      <arglist>(CellEditable *editable, const Glib::ustring &amp;path)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>CellRenderer</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>ad0638b8a04dd1676d8619fcce1955576</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual SizeRequestMode</type>
      <name>get_request_mode_vfunc</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>ab79f9a49a9353149724f2ee761e82e15</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>get_preferred_width_vfunc</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a6f6895288f476c5ddd02111dfb484473</anchor>
      <arglist>(Widget &amp;widget, int &amp;minimum_width, int &amp;natural_width) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>get_preferred_height_for_width_vfunc</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a89a6a6f99abacdfcede1d73677beef31</anchor>
      <arglist>(Widget &amp;widget, int width, int &amp;minimum_height, int &amp;natural_height) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>get_preferred_height_vfunc</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>acbbf172c31df6b4f890a2d5976ec2d95</anchor>
      <arglist>(Widget &amp;widget, int &amp;minimum_height, int &amp;natural_height) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>get_preferred_width_for_height_vfunc</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>af144839e1cf45c31b555d3327073c748</anchor>
      <arglist>(Widget &amp;widget, int height, int &amp;minimum_width, int &amp;natural_width) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>render_vfunc</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>aee4a2d48e9ea73329028835adccfc4f2</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;cr, Widget &amp;widget, const Gdk::Rectangle &amp;background_area, const Gdk::Rectangle &amp;cell_area, CellRendererState flags)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>activate_vfunc</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a14dc8ee3bc58bf8a2282df1a6dc693da</anchor>
      <arglist>(GdkEvent *event, Widget &amp;widget, const Glib::ustring &amp;path, const Gdk::Rectangle &amp;background_area, const Gdk::Rectangle &amp;cell_area, CellRendererState flags)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual CellEditable *</type>
      <name>start_editing_vfunc</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>ae2d7434b3e136ed8cabd7e312b0f3c81</anchor>
      <arglist>(GdkEvent *event, Widget &amp;widget, const Glib::ustring &amp;path, const Gdk::Rectangle &amp;background_area, const Gdk::Rectangle &amp;cell_area, CellRendererState flags)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::CellRenderer *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CellRenderer.html</anchorfile>
      <anchor>a7658018083799e3966942a4bd06dc7cf</anchor>
      <arglist>(GtkCellRenderer *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CellRendererAccel</name>
    <filename>classGtk_1_1CellRendererAccel.html</filename>
    <base>Gtk::CellRendererText</base>
    <member kind="function">
      <type></type>
      <name>CellRendererAccel</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>a0393e57da46c6b098068153c4df97bcf</anchor>
      <arglist>(CellRendererAccel &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CellRendererAccel &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>a844fcc70d031c25d0f3ee72d73ab7507</anchor>
      <arglist>(CellRendererAccel &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRendererAccel</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>a0e73a57b7d7a05acaa6520559e143596</anchor>
      <arglist>(const CellRendererAccel &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CellRendererAccel &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>a37d315ba43a9b939a81432c556d40d16</anchor>
      <arglist>(const CellRendererAccel &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellRendererAccel</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>af527ac28895d9f3f85c057524fefdee0</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCellRendererAccel *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>a567331773f8279f30eb07888b648d576</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCellRendererAccel *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>a7c6631761283ded732237183b1ff94c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRendererAccel</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>a8f035435e3c045e1d82c2ec854126727</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::ustring &amp;, guint, Gdk::ModifierType, guint &gt;</type>
      <name>signal_accel_edited</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>a07b60e21069080c7631e552967a21d66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::ustring &amp; &gt;</type>
      <name>signal_accel_cleared</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>a22f67ad7c9e6e9acb8148022eacd692e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_accel_key</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>aaa4bba2600127173498236bda8f9cf0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_accel_key</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>a4f80230221cb855a65be21c32ea1e46d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::ModifierType &gt;</type>
      <name>property_accel_mods</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>a0e8eb5824a3300777aa6180802636194</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::ModifierType &gt;</type>
      <name>property_accel_mods</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>a8c98ae772c585203cd27cbb8b54eb8eb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_keycode</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>aaeb252279c245ca69dcea8fbe491fe4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_keycode</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>aa4c577469aa466a7ca1dc9e3bb41900f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; CellRendererAccelMode &gt;</type>
      <name>property_accel_mode</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>a2874cc8474ec5a7551e0f6c080ff598d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; CellRendererAccelMode &gt;</type>
      <name>property_accel_mode</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>aec6b367f3817669205c3c37bfcc674f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>aa40e5e4a312cebde4df085b67c46a95d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_accel_edited</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>a42ad9fcacba22d73aee430515725d912</anchor>
      <arglist>(const Glib::ustring &amp;path_string, guint accel_key, Gdk::ModifierType accel_mods, guint hardware_keycode)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_accel_cleared</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>ac50a285b3d75972faaeab3e19a9bed00</anchor>
      <arglist>(const Glib::ustring &amp;path_string)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::CellRendererAccel *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CellRendererAccel.html</anchorfile>
      <anchor>a0dec9aeb81020933ed85fefedf0390b7</anchor>
      <arglist>(GtkCellRendererAccel *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CellRendererCombo</name>
    <filename>classGtk_1_1CellRendererCombo.html</filename>
    <base>Gtk::CellRendererText</base>
    <member kind="function">
      <type></type>
      <name>CellRendererCombo</name>
      <anchorfile>classGtk_1_1CellRendererCombo.html</anchorfile>
      <anchor>ac8fc4336dfba8a03dbaeb8277da47498</anchor>
      <arglist>(CellRendererCombo &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CellRendererCombo &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRendererCombo.html</anchorfile>
      <anchor>a1de0e9c83ac71084b36d6dd84f4b28c8</anchor>
      <arglist>(CellRendererCombo &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRendererCombo</name>
      <anchorfile>classGtk_1_1CellRendererCombo.html</anchorfile>
      <anchor>adf2f67e779a6118b85bcde26bad61db2</anchor>
      <arglist>(const CellRendererCombo &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CellRendererCombo &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRendererCombo.html</anchorfile>
      <anchor>afa3c0ab468f7d8ee3524f4cf06692bfd</anchor>
      <arglist>(const CellRendererCombo &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellRendererCombo</name>
      <anchorfile>classGtk_1_1CellRendererCombo.html</anchorfile>
      <anchor>a3e2f7054dea312dc1f1e0672a5182967</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCellRendererCombo *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRendererCombo.html</anchorfile>
      <anchor>afb041ac57316f84c87615f5d87a40f46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCellRendererCombo *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRendererCombo.html</anchorfile>
      <anchor>a48622d77100e104aaae7f02423ec2c11</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRendererCombo</name>
      <anchorfile>classGtk_1_1CellRendererCombo.html</anchorfile>
      <anchor>aae7577cfd6695e9e42576530419b1856</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::ustring &amp;, const TreeModel::iterator &amp; &gt;</type>
      <name>signal_changed</name>
      <anchorfile>classGtk_1_1CellRendererCombo.html</anchorfile>
      <anchor>a440d5fcb39bb53e8820f25f49fe2d450</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gtk::TreeModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1CellRendererCombo.html</anchorfile>
      <anchor>a7ccb0c81d21656cb8045c0cbe9e049f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gtk::TreeModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1CellRendererCombo.html</anchorfile>
      <anchor>afb35fe408e04d9d7570294219141aeec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_text_column</name>
      <anchorfile>classGtk_1_1CellRendererCombo.html</anchorfile>
      <anchor>ac49be590e47430e12481bce25e139044</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_text_column</name>
      <anchorfile>classGtk_1_1CellRendererCombo.html</anchorfile>
      <anchor>a96a24b25bb17a908d1050d268f34f755</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_has_entry</name>
      <anchorfile>classGtk_1_1CellRendererCombo.html</anchorfile>
      <anchor>a39aa48d587c73aa60fa56c23a157e56d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_entry</name>
      <anchorfile>classGtk_1_1CellRendererCombo.html</anchorfile>
      <anchor>a3b87d5447b7e8c829ac5aa6fa7ea504b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CellRendererCombo.html</anchorfile>
      <anchor>a94de19d84e496c95a2ee14ebb9f271c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::CellRendererCombo *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CellRendererCombo.html</anchorfile>
      <anchor>a7287f45ac06c7e15ccb5d12d1fbadd68</anchor>
      <arglist>(GtkCellRendererCombo *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CellRendererPixbuf</name>
    <filename>classGtk_1_1CellRendererPixbuf.html</filename>
    <base>Gtk::CellRenderer</base>
    <member kind="function">
      <type></type>
      <name>CellRendererPixbuf</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>abee68ee4a647ec8b10d842fa9cf1a8d5</anchor>
      <arglist>(CellRendererPixbuf &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CellRendererPixbuf &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>a078de9a121f1dff1e97da9880bad223d</anchor>
      <arglist>(CellRendererPixbuf &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRendererPixbuf</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>a09ee5b7e18146cb3c94dfe3443764267</anchor>
      <arglist>(const CellRendererPixbuf &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CellRendererPixbuf &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>a48fee9a8cedcc7367e100d38844e5787</anchor>
      <arglist>(const CellRendererPixbuf &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellRendererPixbuf</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>aceb04386926b19f6e0471c56bc216f6a</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCellRendererPixbuf *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>a38ecaa50f061a147f204034f401c52a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCellRendererPixbuf *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>a08519413bfc172da579c9ac5f3a9efd6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRendererPixbuf</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>ae9acd752c91bb56b1cd657e669aa74af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gdk::Pixbuf &gt; &gt;</type>
      <name>property_pixbuf</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>a5bd50fbe03e70928eb2034c927f2421d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::Pixbuf &gt; &gt;</type>
      <name>property_pixbuf</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>a41817571c6d93a2b91586132200decdf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gdk::Pixbuf &gt; &gt;</type>
      <name>property_pixbuf_expander_open</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>a143da7ac2453cf6be65b0aef49f62e44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::Pixbuf &gt; &gt;</type>
      <name>property_pixbuf_expander_open</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>a64d4d5c32632c25af504f542a8e53b65</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gdk::Pixbuf &gt; &gt;</type>
      <name>property_pixbuf_expander_closed</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>a50129b2071f30e8c0b9e1446e250f988</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::Pixbuf &gt; &gt;</type>
      <name>property_pixbuf_expander_closed</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>ae9d6031c5c814fd1f17a9e75e905409b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_stock_id</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>ab7bc40a02ce93dad245db39ef0127036</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_stock_id</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>ae58d8c17e99b6df4f6773ecf349650b0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_stock_size</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>ac40d48c82708c113ed395c3c2ffa94b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_stock_size</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>a1744791ba944dc9be7ca4e83b252cf7a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_stock_detail</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>aa828b7b6960a3864f00dccaa56a21281</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_stock_detail</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>adadf7ca29e906269bacaf602d1520c35</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_icon_name</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>a82571dff99ba4c2f1a140aa377397e78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_icon_name</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>ab9836b2e75b1263501d774e5d73247e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_follow_state</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>a871f25c2abeb117091433535847a0f25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_follow_state</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>af6584ab183c63d2e233418e129e6843d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::Icon &gt; &gt;</type>
      <name>property_gicon</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>a78c7ab185e9c5c4cb636ff052fe56ffe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::Icon &gt; &gt;</type>
      <name>property_gicon</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>ab723f97c2587bdcc8a208bb53169c9cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; ::Cairo::RefPtr&lt; ::Cairo::Surface &gt; &gt;</type>
      <name>property_surface</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>a7b5699eca34298d2abb9ddbdbfb720d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; ::Cairo::RefPtr&lt; ::Cairo::Surface &gt; &gt;</type>
      <name>property_surface</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>a2d4dc08fb8978e8cdfb446283d436f6b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>a31ccbb017113cbc74a29da66159c8a48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::CellRendererPixbuf *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CellRendererPixbuf.html</anchorfile>
      <anchor>a116087e1de83b5893eb8a2c7006fb452</anchor>
      <arglist>(GtkCellRendererPixbuf *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CellRendererProgress</name>
    <filename>classGtk_1_1CellRendererProgress.html</filename>
    <base>Gtk::CellRenderer</base>
    <base>Gtk::Orientable</base>
    <member kind="function">
      <type></type>
      <name>CellRendererProgress</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>aefe1c6d9e12f77721b3fc8562b3ea798</anchor>
      <arglist>(CellRendererProgress &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CellRendererProgress &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>afa9a63bb9f120ed069365b41ca90cda1</anchor>
      <arglist>(CellRendererProgress &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRendererProgress</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>a52ef1dfacc9c6d6c0e5b20e3e1ad6984</anchor>
      <arglist>(const CellRendererProgress &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CellRendererProgress &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>a294c1329a6fcd2482b31351c4aff489c</anchor>
      <arglist>(const CellRendererProgress &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellRendererProgress</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>a913295fb972cb19c703b728487f8c97b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCellRendererProgress *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>a3a42e75c6bbd36297994d1b60e1519c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCellRendererProgress *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>a0154cd87faad21c788c63060537fa7e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRendererProgress</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>afd8200e0531263d3244bee234879b5aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_value</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>ad8d359e85e926270dd2c2722d893f058</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_value</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>afeb70133f342a8e63fc7ecb8c4878886</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_text</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>a0b9ca38fb459ef0cf9d2d424aacaf8fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_text</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>a5f7b1e2913a44a9e08b5e8790cb74176</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_pulse</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>ad6f97e106c22f73195aafc72e0b43a11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_pulse</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>a25720af77c6979b4c94b3479afc62ce2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; float &gt;</type>
      <name>property_text_xalign</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>a6a6a65c66af1efb94d06aaa49eb3636f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; float &gt;</type>
      <name>property_text_xalign</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>a9259b50857572bbeef27121f7410c012</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; float &gt;</type>
      <name>property_text_yalign</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>a97305bd6e35627079e42ced8d6050284</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; float &gt;</type>
      <name>property_text_yalign</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>a195c9edfee3934ccc6bab7bd1cf28dc6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_inverted</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>a169475e6b5c06e4b96f0e124a3fed3d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_inverted</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>ab01e3884d651b0eb84066cb2ab3cebc3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>a37955b6642aedd66af62f0c4ce34e537</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::CellRendererProgress *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CellRendererProgress.html</anchorfile>
      <anchor>a0708bec908981fce5f7963308ed117ba</anchor>
      <arglist>(GtkCellRendererProgress *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CellRendererSpin</name>
    <filename>classGtk_1_1CellRendererSpin.html</filename>
    <base>Gtk::CellRendererText</base>
    <member kind="function">
      <type></type>
      <name>CellRendererSpin</name>
      <anchorfile>classGtk_1_1CellRendererSpin.html</anchorfile>
      <anchor>a838b61770e9932750b29e9a4556b4617</anchor>
      <arglist>(CellRendererSpin &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CellRendererSpin &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRendererSpin.html</anchorfile>
      <anchor>a0edf0c1d474f74dc4cf91267c312507f</anchor>
      <arglist>(CellRendererSpin &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRendererSpin</name>
      <anchorfile>classGtk_1_1CellRendererSpin.html</anchorfile>
      <anchor>ad490134d80bd3e46383e2bded8737bcd</anchor>
      <arglist>(const CellRendererSpin &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CellRendererSpin &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRendererSpin.html</anchorfile>
      <anchor>ae81ed13bf5583c84fc598dc03fbde549</anchor>
      <arglist>(const CellRendererSpin &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellRendererSpin</name>
      <anchorfile>classGtk_1_1CellRendererSpin.html</anchorfile>
      <anchor>a3bac5a2eb56bb680adbcae6f73e6f645</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCellRendererSpin *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRendererSpin.html</anchorfile>
      <anchor>a8ac27efa9673efddc3578a4a667774ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCellRendererSpin *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRendererSpin.html</anchorfile>
      <anchor>a3e670860ef7516891525a39187b31c1b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRendererSpin</name>
      <anchorfile>classGtk_1_1CellRendererSpin.html</anchorfile>
      <anchor>abf378becba7ff356df6347c7577fee7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Adjustment &gt; &gt;</type>
      <name>property_adjustment</name>
      <anchorfile>classGtk_1_1CellRendererSpin.html</anchorfile>
      <anchor>a50d83cae2a2dbb303f27bd8df85ca720</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Adjustment &gt; &gt;</type>
      <name>property_adjustment</name>
      <anchorfile>classGtk_1_1CellRendererSpin.html</anchorfile>
      <anchor>a3980f370ef0e6d66a4fc6312a6c310e1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_climb_rate</name>
      <anchorfile>classGtk_1_1CellRendererSpin.html</anchorfile>
      <anchor>af0f5cf6db75c269eb65b4e0b69f1d155</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_climb_rate</name>
      <anchorfile>classGtk_1_1CellRendererSpin.html</anchorfile>
      <anchor>a8223779e348293a4098d8613dc978ca7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_digits</name>
      <anchorfile>classGtk_1_1CellRendererSpin.html</anchorfile>
      <anchor>a042529a1bdc89803d8af51d6fa2be6d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_digits</name>
      <anchorfile>classGtk_1_1CellRendererSpin.html</anchorfile>
      <anchor>abbfe9f004feea81b9680ba583a28b5e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CellRendererSpin.html</anchorfile>
      <anchor>a6da47e0c65be09c5699e86efd7670679</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::CellRendererSpin *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CellRendererSpin.html</anchorfile>
      <anchor>a6b715bad9d4a47ed056ec990eeeaf43f</anchor>
      <arglist>(GtkCellRendererSpin *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CellRendererSpinner</name>
    <filename>classGtk_1_1CellRendererSpinner.html</filename>
    <base>Gtk::CellRenderer</base>
    <member kind="function">
      <type></type>
      <name>CellRendererSpinner</name>
      <anchorfile>classGtk_1_1CellRendererSpinner.html</anchorfile>
      <anchor>a208eee957393586b8337a6f7024b0d80</anchor>
      <arglist>(CellRendererSpinner &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CellRendererSpinner &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRendererSpinner.html</anchorfile>
      <anchor>aec133fa9181b67b9749ec895470b96ff</anchor>
      <arglist>(CellRendererSpinner &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRendererSpinner</name>
      <anchorfile>classGtk_1_1CellRendererSpinner.html</anchorfile>
      <anchor>a43324d5b17786bc396d0a241fd92644d</anchor>
      <arglist>(const CellRendererSpinner &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CellRendererSpinner &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRendererSpinner.html</anchorfile>
      <anchor>a862ee70ddc5afa0b70010f6525602a7c</anchor>
      <arglist>(const CellRendererSpinner &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellRendererSpinner</name>
      <anchorfile>classGtk_1_1CellRendererSpinner.html</anchorfile>
      <anchor>a394df7292fcdb4b8ab6bb17e4119c9bf</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCellRendererSpinner *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRendererSpinner.html</anchorfile>
      <anchor>ae2cffdb4bfcf7254204845b1fa514384</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCellRendererSpinner *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRendererSpinner.html</anchorfile>
      <anchor>a834c7220911b5457c4f6503dbc82431f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRendererSpinner</name>
      <anchorfile>classGtk_1_1CellRendererSpinner.html</anchorfile>
      <anchor>a4124d0825033590785de3ca317b382ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_active</name>
      <anchorfile>classGtk_1_1CellRendererSpinner.html</anchorfile>
      <anchor>aa4e5340f0c7ebeaa23acd40d715a2c99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_active</name>
      <anchorfile>classGtk_1_1CellRendererSpinner.html</anchorfile>
      <anchor>ae5e31e5d48a09971e78e0dfcb28dd427</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_pulse</name>
      <anchorfile>classGtk_1_1CellRendererSpinner.html</anchorfile>
      <anchor>a57b3bcba516d0f3de555e1fed84bf203</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_pulse</name>
      <anchorfile>classGtk_1_1CellRendererSpinner.html</anchorfile>
      <anchor>ad6f412dc5eba548f31d615b3f66ede1e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gtk::IconSize &gt;</type>
      <name>property_size</name>
      <anchorfile>classGtk_1_1CellRendererSpinner.html</anchorfile>
      <anchor>a80a3c5151ad701ef72322c6b9512f1b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gtk::IconSize &gt;</type>
      <name>property_size</name>
      <anchorfile>classGtk_1_1CellRendererSpinner.html</anchorfile>
      <anchor>a9e3d724aa91446cbdbd6e9e3c03531e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CellRendererSpinner.html</anchorfile>
      <anchor>a076e78fef6c59f8354eebc45eda75cc6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::CellRendererSpinner *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CellRendererSpinner.html</anchorfile>
      <anchor>ab202dff7e38dba5981b868b509dcccab</anchor>
      <arglist>(GtkCellRendererSpinner *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CellRendererText</name>
    <filename>classGtk_1_1CellRendererText.html</filename>
    <base>Gtk::CellRenderer</base>
    <member kind="function">
      <type></type>
      <name>CellRendererText</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a6d46b475beedc06fdd3be7f7f53f3552</anchor>
      <arglist>(CellRendererText &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CellRendererText &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>ae48c9fdd969364934fd723a2bce0c912</anchor>
      <arglist>(CellRendererText &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRendererText</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>ab56106c9b01fa5a02910f49cda5c22b3</anchor>
      <arglist>(const CellRendererText &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CellRendererText &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a66591d6dff487db224964d69bfaad4d2</anchor>
      <arglist>(const CellRendererText &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellRendererText</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>af34bf135df5e82a6629aca22113bb0e8</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCellRendererText *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a4ffbd2c93cf18a88ca52a4bc39fe60ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCellRendererText *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a8160d679ceb11793ab7cbcbaa4fa4c01</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRendererText</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a51a95de8de0a705102bd384e558844fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_fixed_height_from_font</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a6562695b656b1bf47b547a975a7aad87</anchor>
      <arglist>(int number_of_rows)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::ustring &amp;, const Glib::ustring &amp; &gt;</type>
      <name>signal_edited</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a8197b68290056cd2ce2f4645ddf564ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_text</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a16b3a8e3b526f26b42e26d2a33389763</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_text</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a72a85af4d5411855471d09facab1ee22</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_WriteOnly&lt; Glib::ustring &gt;</type>
      <name>property_markup</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a1aaa78c29f39106e2dcffb913d500ee8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::AttrList &gt;</type>
      <name>property_attributes</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>ae2706db479edc3753664173bfadbddbe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::AttrList &gt;</type>
      <name>property_attributes</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a978e351cf8f8ddefe865524a5f09e097</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_WriteOnly&lt; Glib::ustring &gt;</type>
      <name>property_background</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a1831ef58ade6c9ada86c830f6d4693a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_WriteOnly&lt; Glib::ustring &gt;</type>
      <name>property_foreground</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>aee20faf7aa3b3f644a24786a22335974</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::Color &gt;</type>
      <name>property_background_gdk</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>ad786fe64c877425a3ad1b543c92497b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::Color &gt;</type>
      <name>property_background_gdk</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>ad3bad77e11c4d7501545096a13df0ab4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::Color &gt;</type>
      <name>property_foreground_gdk</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a03af05fd55babe62801b140e40f647ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::Color &gt;</type>
      <name>property_foreground_gdk</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a8656fc13ef11ff1eed982964bde8f1fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::RGBA &gt;</type>
      <name>property_background_rgba</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a69fae9e8f0ade95b5db5605cb8e3dfb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::RGBA &gt;</type>
      <name>property_background_rgba</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>aec270b0aa35857f5c973d756c4af00e1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::RGBA &gt;</type>
      <name>property_foreground_rgba</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a13e450dd8a948d2e8ff6fc5dc4185f87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::RGBA &gt;</type>
      <name>property_foreground_rgba</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a97d46d220763697f0b70b2688c468a69</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_font</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a4e10548cca6f5abf048f09edc3c2c4e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_font</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a9bd9b5ed559d95557f96f6d618978af8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::FontDescription &gt;</type>
      <name>property_font_desc</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>afeda2c2a29e81517f2c00a59e449564c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::FontDescription &gt;</type>
      <name>property_font_desc</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a9e1261f684ff28bb90cf1f80c6a39f0a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_family</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a240ce2ec252417c2999991e324b3a49e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_family</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>ac3fef9a8398b3565f4ec9610815cd7aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::Style &gt;</type>
      <name>property_style</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>aff701fd164f7a60920e1b75ab1925d42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::Style &gt;</type>
      <name>property_style</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>af5674794a6c49103c5dfb2eea5e8eb2d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::Variant &gt;</type>
      <name>property_variant</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a25ea25bbfcb169efa578b65648b30281</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::Variant &gt;</type>
      <name>property_variant</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>aa7de611cfece664ea31594ac1c0dc1c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_weight</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a2ade25456e249c3d63708db760908dc3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_weight</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>afef5a2377400d306bbd3a0aaa1d16942</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::Stretch &gt;</type>
      <name>property_stretch</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a4a7a77cc901721a6a4240dd96aa599cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::Stretch &gt;</type>
      <name>property_stretch</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>aac8c1062abcd242fc83f14da22e0261e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_size</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a90e37a18ad088ab5cb7f061bcb9b1db0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_size</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>ae8ea63d91e6b62ef511233caf393e7b6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_size_points</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a9e1410e5a1df4e92b12cc6a9f32d44b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_size_points</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>ab91e27eb48be773b24f7c01c48eb2e13</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_scale</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a001afcfcb244f08be93c7c8ff53e68b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_scale</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a01eb5f080dcff311c22bbac1faf325a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_editable</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a5fe559fb3d312ba68734f29c8d8f6abe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_editable</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a911ac5e0286fd6db63ac4b01fbf18f58</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_strikethrough</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>ada109a94faed8feec76511226b018c31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_strikethrough</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>aa823936c3392c98edcce74453b93bfa0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::Underline &gt;</type>
      <name>property_underline</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>ac01c2d4a3ce38b48e0eadc80840d86f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::Underline &gt;</type>
      <name>property_underline</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>ad33b3011ea88c5abddc6393261322fbe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_rise</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a5307feac2b1dfb5eadd1cc63f9429968</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_rise</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>aa02bb2c2a58780587a68bbfcaed6024d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_language</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>ab9a7f9edcb00be7b32cf9d35767557d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_language</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>ae9fa8e87ae34704f8f0b1b45016c2f35</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::EllipsizeMode &gt;</type>
      <name>property_ellipsize</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>ace14d59242935c417096fb53509ebbb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::EllipsizeMode &gt;</type>
      <name>property_ellipsize</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a9e267a60691b2606cc8a3de57dbd4e96</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_width_chars</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a0cac4bfea19568add198eeaab7df0e82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_width_chars</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a0176526c58da6c49a7eec5335eda7ad2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_max_width_chars</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a01e1fdd8927272cce47b206227403331</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_max_width_chars</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a9b99bf39b64f93a32c6406df2691ff16</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::WrapMode &gt;</type>
      <name>property_wrap_mode</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a72d49ef956acb0237c066cf6ce8cd7ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::WrapMode &gt;</type>
      <name>property_wrap_mode</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a7b968703ef9ca97bc6fad571a4b272bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_wrap_width</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a90920ae30815dbe63377e71305931117</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_wrap_width</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>afe46401f9da7ecbd63446a9c24161017</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::Alignment &gt;</type>
      <name>property_alignment</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a3fa4f0f5f3ce31da77b203ac3a31fef1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::Alignment &gt;</type>
      <name>property_alignment</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>acc95246d701385af70871162a23eab22</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_background_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>ab44071bc6725104945d559abf8bfbaac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_background_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a8d8b402009c0256cffd0bf2f9ca85d0e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_foreground_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a272009a063251ea04ba4c11790cea736</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_foreground_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a13a5e1df196e654781a4dcf21d7bf6c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_family_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a6839ca0090c4ad591a5066276020c8cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_family_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a76e8dc29ddc372d2965c38c6b0cfc23d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_style_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a349f5676f84dbbe2638ae2736a984a0d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_style_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a731c00bc532bc58e2eba5bb0a50cdaab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_variant_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a540176f4e372175e8f6ee120dc8a6e55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_variant_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>adc7f68740208cc073cf72381fb46f42b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_weight_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a9cda8ef9fc909781e0179c1ce7a9af07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_weight_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a19db0097e0e806e6b7f9228febdd580a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_stretch_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a4cd435e41dda86ab62ca926a19e87497</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_stretch_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a32a748f5ad31c1e77e593da136124ff3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_size_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a1deae8414d6ae2cede9f9164448b83b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_size_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a1e582bb0e8a26fbaa89a30f1288e4a39</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_scale_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a4730679c1c83e36b4594154caa12e9e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_scale_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a81e399499ab0d6b1eac1c26dd2949159</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_editable_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a992ae709215b40725b29e5e0c8f1e765</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_editable_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a34f3bec7989b8cf6574364daad4c4484</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_strikethrough_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a584d1ae0e4070eabb5bc2eae1691b9cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_strikethrough_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a8d617fcf6a5ce4298e92054e9665046d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_underline_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a6467db349a72582bf9f535742f074684</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_underline_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a134d9cb6763ad959e3be6d1988a1647f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_rise_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>ab39b0740553ab6d2ade153911d016d01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_rise_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a65e239b80dfa2a32152bf37e7ac443c3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_language_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a6b896cae706f947b01ccd4101c85e657</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_language_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a25e6a1bd2232d3f737a299a9f1bf587c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_ellipsize_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>aa1db4f8f50b6477821048ff44a5fb0c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_ellipsize_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a349950a0d0d2bd01725a3b5add794945</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_single_paragraph_mode</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>aa8682c512f393c80581fddd9900e4048</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_single_paragraph_mode</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>ac9bf82ce5d2d105d9863236558a22bec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_align_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a0463ec467ed4568efc7112595d359589</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_align_set</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a55e80a2706f1a2faeecbce98e157916b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_placeholder_text</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a1767387b922fe5cf05b20dd133b3871f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_placeholder_text</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>af17869b6d60275a60a06f8e44b461a2a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a8c0ae402bcd97410897ba3a32a632185</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_edited</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a1378d48fa4ca7dceb75685a0ba2d9262</anchor>
      <arglist>(const Glib::ustring &amp;path, const Glib::ustring &amp;new_text)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>edited</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>aee211c5f2679e36518ebccc6c4c7d161</anchor>
      <arglist>(const Glib::ustring &amp;path, const Glib::ustring &amp;new_text)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::CellRendererText *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CellRendererText.html</anchorfile>
      <anchor>a013738a392f96b031b37a0a2bd2b6869</anchor>
      <arglist>(GtkCellRendererText *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CellRendererToggle</name>
    <filename>classGtk_1_1CellRendererToggle.html</filename>
    <base>Gtk::CellRenderer</base>
    <member kind="function">
      <type></type>
      <name>CellRendererToggle</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>ad8cf057857e6bbef0ff70b392a24c4cb</anchor>
      <arglist>(CellRendererToggle &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CellRendererToggle &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a936c8b2fe9b006c75860be5252dc8e58</anchor>
      <arglist>(CellRendererToggle &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRendererToggle</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a5470b2ab5870eb1072bebd857a367ba0</anchor>
      <arglist>(const CellRendererToggle &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CellRendererToggle &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>ac06d58a10f51aaf014e84edc67aa87a5</anchor>
      <arglist>(const CellRendererToggle &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellRendererToggle</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a2473da49403c0d81f6f61aa00052e170</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCellRendererToggle *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a8fe0299e4a6bd59dcb77014f363c0e6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCellRendererToggle *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a7c3921a14eefd3036629cb305b8ce0a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellRendererToggle</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a8673a65fd695726d0f66b2cdd4074441</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_radio</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>acc736bccf0bfdb530b7f9bf4d7f3cdeb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_radio</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>ae4a9d4381241c8de098e07b40b8dc5b1</anchor>
      <arglist>(bool radio=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_active</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a80dbc696338fbd10f3a8bf4b884ea816</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_active</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>af966fe3feb0fc29b29215581178741c1</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_activatable</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a0fd33cd80b441a224824b2e2d351d09f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_activatable</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>ad8116336e5ca69f217de49dddff4c02e</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::ustring &amp; &gt;</type>
      <name>signal_toggled</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a67a0571b3ffaafbea79c3b5b35615763</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_activatable</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a8226b86f72c1ecef3c2aaf22760d4e33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_activatable</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a93052b03c513c29b42c59ef762a0a0b9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_active</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a2017685ba9b51dca7becd6393b9c037f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_active</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a9cde7731bdca54f3129ea30b229ff715</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_inconsistent</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a6b5cf0b1dc9ee96b5d4b25b35fcfa3d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_inconsistent</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>ae2c5e10f1cfae6e0c09571d9079b250d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_radio</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a52e167e903b87ef8d831a546836268b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_radio</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a82263650a1845ba098de75466da31472</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_indicator_size</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a008db46fee2a2b3eb190069f88648357</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_indicator_size</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a50615c1e0c69b960d9d7fbb0e362d011</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a836dfae69dfd867e277e5d3c88aac415</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_toggled</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a3ceb06aacbca353ecbc6b6faef2e155f</anchor>
      <arglist>(const Glib::ustring &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::CellRendererToggle *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CellRendererToggle.html</anchorfile>
      <anchor>a789e9a66d8a408a6c14855db42dd2d36</anchor>
      <arglist>(GtkCellRendererToggle *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CellView</name>
    <filename>classGtk_1_1CellView.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::CellLayout</base>
    <base>Gtk::Orientable</base>
    <member kind="function">
      <type></type>
      <name>CellView</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>ae10d908621bec101829d753f132ed90d</anchor>
      <arglist>(CellView &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CellView &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a9355809c2bd12ce0cc7109d657dda4cc</anchor>
      <arglist>(CellView &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellView</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a8a0dceee4b2e432b6d764261edad1773</anchor>
      <arglist>(const CellView &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CellView &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>ab589ed107b446b6a72909391b6ee7540</anchor>
      <arglist>(const CellView &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellView</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>ad737532b5857a06f2f892b45c175e77b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCellView *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a9ed6cb8ffe144660ce9c6a1f0a88cfa4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCellView *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>ac1675282461dc6f0d951fe2205963b04</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellView</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>acb1664c48bafac841f47a8eb59e8f77a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellView</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a321f3a6c1cd87f098cd3713819a10af5</anchor>
      <arglist>(const Glib::ustring &amp;text, bool use_markup=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellView</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a91367d755631b3a1f339acd2ff2442de</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;pixbuf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_model</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a07f23ab38d6b15106681f20393f8edaf</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_model</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a6504f3a47389217ead939d5c698b23c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a3a7a26f3c241b8bd7c215ab35b9855b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a24daaad28b141d454976a830a377c456</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_displayed_row</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a45c7faf24dc75d1c7585c8c7092c345f</anchor>
      <arglist>(const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>TreeModel::Path</type>
      <name>get_displayed_row</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>affde71524d3b59da7bdec3b1eb384243</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_background_color</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a653281744df2fb78ba4e5746ffcdd5fd</anchor>
      <arglist>(const Gdk::Color &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_background_rgba</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>abe2dc3266f62582af8c04a2f2e18412f</anchor>
      <arglist>(const Gdk::RGBA &amp;rgba)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_draw_sensitive</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a7fa6bc136fc2cf80d9db68f40acc82ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_draw_sensitive</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a1eae8ebb6cfca0ca6079034aece12c02</anchor>
      <arglist>(bool draw_sensitive=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_fit_model</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a2312a52b9456a5a9e8cb964ad29856ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_fit_model</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>ade57672c261625381903affd0aef8115</anchor>
      <arglist>(bool fit_model=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_WriteOnly&lt; Glib::ustring &gt;</type>
      <name>property_background</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a2e1a619b96b035e084abfb290d71db1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::Color &gt;</type>
      <name>property_background_gdk</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a2e3bc699003ceb8b4f2caa58abf8e939</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::Color &gt;</type>
      <name>property_background_gdk</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a2c366ad44b4fd6a353c7119877a1e3b0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::RGBA &gt;</type>
      <name>property_background_rgba</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a150d1a06771c6482e04966b60efb2b0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::RGBA &gt;</type>
      <name>property_background_rgba</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>ac945685d1076d424a4a1476411b8b0a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_background_set</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a0e800a177c64133594aab8337b0373bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_background_set</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>ac2d7670a190fb0541364bdd5797e4a1e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; TreeModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a36ba3a47c5cc0c813cdcbd24e18fe657</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; TreeModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a863b6eee30352493128040ca0908e94c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; CellArea &gt; &gt;</type>
      <name>property_cell_area</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a752b671f16e298c972a299250dd181ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; CellAreaContext &gt; &gt;</type>
      <name>property_cell_area_context</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a024c127a8a098766bec97b93e3978f34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_draw_sensitive</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a9dd2727a2f0323c482575d2915470b81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_draw_sensitive</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a17f9a7b80fcc4d3ec54210483442b520</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_fit_model</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a105455813a83dff81465373493e484d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_fit_model</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a4b8a0dc31709c5f0fbcf213114084c78</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>ab0811d3586043025ea43692bce71bc0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::CellView *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CellView.html</anchorfile>
      <anchor>a1f2a50e4540a46d52ed5d979a6272fdb</anchor>
      <arglist>(GtkCellView *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CheckButton</name>
    <filename>classGtk_1_1CheckButton.html</filename>
    <base>Gtk::ToggleButton</base>
    <member kind="function">
      <type></type>
      <name>CheckButton</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>ad1cec8acdc10904f83cb2b48545ea97f</anchor>
      <arglist>(CheckButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CheckButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>ab09a239c291f4b6638e44a62f011abdb</anchor>
      <arglist>(CheckButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CheckButton</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a126763cbe22ab7c197d70cbc99f4daff</anchor>
      <arglist>(const CheckButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CheckButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>adb3c046cf48418f2b86f982365952905</anchor>
      <arglist>(const CheckButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CheckButton</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a4a748aa94119bd0563c519eaaea28f4e</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCheckButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a9c03c6bb7097d41b6a1d7437259e7cee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCheckButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a89c2952646c6133413f35f8c38a8f7c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CheckButton</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a5f3a383438e1043eaec2150e99ce4e77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CheckButton</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a44c85c68143c52c7500e970173a23688</anchor>
      <arglist>(const Glib::ustring &amp;label, bool mnemonic=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a360c22fe8e6abcbec9e1585d7e1304f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>draw_indicator_vfunc</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a5b461d250a48d7db3a7e3dd60c9e4a96</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;cr)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::CheckButton *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CheckButton.html</anchorfile>
      <anchor>a8105b4f7b65bd7214aaff8a0ab0235c5</anchor>
      <arglist>(GtkCheckButton *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CheckMenuItem</name>
    <filename>classGtk_1_1CheckMenuItem.html</filename>
    <base>Gtk::MenuItem</base>
    <member kind="function">
      <type></type>
      <name>CheckMenuItem</name>
      <anchorfile>classGtk_1_1CheckMenuItem.html</anchorfile>
      <anchor>a6d28793c5510b0aa87a2b307755d0c4d</anchor>
      <arglist>(CheckMenuItem &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CheckMenuItem &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CheckMenuItem.html</anchorfile>
      <anchor>aa3015e0203ce1337c505733e2f9dad6f</anchor>
      <arglist>(CheckMenuItem &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CheckMenuItem</name>
      <anchorfile>classGtk_1_1CheckMenuItem.html</anchorfile>
      <anchor>aba78e92e39f72cb55bef1f258a9f552d</anchor>
      <arglist>(const CheckMenuItem &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CheckMenuItem &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CheckMenuItem.html</anchorfile>
      <anchor>af2c0eaad67012f30bf20fa721f112ed5</anchor>
      <arglist>(const CheckMenuItem &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CheckMenuItem</name>
      <anchorfile>classGtk_1_1CheckMenuItem.html</anchorfile>
      <anchor>a6aa36d65e6a666660332e9ffbc68d1b6</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCheckMenuItem *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CheckMenuItem.html</anchorfile>
      <anchor>ae1cd8058cbedb6d2b10c48126aa7cd0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCheckMenuItem *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CheckMenuItem.html</anchorfile>
      <anchor>a303cc14dedc6089f93eb7a1eb0ef9ea1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CheckMenuItem</name>
      <anchorfile>classGtk_1_1CheckMenuItem.html</anchorfile>
      <anchor>afe71276f497fa41438e9caf056364ebe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CheckMenuItem</name>
      <anchorfile>classGtk_1_1CheckMenuItem.html</anchorfile>
      <anchor>a89dd5307f2dc327a666b34c42737ea02</anchor>
      <arglist>(const Glib::ustring &amp;label, bool mnemonic=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_active</name>
      <anchorfile>classGtk_1_1CheckMenuItem.html</anchorfile>
      <anchor>a2342d87c52f403677f973281c76d5afe</anchor>
      <arglist>(bool is_active=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_active</name>
      <anchorfile>classGtk_1_1CheckMenuItem.html</anchorfile>
      <anchor>a0df0c0cd1c4236b80f384628cb5bdd1a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggled</name>
      <anchorfile>classGtk_1_1CheckMenuItem.html</anchorfile>
      <anchor>abfd72929d9158bcf0d59ea73c43c1d28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_inconsistent</name>
      <anchorfile>classGtk_1_1CheckMenuItem.html</anchorfile>
      <anchor>a36b7bce27c9be0fc73667486692ac507</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_inconsistent</name>
      <anchorfile>classGtk_1_1CheckMenuItem.html</anchorfile>
      <anchor>a07ff5a33b20d3b5babcdc7cda4f04a08</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_draw_as_radio</name>
      <anchorfile>classGtk_1_1CheckMenuItem.html</anchorfile>
      <anchor>a6bc19fef98ea18c634398a654062e4c4</anchor>
      <arglist>(bool draw_as_radio=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_draw_as_radio</name>
      <anchorfile>classGtk_1_1CheckMenuItem.html</anchorfile>
      <anchor>a28761f5bca1ec7e28d21c56fa2b5f993</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_toggled</name>
      <anchorfile>classGtk_1_1CheckMenuItem.html</anchorfile>
      <anchor>a3e0f43c02219d30f40d94f7a3d57c422</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_active</name>
      <anchorfile>classGtk_1_1CheckMenuItem.html</anchorfile>
      <anchor>a82ba49f2417e5a8780be3f04b6a6d31b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_active</name>
      <anchorfile>classGtk_1_1CheckMenuItem.html</anchorfile>
      <anchor>a15779b7ef53b1364fba7bbb9a023815e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_inconsistent</name>
      <anchorfile>classGtk_1_1CheckMenuItem.html</anchorfile>
      <anchor>a400bdf72e7b56cf2f25c5a72d988174d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_inconsistent</name>
      <anchorfile>classGtk_1_1CheckMenuItem.html</anchorfile>
      <anchor>ad24692506a8f60463145747825e6e602</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_draw_as_radio</name>
      <anchorfile>classGtk_1_1CheckMenuItem.html</anchorfile>
      <anchor>a466c62330edae12da406d5faecb99812</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_draw_as_radio</name>
      <anchorfile>classGtk_1_1CheckMenuItem.html</anchorfile>
      <anchor>a8a9ee2ce17eb40cb68e2d7deeb5be560</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CheckMenuItem.html</anchorfile>
      <anchor>a4865186ff3144d134b8b8bc28cd5152b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_toggled</name>
      <anchorfile>classGtk_1_1CheckMenuItem.html</anchorfile>
      <anchor>aaed9d53fc1ee69bb7d65511c24303dac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>draw_indicator_vfunc</name>
      <anchorfile>classGtk_1_1CheckMenuItem.html</anchorfile>
      <anchor>a8ece52dcb4479685899e46e282fce492</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;cr)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::CheckMenuItem *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CheckMenuItem.html</anchorfile>
      <anchor>af338c70b431ea56cc0797e015e3d8001</anchor>
      <arglist>(GtkCheckMenuItem *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ChildPropertyProxy</name>
    <filename>classGtk_1_1ChildPropertyProxy.html</filename>
    <templarg></templarg>
    <base>Gtk::ChildPropertyProxy_Base</base>
    <member kind="typedef">
      <type>T</type>
      <name>PropertyType</name>
      <anchorfile>classGtk_1_1ChildPropertyProxy.html</anchorfile>
      <anchor>a620611be9dda8c4e80c4e7e982d54d50</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ChildPropertyProxy</name>
      <anchorfile>classGtk_1_1ChildPropertyProxy.html</anchorfile>
      <anchor>a29aea25ba3b62c256416ebb44120b6e7</anchor>
      <arglist>(Gtk::Container *parent, Gtk::Widget &amp;child, const char *property_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_value</name>
      <anchorfile>classGtk_1_1ChildPropertyProxy.html</anchorfile>
      <anchor>a831f32f7dcb58af24b70321351c8b4d6</anchor>
      <arglist>(const PropertyType &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>PropertyType</type>
      <name>get_value</name>
      <anchorfile>classGtk_1_1ChildPropertyProxy.html</anchorfile>
      <anchor>afd0c7dc113551c0dec5a33db3ad430dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset_value</name>
      <anchorfile>classGtk_1_1ChildPropertyProxy.html</anchorfile>
      <anchor>a2ffcc76b89c9a9c6dc6d36d9d2be2e0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ChildPropertyProxy&lt; T &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ChildPropertyProxy.html</anchorfile>
      <anchor>a9f0ceeaf3948ecaa310c409e596bf455</anchor>
      <arglist>(const PropertyType &amp;data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator PropertyType</name>
      <anchorfile>classGtk_1_1ChildPropertyProxy.html</anchorfile>
      <anchor>ae8f5f771a44637441eef1b44176aa425</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SignalProxyChildProperty</type>
      <name>signal_changed</name>
      <anchorfile>classGtk_1_1ChildPropertyProxy.html</anchorfile>
      <anchor>a9b6699458f2894967be34c3284a16f77</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ChildPropertyProxy_Base</name>
    <filename>classGtk_1_1ChildPropertyProxy__Base.html</filename>
    <member kind="function">
      <type></type>
      <name>ChildPropertyProxy_Base</name>
      <anchorfile>classGtk_1_1ChildPropertyProxy__Base.html</anchorfile>
      <anchor>ae695182d6fdd012feac2bd8fa0345a0c</anchor>
      <arglist>(Container *parent, Widget &amp;child, const char *property_name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ChildPropertyProxy_Base</name>
      <anchorfile>classGtk_1_1ChildPropertyProxy__Base.html</anchorfile>
      <anchor>af525522293388a9a1b1d0fb859a291fb</anchor>
      <arglist>(const ChildPropertyProxy_Base &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>SignalProxyChildProperty</type>
      <name>signal_changed</name>
      <anchorfile>classGtk_1_1ChildPropertyProxy__Base.html</anchorfile>
      <anchor>a3bd887c11331f2a30c09c7bed12a5dfa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Container *</type>
      <name>get_parent</name>
      <anchorfile>classGtk_1_1ChildPropertyProxy__Base.html</anchorfile>
      <anchor>ac811106c682eefb8a0e6dad4c2f8f029</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Widget &amp;</type>
      <name>get_child</name>
      <anchorfile>classGtk_1_1ChildPropertyProxy__Base.html</anchorfile>
      <anchor>a2cfb9d28b916b5427a33d1e86e9f654d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>get_name</name>
      <anchorfile>classGtk_1_1ChildPropertyProxy__Base.html</anchorfile>
      <anchor>a1aad5680c21685c8eec61f8f9b0c8f8c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set_property_</name>
      <anchorfile>classGtk_1_1ChildPropertyProxy__Base.html</anchorfile>
      <anchor>aeb75d35fe8a969ff688ee51ee39770a0</anchor>
      <arglist>(const Glib::ValueBase &amp;value)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>get_property_</name>
      <anchorfile>classGtk_1_1ChildPropertyProxy__Base.html</anchorfile>
      <anchor>ac56a8565a1125f876c71f2247560bd70</anchor>
      <arglist>(Glib::ValueBase &amp;value) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reset_property_</name>
      <anchorfile>classGtk_1_1ChildPropertyProxy__Base.html</anchorfile>
      <anchor>af1296f2173e680cf5024fcf4795cdbb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Container *</type>
      <name>parent_</name>
      <anchorfile>classGtk_1_1ChildPropertyProxy__Base.html</anchorfile>
      <anchor>a501d0f0a50f2ecdb44c3484a3c802b96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Widget &amp;</type>
      <name>child_</name>
      <anchorfile>classGtk_1_1ChildPropertyProxy__Base.html</anchorfile>
      <anchor>a545b9927ec13b040f0936925dd95064a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const char *</type>
      <name>property_name_</name>
      <anchorfile>classGtk_1_1ChildPropertyProxy__Base.html</anchorfile>
      <anchor>ac1d68808e0b2e9024c221bebf56d43a5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ChildPropertyProxy_ReadOnly</name>
    <filename>classGtk_1_1ChildPropertyProxy__ReadOnly.html</filename>
    <templarg></templarg>
    <base>Gtk::ChildPropertyProxy_Base</base>
    <member kind="typedef">
      <type>T</type>
      <name>PropertyType</name>
      <anchorfile>classGtk_1_1ChildPropertyProxy__ReadOnly.html</anchorfile>
      <anchor>af6d341fbbfdbc1f93812b9e947798381</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ChildPropertyProxy_ReadOnly</name>
      <anchorfile>classGtk_1_1ChildPropertyProxy__ReadOnly.html</anchorfile>
      <anchor>a284eaff94b3a4218c586ccb029a4fa00</anchor>
      <arglist>(const Gtk::Container *parent, const Gtk::Widget &amp;child, const char *property_name)</arglist>
    </member>
    <member kind="function">
      <type>PropertyType</type>
      <name>get_value</name>
      <anchorfile>classGtk_1_1ChildPropertyProxy__ReadOnly.html</anchorfile>
      <anchor>a8edb4344f1b1e5322b23163d6b4e046a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator PropertyType</name>
      <anchorfile>classGtk_1_1ChildPropertyProxy__ReadOnly.html</anchorfile>
      <anchor>ab5d6629dce41e413a8501745956648b9</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ChildPropertyProxy_WriteOnly</name>
    <filename>classGtk_1_1ChildPropertyProxy__WriteOnly.html</filename>
    <templarg></templarg>
    <base>Gtk::ChildPropertyProxy_Base</base>
    <member kind="typedef">
      <type>T</type>
      <name>PropertyType</name>
      <anchorfile>classGtk_1_1ChildPropertyProxy__WriteOnly.html</anchorfile>
      <anchor>a89bff88cdc752cd4b3c55793fceff08f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ChildPropertyProxy_WriteOnly</name>
      <anchorfile>classGtk_1_1ChildPropertyProxy__WriteOnly.html</anchorfile>
      <anchor>ae1150ee8fdf356625390430d0400f18d</anchor>
      <arglist>(Gtk::Container *parent, Gtk::Widget &amp;child, const char *property_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_value</name>
      <anchorfile>classGtk_1_1ChildPropertyProxy__WriteOnly.html</anchorfile>
      <anchor>a8ce9dd38f4edfd7214a700e1795658af</anchor>
      <arglist>(const PropertyType &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset_value</name>
      <anchorfile>classGtk_1_1ChildPropertyProxy__WriteOnly.html</anchorfile>
      <anchor>a89ad9e031907d472fd619025e977657f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ChildPropertyProxy_WriteOnly&lt; T &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ChildPropertyProxy__WriteOnly.html</anchorfile>
      <anchor>ac5a40a73a00b294ff87b357da5560a1b</anchor>
      <arglist>(const PropertyType &amp;data)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Clipboard</name>
    <filename>classGtk_1_1Clipboard.html</filename>
    <base>Glib::Object</base>
    <member kind="typedef">
      <type>sigc::slot&lt; void, SelectionData &amp;, guint &gt;</type>
      <name>SlotGet</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>a231514c83a1a1d1b14aaee247e522a1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; void &gt;</type>
      <name>SlotClear</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>a325cb088c615bec5f8d143b44d4741ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; void, const SelectionData &amp; &gt;</type>
      <name>SlotReceived</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>a424180e2d14d2bb2f096be10ca2f7059</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; void, const Glib::ustring &amp; &gt;</type>
      <name>SlotTextReceived</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>a8878452bd75d07a5dc2f239ff67e5d9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; void, const Glib::ustring &amp;, const std::string &amp; &gt;</type>
      <name>SlotRichTextReceived</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>a39efb49b4cf08d2f08f62aebf368fa32</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; void, const std::vector&lt; Glib::ustring &gt; &amp; &gt;</type>
      <name>SlotUrisReceived</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>afd1e0dc88fac81f8aa8f325a200f39ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; void, const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp; &gt;</type>
      <name>SlotImageReceived</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>a2e92912fa27405ef4efafc1d7fe19fe3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; void, const std::vector&lt; Glib::ustring &gt; &amp; &gt;</type>
      <name>SlotTargetsReceived</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>a1e40a6659f2f87dae29212566a06901a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Clipboard</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>abfffc35720be744ff6b49333d9f07615</anchor>
      <arglist>(Clipboard &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Clipboard &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>a9a9cc994c03c7ff45bea57c01a37244b</anchor>
      <arglist>(Clipboard &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Clipboard</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>af2d3a01b435d0bb2c6645f1ce7f44718</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkClipboard *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>aeb465195991ea12f2ee81733a1fa03b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkClipboard *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>a307fb72e6fd57d378a981ef0604e4568</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkClipboard *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>a487b4d31a656a355286187b216d643cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>a696d084d1ef3c7cbe298b4e78e8ea167</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>ac9a759c0daf584d22c8af18c24031f0b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>a2a0c083ecfdcdb17022a5fbe63c0b37d</anchor>
      <arglist>(const std::vector&lt; TargetEntry &gt; &amp;targets, const SlotGet &amp;slot_get, const SlotClear &amp;slot_clear)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Glib::Object &gt;</type>
      <name>get_owner</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>a77714f58487355b0f34ad154b1a99138</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Glib::Object &gt;</type>
      <name>get_owner</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>a6c68c91213f935715c5c9b1a612d98f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>abf8118f4098f9565f1d85d8d88409a1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_text</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>aaeee306b25ea1e0206e3ffb30af93c32</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_image</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>a49841702b88e06547f48b7f0b9c1fe5d</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;pixbuf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>request_contents</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>a7b89b96071d9d6019eb35203538ac6a6</anchor>
      <arglist>(const Glib::ustring &amp;target, const SlotReceived &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>request_text</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>a922ca2e0595b10ec7bcad59632b00f34</anchor>
      <arglist>(const SlotTextReceived &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>request_rich_text</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>a2fe9763417d17a586bcae713567800d8</anchor>
      <arglist>(const Glib::RefPtr&lt; TextBuffer &gt; &amp;buffer, const SlotRichTextReceived &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>request_uris</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>a482e597790498098d3d42751267418bc</anchor>
      <arglist>(const SlotUrisReceived &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>request_image</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>acf9daec8f085ea57218a0ced6bc9e949</anchor>
      <arglist>(const SlotImageReceived &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>request_targets</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>ae3be3a0d85849117a284f8a1cbfdb98e</anchor>
      <arglist>(const SlotTargetsReceived &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>SelectionData</type>
      <name>wait_for_contents</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>a2110b8de6c2e61a1cf7d71cc02ef9e47</anchor>
      <arglist>(const Glib::ustring &amp;target) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>wait_for_text</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>aeac490f4cbb988fe5b6e5eefb33c2201</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>wait_for_rich_text</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>a0f02a96840cfe953d1ef30d64c8e1409</anchor>
      <arglist>(const Glib::RefPtr&lt; TextBuffer &gt; &amp;buffer, std::string &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>wait_for_image</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>acd3d40ebf095dc8ec7e0ba786ea99b0d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wait_is_text_available</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>ac30a1145696f41b5feccbbe0346702fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wait_is_rich_text_available</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>a05294bafc2322b3688dcc85523ae37db</anchor>
      <arglist>(const Glib::RefPtr&lt; TextBuffer &gt; &amp;buffer) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wait_is_image_available</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>afcc67f894892de4918e9f8e7fb6813e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wait_is_uris_available</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>af0c118eea5e64eabf911558d915af8be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wait_is_target_available</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>ab1c3c7516af21ecb6a2db4db6cb8012b</anchor>
      <arglist>(const Glib::ustring &amp;target)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>wait_for_targets</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>a0012a68a1e64fa41a02eef1802bae907</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>wait_for_uris</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>a088ba6cf35e70c048d1db94e351cfc8b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_can_store</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>ad0ca50c7719988d5f324dbabb77e9a47</anchor>
      <arglist>(const std::vector&lt; TargetEntry &gt; &amp;targets)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_can_store</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>a5f2fc04281ab4e2370098bfeb10108ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>store</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>a47f0293ba7f80821537797537d5b6408</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GdkAtom</type>
      <name>get_selection</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>a73a20dabef0dfa3ad0a8cea9675ea819</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, GdkEventOwnerChange * &gt;</type>
      <name>signal_owner_change</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>a472e5581fe3f3f76b5de2455dbdb5106</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>a7c46bca451d214a1f01fbf9f1e6a972d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Clipboard &gt;</type>
      <name>get</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>a163dde254aec1314c6aee6bbdb47fefe</anchor>
      <arglist>(GdkAtom selection=GDK_SELECTION_CLIPBOARD)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Clipboard &gt;</type>
      <name>get_for_display</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>a880ad980703636e3aed1f25c066ebbc9</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Display &gt; &amp;display, GdkAtom selection=GDK_SELECTION_CLIPBOARD)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Clipboard &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Clipboard.html</anchorfile>
      <anchor>ad2c721a5e6f7cee3edc204c496a66044</anchor>
      <arglist>(GtkClipboard *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ColorButton</name>
    <filename>classGtk_1_1ColorButton.html</filename>
    <base>Gtk::Button</base>
    <member kind="function">
      <type></type>
      <name>ColorButton</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>ab53e529a48305722ea8dded39443369a</anchor>
      <arglist>(ColorButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ColorButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>acbf4b6ef2cf5afbde348d8a1347ab2bb</anchor>
      <arglist>(ColorButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ColorButton</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>a5ce3a520a3baa6a2beb2580196872d1b</anchor>
      <arglist>(const ColorButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ColorButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>ad0f06eb963a3990ae89102dfbf4c37c2</anchor>
      <arglist>(const ColorButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ColorButton</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>ad29f1a52def5748e1aba7f28ce241b64</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkColorButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>a1faf17015e5af54cfaa60c263e3b487e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkColorButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>ae852b3e46116fdf4e87e1660ca8bf84e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ColorButton</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>ac12239750b35f3cd2594563d479eda6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ColorButton</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>a76b6f88db3cdab453e0782a33fc9e94e</anchor>
      <arglist>(const Gdk::Color &amp;color)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ColorButton</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>a68c63881465f1b2229c032978fc94625</anchor>
      <arglist>(const Gdk::RGBA &amp;rgba)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_color</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>abdebef43488848096b3beb48437a253b</anchor>
      <arglist>(const Gdk::Color &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_alpha</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>aed363cb1e704dd6b364b03b55e6f49c7</anchor>
      <arglist>(guint16 alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_rgba</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>a42efb5fd45efcda2c011c31e8103f827</anchor>
      <arglist>(const Gdk::RGBA &amp;rgba)</arglist>
    </member>
    <member kind="function">
      <type>Gdk::Color</type>
      <name>get_color</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>a99998d8ff0bcaecf7839328eadba1c06</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Gdk::RGBA</type>
      <name>get_rgba</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>ae61e52c7e266f3c1b55376b7a65f02ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>guint16</type>
      <name>get_alpha</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>ada6bbec9fc824c14b62021222f79ce31</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_alpha</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>a817d20b6c2ca8ab10ec06177eebedebb</anchor>
      <arglist>(bool use_alpha=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_use_alpha</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>a774b389f2284706cee98cacb597acfba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_title</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>a6fb0f55e86936a07c6c062113b0e323d</anchor>
      <arglist>(const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_title</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>a0d6c56c9dd9210ac8f40ebb6ff5b3fa4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_alpha</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>a71a9a315b9be9864dbcd7ecb022cc9d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_alpha</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>ade22998080e54772257381d662f1ce29</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>aee497a705e3c66ef47616acd9bca7cf9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>a41d0b3016dc7f9df19efcd9732e7c749</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::Color &gt;</type>
      <name>property_color</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>a3964613860140e1448b131b2e7cc4974</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::Color &gt;</type>
      <name>property_color</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>a20c75a71691efaa42390cf2ceeb78ce9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::RGBA &gt;</type>
      <name>property_rgba</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>ad9f663a4d5876af5948a4afbe4f61b6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::RGBA &gt;</type>
      <name>property_rgba</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>a7d5dba9230730eae39b8a0e41b5afcf0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint16 &gt;</type>
      <name>property_alpha</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>a337ee6a9e3dfd3e9f4ea08d07704cfd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint16 &gt;</type>
      <name>property_alpha</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>a6fecdeec9faa7278ec6496de65a9227c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_editor</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>aa06718498e876e6daf53a388e9df5567</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_editor</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>af4b9597b56389fc31ce2e4633a8a0488</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_color_set</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>a2477897cfcf4b83a69942c253c71c872</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>a88e60e79fa0102785b6e6ba5a107fb66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_color_set</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>af189df069ef862bc355f52b94732973d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ColorButton *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ColorButton.html</anchorfile>
      <anchor>a14285f6a8086a0fe5296df841f34e5ea</anchor>
      <arglist>(GtkColorButton *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ColorChooser</name>
    <filename>classGtk_1_1ColorChooser.html</filename>
    <base>Glib::Interface</base>
    <member kind="function">
      <type></type>
      <name>ColorChooser</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>a7f6799348f6e3971e2f214d6f80c9aa5</anchor>
      <arglist>(ColorChooser &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ColorChooser &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>a9cdef87fb023d66c944175b99ca7add9</anchor>
      <arglist>(ColorChooser &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ColorChooser</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>a98fd96e02c2402f291a1b6a2c4115788</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkColorChooser *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>a148810acda9189bc68b34de9c5afcb06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkColorChooser *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>a69e1456d9fd29b745475f8fcc1d3a3a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Gdk::RGBA</type>
      <name>get_rgba</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>a3ffaad808803429b511eb44bfc927710</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_rgba</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>a7f9d3db2d16b8045b0b7fb95f27dd191</anchor>
      <arglist>(const Gdk::RGBA &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_use_alpha</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>a9c0c8822b75af58ac65b1d86a01a5ca3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_alpha</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>aa10a53ffdd16172c445c404adcac48d9</anchor>
      <arglist>(bool use_alpha=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_palette</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>ad81846e630d60683615f441783f8c52b</anchor>
      <arglist>(Orientation orientation, int colors_per_line, const std::vector&lt; Gdk::RGBA &gt; &amp;colors)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Gdk::RGBA &amp; &gt;</type>
      <name>signal_color_activated</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>a538b2748276aa679276f7c42b754cc11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::RGBA &gt;</type>
      <name>property_rgba</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>aee55b1d0fc268a870a865b7cc1f4669c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::RGBA &gt;</type>
      <name>property_rgba</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>a1b4aef9854e58a8dea0dcfb5d0f787d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_alpha</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>a9df8b5c552300bb8fce184a6c80de068</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_alpha</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>a9df4d9189f81a605361511fb1510c691</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>ae075ccc67b0bf26b8c18618f21dfeb0f</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>a4181bb09729fc11f1a8c383f60801b53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ColorChooser</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>a0ce89e3fb3a6cb31b57041834043ecad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_color_activated</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>a654c418c0a4faad29d0d145ef1c8ec65</anchor>
      <arglist>(const Gdk::RGBA &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::ColorChooser &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ColorChooser.html</anchorfile>
      <anchor>a22d622e30bd66d48d1fad2aa07c327a8</anchor>
      <arglist>(GtkColorChooser *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ColorChooserDialog</name>
    <filename>classGtk_1_1ColorChooserDialog.html</filename>
    <base>Gtk::Dialog</base>
    <base>Gtk::ColorChooser</base>
    <member kind="function">
      <type></type>
      <name>ColorChooserDialog</name>
      <anchorfile>classGtk_1_1ColorChooserDialog.html</anchorfile>
      <anchor>ad769095cf10b7e1e74c4b08c659a3a2c</anchor>
      <arglist>(ColorChooserDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ColorChooserDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ColorChooserDialog.html</anchorfile>
      <anchor>a615ed1784b5a5abb3e3c29a5a39b7a7c</anchor>
      <arglist>(ColorChooserDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ColorChooserDialog</name>
      <anchorfile>classGtk_1_1ColorChooserDialog.html</anchorfile>
      <anchor>aea437c7835a60728cbe895e0de450ca6</anchor>
      <arglist>(const ColorChooserDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ColorChooserDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ColorChooserDialog.html</anchorfile>
      <anchor>a4721bea0173628acaaf9cf6db48adb1a</anchor>
      <arglist>(const ColorChooserDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ColorChooserDialog</name>
      <anchorfile>classGtk_1_1ColorChooserDialog.html</anchorfile>
      <anchor>a8d63c429aaab4444bfbce92a0be99054</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkColorChooserDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ColorChooserDialog.html</anchorfile>
      <anchor>abd81fd4996ad4ee12a892c8810269dee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkColorChooserDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ColorChooserDialog.html</anchorfile>
      <anchor>a0950f5ce382a7430ec30ffc9cf5052de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ColorChooserDialog</name>
      <anchorfile>classGtk_1_1ColorChooserDialog.html</anchorfile>
      <anchor>a1c11952155f77cbd9bdc43bd2982ccee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ColorChooserDialog</name>
      <anchorfile>classGtk_1_1ColorChooserDialog.html</anchorfile>
      <anchor>a7438fefbf767b6cd12d7e62f4cd0e4e5</anchor>
      <arglist>(const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ColorChooserDialog</name>
      <anchorfile>classGtk_1_1ColorChooserDialog.html</anchorfile>
      <anchor>ae93e32d2cf5c389b09247a4fb56dc648</anchor>
      <arglist>(const Glib::ustring &amp;title, Window &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_editor</name>
      <anchorfile>classGtk_1_1ColorChooserDialog.html</anchorfile>
      <anchor>a586aa158857b585c0f2b060b160f7e8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_editor</name>
      <anchorfile>classGtk_1_1ColorChooserDialog.html</anchorfile>
      <anchor>a10294592a4c96838e5f15971997b57cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ColorChooserDialog.html</anchorfile>
      <anchor>ab6c289eac2f9b4a7a27c57eff8d37bde</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ColorChooserDialog *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ColorChooserDialog.html</anchorfile>
      <anchor>acb3e8104a3909a5de3e4afc6c4ce1b01</anchor>
      <arglist>(GtkColorChooserDialog *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ColorSelection</name>
    <filename>classGtk_1_1ColorSelection.html</filename>
    <base>Gtk::VBox</base>
    <member kind="typedef">
      <type>sigc::slot&lt; void, const Glib::RefPtr&lt; Gdk::Screen &gt; &amp;, const std::vector&lt; Gdk::Color &gt; &amp; &gt;</type>
      <name>SlotChangePaletteHook</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>a521d428904917251c70fe7dbde64d4b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ColorSelection</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>afdc1711acdf1596476dcd86829edf355</anchor>
      <arglist>(ColorSelection &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ColorSelection &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>a3a002f2dcc1c82f91f3e2f9bc274fef0</anchor>
      <arglist>(ColorSelection &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ColorSelection</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>a41b5e5837d620bdd91d367f41fa5709c</anchor>
      <arglist>(const ColorSelection &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ColorSelection &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>a71e1e3f87f3f9999c8df1740217720d9</anchor>
      <arglist>(const ColorSelection &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ColorSelection</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>a7ded32e12de34e01f7754c6678a02790</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkColorSelection *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>a6460aa23f7666b6ac4f919d869ab1a69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkColorSelection *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>a9b16be211d8b4e3b8f962fced8c06c3f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ColorSelection</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>a76892f4b47062bcb38f409ab436b09f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_has_opacity_control</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>ae6fc5c2b6e5202c2867bc52aded8ca66</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_opacity_control</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>a392ffd54f85e6ff00ce72547127c7223</anchor>
      <arglist>(bool has_opacity=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_has_palette</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>a4911bca4c7bf20380f87d418af7422e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_palette</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>a46fc8b7ac3781cdefc558644220c582e</anchor>
      <arglist>(bool has_palette=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_current_color</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>a24d7fa54dec18914a8a2627d769e8f07</anchor>
      <arglist>(const Gdk::Color &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_current_alpha</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>a02b52984c9d9af90de3091ac72606a7a</anchor>
      <arglist>(guint16 alpha)</arglist>
    </member>
    <member kind="function">
      <type>Gdk::Color</type>
      <name>get_current_color</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>a51fdaa98ca6b64619dc2b2417bd510d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>guint16</type>
      <name>get_current_alpha</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>a8da2e551ca4c24e42c0b2f7bb8a302c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_previous_color</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>aa1775ab0f5cdb6f9b645e5af252025a7</anchor>
      <arglist>(const Gdk::Color &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_previous_alpha</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>a75777d08b68bb0ef4f1fad0dde000b77</anchor>
      <arglist>(guint16 alpha)</arglist>
    </member>
    <member kind="function">
      <type>Gdk::Color</type>
      <name>get_previous_color</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>a52e9478e31b104611ac893bf48266e25</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>guint16</type>
      <name>get_previous_alpha</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>a7bcccea529ccbc19c85a17766af64d6e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Gdk::RGBA</type>
      <name>get_current_rgba</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>a61b12a816abdaabf626473469021e7e1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Gdk::RGBA</type>
      <name>get_previous_rgba</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>a8c221f96235d3342836ebe6102fd5374</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_current_rgba</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>ae5f5bd4934e19cbc86859d20dae927f8</anchor>
      <arglist>(const Gdk::RGBA &amp;rgba)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_previous_rgba</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>a961f50b9d0ec9b0056eba80a5de43f7b</anchor>
      <arglist>(const Gdk::RGBA &amp;rgba)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_adjusting</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>a46fdb5b6bee26afa711147b2be2b5bd8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_color_changed</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>a65c76a6c8dc5e5a6707314c130102813</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_has_palette</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>abe0997bcbd1f1b886c0afaa3551a9f26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_palette</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>aee009f4bdfdbe704fa3162253e5c0a18</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_has_opacity_control</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>a3ffa9a03b24d539bcc5a7041d253a2d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_opacity_control</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>a20955efd49a78ae009701d7e75826d02</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::Color &gt;</type>
      <name>property_current_color</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>a38df96e977b783a9c2ddefd2058f1275</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::Color &gt;</type>
      <name>property_current_color</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>aa8b72ee825290103f9fa041074041e1b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_current_alpha</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>a34dd7bdf4356b1597548632381f0c481</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_current_alpha</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>abd7e55e2b88c57b605f435660019b773</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>a55b1ac9a11824866d2de03ba1a579965</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; Gdk::Color &gt;</type>
      <name>palette_from_string</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>a1271c52408d607b8573ddc584f23b464</anchor>
      <arglist>(const Glib::ustring &amp;str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::ustring</type>
      <name>palette_to_string</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>a9fc6f66e095af1c3bb679337d0feb01c</anchor>
      <arglist>(const std::vector&lt; Gdk::Color &gt; &amp;colors)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SlotChangePaletteHook</type>
      <name>set_change_palette_hook</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>a86940c5f7bd134f03c0f5950cf98bf88</anchor>
      <arglist>(const SlotChangePaletteHook &amp;slot)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_color_changed</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>aca2d7ea7a842a245a5b6b669eff013a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ColorSelection *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ColorSelection.html</anchorfile>
      <anchor>a1daf8ae2e109ab0b38f27dbff55d5887</anchor>
      <arglist>(GtkColorSelection *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ColorSelectionDialog</name>
    <filename>classGtk_1_1ColorSelectionDialog.html</filename>
    <base>Gtk::Dialog</base>
    <member kind="function">
      <type></type>
      <name>ColorSelectionDialog</name>
      <anchorfile>classGtk_1_1ColorSelectionDialog.html</anchorfile>
      <anchor>ab25d899848a7760759eabcf0474061fb</anchor>
      <arglist>(ColorSelectionDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ColorSelectionDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ColorSelectionDialog.html</anchorfile>
      <anchor>ac8c449234595549dd2ee824dee6fc268</anchor>
      <arglist>(ColorSelectionDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ColorSelectionDialog</name>
      <anchorfile>classGtk_1_1ColorSelectionDialog.html</anchorfile>
      <anchor>ae4edaf73f5c09568d4b18814b295fab7</anchor>
      <arglist>(const ColorSelectionDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ColorSelectionDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ColorSelectionDialog.html</anchorfile>
      <anchor>a6989b4a7cca625774492c5db5ea89ed1</anchor>
      <arglist>(const ColorSelectionDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ColorSelectionDialog</name>
      <anchorfile>classGtk_1_1ColorSelectionDialog.html</anchorfile>
      <anchor>a761dac4ef4b8496c09f9ceca2a67fc20</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkColorSelectionDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ColorSelectionDialog.html</anchorfile>
      <anchor>a45caeb0d10a9100ddebd70beae235f89</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkColorSelectionDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ColorSelectionDialog.html</anchorfile>
      <anchor>af9859a5abd76a8f07cb7a7b151cec160</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ColorSelectionDialog</name>
      <anchorfile>classGtk_1_1ColorSelectionDialog.html</anchorfile>
      <anchor>aca3bac457f086b2cc2b293b938608c3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ColorSelectionDialog</name>
      <anchorfile>classGtk_1_1ColorSelectionDialog.html</anchorfile>
      <anchor>af9749e0717ec537222d1d3a253d22257</anchor>
      <arglist>(const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>ColorSelection *</type>
      <name>get_color_selection</name>
      <anchorfile>classGtk_1_1ColorSelectionDialog.html</anchorfile>
      <anchor>afde8a6708608c897a9c4b438994b49ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ColorSelection *</type>
      <name>get_color_selection</name>
      <anchorfile>classGtk_1_1ColorSelectionDialog.html</anchorfile>
      <anchor>a2f97a5a66ea9ccb0827ab0cdecc187e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; ColorSelection * &gt;</type>
      <name>property_color_selection</name>
      <anchorfile>classGtk_1_1ColorSelectionDialog.html</anchorfile>
      <anchor>ab829ffe042fc8d8f81a6cb1ea9cc7ac6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Button * &gt;</type>
      <name>property_ok_button</name>
      <anchorfile>classGtk_1_1ColorSelectionDialog.html</anchorfile>
      <anchor>a24fbab76f7186793932541cadcc80c97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Button * &gt;</type>
      <name>property_cancel_button</name>
      <anchorfile>classGtk_1_1ColorSelectionDialog.html</anchorfile>
      <anchor>a2ba141d63a1eb84a946ccdd93b6cb9e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Button * &gt;</type>
      <name>property_help_button</name>
      <anchorfile>classGtk_1_1ColorSelectionDialog.html</anchorfile>
      <anchor>a32823a530cb5836ee737e88913afa9fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ColorSelectionDialog.html</anchorfile>
      <anchor>a10bf6df8fd67d14f5d3b43e253747b65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ColorSelectionDialog *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ColorSelectionDialog.html</anchorfile>
      <anchor>aa5945786c85acd800f4b86aafc226863</anchor>
      <arglist>(GtkColorSelectionDialog *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ComboBox</name>
    <filename>classGtk_1_1ComboBox.html</filename>
    <base>Gtk::Bin</base>
    <base>Gtk::CellLayout</base>
    <base>Gtk::CellEditable</base>
    <member kind="typedef">
      <type>TreeView::SlotRowSeparator</type>
      <name>SlotRowSeparator</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a4cc3364ac0886eab63223f3e3ca76d34</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ComboBox</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a4ca060ba6441eaaffcd7e535732e4e72</anchor>
      <arglist>(ComboBox &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ComboBox &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>aa7d1bfea835621d1ea5ddc0c952050e2</anchor>
      <arglist>(ComboBox &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ComboBox</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a925042fb5edfd806e59b504c51f993a7</anchor>
      <arglist>(const ComboBox &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ComboBox &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>ae24f05a8521bddc6d92b5dabcc11bdcc</anchor>
      <arglist>(const ComboBox &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ComboBox</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a90c65bfe5c0c03ed8f53570e141ec33a</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkComboBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a187397e3b51ed9bec9a156c608288b59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkComboBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>aee51ea71c25139d89c385cd6752358d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ComboBox</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a6fce474e00c35a01630bae418d079b24</anchor>
      <arglist>(bool has_entry=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ComboBox</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a975cf938846359615c470416af4d494c</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;model, bool has_entry=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ComboBox</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a8eedec945eb0b807504b2a0e3151d332</anchor>
      <arglist>(const Glib::RefPtr&lt; CellArea &gt; &amp;cell_area, bool has_entry=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_wrap_width</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a320ba39253e225c63979b2d41342068c</anchor>
      <arglist>(int width)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_wrap_width</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a1ea12b4df572ab9e8a7951b5391cdb47</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_row_span_column</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a7bc7717c3ad6a7ee9e7de907691e39f5</anchor>
      <arglist>(int row_span)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_row_span_column</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a668b44b1aab314de8d3b3e31b61d7e13</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_column_span_column</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a321c575d9d75d527168b06d6f8bd5122</anchor>
      <arglist>(int column_span)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_column_span_column</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a9be8e9d844ce6f143f4afd7b99be04ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_add_tearoffs</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a8c86a57949de7f107ee162be5f03fc33</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_add_tearoffs</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a4bdf2f8d099eab514412367acabdcfcf</anchor>
      <arglist>(bool add_tearoffs=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_title</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>ae5acacae9004e5fda6cb20b0ad170453</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_title</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>abe6b2a8d20f7a7a5f512df744ac2c48a</anchor>
      <arglist>(const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_focus_on_click</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>af772fc3b0958e03e75d6a5d39efa93d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_focus_on_click</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a90788d9b010ba365599826829ef04670</anchor>
      <arglist>(bool focus_on_click=true)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_active_row_number</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a53531bc041b5a460826babb8496c363b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TreeModel::iterator</type>
      <name>get_active</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a7580310c60bb21a632a57c09c749e6d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TreeModel::const_iterator</type>
      <name>get_active</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a38dcdcd3a5ff5573da4a61ff15f01bb5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_active</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a4f23cf08e85733d23f120935b235096d</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_active</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a699cc8d026e92175f54ddfe1812e83cd</anchor>
      <arglist>(const TreeModel::iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_entry_text</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a2c245b78ec863901c461340348205bdd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_active</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a907b4d3c442371348b5162aa518d0814</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>ad96804e98737c72feb05f8b1968a7941</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>ad558f16879d86180851240e7ccd7929e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_model</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>ab0b1ad19e9ffb50b04eb04431aaa3fd2</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_model</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a50418df54ee0436364d650ffd478a940</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_row_separator_func</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a2c65e7509bb7b8f9a197a517cb5cbed4</anchor>
      <arglist>(const SlotRowSeparator &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_row_separator_func</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a7482fd5ddf8b0284212852799340f9f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_button_sensitivity</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>af32e0c73473eb7dbea54249a9e607b2e</anchor>
      <arglist>(SensitivityType sensitivity)</arglist>
    </member>
    <member kind="function">
      <type>SensitivityType</type>
      <name>get_button_sensitivity</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a633dab38f4a1aeb1600c7429c375d218</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_has_entry</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a2e7e909d52519143641ba030d2e00bea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_entry_text_column</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a02b89bfdbde705a3aaf10f48636a55ec</anchor>
      <arglist>(const TreeModelColumnBase &amp;text_column) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_entry_text_column</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a6af896a2a7b8a2e83ae89936190dba97</anchor>
      <arglist>(int text_column)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_entry_text_column</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a106c129a5681e234be54e43c669f9ef7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_popup_fixed_width</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a039436fe1d7385e8153c587a7b8a7294</anchor>
      <arglist>(bool fixed=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_popup_fixed_width</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>ada259336c44f1f676108d9bb30b3def0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popup</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a3bb98e5a20c570f1de50153a848e1542</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popup</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a2eedc32778290b17cb4e58176fd01c3d</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Device &gt; &amp;device)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popdown</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a51606c9fc18bf392baa98bf1f762923e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Atk::Object &gt;</type>
      <name>get_popup_accessible</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a4f07d46393298392e1bad4fba1feffc6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Atk::Object &gt;</type>
      <name>get_popup_accessible</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>aeaacc6a661b7ccb9be776e4b4b3b119a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_id_column</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a4ad2bed487ad0dcf8c1e859d1a71d6cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_id_column</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>abda5f05f23f7c4ad39537245a6fab1f4</anchor>
      <arglist>(int id_column)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_active_id</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>af5eefe7def15c7aa5a019dee714c804a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_active_id</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a6ddd080bfbcfd1727db8feaae31955ab</anchor>
      <arglist>(const Glib::ustring &amp;active_id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_active_id</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a4d66f66a9282d5bca4c0f8e94e99b3fe</anchor>
      <arglist>(const Glib::ustring &amp;active_id)</arglist>
    </member>
    <member kind="function">
      <type>Entry *</type>
      <name>get_entry</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>aec3ac156771954edd9605258f0364483</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Entry *</type>
      <name>get_entry</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>af698fe7e7bde80b4c395cc6cd09922eb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; TreeModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>ac53c1e2300af85a094910d839db61023</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; TreeModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>ae6f8b514a29cd98e5275eb5274188ff2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_wrap_width</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a567b7f977f6f4ee63e7abad933344b77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_wrap_width</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a7732b58daa0a404f0e5de7979231f845</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_row_span_column</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a20898b4ebef3828b393efca4245655a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_row_span_column</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>aea85dda8a79b43f374d709249d8fd700</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_column_span_column</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a6af25269fec2c05336992e0591831c34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_column_span_column</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a3c0340f94113ede13432e58ed2ed380f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_active</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a570c2789f80227f1d66aa5cae26b0e43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_active</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>ab3e3609e46776b8c79248bb5d5aba809</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_add_tearoffs</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>ae198334a6b8c019fd9e964ec81111614</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_add_tearoffs</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a529eb12f3d590780386a4d6567cdfe43</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_has_frame</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a4fd9250d06314076429b74876338df25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_frame</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a0758b37e069d50241c6fb9d3235ed63b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_focus_on_click</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>af0844d2990ac8a76e947a89200f0a6d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_focus_on_click</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>affa20379b5bbcc8680e8d4a933377213</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_tearoff_title</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>afd4ac6d415220d7d2f9d4dbd05e07ceb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_tearoff_title</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a76ba513bccc74e34e21ea557a7f8e99f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_popup_shown</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a6ffe1ee3300e5f26c137e188ef6549fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; SensitivityType &gt;</type>
      <name>property_button_sensitivity</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a4c9191193f16f32fef4c324a6f607a22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; SensitivityType &gt;</type>
      <name>property_button_sensitivity</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a9ebf21b27597f9f8197e812fb605b31a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_popup_fixed_width</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>ab3c1e00edc6eb94eda0930577a35e843</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_popup_fixed_width</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a0d8819e3a6ea2029d0c2a1ab3a12dd39</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; CellArea &gt; &gt;</type>
      <name>property_cell_area</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a37129a83aa14fe7a5ab491853c874d09</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_entry</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>ae7bee10e309244f5f2de65d48bb40726</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_entry_text_column</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a802eb50d4dac07419072f55551e1ddf2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_entry_text_column</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a0a8460777f4bddc07a821c2880ca0e08</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_id_column</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>ae56bbcbb9c07c4460dfb2668459a0a58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_id_column</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a2cbbdc095a261264f3644ced9ebf9218</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_active_id</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a11e6c16cece093dec5a23695475578c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_active_id</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a23d4158a42973b0bf4868c629cc6aaba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_changed</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>af63272f599407278e35b11a50644d495</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; Glib::ustring, const TreeModel::Path &amp; &gt;</type>
      <name>signal_format_entry_text</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a9b31c12948076ced90ef270e92028f08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>ad87104af6502d6d7b3fd3d6b9517448c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_changed</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>a5d8eb5808407c222cdf83b9ccc88479e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ComboBox *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ComboBox.html</anchorfile>
      <anchor>ada4ea19b874086ba879aa6d3df0469f5</anchor>
      <arglist>(GtkComboBox *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ComboBoxText</name>
    <filename>classGtk_1_1ComboBoxText.html</filename>
    <base>Gtk::ComboBox</base>
    <member kind="function">
      <type></type>
      <name>ComboBoxText</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>ad9ea6324b3cbf96d91f7711e187ed405</anchor>
      <arglist>(ComboBoxText &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ComboBoxText &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>a1af28aa2d3c74046e6829a2736d55282</anchor>
      <arglist>(ComboBoxText &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ComboBoxText</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>a0f19834cbaf78e0483eb9f327029aeab</anchor>
      <arglist>(const ComboBoxText &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ComboBoxText &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>abdad33e6aca9ee8e23eadc7ea4f63793</anchor>
      <arglist>(const ComboBoxText &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ComboBoxText</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>a32cb27f56a4cb6004d76b46a2f1f9637</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkComboBoxText *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>afcbfe73b5502cf63ff1cbeed7bcf5a3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkComboBoxText *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>af5ee8fec9855d75af32f9bd766aed279</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ComboBoxText</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>ae41612906f6cb39ba77f22a25d385ee4</anchor>
      <arglist>(bool has_entry=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>ad43c1cc0325585fd53908d5d7038657e</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>a19e80f4e451e23d2c00d3fb11023f9f2</anchor>
      <arglist>(const Glib::ustring &amp;id, const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>acaabb30f27480e110ff50ad6152c70be</anchor>
      <arglist>(int position, const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>a0f8fac01d41eed48caad8b9d0a4c1d02</anchor>
      <arglist>(int position, const Glib::ustring &amp;id, const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepend</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>aa26a9271d840cae4abcaf451924675ee</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepend</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>a48279c769aa3495f9ba73ac27355845e</anchor>
      <arglist>(const Glib::ustring &amp;id, const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_text</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>aaaced05abcfab27944eb57f9755dba9f</anchor>
      <arglist>(int position)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_active_text</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>ae05272a2c05da608573cd1d19382bdf2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_all</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>ae2820f73e92df9abacaae71bed2d244a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_active_text</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>ab1c6c5c2567690ef2f59b10a493e0b3c</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>a9111d6ab6ba92410d3d8f7ef1348696c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ComboBoxText *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ComboBoxText.html</anchorfile>
      <anchor>af1d97d8506584c660b900d0c522b70b8</anchor>
      <arglist>(GtkComboBoxText *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Container</name>
    <filename>classGtk_1_1Container.html</filename>
    <base>Gtk::Widget</base>
    <member kind="typedef">
      <type>sigc::slot&lt; void, Widget &amp; &gt;</type>
      <name>ForeachSlot</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a1aae47f0766a743730dca5fac6126cf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Container</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>ac1e1cdea26d4939b99f2924c24ed33dc</anchor>
      <arglist>(Container &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Container &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>aa79a1921bf8f6890627f66d96f9dd508</anchor>
      <arglist>(Container &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Container</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a6a7660a02327dd78e00b6caba7ebea15</anchor>
      <arglist>(const Container &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Container &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>af32789840012d2c8a7bbc69ed306f82b</anchor>
      <arglist>(const Container &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Container</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>aaf9dd09f4ef96483b4be07f2ad926b7c</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkContainer *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a1b45ff015f4b09b143699bad9d4e423d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkContainer *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>ab80be58ac27710f10f329120587e7d60</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_border_width</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a18b32244cb55a8eb34f9c6f195c8e5bc</anchor>
      <arglist>(guint border_width)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_border_width</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>ae8abd668b921456dec01f19f7d7965b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>add</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>ae5f3b9c32b1b74e7613997843e91f4cc</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a9f31c07118f7bdc7a4e0651acf35abbc</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_resize_mode</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a7802e78b579714e7c673eb18213e0484</anchor>
      <arglist>(ResizeMode resize_mode)</arglist>
    </member>
    <member kind="function">
      <type>ResizeMode</type>
      <name>get_resize_mode</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>aec53c7e59193e1de440c3eeadb7b9a68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>check_resize</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>adfabd621934581f999c92dbd7b465203</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>foreach</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a0af90e61f6c7e2bc9643654bf12506ae</anchor>
      <arglist>(const ForeachSlot &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forall</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a7e40fa07f7d094044f7ec04ab03c340a</anchor>
      <arglist>(const ForeachSlot &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Widget * &gt;</type>
      <name>get_children</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a3a2111e255cb5b72bd91a3be087cff27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const Widget * &gt;</type>
      <name>get_children</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a26d060e0b68e2ef96976429031ccc7d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>propagate_draw</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a2782d567cad89153dea5277854577581</anchor>
      <arglist>(Widget &amp;child, const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;cr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_focus_chain</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a9443a8dbbbcef4534244f2d036bf3535</anchor>
      <arglist>(const std::vector&lt; Widget * &gt; &amp;focusable_widgets)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_focus_chain</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a5264c9059bf39f0f47f76fb164b4c062</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Widget * &gt;</type>
      <name>get_focus_chain</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>aa76daf07b38151f2bc887531b9ff1125</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const Widget * &gt;</type>
      <name>get_focus_chain</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>af6dac2298cb89fd661a251e6fbc63578</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_focus_chain</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>ad59fccdb1940b1a790b49520b98d7a60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_reallocate_redraws</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a81af5a25fca7eb4fe74aabadeead132a</anchor>
      <arglist>(bool needs_redraws=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_focus_child</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>ac35aa66f4997b824207ac803ad8bdf28</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_focus_child</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a38a01400644959a06c5ea7d99516014b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_focus_child</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a6d5ab6a49ca69a605af1df33230f0c88</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_focus_vadjustment</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>ab63cec3821cb441b7962d080c513f464</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;adjustment)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Adjustment &gt;</type>
      <name>get_focus_vadjustment</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a2cd9223184e080860e06c594e77651d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Adjustment &gt;</type>
      <name>get_focus_vadjustment</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>acfc7481f5cacd113b8bfdae292c76a22</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_focus_hadjustment</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>acac716a5e877061754cbd067a5b8a7c8</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;adjustment)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Adjustment &gt;</type>
      <name>get_focus_hadjustment</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a1b9a6e0fbab87a4a6d95e22d7e94c566</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Adjustment &gt;</type>
      <name>get_focus_hadjustment</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>acdf691f15443e2032ff39d032904f97f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize_children</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a00dd122adfa3a1f4d816cab0b726dafe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GType</type>
      <name>child_type</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>ac67c721b8e20c78afa2129446290e2f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WidgetPath</type>
      <name>get_path_for_child</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a8655f9d7388124a9faa0860317e15e8d</anchor>
      <arglist>(const Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, Widget * &gt;</type>
      <name>signal_add</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a2dd9cacbab5b93066edb7bbb3074aa2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, Widget * &gt;</type>
      <name>signal_remove</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>ae6f5bf50798d2be4506cde3d0d58bf10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_check_resize</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a6f0597d09462834ecf1b8a210350e67a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, Widget * &gt;</type>
      <name>signal_set_focus_child</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>ac7659a0c723625c75928c58e338c3b81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>show_all_children</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a0130c42ee29c728a9b6b0de06804d020</anchor>
      <arglist>(bool recursive=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a230873e39d097d82a43426abc0da2cc9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_add</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a4de2182fcf0106e1bc2d6a9b7cb9d4d5</anchor>
      <arglist>(Widget *widget)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_remove</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>aed9713485cb1aab3d4fe1a80c9a9b85a</anchor>
      <arglist>(Widget *widget)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_check_resize</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>aec9eb5bda956831c3a9164cd57c5fc8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_set_focus_child</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>afe2d036a76139c34ac5e0bf1f1569161</anchor>
      <arglist>(Widget *widget)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Container</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>afb6a31d709af6516fb71592298991e14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual GType</type>
      <name>child_type_vfunc</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a54f262cc55bdebc4c2c9d2ed74fba203</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>forall_vfunc</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a38f26ed78538349e1e7f20819621a406</anchor>
      <arglist>(gboolean include_internals, GtkCallback callback, gpointer callback_data)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual char *</type>
      <name>composite_name_vfunc</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a50cfb34e55158055cbf6eb3624b24b0a</anchor>
      <arglist>(GtkWidget *child)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>set_child_property_vfunc</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a2304813fb399409344b8fd9ad433d85b</anchor>
      <arglist>(GtkWidget *child, guint property_id, const GValue *value, GParamSpec *pspec)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>get_child_property_vfunc</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a2c2cdd5d1c869a2b9f2b189483a99c21</anchor>
      <arglist>(GtkWidget *child, guint property_id, GValue *value, GParamSpec *pspec) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_border_width</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a70d73326ad3b1b6f9a118e761448b5e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_border_width</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>aa5c69a4263368e8edee1ba41a4c73ac9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Glib::PropertyProxy&lt; ResizeMode &gt;</type>
      <name>property_resize_mode</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a019c70315ad6d126fa269b9506bf4ee0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Glib::PropertyProxy_ReadOnly&lt; ResizeMode &gt;</type>
      <name>property_resize_mode</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a12068fa0fa83c02475f77f0127e433ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Glib::PropertyProxy_WriteOnly&lt; Widget * &gt;</type>
      <name>property_child</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a7a11d0ef781429b1ef3d1bb0395df547</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Container *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Container.html</anchorfile>
      <anchor>a965362568db379a38818c7dc23f765c6</anchor>
      <arglist>(GtkContainer *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CssProvider</name>
    <filename>classGtk_1_1CssProvider.html</filename>
    <base>Glib::Object</base>
    <base>Gtk::StyleProvider</base>
    <member kind="function">
      <type></type>
      <name>CssProvider</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>acfaf48e2148f959acbec070980d964d5</anchor>
      <arglist>(CssProvider &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>CssProvider &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>a0a3e1fa91b88951d20fd90dc8660af0e</anchor>
      <arglist>(CssProvider &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CssProvider</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>a667eba20cbd5d65c2e90f65e85ffdd9c</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkCssProvider *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>a41283c627e2b52e5cd5c583baa8af562</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCssProvider *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>a79355e916ac6a418b2a9e282c4818749</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkCssProvider *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>a808994510b3e0fe536ee1a9b223fc917</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>to_string</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>a084a193b47c2a486ac3f4dd90279624a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>load_from_data</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>a0235bb7412d49b4d2e56ec73f548e301</anchor>
      <arglist>(const std::string &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>load_from_file</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>ae6a2f33f33d35140946604966388c17d</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gio::File &gt; &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>load_from_path</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>a8a6e83a72950950cb53777257a8d33f2</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load_from_resource</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>a49fef0d9e7676e8d34876a378c5a78ec</anchor>
      <arglist>(const std::string &amp;resource_path)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; const CssSection &gt; &amp;, const Glib::Error &amp; &gt;</type>
      <name>signal_parsing_error</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>abf5ff70f600e14b96d7ca088b6e58ebe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>ac7603cfdbef0ccaf560762b29e5500dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; CssProvider &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>a704ab5fd008588b67b1c1b0787f60064</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; CssProvider &gt;</type>
      <name>get_default</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>a10b7f6b019bac59fffae229709a579aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; CssProvider &gt;</type>
      <name>get_named</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>a4e63ff0d3803fdcef1e9cc119d3b0860</anchor>
      <arglist>(const Glib::ustring &amp;name, const Glib::ustring &amp;variant)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>CssProvider</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>a162d2aab79966672411f0faa55cc4f2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::CssProvider &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CssProvider.html</anchorfile>
      <anchor>ae322c16bd907847d73f0a553156136ce</anchor>
      <arglist>(GtkCssProvider *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CssProviderError</name>
    <filename>classGtk_1_1CssProviderError.html</filename>
    <base>Glib::Error</base>
    <member kind="enumeration">
      <type></type>
      <name>Code</name>
      <anchorfile>classGtk_1_1CssProviderError.html</anchorfile>
      <anchor>a25b86727bdc2ddee1ffdd4b8c4d3d523</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FAILED</name>
      <anchorfile>classGtk_1_1CssProviderError.html</anchorfile>
      <anchor>a25b86727bdc2ddee1ffdd4b8c4d3d523afe3c2e0bbaec5d92efe9c4cd56276aa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYNTAX</name>
      <anchorfile>classGtk_1_1CssProviderError.html</anchorfile>
      <anchor>a25b86727bdc2ddee1ffdd4b8c4d3d523a165fa221e22affae3cd7b05b43bdf25e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMPORT</name>
      <anchorfile>classGtk_1_1CssProviderError.html</anchorfile>
      <anchor>a25b86727bdc2ddee1ffdd4b8c4d3d523a0ca8750cf6f3bf22cbb0bf3098ae5342</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAME</name>
      <anchorfile>classGtk_1_1CssProviderError.html</anchorfile>
      <anchor>a25b86727bdc2ddee1ffdd4b8c4d3d523a8c4ac4f9e34e356435bd2970d82c10e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEPRECATED</name>
      <anchorfile>classGtk_1_1CssProviderError.html</anchorfile>
      <anchor>a25b86727bdc2ddee1ffdd4b8c4d3d523a07fca3f3b8eba4c35c028a781459f56c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNKNOWN_VALUE</name>
      <anchorfile>classGtk_1_1CssProviderError.html</anchorfile>
      <anchor>a25b86727bdc2ddee1ffdd4b8c4d3d523a15c69b91e861f27d4393a212f798d858</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FAILED</name>
      <anchorfile>classGtk_1_1CssProviderError.html</anchorfile>
      <anchor>a25b86727bdc2ddee1ffdd4b8c4d3d523afe3c2e0bbaec5d92efe9c4cd56276aa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYNTAX</name>
      <anchorfile>classGtk_1_1CssProviderError.html</anchorfile>
      <anchor>a25b86727bdc2ddee1ffdd4b8c4d3d523a165fa221e22affae3cd7b05b43bdf25e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMPORT</name>
      <anchorfile>classGtk_1_1CssProviderError.html</anchorfile>
      <anchor>a25b86727bdc2ddee1ffdd4b8c4d3d523a0ca8750cf6f3bf22cbb0bf3098ae5342</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NAME</name>
      <anchorfile>classGtk_1_1CssProviderError.html</anchorfile>
      <anchor>a25b86727bdc2ddee1ffdd4b8c4d3d523a8c4ac4f9e34e356435bd2970d82c10e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEPRECATED</name>
      <anchorfile>classGtk_1_1CssProviderError.html</anchorfile>
      <anchor>a25b86727bdc2ddee1ffdd4b8c4d3d523a07fca3f3b8eba4c35c028a781459f56c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNKNOWN_VALUE</name>
      <anchorfile>classGtk_1_1CssProviderError.html</anchorfile>
      <anchor>a25b86727bdc2ddee1ffdd4b8c4d3d523a15c69b91e861f27d4393a212f798d858</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CssProviderError</name>
      <anchorfile>classGtk_1_1CssProviderError.html</anchorfile>
      <anchor>a052ff232ebc233319a2453832379fd3e</anchor>
      <arglist>(Code error_code, const Glib::ustring &amp;error_message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CssProviderError</name>
      <anchorfile>classGtk_1_1CssProviderError.html</anchorfile>
      <anchor>ad40cea95cd5fe1cdced1c6428058d9b1</anchor>
      <arglist>(GError *gobject)</arglist>
    </member>
    <member kind="function">
      <type>Code</type>
      <name>code</name>
      <anchorfile>classGtk_1_1CssProviderError.html</anchorfile>
      <anchor>ada3a0aee76d6a46c081afbe9e956a560</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::CssSection</name>
    <filename>classGtk_1_1CssSection.html</filename>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>ac67623dd8c88ecefbcdccb914589efea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>ab3373104c1157aceff5c94d7097a2960</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkCssSection *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>ab06854eb355bd0841e82fa26b885481d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkCssSection *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>ac3fab6a19dc4aa00f5e9f75721ab5f24</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkCssSection *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>a4bee38e462829b1dd1ebeb418f7ccbb7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CssSection</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>aa7d0d672975f5d7870bbea66d626ee41</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CssSection</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>ace78b11a2f7116b97e2fb250584f7b69</anchor>
      <arglist>(const CssSection &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CssSection &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>aa1b6221f2b315ca4d6c8f0e667442447</anchor>
      <arglist>(const CssSection &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CssSectionType</type>
      <name>get_section_type</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>a7ba24410f9ac91ee4df0d2f29aab3714</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; CssSection &gt;</type>
      <name>get_parent</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>ab6d5122caf6e68bdb93998edcfe24614</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const CssSection &gt;</type>
      <name>get_parent</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>acfdbb673f0ad3ada24668eadf875b9b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::File &gt;</type>
      <name>get_file</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>a7bcb9037dbcd7078428652ba8310eb5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::File &gt;</type>
      <name>get_file</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>a6b1bf2772ca88821ac8bebf156271e4b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>get_start_line</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>ae87571c8b9456195f814bda708f0f80e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>get_start_position</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>a270b971838a578fc3e586b6a1a84818b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>get_end_line</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>a85365210999db2c59c2a6fd5ee0119b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>get_end_position</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>a878aaecc8979bc0e2d6de847add948a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>aad9eb5b008a1ee7dcad02445a07b5cbe</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::CssSection &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1CssSection.html</anchorfile>
      <anchor>a842861ca601cf66e1f01867f3faa4d23</anchor>
      <arglist>(GtkCssSection *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Dialog</name>
    <filename>classGtk_1_1Dialog.html</filename>
    <base>Gtk::Window</base>
    <member kind="function">
      <type></type>
      <name>Dialog</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>abef1e37c396b72bee893066a454214b4</anchor>
      <arglist>(Dialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Dialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>af1c4774d13b88187010a4b867086af20</anchor>
      <arglist>(Dialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Dialog</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>acec52d9159b2a601bb6184c1d42f33d4</anchor>
      <arglist>(const Dialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Dialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>aa69e8315761372749cb669080a578077</anchor>
      <arglist>(const Dialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Dialog</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a17816dafc85a3e8546b512c8bba23a88</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>aa3e8f3bdac15fac61128dc47c22ba4cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a534ffd24e55400a26aef733a7f588856</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Dialog</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a7e746e77abaa67ccdc920ca97ad9b06e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Dialog</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a3503f85a77a0657d1d0132a5d8da78f7</anchor>
      <arglist>(const Glib::ustring &amp;title, bool modal=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Dialog</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a56b5029e99c90bdf99faec3f8b1f358c</anchor>
      <arglist>(const Glib::ustring &amp;title, Gtk::Window &amp;parent, bool modal=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Dialog</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>aa46fbb20c8bc271bdac770d27e4daff3</anchor>
      <arglist>(const Glib::ustring &amp;title, DialogFlags flags)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Dialog</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a75a6c2825833b56d4eb7c8c404655afc</anchor>
      <arglist>(const Glib::ustring &amp;title, Gtk::Window &amp;parent, DialogFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_action_widget</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a096c1736344266e316dd31bbd5c43e19</anchor>
      <arglist>(Widget &amp;child, int response_id)</arglist>
    </member>
    <member kind="function">
      <type>Button *</type>
      <name>add_button</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>aca037e133ab2a91c646f23b7b17afb9b</anchor>
      <arglist>(const Glib::ustring &amp;button_text, int response_id)</arglist>
    </member>
    <member kind="function">
      <type>Button *</type>
      <name>add_button</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>ac2a99c5d26c1022c2d259448f5f179a7</anchor>
      <arglist>(const Gtk::StockID &amp;stock_id, int response_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_response_sensitive</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a04da02d509bf9c759a15cdb1dc544a5d</anchor>
      <arglist>(int response_id, bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_default_response</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a9a042edc1a83ae5d670305635d193fea</anchor>
      <arglist>(int response_id)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_widget_for_response</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>af259947b29ba1dc093bc1d112400c03c</anchor>
      <arglist>(int response_id)</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_widget_for_response</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a9b5ed8769cb9d318ea376aabdd373376</anchor>
      <arglist>(int response_id) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_response_for_widget</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a1340388130eede2edf63404c0e27f79d</anchor>
      <arglist>(const Gtk::Widget &amp;widget) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_alternative_button_order_from_array</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>aba7d16a6ada6d35e714019792f60fd2f</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;new_order)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>response</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a7cf451db55cadc3509f360f70d0e0ecb</anchor>
      <arglist>(int response_id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>run</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>adc98a1e747613c9b6cb66c238f6f8da6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ButtonBox *</type>
      <name>get_action_area</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>ae56668b63a4f134c7135e98b74f2acab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ButtonBox *</type>
      <name>get_action_area</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>ae16b393cc1e6b11bab611f8aa5e694fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Box *</type>
      <name>get_vbox</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a137564e57b5a35e69b4eeb88bfe81715</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Box *</type>
      <name>get_vbox</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>aee912ddf118fbd041f71a5e406058d9b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Box *</type>
      <name>get_content_area</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>aa87d65b44b48791b3298daf99a684f00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Box *</type>
      <name>get_content_area</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>add4b618dc9f8716305a450f3ad1e407c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>HeaderBar *</type>
      <name>get_header_bar</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a33c8837f0383ad4f0a5b0650039e0fc4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const HeaderBar *</type>
      <name>get_header_bar</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a8eb15791de77e1f48e1b03fe90d4ee2e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, int &gt;</type>
      <name>signal_response</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a27f4d8889cae685643f319ea96dc4cf2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_header_bar</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a8cbc1bc5f7f924e348e170c2f995ca0c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a32074ac5cf3fe4afe9334f57022fe0d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>alternative_button_order</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>ada94684e77582514fcf9062585c64824</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gdk::Screen &gt; &amp;screen)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_response</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a9d3aab6c3ea727acab2af375e9ad3479</anchor>
      <arglist>(int response_id)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Dialog *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Dialog.html</anchorfile>
      <anchor>a1f0f3f2840498099a768a81eafdca8f7</anchor>
      <arglist>(GtkDialog *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::DrawingArea</name>
    <filename>classGtk_1_1DrawingArea.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>DrawingArea</name>
      <anchorfile>classGtk_1_1DrawingArea.html</anchorfile>
      <anchor>a6989b2f32be50db1f454a326ac4fa4f4</anchor>
      <arglist>(DrawingArea &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>DrawingArea &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1DrawingArea.html</anchorfile>
      <anchor>a76e78a4486dc4b4bb7805a9805c17c08</anchor>
      <arglist>(DrawingArea &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DrawingArea</name>
      <anchorfile>classGtk_1_1DrawingArea.html</anchorfile>
      <anchor>a97e64ed40de01334443534248f8c2818</anchor>
      <arglist>(const DrawingArea &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>DrawingArea &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1DrawingArea.html</anchorfile>
      <anchor>a0f7f3c1deb0ea0899755b5b6b3f66099</anchor>
      <arglist>(const DrawingArea &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DrawingArea</name>
      <anchorfile>classGtk_1_1DrawingArea.html</anchorfile>
      <anchor>ad9689983692a9fcb1101a20289fa8682</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkDrawingArea *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1DrawingArea.html</anchorfile>
      <anchor>aeb0de16fc78aab19dbfdd84b00699f2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkDrawingArea *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1DrawingArea.html</anchorfile>
      <anchor>ae9f647a9c8ccbd24f9f9ee598e4f48d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DrawingArea</name>
      <anchorfile>classGtk_1_1DrawingArea.html</anchorfile>
      <anchor>a1d94caf2ad3b2e43f37479b7f1568504</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1DrawingArea.html</anchorfile>
      <anchor>a9c9f4a7a51910d062b1c18cd489a5d35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::DrawingArea *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1DrawingArea.html</anchorfile>
      <anchor>a2e4eab5ec288a7fde775df2b12f1ef0f</anchor>
      <arglist>(GtkDrawingArea *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Editable</name>
    <filename>classGtk_1_1Editable.html</filename>
    <base>Glib::Interface</base>
    <member kind="function">
      <type></type>
      <name>Editable</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a46e724ebae01430ab73bd42c1e7c10bf</anchor>
      <arglist>(Editable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Editable &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>adca2232788f206fea521ae0fd5dd1be5</anchor>
      <arglist>(Editable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Editable</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a49c3b42dee7f0c94d963a2204a4b4b6b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkEditable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>ac1d268a6aaf1ee3b30177ea1426f62c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkEditable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>ae3030e1c572ef470228753d78083265d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cut_clipboard</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a0a54137d3dfd96c72d4814e308a1ee69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy_clipboard</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>af21cfb20971caed139aa5987e0acd4f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>paste_clipboard</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>af456e4003880b228eb3a4b1c15393ab1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete_selection</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>ab7308bac47c1d1775438125308eafba3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_editable</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a3e0235bee7f816c45da487b2f43686fc</anchor>
      <arglist>(bool is_editable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_editable</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>ae787ebb559ab1ed57077c5db30956301</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_text</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a8058f9683a48997853f6674b84fd6dbf</anchor>
      <arglist>(const Glib::ustring &amp;new_text, int new_text_length, int &amp;position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete_text</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a4b44a4d986f6865750eb2a8000fe9c57</anchor>
      <arglist>(int start_pos, int end_pos)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_chars</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a35fd21612ce17b789fe9192a18881f37</anchor>
      <arglist>(int start_pos, int end_pos) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select_region</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>ab288b6dfe61110a6399a3919ec95611e</anchor>
      <arglist>(int start_pos, int end_pos)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_selection_bounds</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>aa06edaa033c89456424aad6c77bd8b7e</anchor>
      <arglist>(int &amp;start_pos, int &amp;end_pos) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_position</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a3c01c7b97115fc6a7d1dc2e861c57893</anchor>
      <arglist>(int position)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_position</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>ac1772ede3992be8a0a69c7a507f6b234</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::ustring &amp;, int * &gt;</type>
      <name>signal_insert_text</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>af153cc3e75340f275c7e9446dda55079</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, int, int &gt;</type>
      <name>signal_delete_text</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a5d7a0b2360b8bdc4b2223607d6e4d9fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_changed</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a39020f967ac70755ed0fd6e1eb671b80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a1b40e6e4a89f62636f2a780c9aff96ce</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>ab59b36b3c1e43eaa99de25cd6ab3490a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Editable</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a942d87a76591225d2264e25d082b2a90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>delete_text_vfunc</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>aee3d5daa35c42b70c0e4d1c1ac442b96</anchor>
      <arglist>(int start_pos, int end_pos)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Glib::ustring</type>
      <name>get_chars_vfunc</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a301a67f324f07d92a39d38780866a068</anchor>
      <arglist>(int start_pos, int end_pos) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>select_region_vfunc</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>aa83fdafea42e7e54fa1c9f37e235f3b2</anchor>
      <arglist>(int start_pos, int end_pos)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>get_selection_bounds_vfunc</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a150330f38aec61e0ec03747d696d4b5b</anchor>
      <arglist>(int &amp;start_pos, int &amp;end_pos) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>set_position_vfunc</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a95d27540d02288b2f00707b2c832d0f4</anchor>
      <arglist>(int position)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>get_position_vfunc</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a50676d711920e262d70227ef6839a8d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>insert_text_vfunc</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a7fe574f0a424cba8d03e0514d7717cb9</anchor>
      <arglist>(const Glib::ustring &amp;text, int &amp;position)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_insert_text</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>af84054d23e83bc619316c94453724eec</anchor>
      <arglist>(const Glib::ustring &amp;text, int *position)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_delete_text</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a3f91d74b6b55ca4313f2ed8b862e326e</anchor>
      <arglist>(int start_pos, int end_pos)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_changed</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a71a0db1640c431ded71fa149b4ed22aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Editable &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Editable.html</anchorfile>
      <anchor>a0c87a584f0bad68134a79ba1d183b862</anchor>
      <arglist>(GtkEditable *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Entry</name>
    <filename>classGtk_1_1Entry.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::Editable</base>
    <base>Gtk::CellEditable</base>
    <member kind="function">
      <type></type>
      <name>Entry</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ab94dd6d002283f6ddb9b888400c90092</anchor>
      <arglist>(Entry &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Entry &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a052ddca47648cec260fd489e2f0e8a12</anchor>
      <arglist>(Entry &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Entry</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aba0a848a59447b58cbac238848c3a600</anchor>
      <arglist>(const Entry &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Entry &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a0ad607c998c5d819ce7276eb1b875f0b</anchor>
      <arglist>(const Entry &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Entry</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a9046c57f0a12866e65c2f77ad5355d67</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkEntry *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a3f966098e1d30379f7a200b27d0540d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkEntry *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a7326d9d26b0ab988731fbad3fc79997c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Entry</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a3595f4095821398dc4b183d2ea375b56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Entry</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aaf45b31c4e51b59b9dbb35d7feb24c11</anchor>
      <arglist>(const Glib::RefPtr&lt; EntryBuffer &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; EntryBuffer &gt;</type>
      <name>get_buffer</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ac36b548cda5f05836cbdeead13d87228</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const EntryBuffer &gt;</type>
      <name>get_buffer</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a16d7b5985049b1c2e6627dfc26244d28</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Gdk::Rectangle</type>
      <name>get_text_area</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aab29f5adc713b5ac84dcb803d3c8b93e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_buffer</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a2e01d201806ecc30a657477cff479f21</anchor>
      <arglist>(const Glib::RefPtr&lt; EntryBuffer &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visibility</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a9dd0943bbdeaa3470b0504514f40f525</anchor>
      <arglist>(bool visible=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_visibility</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a8b6b209f2996410a3de4845e3b9cb0ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_invisible_char</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a671e89a1a9466d895d42d1a28aa70503</anchor>
      <arglist>(gunichar ch)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_invisible_char</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a7f5527cc8daed68b499ecc5530261958</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>gunichar</type>
      <name>get_invisible_char</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>acd00bc0f0cd6e5e415ecd82b1dc0df99</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_frame</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a504640ca087eb8a02530c6d1a8ba7e06</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_has_frame</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ae8f443c56705231f471760bfee75649f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_inner_border</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a432b6da8d69d39f34df68644b58d17cb</anchor>
      <arglist>(const Border &amp;border)</arglist>
    </member>
    <member kind="function">
      <type>Border</type>
      <name>get_inner_border</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a05b276d3ac1e0528dab8e57f35c5ce83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_overwrite_mode</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aeb1bcdd9c42aac6281591ad15adca81d</anchor>
      <arglist>(bool overwrite=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_overwrite_mode</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a5188c86fae0c28f11cd5895f38400768</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_max_length</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a277097af05565353a0cdaa5f71c24721</anchor>
      <arglist>(int max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_max_length</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a4b042941e16ca7582e955ba9e350c592</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>guint16</type>
      <name>get_text_length</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a9e8b565787825b7afbeed42af63c1da3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_activates_default</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aa73461b4d63a438b659c8ce0b176219a</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>gboolean</type>
      <name>get_activates_default</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a3ed77119ea8e2c3ba508d3a1ca39c627</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_width_chars</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a09b379a67f662cf9842f2e6bbad0d974</anchor>
      <arglist>(int n_chars)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_width_chars</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a7da015f99ce6be5342063c32b7dd11c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_max_width_chars</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a4bc81f7053d39770fb9f51ec8dac9f28</anchor>
      <arglist>(int n_chars)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_max_width_chars</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a06c19c3523960ea6911db5e4217294aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_text</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aaee5b96d2ffea0342aa4c93fbfe24433</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_text</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a3edadc52997a881903d71b9521c9b854</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pango::Layout &gt;</type>
      <name>get_layout</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a3a6772902bb1806de17bac4bd8f38434</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Pango::Layout &gt;</type>
      <name>get_layout</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a1a65340e86b563ec735ff826c4d17307</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_layout_offsets</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a478533b873029e88c9f34913fe2523b4</anchor>
      <arglist>(int &amp;x, int &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>layout_index_to_text_index</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aa84bf0a3bc5daed4f6943beabc95537c</anchor>
      <arglist>(int layout_index) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>text_index_to_layout_index</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a1ad913685fa2088c14ed9f1195edc279</anchor>
      <arglist>(int text_index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_cursor_hadjustment</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a1169290a8f616f8a14aa6a30dca7012f</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;adjustment)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Adjustment &gt;</type>
      <name>get_cursor_hadjustment</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a7ef287478c6b67b6e8af9d53712aa750</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Adjustment &gt;</type>
      <name>get_cursor_hadjustment</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>acc2246a98aecc794c836c61e774fa093</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_alignment</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a0bf8a000d06a5754d734ea2b0f1a424e</anchor>
      <arglist>(float xalign)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_alignment</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>abc34d355109c2c731a521a934d261333</anchor>
      <arglist>(Align xalign)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>get_alignment</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a56c531d9d0a948b8cd093524887662e1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_completion</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aea2c754b7d893aeb0fc1e702e282d34c</anchor>
      <arglist>(const Glib::RefPtr&lt; EntryCompletion &gt; &amp;completion)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; EntryCompletion &gt;</type>
      <name>get_completion</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>abf8ba2fcb257fc8d5c39020d71aecf68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const EntryCompletion &gt;</type>
      <name>get_completion</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aae8e634a951e091d92175e13cc6777fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_progress_fraction</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a899c3d5def8a61554f8d00f9d112510d</anchor>
      <arglist>(double fraction)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_progress_fraction</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a9c9c2df15197dbce3da2e85c9e0eadc9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_progress_pulse_step</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a68dafb722b031315f714b128f38e8918</anchor>
      <arglist>(double fraction)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_progress_pulse_step</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a8e49520d77d37dc28bbe4d9d7b653d2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>progress_pulse</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ab226eca2a6d4e625e0e7784ff32d1520</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_placeholder_text</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aa25e9648c152227d831f5b61bd796680</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_placeholder_text</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a2eed50b0634c0e3b61b2670db82390c0</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_from_pixbuf</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a6cb966d5bd0ec17afa590b8758f87de6</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;pixbuf, EntryIconPosition icon_pos=ENTRY_ICON_PRIMARY)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_from_stock</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a2357356dfb62358ae9a46ffb68eceabd</anchor>
      <arglist>(const StockID &amp;stock_id, EntryIconPosition icon_pos=ENTRY_ICON_PRIMARY)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_from_icon_name</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a7c61eafbce9c3293566c1b6cc86f89e1</anchor>
      <arglist>(const Glib::ustring &amp;icon_name, EntryIconPosition icon_pos=ENTRY_ICON_PRIMARY)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_from_gicon</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a9061b3f202fca62aaab441d922ed5768</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::Icon &gt; &amp;icon, EntryIconPosition icon_pos=ENTRY_ICON_PRIMARY)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_icon</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a67cbc6ab0005b7a5907d252379f9e17d</anchor>
      <arglist>(EntryIconPosition icon_pos=ENTRY_ICON_PRIMARY)</arglist>
    </member>
    <member kind="function">
      <type>ImageType</type>
      <name>get_icon_storage_type</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a39963bf3b92b6497cc6713108751cf50</anchor>
      <arglist>(EntryIconPosition icon_pos=ENTRY_ICON_PRIMARY) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>get_icon_pixbuf</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a5e78065178a07dbc39d3d3c0249d967e</anchor>
      <arglist>(EntryIconPosition icon_pos=ENTRY_ICON_PRIMARY)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Pixbuf &gt;</type>
      <name>get_icon_pixbuf</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a92206b4c88aafa5c05d6ffaa662e66ef</anchor>
      <arglist>(EntryIconPosition icon_pos=ENTRY_ICON_PRIMARY) const </arglist>
    </member>
    <member kind="function">
      <type>StockID</type>
      <name>get_icon_stock</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a76ae75ca9557395aa58af13f086bf13a</anchor>
      <arglist>(EntryIconPosition icon_pos=ENTRY_ICON_PRIMARY) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_icon_name</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a517feb03388f21b65614b774a4c9e72f</anchor>
      <arglist>(EntryIconPosition icon_pos=ENTRY_ICON_PRIMARY) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::Icon &gt;</type>
      <name>get_icon_gicon</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a10fbf9ea20a422441dd0671c70d8a84a</anchor>
      <arglist>(EntryIconPosition icon_pos=ENTRY_ICON_PRIMARY)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::Icon &gt;</type>
      <name>get_icon_gicon</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a5dd5aab913870be1c6829babf16c1519</anchor>
      <arglist>(EntryIconPosition icon_pos=ENTRY_ICON_PRIMARY) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_activatable</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a93a6b5544e9e829e08873a3a983cb96a</anchor>
      <arglist>(bool activatable=true, EntryIconPosition icon_pos=ENTRY_ICON_PRIMARY)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_icon_activatable</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a22b46f01ce549a892919d311c56a16b1</anchor>
      <arglist>(EntryIconPosition icon_pos=ENTRY_ICON_PRIMARY) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_sensitive</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aa9c52d21f2f51cddc3d27969058290f4</anchor>
      <arglist>(EntryIconPosition icon_pos=ENTRY_ICON_PRIMARY, bool sensitive=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_icon_sensitive</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a330f05db2aa71205203f44ecd2fa7c77</anchor>
      <arglist>(EntryIconPosition icon_pos=ENTRY_ICON_PRIMARY)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_icon_at_pos</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aa11dd4bdbe155d5a6be7bcf2c1cac2d3</anchor>
      <arglist>(int x, int y) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_tooltip_text</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a9b83e86f355cadbbe747329baa9b89c3</anchor>
      <arglist>(const Glib::ustring &amp;tooltip, EntryIconPosition icon_pos=ENTRY_ICON_PRIMARY)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_icon_tooltip_text</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ae27ea25b91ed943e3f183b75a60a2727</anchor>
      <arglist>(EntryIconPosition icon_pos=ENTRY_ICON_PRIMARY) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_tooltip_markup</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a883f4bd90ef0c305e5105dcbec112b78</anchor>
      <arglist>(const Glib::ustring &amp;tooltip, EntryIconPosition icon_pos=ENTRY_ICON_PRIMARY)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_icon_tooltip_markup</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ae837caf9eeceb0b1ac81ead5c722f1ca</anchor>
      <arglist>(EntryIconPosition icon_pos=ENTRY_ICON_PRIMARY) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_drag_source</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>afe86bb00008398f2f5a5aa0502c15d12</anchor>
      <arglist>(const Glib::RefPtr&lt; TargetList &gt; &amp;target_list, Gdk::DragAction actions=Gdk::ACTION_COPY, EntryIconPosition icon_pos=ENTRY_ICON_PRIMARY)</arglist>
    </member>
    <member kind="function">
      <type>Gdk::Rectangle</type>
      <name>get_icon_area</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a9545ad2902b9772c8b83912ffab32045</anchor>
      <arglist>(EntryIconPosition icon_pos=ENTRY_ICON_PRIMARY) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_current_icon_drag_source</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a6509e7897cbabeacb4a6b366fa48cef8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>im_context_filter_keypress</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a0b80d86844a0041e727fa470a99e192a</anchor>
      <arglist>(GdkEventKey *gdk_event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset_im_context</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a5d22e76bfbd4c3e89be05f7677655858</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_input_purpose</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>afa89cf34c536af7175c88958ace60e45</anchor>
      <arglist>(InputPurpose purpose)</arglist>
    </member>
    <member kind="function">
      <type>InputPurpose</type>
      <name>get_input_purpose</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a1900b2a95e0dd24a1533a4acd1163ff9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_input_hints</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a7c4c0fbd30deb8e593cbe55a087b0305</anchor>
      <arglist>(InputHints hints)</arglist>
    </member>
    <member kind="function">
      <type>InputHints</type>
      <name>get_input_hints</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a7117a8e321687beffae2d7be13769dd0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_attributes</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a0f6057fdd2bb2121a6eeb0077744da87</anchor>
      <arglist>(Pango::AttrList &amp;attrs)</arglist>
    </member>
    <member kind="function">
      <type>Pango::AttrList</type>
      <name>get_attributes</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a4514b20281154257eae4e81756abfaeb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tabs</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ab7707332a05d1fdbccdd4d1e90c2d177</anchor>
      <arglist>(const Pango::TabArray &amp;tabs)</arglist>
    </member>
    <member kind="function">
      <type>Pango::TabArray</type>
      <name>get_tabs</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a1f1b3d1bd360a672f0b74bcbbd1000d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>grab_focus_without_selecting</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>adbe2dc2fa3bfbb80e88eb27bf8810676</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, Menu * &gt;</type>
      <name>signal_populate_popup</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a1452a94a5def5557bbc4bd26122cfee5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::ustring &amp; &gt;</type>
      <name>signal_insert_at_cursor</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a8b52fda0261e13f289d0898b805da022</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_activate</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ac841ab5dd1e900152043368058ce7fc4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, EntryIconPosition, const GdkEventButton * &gt;</type>
      <name>signal_icon_release</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a1843365bfcfcc3581986c03696d94489</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, EntryIconPosition, const GdkEventButton * &gt;</type>
      <name>signal_icon_press</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ad65f62f677e21c3e91098c9a6ca89c29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; EntryBuffer &gt; &gt;</type>
      <name>property_buffer</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a063a062475a91fad8b53cd316e397df0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; EntryBuffer &gt; &gt;</type>
      <name>property_buffer</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a50a0e1e6dc41d5ca27aed1a4fd1e3cf0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_cursor_position</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ad9c296b8501c122d99ab03b634f8b393</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_selection_bound</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ac99df579b13682a5e91545985697d085</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_editable</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a3db9bc8d6772c8cf9480a9754be624e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_editable</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a479d0da71941c26a0398d97c89ee3e5e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_max_length</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a5cdd0839c0cd0647c2bb40bebc04e694</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_max_length</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a472ece0e7dfa887708ad8de71e70e9a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_visibility</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ab48239dd07de344eb19d521b5219bf4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_visibility</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ac1b1b4060cbb04fd00bd13bd3c992b7a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_has_frame</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a98bcd94afa7bb2564f9de73569c311d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_frame</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a04b565e79663bb17f6c3e23d387719b6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Border &gt;</type>
      <name>property_inner_border</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ae9b9d1e58b85279c5ebff2bb8f453691</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Border &gt;</type>
      <name>property_inner_border</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a2cc0c3f4834b468ec4c235fd40d80fb6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; gunichar &gt;</type>
      <name>property_invisible_char</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a0244eb6e64be8dca03756e947d41472e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; gunichar &gt;</type>
      <name>property_invisible_char</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a7082ab574ac69abf4b4ed7a08010bdfe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_invisible_char_set</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a98712397d45cb984d88544554d2b7f79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_invisible_char_set</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ac96857c60e9174e87911088f8e0f5b40</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_activates_default</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ada50a0c049dabed79a375ff50cb4b446</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_activates_default</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a97733ac416b982867724bf986c127ced</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_width_chars</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>abbdfba4ea70fcbd5f1bb43cca64a070e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_width_chars</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a518f4581d53195534c15f965754db6e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_max_width_chars</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aaf51bd14d3c70611b45f2121acdf2dc4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_max_width_chars</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a1bdf8d645ee58550aafb81b046b220aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_scroll_offset</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aae91d15b07e7b2d0704314c5791bc8ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; ShadowType &gt;</type>
      <name>property_shadow_type</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aec4d117831bc709247bb47f574bff8b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; ShadowType &gt;</type>
      <name>property_shadow_type</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aef7c2c548473359160aea06bbdc5a2fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_text</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ae000f9c5269fdf6b7fa7e1585d4ab3c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_text</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a861f40b781188b01eacbe30b9d0d0896</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; float &gt;</type>
      <name>property_xalign</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a316b7c2ff31e49154829b2a8f713df75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; float &gt;</type>
      <name>property_xalign</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a1982bd54cc41f583faa7238a95eabe36</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_truncate_multiline</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aa83e1c5010c42fa15efa8f8f65fac503</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_truncate_multiline</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aff43e86b790e4d7e3355d7d035feb620</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_overwrite_mode</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a022d28feeb5aa97614401623a96cb31a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_overwrite_mode</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ab842c5e161c670516469e8f72eaaab1b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_text_length</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a306d20e3f136f0cc6ae20177aeb08211</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_caps_lock_warning</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>abff924c5b590a5cb001748c9b0d52f69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_caps_lock_warning</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a579e4fc085a3e59872a03c6317638457</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_progress_fraction</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a426ecafae082eb17dbc9eb2a7127a01d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_progress_fraction</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aaed13dc361fe002e62268a0e62acbb3c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_progress_pulse_step</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a5c2e3ba8b731328f06ec3b9bc8ef813b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_progress_pulse_step</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a0c63063e70749c9be4b48ca9719f13ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gdk::Pixbuf &gt; &gt;</type>
      <name>property_primary_icon_pixbuf</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ae5ebaec975f2aceed3c25ddc09c63b11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::Pixbuf &gt; &gt;</type>
      <name>property_primary_icon_pixbuf</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a46f5d6ba20425c097db7fef75bbf62af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gdk::Pixbuf &gt; &gt;</type>
      <name>property_secondary_icon_pixbuf</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a8052ffb6c7c2ec1485eb634a09ad7ebe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::Pixbuf &gt; &gt;</type>
      <name>property_secondary_icon_pixbuf</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a0b2e662a786f8e00c22788d33e6e91ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; StockID &gt;</type>
      <name>property_primary_icon_stock</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>abc3b80052fab22afe57a3ab8f89971b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; StockID &gt;</type>
      <name>property_primary_icon_stock</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a0f7f736837dfb64309eb02eaac4409fe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; StockID &gt;</type>
      <name>property_secondary_icon_stock</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aba61d86509de6015afb1cc48dda115d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; StockID &gt;</type>
      <name>property_secondary_icon_stock</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a1ea324e66329f25a86cf0be1c263013f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_primary_icon_name</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a1a977c5f8f6647d1754a4d58cb3b42d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_primary_icon_name</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a8af743b426bed0ff9e49d9eaedcbe1cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_secondary_icon_name</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a59621ed6d7fde2f43c57236acd5970ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_secondary_icon_name</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a93082283dd8b3f330cffa83a8e581dba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::Icon &gt; &gt;</type>
      <name>property_primary_icon_gicon</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ad7a7053f14c38bcf87b3405acd9211a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::Icon &gt; &gt;</type>
      <name>property_primary_icon_gicon</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a60d84b0b3215465a08e8417711ded461</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::Icon &gt; &gt;</type>
      <name>property_secondary_icon_gicon</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a9b4ce0aa1f6568b792adca6737c321b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::Icon &gt; &gt;</type>
      <name>property_secondary_icon_gicon</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a5fcbed662c82df1e393e3ca29e988a5b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; ImageType &gt;</type>
      <name>property_primary_icon_storage_type</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a84ed186c4e2f6567b31eb1c7c3816796</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; ImageType &gt;</type>
      <name>property_secondary_icon_storage_type</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ab06b955c83f7aee811c4c76a6e5195a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_primary_icon_activatable</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a7e2dce9358c189e393f3e7b71fdb4e01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_primary_icon_activatable</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aebb3badd843c6621b65933cc08152a5f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_secondary_icon_activatable</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a98b91b03925dc1f70ab631ad4015d65e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_secondary_icon_activatable</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aecf7db76dda3285c815f2ed5480ad159</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_primary_icon_sensitive</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a2f5b19d2f23f4d7dd57eefc1d94176c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_primary_icon_sensitive</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>afd4bcdae1756b7be0063b4ae01db7700</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_secondary_icon_sensitive</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a0c020ee4da1a40257aaeefdc4215e91e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_secondary_icon_sensitive</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>afcad54c5c341b93a5139866ffa372d2a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_primary_icon_tooltip_text</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a275324936e37a3da34d450c437531c62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_primary_icon_tooltip_text</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>afb269df72432ed68fe309b7b5dfb2c79</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_secondary_icon_tooltip_text</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a45f09c964df4a2c7a8952ef442417e5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_secondary_icon_tooltip_text</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a83e1bb27a820cf0429d058aa18f5fb09</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_primary_icon_tooltip_markup</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a8523fa6d6d3c38831a1f90773e7db392</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_primary_icon_tooltip_markup</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a5dcc8fdf3be27febad6e5dbeeef2109e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_secondary_icon_tooltip_markup</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ad863b1f52ac09ebe48d6794c46548e13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_secondary_icon_tooltip_markup</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a4d24c58323ec14cccd503e5e026936ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_im_module</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aec64b2ed8db46a0eb3df78098f13890e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_im_module</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>afe7677f6b39ba59f964ef68569826c11</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_placeholder_text</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>afd675235e3f9c1bb4d09e98a7b713ef0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_placeholder_text</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a1ef018603b3a49edf4f946521da5a08b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; EntryCompletion &gt; &gt;</type>
      <name>property_completion</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a7555fb9cd9c41f7d4a2e2fc42e80a1a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; EntryCompletion &gt; &gt;</type>
      <name>property_completion</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ab6c14c8f1f69c40084eb34caef05363f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; InputPurpose &gt;</type>
      <name>property_input_purpose</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aee5534791f40f79c8ede28704b426c2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; InputPurpose &gt;</type>
      <name>property_input_purpose</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ab39abc9178b223f98302432de9032ca2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; InputHints &gt;</type>
      <name>property_input_hints</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>accda01a202debfbb60d224cc4a2dd958</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; InputHints &gt;</type>
      <name>property_input_hints</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ad9254196d863a584a9f8a8a1d09e2bd6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::AttrList &gt;</type>
      <name>property_attributes</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a401cebfd6589094e454b5bbda93e4347</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::AttrList &gt;</type>
      <name>property_attributes</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>abde93b22f31c47e258ebba722cb28616</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_populate_all</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>add3eebbdd03d2c57fb9a257d8df7ad30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_populate_all</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>ad13cd2c36130cf5f51df13ce0f537273</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::TabArray &gt;</type>
      <name>property_tabs</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a1e375aacdb4170ebed8fc5bde721805f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::TabArray &gt;</type>
      <name>property_tabs</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a824bf09dc8b5ab55b56af4dfdcf2d9a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a0abfd8164dfa228011f3e824103dc90a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_populate_popup</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>aa077de18e350e1e6443d0c9b7296a430</anchor>
      <arglist>(Menu *menu)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_insert_at_cursor</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>adacda95be71844ae5420d9b7cfde2078</anchor>
      <arglist>(const Glib::ustring &amp;str)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_activate</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a2684cc2127d527b44cf3b6fcb169147b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Entry *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Entry.html</anchorfile>
      <anchor>a317ab243722ef15794dafa511176576b</anchor>
      <arglist>(GtkEntry *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::EntryBuffer</name>
    <filename>classGtk_1_1EntryBuffer.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>EntryBuffer</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>aa89320ff4e293f9af54973d457e01858</anchor>
      <arglist>(EntryBuffer &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>EntryBuffer &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>ac2e78aee448abd067a19f7e217a5a5c8</anchor>
      <arglist>(EntryBuffer &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EntryBuffer</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>adf3c745aee826059b550f56098c3f318</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkEntryBuffer *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>ad567657dd7d73c3277dbf87647cfe4ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkEntryBuffer *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a3abe82b4d53b3610ee47f825221cae8f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkEntryBuffer *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>acb885a342bd3b42577eab89d5e0d2925</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>gsize</type>
      <name>get_bytes</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a53cb0c54a2b13314e64036dae7c0f0db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_length</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a9cebb86114b9cb03d24b86d058486c55</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_text</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>afaff2f92189073b335d8fbb0102cd6c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_text</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a289ee88d181f1b81b9cada53d12628ff</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_max_length</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a381e1969e3f387ef19cbf10cfae5ca46</anchor>
      <arglist>(int max_length)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_max_length</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>ac4299229d3f2dc3c1afc02c8e430641e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>insert_text</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a01bf8802e1570532eb7c6afc6bbd4851</anchor>
      <arglist>(guint position, const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>delete_text</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a1e735047dd16f4b1c40aa4c952d50258</anchor>
      <arglist>(guint position, int n_chars)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit_inserted_text</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a0866b9a826b9f96f941eaf84945884fa</anchor>
      <arglist>(guint position, const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emit_deleted_text</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a325918e5e859bba2927daa25113c32d3</anchor>
      <arglist>(guint position, guint n_chars)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, guint, const gchar *, guint &gt;</type>
      <name>signal_inserted_text</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a6479ad4dde133ca5bca03d5f36d75d5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, guint, guint &gt;</type>
      <name>signal_deleted_text</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a9307a44b827366fa3a958d0fab2d9caf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_text</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a37321a848e983cd7426ffc9f2722ddc5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_text</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>acfe652094ad9ba39e2f1975159053a63</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_length</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a1b4e43d118c0828cbe70a02e7aead23f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_max_length</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a1207241632564f941d637baaf3c293a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_max_length</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a4e70289b0fb0c9e04e551bea7bbb3f9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>aa63aadf672f0df997d92c254fe08e461</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; EntryBuffer &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>aa8d182fb0881a3a58e71352f63a37710</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; EntryBuffer &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a730e9d1751b9275a2de18da9c16d39c1</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>EntryBuffer</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a560c87ddbf7790dde544535edada9d25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>EntryBuffer</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a0af68812843e71fa92933ee646226a18</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_inserted_text</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a9abba6505cf595b5b09c1a931252e2b3</anchor>
      <arglist>(guint position, const gchar *chars, guint n_chars)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_deleted_text</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>a422081a55ff1fd9712fdde947bffd163</anchor>
      <arglist>(guint position, guint n_chars)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::EntryBuffer &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1EntryBuffer.html</anchorfile>
      <anchor>aa7f5eb545b57327fecf0681665f19d7c</anchor>
      <arglist>(GtkEntryBuffer *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::EntryCompletion</name>
    <filename>classGtk_1_1EntryCompletion.html</filename>
    <base>Glib::Object</base>
    <base>Gtk::CellLayout</base>
    <base>Gtk::Buildable</base>
    <member kind="typedef">
      <type>sigc::slot&lt; bool, const Glib::ustring &amp;, const TreeModel::const_iterator &amp; &gt;</type>
      <name>SlotMatch</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a0b466d5f6e782fcc9082404e31eccda2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EntryCompletion</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a4143787e24c05ad31c2500b5a6f415d9</anchor>
      <arglist>(EntryCompletion &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>EntryCompletion &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a807b77e5ee2541daff66c219321968d5</anchor>
      <arglist>(EntryCompletion &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EntryCompletion</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a8b35dc4a69ff6bedd1d2bb160f1a0002</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkEntryCompletion *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>ac5d7e3901f625ce6ad49d407b09b67bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkEntryCompletion *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>ab920bc0dff73adb50df48d7e7f8813a4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkEntryCompletion *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a3b5411ca68bef9fa74d60e7aba50e70e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Entry *</type>
      <name>get_entry</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a86ab303d750df98bafcb3b3ea25aa824</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Entry *</type>
      <name>get_entry</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>ac529469372e7de8d60a736bfc572277f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_model</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>ace78afcde83713f12c20c97ad6185034</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a3347e85ad5aba5f71647825259377fe2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>aa78470cefa44712111727ab1efec9856</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_model</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>aebfca6adfd1d0298ed4b5a9dd2c66100</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_match_func</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a3322b529944b15b80e3a9f7beca07816</anchor>
      <arglist>(const SlotMatch &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_minimum_key_length</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a8c3f31fe0b5044d89f80b5c7a3b711f7</anchor>
      <arglist>(int length)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_minimum_key_length</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>aeb79cb224f04a879fcd2d8d8ffaac5ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>compute_prefix</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>ad6dab5c042776c29165d292a0bebd0c9</anchor>
      <arglist>(const Glib::ustring &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>complete</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a5a9467a0ca886addbdd0b2c9de3db9a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_prefix</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>afcea3ef244666558aba1e8d7da37d400</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_action_text</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a70956e567a3a729eed724ad4c79037e5</anchor>
      <arglist>(const Glib::ustring &amp;text, int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepend_action_text</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>ae1e957fc7a972a23056a4c661846cfde</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_action_markup</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a59383a19dfb727d57fe3da64cb6b730a</anchor>
      <arglist>(const Glib::ustring &amp;markup, int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepend_action_markup</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a75e305259abc7a8e8bfd262714409d8b</anchor>
      <arglist>(const Glib::ustring &amp;markup)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete_action</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>af991b1aa16a2329ccb7b8c4a155649ca</anchor>
      <arglist>(int index=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_inline_completion</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a5350c2818638bbe609b8801722d0ce0f</anchor>
      <arglist>(bool inline_completion=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_inline_completion</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a8b6522634553a548aebfb46270c5d6da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_inline_selection</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a6edeeb5ddbdcf6e8b9a1a2ead983471e</anchor>
      <arglist>(bool inline_selection=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_inline_selection</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a735d4d162b32cdcbcb59bf1863a47499</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_popup_completion</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a803fb91a50ba547105d1b55c060dea46</anchor>
      <arglist>(bool popup_completion=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_popup_completion</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a33466953e27da90e62106971fd275513</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_popup_set_width</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a4374f2bee5d9b7fb380db31208c23842</anchor>
      <arglist>(bool popup_set_width=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_popup_set_width</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a4e469cb4600d844e09cd89a2489ed876</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_popup_single_match</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a278fb680457123cbdea1aa3242c17eb4</anchor>
      <arglist>(bool popup_single_match=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_popup_single_match</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a7d999cb0d18f103e84a8d24ab3c5c08d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_completion_prefix</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>aeb975d48e88f30f42d40154e8408488c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_text_column</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>acaedfc73d239405d868342b14a0963f0</anchor>
      <arglist>(const TreeModelColumnBase &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_text_column</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>ab36e1610db2c556b2c9c171c385c9ac4</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_text_column</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>ae526153868d31a64085a2195c21ab2f9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, int &gt;</type>
      <name>signal_action_activated</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>abc385b993fdc52c332b92a8941da030c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy1&lt; bool, const TreeModel::iterator &amp; &gt;</type>
      <name>signal_match_selected</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a618d4d9f89ab39031ab8313b66f0ab8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy1&lt; bool, const TreeModel::iterator &amp; &gt;</type>
      <name>signal_cursor_on_match</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a9e13c894044d423749ad6fe0dc647681</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, const Glib::ustring &amp; &gt;</type>
      <name>signal_insert_prefix</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>ad948604e90f22ce2d2faa6097ec77227</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_no_matches</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a80466bcf86894c0f055d5e386d918cf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gtk::TreeModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a4f6926c192f2629f786cba4f89985b35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gtk::TreeModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a278c87016d615b7ec2b53246bcf82351</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_minimum_key_length</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a98a57accefcf1213c705a27dc9854ded</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_minimum_key_length</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>ac20e151d9d2e6b3feff8b338a3720d4e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_text_column</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a40f666b5606ad5a51df886e69f61e6e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_text_column</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a2687caa12cecf13fe68ccc78322ad3e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_inline_completion</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a026b14cc9fbc8586cb8aaa41d8c6c99b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_inline_completion</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a5c05f456bea7370c631ccec79e317b84</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_popup_completion</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a5bac263051bb1a0ae23549334eb0fdab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_popup_completion</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>abab688c14f4ff6f3e16068a402e93335</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_popup_set_width</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>aa7574d8fa58798c6f9db44e8066443c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_popup_set_width</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a732df9f0537364cf3b80ced9ab4a7e4b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_popup_single_match</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a3cd5f87d9709d860b106c01993e735d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_popup_single_match</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a812a3ab50f660286f5d873b9fe44c427</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_inline_selection</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a1835e471e605388ff1ab8018bbf0e2ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_inline_selection</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a0ca889ae2fe8ee3c1ad186500e128daf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; CellArea &gt; &gt;</type>
      <name>property_cell_area</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>afd3588899890762a44fa3fbfe786577c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a5474ea853bd015c7148479458d5ffe0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; EntryCompletion &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>aff0be9be1b63ad825bf8f8181f10dcc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>EntryCompletion</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>ae5eba9f21c7df310f06567f37b30fd28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_match_selected</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a501f34c9decd9f62871f4d46f04cdb17</anchor>
      <arglist>(const TreeModel::iterator &amp;iter)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_action_activated</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>ac35a917204f41a46d83a5e393cc185a7</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_insert_prefix</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a7705b7d265a78c6ae731f4e6abd13f46</anchor>
      <arglist>(const Glib::ustring &amp;prefix)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::EntryCompletion &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1EntryCompletion.html</anchorfile>
      <anchor>a33c76e70ca30d22676a23dc1d37b8712</anchor>
      <arglist>(GtkEntryCompletion *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::EventBox</name>
    <filename>classGtk_1_1EventBox.html</filename>
    <base>Gtk::Bin</base>
    <member kind="function">
      <type></type>
      <name>EventBox</name>
      <anchorfile>classGtk_1_1EventBox.html</anchorfile>
      <anchor>a344138bb2e52770f36dea9c35ee7706b</anchor>
      <arglist>(EventBox &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>EventBox &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1EventBox.html</anchorfile>
      <anchor>a2ab305d88865922ff7eb16698b96b5e7</anchor>
      <arglist>(EventBox &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EventBox</name>
      <anchorfile>classGtk_1_1EventBox.html</anchorfile>
      <anchor>a29395eed689cfabc0c601940a7a47897</anchor>
      <arglist>(const EventBox &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>EventBox &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1EventBox.html</anchorfile>
      <anchor>a360aab3c54b11826f2fe9c4957bb79e9</anchor>
      <arglist>(const EventBox &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EventBox</name>
      <anchorfile>classGtk_1_1EventBox.html</anchorfile>
      <anchor>a75d2d5b88ddc56d28a2d841adf0c3f13</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkEventBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1EventBox.html</anchorfile>
      <anchor>ab8eec81a75fac4b357c12e00d5375b26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkEventBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1EventBox.html</anchorfile>
      <anchor>ac104c2ba7989fc169a9ab5fc2f29dbdc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EventBox</name>
      <anchorfile>classGtk_1_1EventBox.html</anchorfile>
      <anchor>ac08bb3caa8438079f8c5662aea273b8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_visible_window</name>
      <anchorfile>classGtk_1_1EventBox.html</anchorfile>
      <anchor>af7c01805045b0350ab022177bfdd1eb7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visible_window</name>
      <anchorfile>classGtk_1_1EventBox.html</anchorfile>
      <anchor>aed330de64eb6d3aa26ce54dc1d262ef5</anchor>
      <arglist>(bool visible_window=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_above_child</name>
      <anchorfile>classGtk_1_1EventBox.html</anchorfile>
      <anchor>aa452b7d6e2df4146a094eb5dfd148211</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_above_child</name>
      <anchorfile>classGtk_1_1EventBox.html</anchorfile>
      <anchor>a2aaaf3ecfb6ddd5425ae4c557d48b459</anchor>
      <arglist>(bool above_child=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_visible_window</name>
      <anchorfile>classGtk_1_1EventBox.html</anchorfile>
      <anchor>a2946565fdcad9bb4396d1819ab1f1b53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_visible_window</name>
      <anchorfile>classGtk_1_1EventBox.html</anchorfile>
      <anchor>abf13851ba6621a7059b2d8248cdee7fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_above_child</name>
      <anchorfile>classGtk_1_1EventBox.html</anchorfile>
      <anchor>a3937a395bfd3953c9c4ec063b219c8ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_above_child</name>
      <anchorfile>classGtk_1_1EventBox.html</anchorfile>
      <anchor>aac9269a780660b56e9f0f09a1f434509</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1EventBox.html</anchorfile>
      <anchor>adefb9cfccf585ad71c851e12f0f3905a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::EventBox *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1EventBox.html</anchorfile>
      <anchor>a0ac20e93b20deac4bea666985dd9b5cc</anchor>
      <arglist>(GtkEventBox *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::EventController</name>
    <filename>classGtk_1_1EventController.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>EventController</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>a7cc45ffcaaefab76f385e82e30f5eb4e</anchor>
      <arglist>(EventController &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>EventController &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>a134e61c755957a9a703206986595c5e9</anchor>
      <arglist>(EventController &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EventController</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>a01e5d033a39ac97cac3b2e4ef622d85c</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkEventController *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>a2155c53567308b153c108afd3c17f7aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkEventController *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>aeb78a35d7fc53b87b624a9427a14db8c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkEventController *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>ad1a8d8dd50247bb2cbca8ccee0c01917</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_widget</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>ab0a3645d9d0e9c2bd4eefdffce054d3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_widget</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>a2cc698895bff3ef0673d26eead45e73d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>handle_event</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>a5aad517685ae92311723ad900d24bb78</anchor>
      <arglist>(const GdkEvent *event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>ae1805dcccb6e3007f694819477e6ca6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PropagationPhase</type>
      <name>get_propagation_phase</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>ac45c44cf6777a55ce291f703c0103369</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_propagation_phase</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>aa463e8e855f1e23067780a68617aebc6</anchor>
      <arglist>(PropagationPhase phase)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_widget</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>a49f2d46d193a28056488c8f21c6f6433</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; PropagationPhase &gt;</type>
      <name>property_propagation_phase</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>a53c05f43b6625eade3c0339ab0e6c698</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; PropagationPhase &gt;</type>
      <name>property_propagation_phase</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>ac8255f7e52395e05d6f240e398668365</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>a9eac99ab3cfb2d7371ca12331a49598f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>EventController</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>a060416111aea37a75326436eb6d9c289</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::EventController &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1EventController.html</anchorfile>
      <anchor>a7954d6f01bb40a4b45e4fcebe901827e</anchor>
      <arglist>(GtkEventController *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Expander</name>
    <filename>classGtk_1_1Expander.html</filename>
    <base>Gtk::Bin</base>
    <member kind="function">
      <type></type>
      <name>Expander</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a369fd753e2323c516f856a9724e4326b</anchor>
      <arglist>(Expander &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Expander &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>af62e16392e2a61ea87787da8f39b8199</anchor>
      <arglist>(Expander &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Expander</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a4b7e6f538a3e4e0a0d4f03a0906368d7</anchor>
      <arglist>(const Expander &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Expander &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>ab237149db4f8b625fd4df0ba74fb30a0</anchor>
      <arglist>(const Expander &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Expander</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a1f208b5a02f079238977ab54a7ed7656</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkExpander *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>ae877f207bfa77723625ca9e296704453</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkExpander *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>acb6251ccaf19d662aa80ffaad835e780</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Expander</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a3877a08bffa14ecdfadc41fd8ff64a19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Expander</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a7a4e41ba79a7ee0358cb0423b1689fb0</anchor>
      <arglist>(const Glib::ustring &amp;label, bool mnemonic=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_expanded</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>afefd2219b8385f091716c4b4f6696ef9</anchor>
      <arglist>(bool expanded=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_expanded</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>ac494c88aaa4ad00f71b49322ce937a9f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_spacing</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a5a52d24f053bcbfa05e445e529604e4e</anchor>
      <arglist>(int spacing)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_spacing</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a1e0e8b25cf700e183d3ad1abf8fc9265</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_label</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a213463dfcd03e4fe73174b0300481b8c</anchor>
      <arglist>(const Glib::ustring &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_label</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>ab4e280fc5707adea459e32f95715ad2c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_underline</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>abbb4c979dacbda70d9e9368d0349ce76</anchor>
      <arglist>(bool use_underline=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_use_underline</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>ab08e26b6d55b66ed52ea1c8bc826c56c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_markup</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a2604bd9768c8119f29629e2b02c79392</anchor>
      <arglist>(bool use_markup=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_use_markup</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a2dd51bbc9a0401449822d65cbabaed24</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_label_widget</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>ac15bd816f9c79e061a2b7825c3d91096</anchor>
      <arglist>(Widget &amp;label_widget)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_label_widget</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a581e4df4d76acbb7e9ba2403e1874bf2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_label_widget</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a53ab47576ec3711b37d2e695eea3b293</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_label_fill</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a5a77a135d0d97736d31d6634c25a0e9b</anchor>
      <arglist>(bool label_fill=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_label_fill</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>ad44d16b3e1e37fe6bdbd729caf39ccde</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_resize_toplevel</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>ad957b5d73c8d73f4b003b7a8d7b229b5</anchor>
      <arglist>(bool resize_toplevel=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_resize_toplevel</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a84f0177c631e1c6db54b94f9d8d927d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_expanded</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>ade17883fc70c87a780b35613403313a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_expanded</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a5e9ad3dcc228eb1be374b9a5838bd753</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_label</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a31f8e53e50a811f2651ae93353480c1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_label</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>adc73b51e5ffb226d2952f3f774ce8a20</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_underline</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a9821eef65d1826efc675746d94339e8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_underline</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a2c1cd151b45a3af05950924de3e7c686</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_markup</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>afa46fae64b6f4c9668141cbbe1339be5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_markup</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a02eae943462be0a7e36c045b0755dce7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_spacing</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a9e836771f0365bf4a2556776ac8040ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_spacing</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a8f2682e0a5805d405960feed532490dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_label_widget</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>abd0ab6e4940ffa0123962fc9725fc768</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_label_widget</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a6a1eec43e9f0d840cac620756efbeed1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_label_fill</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a494dedd41e163222a7b827a44a917199</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_label_fill</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>aaa15cdfbc3428e38c8c0a25f6c1743b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_resize_toplevel</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a9211778c87f0cddfa813c87d09a537dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_resize_toplevel</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>a0ec7f9cd148fe784bf7115d79113a447</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>afe5312b13a678ce6028d9157b1edc20a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Expander *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Expander.html</anchorfile>
      <anchor>aa9d40bd8188a8196be8de39b91dc8705</anchor>
      <arglist>(GtkExpander *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::FileChooser</name>
    <filename>classGtk_1_1FileChooser.html</filename>
    <base>Glib::Interface</base>
    <member kind="function">
      <type></type>
      <name>FileChooser</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a920fcaad5046594b5780a87b57848e0e</anchor>
      <arglist>(FileChooser &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>FileChooser &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>aa92c107040205966e4c778e9ecc63dbb</anchor>
      <arglist>(FileChooser &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FileChooser</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>ab3c514b36461791648f326e93315f902</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkFileChooser *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a1114551dd1d871a7f25dd922938ff3b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkFileChooser *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>aa6d386652bf525ac7a000fac4dc70ab2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_action</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>ac455a88d080c044c03abb343c46b38db</anchor>
      <arglist>(FileChooserAction action)</arglist>
    </member>
    <member kind="function">
      <type>FileChooserAction</type>
      <name>get_action</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a14a4e2301d55430fd15dd9fcfa7a2d17</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_local_only</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>af80900d7204e232521e852b7c113b800</anchor>
      <arglist>(bool local_only=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_local_only</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a06677e7e96c91ab4b9531eee7511e6f9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_select_multiple</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a30a13c0df47fab50c93ad8f38db0c88c</anchor>
      <arglist>(bool select_multiple=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_select_multiple</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a8fba23a3276a6416827025090c1869eb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_hidden</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a4e5a029c4505333d02f97a61cb792186</anchor>
      <arglist>(bool show_hidden=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_hidden</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a2bc1ced81ce3f1eb0bc29c78a386cd4a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_do_overwrite_confirmation</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a09702b39adc997b0bcaa697306afb6e7</anchor>
      <arglist>(bool do_overwrite_confirmation=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_do_overwrite_confirmation</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a7b93f5a58fe44f3c8eec039ec5e637f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_create_folders</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a7f01d6c09d301a6cb1b757d00b3cd5dc</anchor>
      <arglist>(bool create_folders=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_create_folders</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a4ae2155b7bea5f90d9ab8da13faedc68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_current_name</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a5c01937980edceb0f5d12bc0d4d593bc</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_current_name</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>af13782c9ff3bc13f536e511176fc9d0d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_filename</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a1d3fd4f12847d8d357bc89fbe67c1858</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_filename</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a35bbea274ddb0a7b948e6f23b70b9bed</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>select_filename</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a3f26d7fe6b1cfddc18f9e39f68cbc5e6</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unselect_filename</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>ad79e0aaa06109b47f83d60e3ce4dfdd9</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select_all</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a78d9251b8491b943042c8606004cdccc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unselect_all</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a046f98cd7217b750840d19476c26c6ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>get_filenames</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a71bbd79a36b8fb445b6d735345233a27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_current_folder</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>ae122818487251b2ad2a06dc31fd8270a</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_current_folder</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>ae39952e31f76d0aa1b950625ed5765d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_uri</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a1057c3815d62d27e2acca1fbb3daec18</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_uri</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>ab65ce92c84b9b9aef77fdb26e7c8a6bb</anchor>
      <arglist>(const Glib::ustring &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>select_uri</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>add9302d8afe9eefd9d36b01ba750c130</anchor>
      <arglist>(const Glib::ustring &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unselect_uri</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a09d6d6f9aae123e933e8c266b447cd79</anchor>
      <arglist>(const Glib::ustring &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>get_uris</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a38c389c3fa7265e412ec343b3b6de1fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_current_folder_uri</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a2b422aaf13cecbe7793bb8231f181718</anchor>
      <arglist>(const Glib::ustring &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_current_folder_uri</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>ad17c7434ce3ee3bfd48357b59ff67e29</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_file</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a3dd98107d7c7a00ca37e58b457f2dc98</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gio::File &gt; &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>select_file</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a66d3b96944f881eace51b28d1fea9e50</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gio::File &gt; &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unselect_file</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>aa68262ed87c11439d606247a6a689f24</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gio::File &gt; &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; Gio::File &gt; &gt;</type>
      <name>get_files</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a30d9b2008fe26fa51e3b151d1d9ad71d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_current_folder_file</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a31693be8ae6b8e503c201419c9391d70</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gio::File &gt; &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::File &gt;</type>
      <name>get_current_folder_file</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a25761189c1007d4e6c20c65381dceb41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::File &gt;</type>
      <name>get_file</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a431d09d8b36efc88bbc5b4272253c4bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::File &gt;</type>
      <name>get_file</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>af7e72db97a4fe162fefd42aa8bb73d69</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_preview_widget</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>ac6f584f8ded58ab1926457928018fac4</anchor>
      <arglist>(Gtk::Widget &amp;preview_widget)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Widget *</type>
      <name>get_preview_widget</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a7c46d4e0fe769d6ce6a6f42922a60791</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Gtk::Widget *</type>
      <name>get_preview_widget</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>aaac6b33ef0631b8a920835f6b9a884ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_preview_widget_active</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a1702c9cc877c1b652d598057e1de1ed8</anchor>
      <arglist>(bool active=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_preview_widget_active</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>ae77b094a0971794e8c18f67e7296f858</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_preview_label</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a5a0bfa0c278521cf1dc4b2040ff42311</anchor>
      <arglist>(bool use_label=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_use_preview_label</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a61dba42c325f6757829c4a405f21350c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_preview_filename</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>ad7ca547029774af4974b89c29b7bde5f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_preview_uri</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a6f947ccfa6b0e4e51773fd05524d1237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::File &gt;</type>
      <name>get_preview_file</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>ac2fe020bbf916bd8726520a91a773576</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::File &gt;</type>
      <name>get_preview_file</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>ac92c1de0d54c4958c00aff17a461942a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_extra_widget</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>acd125cf970163062d82d60e029aa2273</anchor>
      <arglist>(Gtk::Widget &amp;extra_widget)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Widget *</type>
      <name>get_extra_widget</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>aa8639bb8a1ed6f3b55ff9a06f273c9ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Gtk::Widget *</type>
      <name>get_extra_widget</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>abd9aab0cd3a98cfd79485ba7de94a3fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_filter</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a15cbd8b9a365f91e4a4e97d1fa31cb42</anchor>
      <arglist>(const Glib::RefPtr&lt; FileFilter &gt; &amp;filter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_filter</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a39ded72c0d4d9e30e57eca005f5a0c02</anchor>
      <arglist>(const Glib::RefPtr&lt; FileFilter &gt; &amp;filter)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; FileFilter &gt; &gt;</type>
      <name>list_filters</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>ab65092cc51ed811f265b348a520a8f47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; const FileFilter &gt; &gt;</type>
      <name>list_filters</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a9f3ce6ba1258eeaa76259848ff5f3907</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_filter</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>aedbeea6a5c67dd5b1edb5c3fc51f6f1b</anchor>
      <arglist>(const Glib::RefPtr&lt; FileFilter &gt; &amp;filter)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; FileFilter &gt;</type>
      <name>get_filter</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a362d1b750d76a42c9e8857463bf70a02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const FileFilter &gt;</type>
      <name>get_filter</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a53e9ceb8b06fe4e95f1aa79b7e83950e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_shortcut_folder</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a7f68b1ba7d63495ebf6a85cfba672396</anchor>
      <arglist>(const std::string &amp;folder)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove_shortcut_folder</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a3a18044600e7bff060075c5fb07443c1</anchor>
      <arglist>(const std::string &amp;folder)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>list_shortcut_folders</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>ab590b712a6bb223ff56c4f49d35838e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_shortcut_folder_uri</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a41dca19b1ac57dec854ad7466e36a853</anchor>
      <arglist>(const Glib::ustring &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove_shortcut_folder_uri</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a13f83decdc5392b471e10a965686db24</anchor>
      <arglist>(const Glib::ustring &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>list_shortcut_folder_uris</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a3660fa731e3b0b3eaae9ca7aa46a507e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_choice</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a222fef59fff8dc29dd50f7bd1ea745a3</anchor>
      <arglist>(const Glib::ustring &amp;id, const Glib::ustring &amp;label, const std::vector&lt; Glib::ustring &gt; &amp;options, const std::vector&lt; Glib::ustring &gt; &amp;option_labels)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_choice</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a2f7ea4157b7982ae85343e316d31e834</anchor>
      <arglist>(const Glib::ustring &amp;id, const Glib::ustring &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_choice</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a80fec3db483f7d086a778ed680681b89</anchor>
      <arglist>(const Glib::ustring &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_choice</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a9dc9856e48450efc97752f3cf6a7dd7b</anchor>
      <arglist>(const Glib::ustring &amp;id, const Glib::ustring &amp;option)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_choice</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>ad9512f7917fadbd1b5f9649fdd1d3faf</anchor>
      <arglist>(const Glib::ustring &amp;id) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_current_folder_changed</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a71dbb983fe22acb073995a39ca529469</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_selection_changed</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>ab3bbac55934e2e313383ce3c1870d848</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_update_preview</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>acf9418b49b7d15dac46678996d5fe061</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_file_activated</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a95fa9ebc4732c346f6fd86163b717f6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; FileChooserConfirmation &gt;</type>
      <name>signal_confirm_overwrite</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a7c9354a1ba50c36e087181299fbf428a</anchor>
      <arglist>()</arglist>
      <docanchor file="classGtk_1_1FileChooser" title="Custom confirmation">gtkfilechooser-confirmation</docanchor>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; FileChooserAction &gt;</type>
      <name>property_action</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a7383a7aeb4207b9da19016b64f36cb8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; FileChooserAction &gt;</type>
      <name>property_action</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a10575e8b8fd7c57478a1e5ac78885a10</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; FileFilter &gt; &gt;</type>
      <name>property_filter</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>ac189765d544aba24dff23fe44a97c2ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; FileFilter &gt; &gt;</type>
      <name>property_filter</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>aa182998329336acf7beeb9c7a0f1e66a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_local_only</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>afb3e5d698c88553c956538e02d5d35b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_local_only</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>ac895d24f16561cce0e2d0c7bbf1b7c49</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_preview_widget</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a1ea781551438fc5b9096a2da48183361</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_preview_widget</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a67723672129b202e979bdb4420342a37</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_preview_widget_active</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a132901a4711c7e80e2b2be2aa91a4bfe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_preview_widget_active</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a65386b7c18c0978e231a660806cf80bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_preview_label</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>ab5b2eae827abba8accc859488a3cf5cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_preview_label</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a84f689a80b2defa6fef70a449ec698ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_extra_widget</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>acb41199a680d070c4f19242ad5020762</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_extra_widget</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>ab1fd7ca893bf4067d3279c2550534caa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_select_multiple</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>adefb4831699b5a76b07005ac781d7902</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_select_multiple</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a89d4e8e777f7acc0b56dd85ca3b52d8d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_hidden</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a37ff663cb7e8354ce9cfe2dd03628e3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_hidden</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>acadfb9ec73d0c1ccafd6c700adbb5586</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_do_overwrite_confirmation</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a34bec126cb67b9885eeeabde36260ac1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_do_overwrite_confirmation</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>ab638e6fa83cd1ffcd8f49d3fc2125e12</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_create_folders</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>aa50b81e55eaba9aea5a52cabac8997a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_create_folders</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>af589e10deb6a5181940694cfc3a75e88</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>adcf8e76b113200f4886ba83405aa1468</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>ad9922f7a55ffa1e539fe4f2208e23630</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>FileChooser</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>ac73cec9def6277f5c1175acc3f232895</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::FileChooser &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1FileChooser.html</anchorfile>
      <anchor>a3d9576db84e6ac789464f52e968f4bbd</anchor>
      <arglist>(GtkFileChooser *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::FileChooserButton</name>
    <filename>classGtk_1_1FileChooserButton.html</filename>
    <base>Gtk::HBox</base>
    <base>Gtk::FileChooser</base>
    <member kind="function">
      <type></type>
      <name>FileChooserButton</name>
      <anchorfile>classGtk_1_1FileChooserButton.html</anchorfile>
      <anchor>a7f30d979fddb875e3d340a9307939f2a</anchor>
      <arglist>(FileChooserButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>FileChooserButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FileChooserButton.html</anchorfile>
      <anchor>aafde762c93071aaa86419c3f3aaba1aa</anchor>
      <arglist>(FileChooserButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileChooserButton</name>
      <anchorfile>classGtk_1_1FileChooserButton.html</anchorfile>
      <anchor>ae9db0a3c6e242b15238e6c79890195bc</anchor>
      <arglist>(const FileChooserButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>FileChooserButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FileChooserButton.html</anchorfile>
      <anchor>a2da50176a6fd298223fc081b0f452e7f</anchor>
      <arglist>(const FileChooserButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FileChooserButton</name>
      <anchorfile>classGtk_1_1FileChooserButton.html</anchorfile>
      <anchor>aff7066f450aefea2dbc7d4daf9c11375</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkFileChooserButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FileChooserButton.html</anchorfile>
      <anchor>aaf5932fe7ee1cd32d8addba40c503640</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkFileChooserButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FileChooserButton.html</anchorfile>
      <anchor>a1034a135ce8baf1da4a2c466189af990</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileChooserButton</name>
      <anchorfile>classGtk_1_1FileChooserButton.html</anchorfile>
      <anchor>afd7480a2731641ce37abb939775d6238</anchor>
      <arglist>(FileChooserAction action=FILE_CHOOSER_ACTION_OPEN)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileChooserButton</name>
      <anchorfile>classGtk_1_1FileChooserButton.html</anchorfile>
      <anchor>a89b1936bceedbe5656007077ce715b40</anchor>
      <arglist>(const Glib::ustring &amp;title, FileChooserAction action=FILE_CHOOSER_ACTION_OPEN)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileChooserButton</name>
      <anchorfile>classGtk_1_1FileChooserButton.html</anchorfile>
      <anchor>a69b4b54a614b7312cec8c80a039f0536</anchor>
      <arglist>(FileChooserDialog &amp;dialog)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_title</name>
      <anchorfile>classGtk_1_1FileChooserButton.html</anchorfile>
      <anchor>a21a0995ec1e52fad200a726771e711de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_title</name>
      <anchorfile>classGtk_1_1FileChooserButton.html</anchorfile>
      <anchor>ae36fe088c746518bc1b08fcf39f18133</anchor>
      <arglist>(const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_width_chars</name>
      <anchorfile>classGtk_1_1FileChooserButton.html</anchorfile>
      <anchor>a1a500fa7a344b984e0b4e996a8304627</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_width_chars</name>
      <anchorfile>classGtk_1_1FileChooserButton.html</anchorfile>
      <anchor>a918ae15bcb96d03765084d279a970c56</anchor>
      <arglist>(int n_chars)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_focus_on_click</name>
      <anchorfile>classGtk_1_1FileChooserButton.html</anchorfile>
      <anchor>a85e16d51083b0f8f79498fec19022a0d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_focus_on_click</name>
      <anchorfile>classGtk_1_1FileChooserButton.html</anchorfile>
      <anchor>a51e5660524652f6da60e29c5c9d9ffae</anchor>
      <arglist>(gboolean focus_on_click=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_file_set</name>
      <anchorfile>classGtk_1_1FileChooserButton.html</anchorfile>
      <anchor>af10415e3cde4f239de75418438c8396e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_focus_on_click</name>
      <anchorfile>classGtk_1_1FileChooserButton.html</anchorfile>
      <anchor>a3c4acb6ea49db52c656a1221497077c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_focus_on_click</name>
      <anchorfile>classGtk_1_1FileChooserButton.html</anchorfile>
      <anchor>a87613a862c59187f8a8f51ad93a0933b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1FileChooserButton.html</anchorfile>
      <anchor>a072456b166d9ec1b215abb7e93e18a75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1FileChooserButton.html</anchorfile>
      <anchor>a52306caa79046b37a27bb90f3668bbf5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_width_chars</name>
      <anchorfile>classGtk_1_1FileChooserButton.html</anchorfile>
      <anchor>a93f4d0a2411067e740baca592469c13b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_width_chars</name>
      <anchorfile>classGtk_1_1FileChooserButton.html</anchorfile>
      <anchor>a6b9d79b006e49478520b0a480f5c5edc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1FileChooserButton.html</anchorfile>
      <anchor>a817e8735157203d17ae5523a5f0a2934</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_file_set</name>
      <anchorfile>classGtk_1_1FileChooserButton.html</anchorfile>
      <anchor>a4830c8396e98c88920cd23cbc81c3b5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::FileChooserButton *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1FileChooserButton.html</anchorfile>
      <anchor>a7d39ab3e179b4e4b1db974ac319fd985</anchor>
      <arglist>(GtkFileChooserButton *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::FileChooserDialog</name>
    <filename>classGtk_1_1FileChooserDialog.html</filename>
    <base>Gtk::Dialog</base>
    <base>Gtk::FileChooser</base>
    <member kind="function">
      <type></type>
      <name>FileChooserDialog</name>
      <anchorfile>classGtk_1_1FileChooserDialog.html</anchorfile>
      <anchor>adee61b40da388676c0d6c5b4a1e35e2c</anchor>
      <arglist>(FileChooserDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>FileChooserDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FileChooserDialog.html</anchorfile>
      <anchor>afb359f40dfff46a12f1a595067d297c7</anchor>
      <arglist>(FileChooserDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileChooserDialog</name>
      <anchorfile>classGtk_1_1FileChooserDialog.html</anchorfile>
      <anchor>a767274d862adf2493b5e2af2ea7482d3</anchor>
      <arglist>(const FileChooserDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>FileChooserDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FileChooserDialog.html</anchorfile>
      <anchor>aca9e15639fb13305d3aa32c047993400</anchor>
      <arglist>(const FileChooserDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FileChooserDialog</name>
      <anchorfile>classGtk_1_1FileChooserDialog.html</anchorfile>
      <anchor>a499d4a840008fb0d06e03e5bb9784e27</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkFileChooserDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FileChooserDialog.html</anchorfile>
      <anchor>a8bcb702bdc16043f42481c8cebccae55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkFileChooserDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FileChooserDialog.html</anchorfile>
      <anchor>a0e990ba2ed1af83d23126725aa0fa6bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileChooserDialog</name>
      <anchorfile>classGtk_1_1FileChooserDialog.html</anchorfile>
      <anchor>a77fc27b1dd13a2c5cf693a38c370ddd2</anchor>
      <arglist>(Gtk::Window &amp;parent, const Glib::ustring &amp;title, FileChooserAction action=FILE_CHOOSER_ACTION_OPEN)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileChooserDialog</name>
      <anchorfile>classGtk_1_1FileChooserDialog.html</anchorfile>
      <anchor>a755af5bbb32d32efcd68e166373acbd8</anchor>
      <arglist>(const Glib::ustring &amp;title, FileChooserAction action=FILE_CHOOSER_ACTION_OPEN)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileChooserDialog</name>
      <anchorfile>classGtk_1_1FileChooserDialog.html</anchorfile>
      <anchor>a39d7170466eb940bad7fb7a2c7c92a15</anchor>
      <arglist>(Gtk::Window &amp;parent, const Glib::ustring &amp;title, FileChooserAction action, DialogFlags flags)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileChooserDialog</name>
      <anchorfile>classGtk_1_1FileChooserDialog.html</anchorfile>
      <anchor>a878d0a05e403e19b2cc0a9ebd37a182a</anchor>
      <arglist>(const Glib::ustring &amp;title, FileChooserAction action, DialogFlags flags)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileChooserDialog</name>
      <anchorfile>classGtk_1_1FileChooserDialog.html</anchorfile>
      <anchor>a6c2f6fbb2539eb01acbbf5f50d2892a1</anchor>
      <arglist>(Gtk::Window &amp;parent, const Glib::ustring &amp;title, FileChooserAction action, const Glib::ustring &amp;backend)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileChooserDialog</name>
      <anchorfile>classGtk_1_1FileChooserDialog.html</anchorfile>
      <anchor>a905d6679c026b0983f32d21a8eca118f</anchor>
      <arglist>(const Glib::ustring &amp;title, FileChooserAction action, const Glib::ustring &amp;backend)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1FileChooserDialog.html</anchorfile>
      <anchor>ada1c9dd556c3c4aae3e056bc1ce9373a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::FileChooserDialog *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1FileChooserDialog.html</anchorfile>
      <anchor>a1bbb7b4763b3b8094840b9377de185b3</anchor>
      <arglist>(GtkFileChooserDialog *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::FileChooserError</name>
    <filename>classGtk_1_1FileChooserError.html</filename>
    <base>Glib::Error</base>
    <member kind="enumeration">
      <type></type>
      <name>Code</name>
      <anchorfile>classGtk_1_1FileChooserError.html</anchorfile>
      <anchor>aa71fb16ebc64468a95e31a91c2b555c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONEXISTENT</name>
      <anchorfile>classGtk_1_1FileChooserError.html</anchorfile>
      <anchor>aa71fb16ebc64468a95e31a91c2b555c4a292b08ac9837451c52cde1da0c2c98e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BAD_FILENAME</name>
      <anchorfile>classGtk_1_1FileChooserError.html</anchorfile>
      <anchor>aa71fb16ebc64468a95e31a91c2b555c4a212e2a203821db45f151fc38d82f2df5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALREADY_EXISTS</name>
      <anchorfile>classGtk_1_1FileChooserError.html</anchorfile>
      <anchor>aa71fb16ebc64468a95e31a91c2b555c4aabecdfbc8269fc0794f278d812472f4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INCOMPLETE_HOSTNAME</name>
      <anchorfile>classGtk_1_1FileChooserError.html</anchorfile>
      <anchor>aa71fb16ebc64468a95e31a91c2b555c4ac45f27b7a72e51af0d1e2bbb7aaeb21e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONEXISTENT</name>
      <anchorfile>classGtk_1_1FileChooserError.html</anchorfile>
      <anchor>aa71fb16ebc64468a95e31a91c2b555c4a292b08ac9837451c52cde1da0c2c98e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BAD_FILENAME</name>
      <anchorfile>classGtk_1_1FileChooserError.html</anchorfile>
      <anchor>aa71fb16ebc64468a95e31a91c2b555c4a212e2a203821db45f151fc38d82f2df5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALREADY_EXISTS</name>
      <anchorfile>classGtk_1_1FileChooserError.html</anchorfile>
      <anchor>aa71fb16ebc64468a95e31a91c2b555c4aabecdfbc8269fc0794f278d812472f4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INCOMPLETE_HOSTNAME</name>
      <anchorfile>classGtk_1_1FileChooserError.html</anchorfile>
      <anchor>aa71fb16ebc64468a95e31a91c2b555c4ac45f27b7a72e51af0d1e2bbb7aaeb21e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileChooserError</name>
      <anchorfile>classGtk_1_1FileChooserError.html</anchorfile>
      <anchor>ac93edd643f14738f2bc59b714e856d2e</anchor>
      <arglist>(Code error_code, const Glib::ustring &amp;error_message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileChooserError</name>
      <anchorfile>classGtk_1_1FileChooserError.html</anchorfile>
      <anchor>aedf0ac3d4fae1be85a90ff7bf2a8b9e2</anchor>
      <arglist>(GError *gobject)</arglist>
    </member>
    <member kind="function">
      <type>Code</type>
      <name>code</name>
      <anchorfile>classGtk_1_1FileChooserError.html</anchorfile>
      <anchor>ae6c7459173059a8618ed3686e442237f</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::FileChooserNative</name>
    <filename>classGtk_1_1FileChooserNative.html</filename>
    <base>Gtk::NativeDialog</base>
    <base>Gtk::FileChooser</base>
    <member kind="function">
      <type></type>
      <name>FileChooserNative</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>a1e80b98646e29c0b8ca1b2537c875d14</anchor>
      <arglist>(FileChooserNative &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>FileChooserNative &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>a928773464ebcc3844c84dd4f1bb11080</anchor>
      <arglist>(FileChooserNative &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FileChooserNative</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>a291647afc9fb933ef107463bd4bd2a56</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkFileChooserNative *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>aa6b12b68a93509eab9ee67ce2d4e0edf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkFileChooserNative *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>adeb68cca9a9dd82a30cbd153930cf6b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkFileChooserNative *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>a0f7ff732a3998c56efe8fc754b337abb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_accept_label</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>aec0ddd5d55d6ce04d106fb2e6c482282</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_accept_label</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>ae846de575e16d5f9e6b9e25e9debc961</anchor>
      <arglist>(const Glib::ustring &amp;accept_label=Glib::ustring())</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_cancel_label</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>a40fd1e3a0e40ce97ca20b9a305acab82</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_cancel_label</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>ada6960329443b62e579fa1ac796ab002</anchor>
      <arglist>(const Glib::ustring &amp;cancel_label=Glib::ustring())</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_accept_label</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>a018ff8243b91c19c061e9f1a375b3616</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_accept_label</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>ac3ac47518f287f076521f1b600153367</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_cancel_label</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>a9feebeee4e337d4119f85a43d0c20b40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_cancel_label</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>ae11e52e331d424fe6795481bdf1567fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>ac4644b13bd59c9fd77f301610f0e59a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; FileChooserNative &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>a2341708957348d02fdb764edd6842390</anchor>
      <arglist>(const Glib::ustring &amp;title, Window &amp;parent, FileChooserAction action, const Glib::ustring &amp;accept_label=Glib::ustring(), const Glib::ustring &amp;cancel_label=Glib::ustring())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; FileChooserNative &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>aa80e9b28085d7d701ce2fba08feb762c</anchor>
      <arglist>(const Glib::ustring &amp;title, FileChooserAction action, const Glib::ustring &amp;accept_label=Glib::ustring(), const Glib::ustring &amp;cancel_label=Glib::ustring())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>FileChooserNative</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>a7ab65141edbdd3c6d810888361f11c48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>FileChooserNative</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>a3dc85f7f484bb3bd20d59f3276b38eca</anchor>
      <arglist>(const Glib::ustring &amp;title, Window &amp;parent, FileChooserAction action, const Glib::ustring &amp;accept_label, const Glib::ustring &amp;cancel_label)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>FileChooserNative</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>aa6506f47d0e421f92098e6712c1de6e9</anchor>
      <arglist>(const Glib::ustring &amp;title, FileChooserAction action, const Glib::ustring &amp;accept_label, const Glib::ustring &amp;cancel_label)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::FileChooserNative &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1FileChooserNative.html</anchorfile>
      <anchor>ac44824dcebd5a10f7fa4287256403016</anchor>
      <arglist>(GtkFileChooserNative *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::FileChooserWidget</name>
    <filename>classGtk_1_1FileChooserWidget.html</filename>
    <base>Gtk::VBox</base>
    <base>Gtk::FileChooser</base>
    <member kind="function">
      <type></type>
      <name>FileChooserWidget</name>
      <anchorfile>classGtk_1_1FileChooserWidget.html</anchorfile>
      <anchor>aaab545bfbe2b8438ec3edb24575b3bab</anchor>
      <arglist>(FileChooserWidget &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>FileChooserWidget &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FileChooserWidget.html</anchorfile>
      <anchor>ab5c5e8d9f97beebf98263583724bf00e</anchor>
      <arglist>(FileChooserWidget &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileChooserWidget</name>
      <anchorfile>classGtk_1_1FileChooserWidget.html</anchorfile>
      <anchor>afd632435a7d01e70658d3786584e051d</anchor>
      <arglist>(const FileChooserWidget &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>FileChooserWidget &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FileChooserWidget.html</anchorfile>
      <anchor>acc9a392168d655de825be24721b9b569</anchor>
      <arglist>(const FileChooserWidget &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FileChooserWidget</name>
      <anchorfile>classGtk_1_1FileChooserWidget.html</anchorfile>
      <anchor>a99f1d81b8d3f668f94e3a3e78c17603a</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkFileChooserWidget *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FileChooserWidget.html</anchorfile>
      <anchor>a7eb42c3028ebe77b8404164319809dfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkFileChooserWidget *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FileChooserWidget.html</anchorfile>
      <anchor>a6dc1c172e55e5ee441bc7b936a80e66e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileChooserWidget</name>
      <anchorfile>classGtk_1_1FileChooserWidget.html</anchorfile>
      <anchor>acfeca275482ffbaee31b1e913e63bf6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileChooserWidget</name>
      <anchorfile>classGtk_1_1FileChooserWidget.html</anchorfile>
      <anchor>a0dd6f3c40fac3f9f9e9b7e099dd9578a</anchor>
      <arglist>(FileChooserAction action)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1FileChooserWidget.html</anchorfile>
      <anchor>ad2b912d3afb05ed7eca83247884dabcf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::FileChooserWidget *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1FileChooserWidget.html</anchorfile>
      <anchor>a82f782bae793c1f0510732a3157435c0</anchor>
      <arglist>(GtkFileChooserWidget *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::FileFilter</name>
    <filename>classGtk_1_1FileFilter.html</filename>
    <base>Glib::Object</base>
    <class kind="class">Gtk::FileFilter::Info</class>
    <member kind="typedef">
      <type>sigc::slot&lt; bool, const Info &amp; &gt;</type>
      <name>SlotCustom</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>a4c3cb21b5cbdb93d6f9415bd59173436</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileFilter</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>aca180019c6ac6f48e51fa6733ffbb759</anchor>
      <arglist>(FileFilter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>FileFilter &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>a43bb6b2de52e8eada8d12de53ec2f713</anchor>
      <arglist>(FileFilter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FileFilter</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>ac6fc6b0784673d39f9d3383a032c6472</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkFileFilter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>a66e9c0496e9160dac00dc4084b7546bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkFileFilter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>a7d46093351ec372a672a3be88646005a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkFileFilter *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>afb95797c616d629fe908a460be3489ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_name</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>ac192ae4b6a0d24ab00c2d2d434550813</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>af2f9f2895ad22fe94a878f26c594658c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_mime_type</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>af0a289b2b4576672f4ce46de1a84f0be</anchor>
      <arglist>(const Glib::ustring &amp;mime_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_pattern</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>a9b49e4a03afffc2806d17abf33b26cad</anchor>
      <arglist>(const Glib::ustring &amp;pattern)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_pixbuf_formats</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>a7ed1bdf8a077b87b66efbc9fd308a367</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_custom</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>ae42878237330a437191f61df28094208</anchor>
      <arglist>(FileFilterFlags needed, const SlotCustom &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>FileFilterFlags</type>
      <name>get_needed</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>a82c0d157fded98f2d5a40a637227d120</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>a920cd5dfa240af7d474145c91d55178d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; FileFilter &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>ae766003f93b060fa592ee2b11006454e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>FileFilter</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>a542b0bc5fd456766db2b91c502a05603</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::FileFilter &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1FileFilter.html</anchorfile>
      <anchor>ab0df20f0adb893bddba5d1e6f58a496e</anchor>
      <arglist>(GtkFileFilter *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::FileFilter::Info</name>
    <filename>classGtk_1_1FileFilter_1_1Info.html</filename>
    <member kind="variable">
      <type>FileFilterFlags</type>
      <name>contains</name>
      <anchorfile>classGtk_1_1FileFilter_1_1Info.html</anchorfile>
      <anchor>aebe30f8ca25646bf7c1396f7f8a9ac78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Glib::ustring</type>
      <name>filename</name>
      <anchorfile>classGtk_1_1FileFilter_1_1Info.html</anchorfile>
      <anchor>a9dde27e88b8af3e314ee4f1b614a0ead</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Glib::ustring</type>
      <name>uri</name>
      <anchorfile>classGtk_1_1FileFilter_1_1Info.html</anchorfile>
      <anchor>ae5168058bce47da9610c73f6d33b0058</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Glib::ustring</type>
      <name>display_name</name>
      <anchorfile>classGtk_1_1FileFilter_1_1Info.html</anchorfile>
      <anchor>a527564019833290c4028a74d72047671</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Glib::ustring</type>
      <name>mime_type</name>
      <anchorfile>classGtk_1_1FileFilter_1_1Info.html</anchorfile>
      <anchor>a0476e149452d24cee4e8915f13ee98e4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Fixed</name>
    <filename>classGtk_1_1Fixed.html</filename>
    <base>Gtk::Container</base>
    <member kind="function">
      <type></type>
      <name>Fixed</name>
      <anchorfile>classGtk_1_1Fixed.html</anchorfile>
      <anchor>ad434dd596ff3e3cb9d14948f71ee6ba4</anchor>
      <arglist>(Fixed &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Fixed &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Fixed.html</anchorfile>
      <anchor>aa9cdad3f2b44ef1ee35ec3d75207375a</anchor>
      <arglist>(Fixed &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Fixed</name>
      <anchorfile>classGtk_1_1Fixed.html</anchorfile>
      <anchor>a81c8be9b8d32af74ad2a7fe27f16d9dc</anchor>
      <arglist>(const Fixed &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Fixed &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Fixed.html</anchorfile>
      <anchor>ae2d3f686f3817181711e0c1bbb7e2d1a</anchor>
      <arglist>(const Fixed &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Fixed</name>
      <anchorfile>classGtk_1_1Fixed.html</anchorfile>
      <anchor>ac838ec5a3c045ce72cffc2ab165e0ba8</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkFixed *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Fixed.html</anchorfile>
      <anchor>af5aa0d3c6cec6e9ba092e0dc35ccf195</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkFixed *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Fixed.html</anchorfile>
      <anchor>aebeeaf1210354b29a253e16eebd292f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Fixed</name>
      <anchorfile>classGtk_1_1Fixed.html</anchorfile>
      <anchor>a42bad4abd7ea279f245407847330bb4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put</name>
      <anchorfile>classGtk_1_1Fixed.html</anchorfile>
      <anchor>ab7ab22c0d75a84c53d931d4e99497821</anchor>
      <arglist>(Widget &amp;widget, int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move</name>
      <anchorfile>classGtk_1_1Fixed.html</anchorfile>
      <anchor>a43ca94be9bcfaa05cf0757c7b71c3f3f</anchor>
      <arglist>(Widget &amp;widget, int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; int &gt;</type>
      <name>child_property_x</name>
      <anchorfile>classGtk_1_1Fixed.html</anchorfile>
      <anchor>a14c4ecb86208a49c6022f292ff3fc098</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>child_property_x</name>
      <anchorfile>classGtk_1_1Fixed.html</anchorfile>
      <anchor>a81666466d7985823b9f1a23a9b472dad</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; int &gt;</type>
      <name>child_property_y</name>
      <anchorfile>classGtk_1_1Fixed.html</anchorfile>
      <anchor>a2f7369b97079c738978646f0ecffd942</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>child_property_y</name>
      <anchorfile>classGtk_1_1Fixed.html</anchorfile>
      <anchor>aa9b13ae4a6dd9733222462cd9a19e458</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Fixed.html</anchorfile>
      <anchor>a827ef6387e7336f82983b503bdeca3a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Fixed *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Fixed.html</anchorfile>
      <anchor>a2dc0892b2e202598377a10227f84753d</anchor>
      <arglist>(GtkFixed *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::FlowBox</name>
    <filename>classGtk_1_1FlowBox.html</filename>
    <base>Gtk::Container</base>
    <base>Gtk::Orientable</base>
    <member kind="typedef">
      <type>sigc::slot&lt; void, FlowBox *, FlowBoxChild * &gt;</type>
      <name>SlotSelectedForeach</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>ab374413de46629e5f81f0b1e664104d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; bool, FlowBoxChild * &gt;</type>
      <name>SlotFilter</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>aeea271ef3c00056c95c83217f7cd921c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; int, FlowBoxChild *, FlowBoxChild * &gt;</type>
      <name>SlotSort</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a81196bef2d9183c2aeec8e24e4405f11</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; Gtk::Widget *, const Glib::RefPtr&lt; T_item &gt; &amp; &gt;</type>
      <name>SlotCreateWidget</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>aa433961007f4f9e4e2d007d7b9e7ed55</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FlowBox</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a32e4270b07c085b62d56f285ea30031e</anchor>
      <arglist>(FlowBox &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>FlowBox &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>aa12dd68965e8bcb23960573935051a98</anchor>
      <arglist>(FlowBox &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FlowBox</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a636f2f965e0efe599087b7309b93fb5c</anchor>
      <arglist>(const FlowBox &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>FlowBox &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a82f570a31cb864a79397af944d2fd013</anchor>
      <arglist>(const FlowBox &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FlowBox</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a497f6a62a56622ce9bad8c8e68583fac</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkFlowBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a1b7d818fdbf52891c49ae5dd116a3f83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkFlowBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a70b27fd848dd5c629543378f0218f4f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FlowBox</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>aa137bd4156a443cb3aa4ced10409e3e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_homogeneous</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>aa902a9b314a380963ab8275c5fac3946</anchor>
      <arglist>(bool homogeneous=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_homogeneous</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a6bba0f29d662432ab11e2c82eb18fe66</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_row_spacing</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a297137277af0ea48ab1a1693168a61ad</anchor>
      <arglist>(guint spacing)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_row_spacing</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a078d135ac79178383d690187b6f8e286</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_column_spacing</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>ad77d3af8d8ee1b3fa03ce10764fd7d6c</anchor>
      <arglist>(guint spacing)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_column_spacing</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a2b823beb3a206678258c32647086501d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_min_children_per_line</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a09af717a4fa6f56bc643316324a023b4</anchor>
      <arglist>(guint n_children)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_min_children_per_line</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a61307a514d2d67ec6f93f08873b452bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_max_children_per_line</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a5e426decfcf28ea5500caf164fef55c4</anchor>
      <arglist>(guint n_children)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_max_children_per_line</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>afd032bdec4abee4baa76cbc977ae51bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_activate_on_single_click</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a791a649eca881b53a5243f1e263223d9</anchor>
      <arglist>(bool single=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_activate_on_single_click</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a2e62e54842b319ceb4afee35124e1739</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a1330f2caa25d4f3bc328d79c5807c1d0</anchor>
      <arglist>(Widget &amp;widget, int position)</arglist>
    </member>
    <member kind="function">
      <type>FlowBoxChild *</type>
      <name>get_child_at_index</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a07a143c958fbbb8c29a821f482f18c0c</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>const FlowBoxChild *</type>
      <name>get_child_at_index</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a731cf92f3c98addd5cd0feb869314b0d</anchor>
      <arglist>(int idx) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selected_foreach</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a869df8cc1f24ab87d781780a99942c46</anchor>
      <arglist>(const SlotSelectedForeach &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Gtk::FlowBoxChild * &gt;</type>
      <name>get_selected_children</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>ad211a45fcecefebae41f656f0088ca62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const Gtk::FlowBoxChild * &gt;</type>
      <name>get_selected_children</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>af6802848b4156a3b62f27dd9d04e2531</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select_child</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a65d93511ac73d7dfd01856544d1408a3</anchor>
      <arglist>(FlowBoxChild &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unselect_child</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a0199a8aea2808bef627cab89f9cb05b0</anchor>
      <arglist>(FlowBoxChild &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select_all</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>afa4c9a9f7cb37ab967083f672613e73f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unselect_all</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>ad026f3f1e3b00c4e7eccbd6626b7981e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_selection_mode</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a798a431ab86caae208931223f795c93d</anchor>
      <arglist>(SelectionMode mode=SELECTION_NONE)</arglist>
    </member>
    <member kind="function">
      <type>SelectionMode</type>
      <name>get_selection_mode</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a5c73aa8b0c9d828fb833eac199a450c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_hadjustment</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a64b5ca9c3d76a0149808d9c42c23f734</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;adjustment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_vadjustment</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>ad022dc553253058c3c8ecb779ba200aa</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;adjustment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_filter_func</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a513aeea8478c9ce96323d8c559af9ab2</anchor>
      <arglist>(const SlotFilter &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_filter_func</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a79a7bf07da5c1cc8cfdfa8d358cec2bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidate_filter</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>aa8b07ab1a206ce48fde9edca75cf1d85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sort_func</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a92de4edbfa01f217e60fe613902b4532</anchor>
      <arglist>(const SlotSort &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_sort_func</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a4e42fb17b28dc7fe29503c43481fb334</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidate_sort</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a2ab3c459fda3c4e1bc5675e8982d7fe4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bind_model</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a4c38c06a813666d9d76aa1d4b037ebd0</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListModel &gt; &amp;model, const SlotCreateWidget&lt; Glib::Object &gt; &amp;slot_create_widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bind_list_store</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>ac54c1f423d594ad7b7a985f1c1eeac36</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListStore&lt; T_item &gt;&gt; &amp;store, T_slot &amp;&amp;slot_create_widget)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; SelectionMode &gt;</type>
      <name>property_selection_mode</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>ab2bbc9c9df1f85e9b354c8a688e7bdc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; SelectionMode &gt;</type>
      <name>property_selection_mode</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>af38718efc332ea89d9b59a1b9165d92b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_activate_on_single_click</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a91feab82ebf60a3748238372962104d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_activate_on_single_click</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a7418db8ae5360cee605d6134fba435f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_homogeneous</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>af82a516b814829251f5798a302497d36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_homogeneous</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a7dbd6fd1a314646c8bb8392519a111bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_min_children_per_line</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a5d4f7fa85c94ac2c0ddacae37e5529d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_min_children_per_line</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a42b7c751ed7ad2b027964e08dd6b1974</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_max_children_per_line</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>aa05813d0e57699a58968ec3ba54f5970</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_max_children_per_line</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a74d90eb675bec60bea6036574a1576b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_row_spacing</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a29e05486afa3eba37ca3b4385744b026</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_row_spacing</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>af06c6a3194ee58e24996fd3b504db58f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_column_spacing</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a052e4cac663124790d4fbca244e076eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_column_spacing</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a38b3db14bb4e204d8ad9dcccc8bb9a56</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, FlowBoxChild * &gt;</type>
      <name>signal_child_activated</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a542e9e5563e0427a3622b114c825bb27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_selected_children_changed</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a8a3f0618e6c39c978a886f055352f30b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a65f3a6c2a8bb365c8ca065d72992401e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_child_activated</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>ad8397065492e92c110b35744c9bba6ed</anchor>
      <arglist>(FlowBoxChild *child)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_selected_children_changed</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>a1e288b0143968e347586c16d33195599</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::FlowBox *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1FlowBox.html</anchorfile>
      <anchor>aa6dde91366a5cf45928b094082149561</anchor>
      <arglist>(GtkFlowBox *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::FlowBoxChild</name>
    <filename>classGtk_1_1FlowBoxChild.html</filename>
    <base>Gtk::Bin</base>
    <member kind="function">
      <type></type>
      <name>FlowBoxChild</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>ac42a3d58de35b16709096461f61750a5</anchor>
      <arglist>(FlowBoxChild &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>FlowBoxChild &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>a8aa8c60c132ff00cf178ccc28df8fa0b</anchor>
      <arglist>(FlowBoxChild &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FlowBoxChild</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>af403d56d8aa7cc96036f3668e0fa3d13</anchor>
      <arglist>(const FlowBoxChild &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>FlowBoxChild &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>a83bd13c663aabe810560672c00545279</anchor>
      <arglist>(const FlowBoxChild &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FlowBoxChild</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>abaf1ca0a55cd2a754a9bd6e41e8a38e4</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkFlowBoxChild *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>af6f3ebdf69dc512917342b29022c803e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkFlowBoxChild *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>a1668bcf84472a21a933d755a7f521f75</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FlowBoxChild</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>a5e62b6b4bfa53246a162f463a0b3e3df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_index</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>a2921ed075c68e4a18e55b4bca969d945</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_selected</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>a56d9fbc2e8bec612c62754b52803e3f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changed</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>abda49e6ba46b2d3241f127b2cdda8490</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_activate</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>a06dc9e4d48bc1f0db35f2f852c8b2577</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>a36fb556cd5df813e6a6d23272b7a8ce9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_activate</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>a007d98e73d80672d705fd6efeeffcd5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::FlowBoxChild *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1FlowBoxChild.html</anchorfile>
      <anchor>acae640671516dd40d0d5fba3857f7f2c</anchor>
      <arglist>(GtkFlowBoxChild *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::FontButton</name>
    <filename>classGtk_1_1FontButton.html</filename>
    <base>Gtk::Button</base>
    <member kind="function">
      <type></type>
      <name>FontButton</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a9298d8c7682024dc19c391e7216cbae0</anchor>
      <arglist>(FontButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>FontButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a42d1fc236a8e889bcd674160063ea2ca</anchor>
      <arglist>(FontButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FontButton</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a333422b5f79584cf913c31fe907c1c76</anchor>
      <arglist>(const FontButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>FontButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>abce6b52e68bae7720617d2948aef3b43</anchor>
      <arglist>(const FontButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FontButton</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>aa30a85271099daad22f2a5d06854fbbe</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkFontButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>ad4dae76c16ec6d501816f1a06e9d44b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkFontButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a00dbc94dbf245b18d5badf09446d8c03</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FontButton</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a6c4cd3ff6471b91de3140ea022721206</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FontButton</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a65e0d8d0de5198f83344b2d021e28212</anchor>
      <arglist>(const Glib::ustring &amp;font_name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_title</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>ad66b41e2acfab164bdb287db648a2f62</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_title</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>aa9242c9a2f46ae3847f3310e6d0eeeea</anchor>
      <arglist>(const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_use_font</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a18158a50a1e0c94422907ae8b4888cc2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_font</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a8d5c246629a904f077fa8ceeab803dc0</anchor>
      <arglist>(bool use_font=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_use_size</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>ae95ad481ddca104785c74a6956e89ab4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_size</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>ab0fbd6f5cec6c568cbf3b74516837426</anchor>
      <arglist>(bool use_size=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_font_name</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>ab189765ac8cc01f8ef0fd0a2d3c0a09f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_font_name</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a2ce58b006c28bb76f85af6cf214c377d</anchor>
      <arglist>(const Glib::ustring &amp;fontname)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_style</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a507ca7ae59be0233332ebb81703c26ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_style</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a0488a869b2bb30b741e6c3f1e765672f</anchor>
      <arglist>(bool show_style=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_size</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a2d7af1a180b5cb3d8df9ca1d06ff393c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_size</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a13ba2de4e1b49ef97658dd6b37dcc9c3</anchor>
      <arglist>(bool show_size=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a95d88ab182b97aeddacd5853a293c826</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>ab9cbf822b1e3502818460190bcc21367</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_font_name</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a1d9977144d4aa624641879c3e0022c40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_font_name</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a03c2c3716aa15ab8998aaf57de91e210</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_font</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a7639d2dddff0fb063d328115f7187794</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_font</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>ad99c0a044fc74615d4cc0d065b33c8c3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_size</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a19291169724b2eeaee251fbef0e3a864</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_size</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a39e840fc14ca35986f19471583949566</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_style</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>ac434bd74a8a1bfe3887d970a54c5827b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_style</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a8972c8c43d9cb7bf1ada742dc6a9c931</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_size</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a363090d0c6d9d3a9b6aca1d63217f818</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_size</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a0914d732e35d6b0e097533c463088202</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_font_set</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>af5dcecdc22c0a6aa59156bc89c23d174</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a3cae94c9b174f32d13ac8136e809066e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_font_set</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>a62f4bc00dcb883be19342d085903e535</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::FontButton *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1FontButton.html</anchorfile>
      <anchor>ab4ed31888be6aa85c29a6e4519fefe39</anchor>
      <arglist>(GtkFontButton *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::FontChooser</name>
    <filename>classGtk_1_1FontChooser.html</filename>
    <base>Glib::Interface</base>
    <member kind="typedef">
      <type>sigc::slot&lt; bool, const Glib::RefPtr&lt; const Pango::FontFamily &gt; &amp;, const Glib::RefPtr&lt; const Pango::FontFace &gt; &amp; &gt;</type>
      <name>SlotFontFilter</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a1d866e4ded5c6c3bb052de2629090637</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FontChooser</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>ad22d2f0506cca8746b0ddf8b8f2fa9e4</anchor>
      <arglist>(FontChooser &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>FontChooser &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a179456728205a411201467b80834fd67</anchor>
      <arglist>(FontChooser &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FontChooser</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a7b9890060ec14b5ab4740bb402ef7bac</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkFontChooser *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a9cc5f92a16eb752cb3ffa4961fce39e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkFontChooser *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>aec8bb59f698846f0f41742b96dc2df14</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pango::FontFamily &gt;</type>
      <name>get_font_family</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a64362a3f656863f6942078ae7f468a68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Pango::FontFamily &gt;</type>
      <name>get_font_family</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a4a4f6226ba15f2f045098cd6efbe6518</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pango::FontFace &gt;</type>
      <name>get_font_face</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a991504864d434bd410fb99aa0dd6127f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Pango::FontFace &gt;</type>
      <name>get_font_face</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a8290fc43b12ba461f46e6464755b742d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_font_size</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>af18d91692a0fc4c8eaa27694aac04c7d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Pango::FontDescription</type>
      <name>get_font_desc</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a7d72c92508a7880d0b68fc6bebb35b5c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_font_desc</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a98b062d4948f505ba4f7778bad7d6884</anchor>
      <arglist>(const Pango::FontDescription &amp;font_desc)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_font</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a27f5de411b689a171ca9796ed6352e65</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_font</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>ada0c489c1d5db96e1206a1ea7949c347</anchor>
      <arglist>(const Glib::ustring &amp;fontname)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_preview_text</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a2373686645c05ffc9bfccc73833c3681</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_preview_text</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a1dbd58bbd3e4c227b4dba0343154f799</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_preview_entry</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a0e6e1a7e14ff17196912b554a3431454</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_preview_entry</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>aed67ddac067b35f98484c6de4aab6bf8</anchor>
      <arglist>(bool show_preview_entry=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_filter_func</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>aa488584641a100e69623c12f7a088643</anchor>
      <arglist>(const SlotFontFilter &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_font_map</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a280450a81d7042958ee667920ab971b9</anchor>
      <arglist>(const Glib::RefPtr&lt; Pango::FontMap &gt; &amp;fontmap)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pango::FontMap &gt;</type>
      <name>get_font_map</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>ad849a812bf5732b5a4e0c3b409855f8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Pango::FontMap &gt;</type>
      <name>get_font_map</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a971f6a0df81852f26c564dcde3358cd5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::ustring &amp; &gt;</type>
      <name>signal_font_activated</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a9167f99e44d545398bb5f06bb2241e03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_font</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a474bc7fb3f5a9253d7211c6ece954302</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_font</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a678c2245e48f35486d3d29d9fe9ab8d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::FontDescription &gt;</type>
      <name>property_font_desc</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a8492ae219109f29ba6a5f7abb115f1f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::FontDescription &gt;</type>
      <name>property_font_desc</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>acf3c40d079c12572aa8cd298d5ae49be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_preview_text</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>aa0a8064352e161ac8d388322a5d10995</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_preview_text</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a09e4901545357a6a99b45502b4a8d7be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_preview_entry</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a1d027dd9274e56180ef953bf9af4722c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_preview_entry</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a4315fb0b9556e8e95c222ac118edd137</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a0656ed5bb2b8fb8f707a92adac5db5e4</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>aaaf938698c499a71f05ed0bbe018acaf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>FontChooser</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a4fca6404b7b466bdc555ed2222fdb842</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::FontChooser &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1FontChooser.html</anchorfile>
      <anchor>a70702ac78bf73669022957a4f2837037</anchor>
      <arglist>(GtkFontChooser *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::FontChooserDialog</name>
    <filename>classGtk_1_1FontChooserDialog.html</filename>
    <base>Gtk::Dialog</base>
    <base>Gtk::FontChooser</base>
    <member kind="function">
      <type></type>
      <name>FontChooserDialog</name>
      <anchorfile>classGtk_1_1FontChooserDialog.html</anchorfile>
      <anchor>a21aec260f53e578ec738213e997f270d</anchor>
      <arglist>(FontChooserDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>FontChooserDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FontChooserDialog.html</anchorfile>
      <anchor>a04a3699c1b8217af91f661772f5d0973</anchor>
      <arglist>(FontChooserDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FontChooserDialog</name>
      <anchorfile>classGtk_1_1FontChooserDialog.html</anchorfile>
      <anchor>ac37da8969a47ce40a2505f7e94ee1347</anchor>
      <arglist>(const FontChooserDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>FontChooserDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FontChooserDialog.html</anchorfile>
      <anchor>afb1baec3638de38cf87f06ec977f4b4c</anchor>
      <arglist>(const FontChooserDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FontChooserDialog</name>
      <anchorfile>classGtk_1_1FontChooserDialog.html</anchorfile>
      <anchor>ae81b9bba5b899ff77d1b31f96c2c7b53</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkFontChooserDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FontChooserDialog.html</anchorfile>
      <anchor>a08c3a8c891240379450090392749322f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkFontChooserDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FontChooserDialog.html</anchorfile>
      <anchor>af9ae37a4251323be0044c4654b7b0af0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FontChooserDialog</name>
      <anchorfile>classGtk_1_1FontChooserDialog.html</anchorfile>
      <anchor>aa5e7673483d8cf939559dc7a5db96f45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FontChooserDialog</name>
      <anchorfile>classGtk_1_1FontChooserDialog.html</anchorfile>
      <anchor>a6a41b01931c71025898d4b5ef65a3679</anchor>
      <arglist>(const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FontChooserDialog</name>
      <anchorfile>classGtk_1_1FontChooserDialog.html</anchorfile>
      <anchor>a17c5308fa133644c646204f43120eec4</anchor>
      <arglist>(const Glib::ustring &amp;title, Window &amp;transient_for)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1FontChooserDialog.html</anchorfile>
      <anchor>af355aa385457f3d44168ef56ac0291e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::FontChooserDialog *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1FontChooserDialog.html</anchorfile>
      <anchor>ae71d63ac21fae6491b06a9583a404e58</anchor>
      <arglist>(GtkFontChooserDialog *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::FontChooserWidget</name>
    <filename>classGtk_1_1FontChooserWidget.html</filename>
    <base>Gtk::Box</base>
    <base>Gtk::FontChooser</base>
    <member kind="function">
      <type></type>
      <name>FontChooserWidget</name>
      <anchorfile>classGtk_1_1FontChooserWidget.html</anchorfile>
      <anchor>a58224a92cef03cb4e48a7a2960cd2e71</anchor>
      <arglist>(FontChooserWidget &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>FontChooserWidget &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FontChooserWidget.html</anchorfile>
      <anchor>a506cc515f12138954403f0fbf89835ad</anchor>
      <arglist>(FontChooserWidget &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FontChooserWidget</name>
      <anchorfile>classGtk_1_1FontChooserWidget.html</anchorfile>
      <anchor>a798d3d9f699add117b09aa8241839c50</anchor>
      <arglist>(const FontChooserWidget &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>FontChooserWidget &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FontChooserWidget.html</anchorfile>
      <anchor>abbfad765f9c92ace50a5a84c2b2331d3</anchor>
      <arglist>(const FontChooserWidget &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FontChooserWidget</name>
      <anchorfile>classGtk_1_1FontChooserWidget.html</anchorfile>
      <anchor>a06e874cb44557fd11d102951d1cf4bf2</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkFontChooserWidget *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FontChooserWidget.html</anchorfile>
      <anchor>a77e624ef5e236c95e227226eb3feb671</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkFontChooserWidget *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FontChooserWidget.html</anchorfile>
      <anchor>ae62405b410c595bba1f4dcd561893bfc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FontChooserWidget</name>
      <anchorfile>classGtk_1_1FontChooserWidget.html</anchorfile>
      <anchor>ae4972f6dfd3bd1bcdbbaf7df99f4f78b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1FontChooserWidget.html</anchorfile>
      <anchor>a5d5cf58effe4df5d523934a858d482e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::FontChooserWidget *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1FontChooserWidget.html</anchorfile>
      <anchor>a7be1c03ac7b6345cf6ba32cc6fd611bc</anchor>
      <arglist>(GtkFontChooserWidget *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::FontSelection</name>
    <filename>classGtk_1_1FontSelection.html</filename>
    <base>Gtk::VBox</base>
    <member kind="function">
      <type></type>
      <name>FontSelection</name>
      <anchorfile>classGtk_1_1FontSelection.html</anchorfile>
      <anchor>a1fd11c41b436d98fa1ace3faacba7b06</anchor>
      <arglist>(FontSelection &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>FontSelection &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FontSelection.html</anchorfile>
      <anchor>a79ba2ba6ce7dfc63c90869d2bf7b281e</anchor>
      <arglist>(FontSelection &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FontSelection</name>
      <anchorfile>classGtk_1_1FontSelection.html</anchorfile>
      <anchor>ae35e7c2bb217280ceb0c0e5716e24de2</anchor>
      <arglist>(const FontSelection &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>FontSelection &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FontSelection.html</anchorfile>
      <anchor>a551b7f75fe422c048f566ec82b99584a</anchor>
      <arglist>(const FontSelection &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FontSelection</name>
      <anchorfile>classGtk_1_1FontSelection.html</anchorfile>
      <anchor>a6cea95a51866cc1b6d16b4d8509664f8</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkFontSelection *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FontSelection.html</anchorfile>
      <anchor>a03554fdbf28e7fdbfa1aeaff4fe68879</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkFontSelection *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FontSelection.html</anchorfile>
      <anchor>a94bb7286fd78af76511b58ee9ba72728</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FontSelection</name>
      <anchorfile>classGtk_1_1FontSelection.html</anchorfile>
      <anchor>aba7402d803631b14449d895a228c645d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TreeView *</type>
      <name>get_family_list</name>
      <anchorfile>classGtk_1_1FontSelection.html</anchorfile>
      <anchor>aa61ab81ed4db53db0421fb9ca3388622</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TreeView *</type>
      <name>get_family_list</name>
      <anchorfile>classGtk_1_1FontSelection.html</anchorfile>
      <anchor>a0c00aa39fafd4e6dad09493153e49b1c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TreeView *</type>
      <name>get_face_list</name>
      <anchorfile>classGtk_1_1FontSelection.html</anchorfile>
      <anchor>ae50ef3bafd37e17325c9b394519804a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TreeView *</type>
      <name>get_face_list</name>
      <anchorfile>classGtk_1_1FontSelection.html</anchorfile>
      <anchor>abe9e94c0c3a822940978917c87175588</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Entry *</type>
      <name>get_size_entry</name>
      <anchorfile>classGtk_1_1FontSelection.html</anchorfile>
      <anchor>ad2adc2700339ab1e8c775d729592c993</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Entry *</type>
      <name>get_size_entry</name>
      <anchorfile>classGtk_1_1FontSelection.html</anchorfile>
      <anchor>a2d0baa8a15a5865f6aa68babd84d1b98</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TreeView *</type>
      <name>get_size_list</name>
      <anchorfile>classGtk_1_1FontSelection.html</anchorfile>
      <anchor>a648b9a0f7b1a51aa7e921426b0388613</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TreeView *</type>
      <name>get_size_list</name>
      <anchorfile>classGtk_1_1FontSelection.html</anchorfile>
      <anchor>adf2a9576884238983262eae922b86ce5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Entry *</type>
      <name>get_preview_entry</name>
      <anchorfile>classGtk_1_1FontSelection.html</anchorfile>
      <anchor>a6fd691a0e1081c68ec930ae98fb95e3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Entry *</type>
      <name>get_preview_entry</name>
      <anchorfile>classGtk_1_1FontSelection.html</anchorfile>
      <anchor>a409aa9d33af48f0495c299f86f771008</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pango::FontFamily &gt;</type>
      <name>get_family</name>
      <anchorfile>classGtk_1_1FontSelection.html</anchorfile>
      <anchor>aba1d54882646e3bd77310c65792713fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Pango::FontFamily &gt;</type>
      <name>get_family</name>
      <anchorfile>classGtk_1_1FontSelection.html</anchorfile>
      <anchor>a27bfe284b2d43626f829a770ec6a5b30</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pango::FontFace &gt;</type>
      <name>get_face</name>
      <anchorfile>classGtk_1_1FontSelection.html</anchorfile>
      <anchor>adb5d60b1008d68e81cd338f6d58a21bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Pango::FontFace &gt;</type>
      <name>get_face</name>
      <anchorfile>classGtk_1_1FontSelection.html</anchorfile>
      <anchor>acabbbd2996e3e8bb987fb66de0a9cb84</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_size</name>
      <anchorfile>classGtk_1_1FontSelection.html</anchorfile>
      <anchor>aa62cd91be61f24f9aa58a77eac0b692e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_font_name</name>
      <anchorfile>classGtk_1_1FontSelection.html</anchorfile>
      <anchor>a89dbe8277262e7b16fbaa461d3a0506e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_font_name</name>
      <anchorfile>classGtk_1_1FontSelection.html</anchorfile>
      <anchor>aadc6fb252b1a091ad77ed81bc94479e5</anchor>
      <arglist>(const Glib::ustring &amp;fontname)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_preview_text</name>
      <anchorfile>classGtk_1_1FontSelection.html</anchorfile>
      <anchor>a1e6c44fcc23c9d022f973d25f7eab004</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_preview_text</name>
      <anchorfile>classGtk_1_1FontSelection.html</anchorfile>
      <anchor>af0cc5f2b0626cede61e2463448f9a217</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_font_name</name>
      <anchorfile>classGtk_1_1FontSelection.html</anchorfile>
      <anchor>a43b378dd867feebf6d6ec0187722074f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_font_name</name>
      <anchorfile>classGtk_1_1FontSelection.html</anchorfile>
      <anchor>a362790f2cb06a7b198560939413409b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_preview_text</name>
      <anchorfile>classGtk_1_1FontSelection.html</anchorfile>
      <anchor>aecbf8639aaed1a4db5c5b58664bf628b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_preview_text</name>
      <anchorfile>classGtk_1_1FontSelection.html</anchorfile>
      <anchor>a5f9c87e05da7c9b0c075eaeb270a1128</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1FontSelection.html</anchorfile>
      <anchor>af1faf58d383a26e27fe4d0065b19afce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::FontSelection *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1FontSelection.html</anchorfile>
      <anchor>aab3b732a9ae8467ad4e200dc188b0327</anchor>
      <arglist>(GtkFontSelection *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::FontSelectionDialog</name>
    <filename>classGtk_1_1FontSelectionDialog.html</filename>
    <base>Gtk::Dialog</base>
    <member kind="function">
      <type></type>
      <name>FontSelectionDialog</name>
      <anchorfile>classGtk_1_1FontSelectionDialog.html</anchorfile>
      <anchor>ade16896a468eb21b019f6a0968013992</anchor>
      <arglist>(FontSelectionDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>FontSelectionDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FontSelectionDialog.html</anchorfile>
      <anchor>acd808bd37a6c097dd44017bd5fa408ef</anchor>
      <arglist>(FontSelectionDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FontSelectionDialog</name>
      <anchorfile>classGtk_1_1FontSelectionDialog.html</anchorfile>
      <anchor>a097a834ce002973136ec20bba3b8d1ac</anchor>
      <arglist>(const FontSelectionDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>FontSelectionDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1FontSelectionDialog.html</anchorfile>
      <anchor>abfd98e66b7a108eae400668109e37f19</anchor>
      <arglist>(const FontSelectionDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FontSelectionDialog</name>
      <anchorfile>classGtk_1_1FontSelectionDialog.html</anchorfile>
      <anchor>a694e5dc036004cb0e0285757d56dbb12</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkFontSelectionDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FontSelectionDialog.html</anchorfile>
      <anchor>ad5b39fcf3ce8f770bc2987267f46a12b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkFontSelectionDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1FontSelectionDialog.html</anchorfile>
      <anchor>ab036ff001acbc16468acf1c7009026fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FontSelectionDialog</name>
      <anchorfile>classGtk_1_1FontSelectionDialog.html</anchorfile>
      <anchor>a44d44a60147a41d3f1cf0be9e3f51714</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FontSelectionDialog</name>
      <anchorfile>classGtk_1_1FontSelectionDialog.html</anchorfile>
      <anchor>abcf547fc928751e5ad47ffc7590032db</anchor>
      <arglist>(const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_font_name</name>
      <anchorfile>classGtk_1_1FontSelectionDialog.html</anchorfile>
      <anchor>a57e2bb2d2d8dc9cd19acac175a99d3d2</anchor>
      <arglist>(const Glib::ustring &amp;fontname)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_font_name</name>
      <anchorfile>classGtk_1_1FontSelectionDialog.html</anchorfile>
      <anchor>aaaba3ee18f9473c5c99ad62f7dc487fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_preview_text</name>
      <anchorfile>classGtk_1_1FontSelectionDialog.html</anchorfile>
      <anchor>a50dd726156c4f5c38b1363b68ee40cb8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_preview_text</name>
      <anchorfile>classGtk_1_1FontSelectionDialog.html</anchorfile>
      <anchor>acfadd93d934942c90f5892a10bc5b0ca</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>Button *</type>
      <name>get_ok_button</name>
      <anchorfile>classGtk_1_1FontSelectionDialog.html</anchorfile>
      <anchor>a80812c9c82e0d470536b81f85e7770c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Button *</type>
      <name>get_ok_button</name>
      <anchorfile>classGtk_1_1FontSelectionDialog.html</anchorfile>
      <anchor>af2e538bc237879f4a826f1fd14bdd907</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Button *</type>
      <name>get_cancel_button</name>
      <anchorfile>classGtk_1_1FontSelectionDialog.html</anchorfile>
      <anchor>a24e474d7071852085213870e81b5e52f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Button *</type>
      <name>get_cancel_button</name>
      <anchorfile>classGtk_1_1FontSelectionDialog.html</anchorfile>
      <anchor>a770e5f45f106450c40b847c3f2085886</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1FontSelectionDialog.html</anchorfile>
      <anchor>ac8dd57627d784e00c4e4b26c7fa516fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::FontSelectionDialog *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1FontSelectionDialog.html</anchorfile>
      <anchor>a78e54395263b07f3627804809c4ba194</anchor>
      <arglist>(GtkFontSelectionDialog *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Frame</name>
    <filename>classGtk_1_1Frame.html</filename>
    <base>Gtk::Bin</base>
    <member kind="function">
      <type></type>
      <name>Frame</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>aab41bf03532dd27605adc86141d92203</anchor>
      <arglist>(Frame &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Frame &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a6ef0dee648030753f5c245b7af3c3db3</anchor>
      <arglist>(Frame &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Frame</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a866698e21e01f57acd4dbaba062acfc8</anchor>
      <arglist>(const Frame &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Frame &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a677bff94a83d2029a694f6611688d39a</anchor>
      <arglist>(const Frame &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Frame</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>ae324e49cbb68f9c514bc4c71a74ae2f7</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkFrame *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a5f7db796218fe2e89e453071b464f6d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkFrame *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>aff08b316db383455d499a952974212e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Frame</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>ad885c362a8c2bc29e89a3d7ec4a5b24b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Frame</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a50bf70dfc0b43db4d72e08058a346071</anchor>
      <arglist>(const Glib::ustring &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_label</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a4bf1d1fd660d4a8e696b4aa047e02df5</anchor>
      <arglist>(const Glib::ustring &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_label</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>aed49f2286476debdf7df201e2c5fd6cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_label</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>aca5a6c18c782af9aba8ea7bf88ffe7be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_label_widget</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a5c387add374124d065766d009f5a920d</anchor>
      <arglist>(Widget &amp;label_widget)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_label_widget</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>aeadf0ef4557f8e28c3eb8553c3801432</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_label_widget</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a35820b7490ba94b617fafaca4deadab5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_label_align</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>af0895eb2b52aa4a63c2af4464601ab4d</anchor>
      <arglist>(float xalign=0.0, float yalign=0.5)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_label_align</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>aaa672c65cef9d85d85b73070dc259a6d</anchor>
      <arglist>(Align xalign, Align yalign=Gtk::ALIGN_CENTER)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_label_align</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>ae794b5e789211f5eecc3073ac278e483</anchor>
      <arglist>(float &amp;xalign, float &amp;yalign) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_shadow_type</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>aad5b3c0736a6ea62ca5d9d699a326f01</anchor>
      <arglist>(ShadowType type)</arglist>
    </member>
    <member kind="function">
      <type>ShadowType</type>
      <name>get_shadow_type</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>aad09b93a866a119c4ce71da8f7d6a318</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_label</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>afb943527c60c6512f8d0301046c8bfb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_label</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a3529829dd00dbf099e88bf735b9e0b2d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_label_xalign</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a198dda814ccaf7c239c28710fa38dabf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_label_xalign</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a53c6fa7d3808d876f9437a3686343a6a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_label_yalign</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a108f44d36c1bb6b420499425f14b3f0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_label_yalign</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a3c9ac327e8ba283ff685f760561b06d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; ShadowType &gt;</type>
      <name>property_shadow_type</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a306ffaa201edd77ed0ece8621c6009f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; ShadowType &gt;</type>
      <name>property_shadow_type</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>af5d082698f2eb83280f5e1d0eff34eed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_label_widget</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a3ea746b63e7c2ecc1a0db7966f607d31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_label_widget</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a02174d5bff28172f794b94e8fca474b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a88b6486d251d4ed82d5863791afa16ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>compute_child_allocation_vfunc</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a526060d83b13e656a42bf7c1c8def6f7</anchor>
      <arglist>(Allocation &amp;allocation)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Frame *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Frame.html</anchorfile>
      <anchor>a82cbc754f84fde353cb8fc88fd7eb0e2</anchor>
      <arglist>(GtkFrame *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Gesture</name>
    <filename>classGtk_1_1Gesture.html</filename>
    <base>Gtk::EventController</base>
    <member kind="function">
      <type></type>
      <name>Gesture</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>aaf5197dc21f3ec1b778feca6392f2e32</anchor>
      <arglist>(Gesture &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Gesture &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a8365960ff47590b733daa3167eecbe14</anchor>
      <arglist>(Gesture &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Gesture</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a962d75d40ce17d934b1ffd0357acb17e</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkGesture *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>add74ecbde44172bdf927a69e4d4131cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkGesture *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a9d8314d62240a3f11e0349881e7e8828</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkGesture *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a45aad140646af17074639291c2be03ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Device &gt;</type>
      <name>get_device</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>aaa6cfc76d4853b8554caa5d696d4bc4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Device &gt;</type>
      <name>get_device</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a6c8dd5e09fc389c88e953055d9db64be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_state</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a80f76f95d0af4544a407d0f95405d6a5</anchor>
      <arglist>(EventSequenceState state)</arglist>
    </member>
    <member kind="function">
      <type>EventSequenceState</type>
      <name>get_sequence_state</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a939ac30595943fe98be1d20cdfc9cdf5</anchor>
      <arglist>(GdkEventSequence *sequence) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_sequence_state</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a75a5388add4077705b937857901cb965</anchor>
      <arglist>(GdkEventSequence *sequence, EventSequenceState state)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const GdkEventSequence * &gt;</type>
      <name>get_sequences</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a8c49a0f0773e16b97b1655a92dc5b412</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GdkEventSequence *</type>
      <name>get_last_updated_sequence</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a32268135577b049eb896545c512254ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkEventSequence *</type>
      <name>get_last_updated_sequence</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a247f13d548c44db9389a73a1600f515c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>handles_sequence</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a312fc27fc9e15ba4d8be048acf863983</anchor>
      <arglist>(GdkEventSequence *sequence) const </arglist>
    </member>
    <member kind="function">
      <type>const GdkEvent *</type>
      <name>get_last_event</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a6a4fe7dd5496574ca71787207368c5f8</anchor>
      <arglist>(GdkEventSequence *sequence) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_point</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a488b5bae5e428d044ce9526af4fba3b9</anchor>
      <arglist>(GdkEventSequence *sequence, double &amp;x, double &amp;y) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_bounding_box</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a619728fdb631f9a22e6a1055afecfea9</anchor>
      <arglist>(Gdk::Rectangle &amp;rect) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_bounding_box_center</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a4f7ee3f6085f84d154b027fddde227e2</anchor>
      <arglist>(double &amp;x, double &amp;y) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_active</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a20bde8149d7452cea6c9f598aae79e0d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_recognized</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a8805fad9c1670ccb67cbd888f18bf428</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Window &gt;</type>
      <name>get_window</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a880b967b877f24fa1ab2d9b871986be2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Window &gt;</type>
      <name>get_window</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a37444fff24fbfeb94e327dd747d6b3d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_window</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>ae0a448ac0c7b0d7ce478d7600cf8fb8e</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Window &gt; &amp;window)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_window</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>ab44149b0e1c39fe9ef9907532ec37c83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>group</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a1d22eba1fb05ed774726894e0ea03b6f</anchor>
      <arglist>(const Glib::RefPtr&lt; Gesture &gt; &amp;group_gesture)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ungroup</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>ac4321961d5388a68e49ceafa774a35ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; Gesture &gt; &gt;</type>
      <name>get_group</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>aab477c358f080ac38967ef59435a64ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; const Gesture &gt; &gt;</type>
      <name>get_group</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>ad6236ed0b07d23e2b0a8db6f9e272f37</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_grouped_with</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>aef3a0425866adfb9d2148f0a52cd61ac</anchor>
      <arglist>(const Glib::RefPtr&lt; Gesture &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, GdkEventSequence * &gt;</type>
      <name>signal_begin</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a150cf88e3dfb922f493f217814980f45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, GdkEventSequence * &gt;</type>
      <name>signal_end</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a123871c6f84c79a6c4d5081016ba1082</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, GdkEventSequence * &gt;</type>
      <name>signal_update</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>acd023af3cda5a13ab4b18b35faa48da4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, GdkEventSequence * &gt;</type>
      <name>signal_cancel</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a5833086e7e3e6112f0d8bf9e736c711d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, GdkEventSequence *, EventSequenceState &gt;</type>
      <name>signal_sequence_state_changed</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>ad7c118b89a415533cb8e1f54006fbffb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; unsigned int &gt;</type>
      <name>property_n_points</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>abcf08179fb4388f6cd6e24b5d6790382</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gdk::Window &gt; &gt;</type>
      <name>property_window</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a8290d20d124fad8a1a9b38e2461d6dc6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::Window &gt; &gt;</type>
      <name>property_window</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>af4fbba6a03048edf3604ec0c94a65026</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a0e66c0a0fd4f9762cb105caaf434baf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Gesture</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a98436490d5a5f96bbb8c339536e133aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Gesture &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Gesture.html</anchorfile>
      <anchor>a5707274dcd2d05f1b9377acf89edd522</anchor>
      <arglist>(GtkGesture *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::GestureDrag</name>
    <filename>classGtk_1_1GestureDrag.html</filename>
    <base>Gtk::GestureSingle</base>
    <member kind="function">
      <type></type>
      <name>GestureDrag</name>
      <anchorfile>classGtk_1_1GestureDrag.html</anchorfile>
      <anchor>a41826bd359edfc44d921a8670626f0d0</anchor>
      <arglist>(GestureDrag &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GestureDrag &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1GestureDrag.html</anchorfile>
      <anchor>a017afa0256da4986a88d23bc6a718f0b</anchor>
      <arglist>(GestureDrag &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GestureDrag</name>
      <anchorfile>classGtk_1_1GestureDrag.html</anchorfile>
      <anchor>a506cb20da88b656d7e4bac355a59d751</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkGestureDrag *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GestureDrag.html</anchorfile>
      <anchor>a7edf4382cdaa9c02b5edfadebe769959</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkGestureDrag *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GestureDrag.html</anchorfile>
      <anchor>a3e3bf06888c1fbe7ccb36c1057b265ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkGestureDrag *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1GestureDrag.html</anchorfile>
      <anchor>a08a9c0576a724fc719047e446c6f22c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_start_point</name>
      <anchorfile>classGtk_1_1GestureDrag.html</anchorfile>
      <anchor>a05cff4c2449e5f8192e6eafdcf3f954b</anchor>
      <arglist>(double &amp;x, double &amp;y) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_offset</name>
      <anchorfile>classGtk_1_1GestureDrag.html</anchorfile>
      <anchor>a5a4f38f5684031ec1539980fa619b48a</anchor>
      <arglist>(double &amp;x, double &amp;y) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, double, double &gt;</type>
      <name>signal_drag_begin</name>
      <anchorfile>classGtk_1_1GestureDrag.html</anchorfile>
      <anchor>aebc564681f8233ae6451a63acbcc28d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, double, double &gt;</type>
      <name>signal_drag_update</name>
      <anchorfile>classGtk_1_1GestureDrag.html</anchorfile>
      <anchor>a610632d6241465e73982560031a98382</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, double, double &gt;</type>
      <name>signal_drag_end</name>
      <anchorfile>classGtk_1_1GestureDrag.html</anchorfile>
      <anchor>a68e4857f9c3d8d76f8412fd8130a465b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1GestureDrag.html</anchorfile>
      <anchor>a6308f95c06d99d4b2484674ced2ee3d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; GestureDrag &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1GestureDrag.html</anchorfile>
      <anchor>a9288ffc85a7f8034902804cbed0b2f66</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GestureDrag</name>
      <anchorfile>classGtk_1_1GestureDrag.html</anchorfile>
      <anchor>a25e6c694d5791e90afcf6d55c88ee1dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GestureDrag</name>
      <anchorfile>classGtk_1_1GestureDrag.html</anchorfile>
      <anchor>afa701de14319f96ff941a28f1c79fe38</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::GestureDrag &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1GestureDrag.html</anchorfile>
      <anchor>a89c53349831b08a1296053bbacc502de</anchor>
      <arglist>(GtkGestureDrag *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::GestureLongPress</name>
    <filename>classGtk_1_1GestureLongPress.html</filename>
    <base>Gtk::GestureSingle</base>
    <member kind="function">
      <type></type>
      <name>GestureLongPress</name>
      <anchorfile>classGtk_1_1GestureLongPress.html</anchorfile>
      <anchor>aa37ce9db7c1a9d70055be5db1905dd47</anchor>
      <arglist>(GestureLongPress &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GestureLongPress &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1GestureLongPress.html</anchorfile>
      <anchor>a643ca9f7a74ce886febc40db8c852baf</anchor>
      <arglist>(GestureLongPress &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GestureLongPress</name>
      <anchorfile>classGtk_1_1GestureLongPress.html</anchorfile>
      <anchor>ac926f7b1126f64fb95a03fda2fcb127d</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkGestureLongPress *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GestureLongPress.html</anchorfile>
      <anchor>a1adda2d64e8609f717c49064a84d2807</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkGestureLongPress *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GestureLongPress.html</anchorfile>
      <anchor>afd026a8770c48efeb143baeb46fe4749</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkGestureLongPress *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1GestureLongPress.html</anchorfile>
      <anchor>a8e7213848f59912f1104aba20b6d76e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, double, double &gt;</type>
      <name>signal_pressed</name>
      <anchorfile>classGtk_1_1GestureLongPress.html</anchorfile>
      <anchor>ac373ca090f023505ad67bfbf64c3af3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_cancelled</name>
      <anchorfile>classGtk_1_1GestureLongPress.html</anchorfile>
      <anchor>a405b3b34aff4c76dfa14c8c2ac155c1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_delay_factor</name>
      <anchorfile>classGtk_1_1GestureLongPress.html</anchorfile>
      <anchor>afc5fa54284f5ab9bd9b86e6281ec9ac7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_delay_factor</name>
      <anchorfile>classGtk_1_1GestureLongPress.html</anchorfile>
      <anchor>ad5a3cd37a610fe51bfa79a6d666d4351</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1GestureLongPress.html</anchorfile>
      <anchor>a4f3826fd91616f4ea3f55e3ee2d8af52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; GestureLongPress &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1GestureLongPress.html</anchorfile>
      <anchor>af38d0bdd57e0eed4f4345e96120ded60</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GestureLongPress</name>
      <anchorfile>classGtk_1_1GestureLongPress.html</anchorfile>
      <anchor>a60c3f4053c88440d8a72083a83a8c9fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GestureLongPress</name>
      <anchorfile>classGtk_1_1GestureLongPress.html</anchorfile>
      <anchor>a069da321aba144d180a4f6f078533741</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::GestureLongPress &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1GestureLongPress.html</anchorfile>
      <anchor>adb8bfcd928ccf4d56e15931a1df246c6</anchor>
      <arglist>(GtkGestureLongPress *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::GestureMultiPress</name>
    <filename>classGtk_1_1GestureMultiPress.html</filename>
    <base>Gtk::GestureSingle</base>
    <member kind="function">
      <type></type>
      <name>GestureMultiPress</name>
      <anchorfile>classGtk_1_1GestureMultiPress.html</anchorfile>
      <anchor>a6e4c016a08df1f9b4a61089288ef84d0</anchor>
      <arglist>(GestureMultiPress &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GestureMultiPress &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1GestureMultiPress.html</anchorfile>
      <anchor>af44eba06556a5c6ab494d61ca8c06578</anchor>
      <arglist>(GestureMultiPress &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GestureMultiPress</name>
      <anchorfile>classGtk_1_1GestureMultiPress.html</anchorfile>
      <anchor>a996d1e01984f52f2781aa9eb14f4b0a8</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkGestureMultiPress *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GestureMultiPress.html</anchorfile>
      <anchor>ade73124294438b7f618a9800505917ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkGestureMultiPress *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GestureMultiPress.html</anchorfile>
      <anchor>a5315c30277ef47d5d154994ac10b35fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkGestureMultiPress *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1GestureMultiPress.html</anchorfile>
      <anchor>a5816cb4f9f6de61a86f1a1366b4fe592</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_area</name>
      <anchorfile>classGtk_1_1GestureMultiPress.html</anchorfile>
      <anchor>a7c0e353f0b90ee0a4bbd2483c05f92f5</anchor>
      <arglist>(Gdk::Rectangle &amp;rect) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_area</name>
      <anchorfile>classGtk_1_1GestureMultiPress.html</anchorfile>
      <anchor>a83ce9d2173252e011db0eb8711b71b22</anchor>
      <arglist>(const Gdk::Rectangle &amp;rect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_area</name>
      <anchorfile>classGtk_1_1GestureMultiPress.html</anchorfile>
      <anchor>a8de1f9e98702a3777c7007feb2794db9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, int, double, double &gt;</type>
      <name>signal_pressed</name>
      <anchorfile>classGtk_1_1GestureMultiPress.html</anchorfile>
      <anchor>a8348dbd6d4d71131251bbafdb7204cb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, int, double, double &gt;</type>
      <name>signal_released</name>
      <anchorfile>classGtk_1_1GestureMultiPress.html</anchorfile>
      <anchor>ad903c6ebe15ed122c798749ff6827ab9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_stopped</name>
      <anchorfile>classGtk_1_1GestureMultiPress.html</anchorfile>
      <anchor>aa89bc3ceb6fa33e7d559cebd4127fbbe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1GestureMultiPress.html</anchorfile>
      <anchor>aa5f658efb684c846f335a6fd132ca3e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; GestureMultiPress &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1GestureMultiPress.html</anchorfile>
      <anchor>a43da28b6b304f007e8af0a75d6ac6057</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GestureMultiPress</name>
      <anchorfile>classGtk_1_1GestureMultiPress.html</anchorfile>
      <anchor>adee51e53c87daa030494af60e71ff92a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GestureMultiPress</name>
      <anchorfile>classGtk_1_1GestureMultiPress.html</anchorfile>
      <anchor>ab104fac32915c2292517242a2ba8c8c3</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::GestureMultiPress &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1GestureMultiPress.html</anchorfile>
      <anchor>acbb66b615ac32aabee3ef5bf88974de9</anchor>
      <arglist>(GtkGestureMultiPress *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::GesturePan</name>
    <filename>classGtk_1_1GesturePan.html</filename>
    <base>Gtk::GestureDrag</base>
    <member kind="function">
      <type></type>
      <name>GesturePan</name>
      <anchorfile>classGtk_1_1GesturePan.html</anchorfile>
      <anchor>a73e05ccfa335798398753a104f0a7fca</anchor>
      <arglist>(GesturePan &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GesturePan &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1GesturePan.html</anchorfile>
      <anchor>af576a8ed80d6357eb3901ec32ea2ae27</anchor>
      <arglist>(GesturePan &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GesturePan</name>
      <anchorfile>classGtk_1_1GesturePan.html</anchorfile>
      <anchor>a371aae24933f24d0e8b73320b775b5e5</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkGesturePan *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GesturePan.html</anchorfile>
      <anchor>af03e69f968b31d0b08001e581ec252e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkGesturePan *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GesturePan.html</anchorfile>
      <anchor>a34ac993c613bcf4de912c6ebf3cca34b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkGesturePan *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1GesturePan.html</anchorfile>
      <anchor>a00267a20e8f4383f48a580003cd44977</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Orientation</type>
      <name>get_orientation</name>
      <anchorfile>classGtk_1_1GesturePan.html</anchorfile>
      <anchor>a0d5f1997542509dcbba624a7964169e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_orientation</name>
      <anchorfile>classGtk_1_1GesturePan.html</anchorfile>
      <anchor>a50032b69926cd5c3b1715ebca8067fa9</anchor>
      <arglist>(Orientation orientation)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, PanDirection, double &gt;</type>
      <name>signal_pan</name>
      <anchorfile>classGtk_1_1GesturePan.html</anchorfile>
      <anchor>a31b6f1515632019bd7ca6df0d63a0a96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Orientation &gt;</type>
      <name>property_orientation</name>
      <anchorfile>classGtk_1_1GesturePan.html</anchorfile>
      <anchor>a127027bbbff0f8e73a94fab970f23526</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Orientation &gt;</type>
      <name>property_orientation</name>
      <anchorfile>classGtk_1_1GesturePan.html</anchorfile>
      <anchor>ab0cb19e88b0bc7baa6d99e246bcebb11</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1GesturePan.html</anchorfile>
      <anchor>a232acd08e5e7ef344d9d214871d5fbf4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; GesturePan &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1GesturePan.html</anchorfile>
      <anchor>a6ebb5e8bba44ed63bc3baf57d5c84d65</anchor>
      <arglist>(Widget &amp;widget, Orientation orientation)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GesturePan</name>
      <anchorfile>classGtk_1_1GesturePan.html</anchorfile>
      <anchor>a4c1f702f082469b0741e5c180060337d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GesturePan</name>
      <anchorfile>classGtk_1_1GesturePan.html</anchorfile>
      <anchor>a6faf92200276d1db9a6d07d83f914805</anchor>
      <arglist>(Widget &amp;widget, Orientation orientation)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::GesturePan &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1GesturePan.html</anchorfile>
      <anchor>aab936aa1f486dd4160cd02a253a475c7</anchor>
      <arglist>(GtkGesturePan *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::GestureRotate</name>
    <filename>classGtk_1_1GestureRotate.html</filename>
    <base>Gtk::Gesture</base>
    <member kind="function">
      <type></type>
      <name>GestureRotate</name>
      <anchorfile>classGtk_1_1GestureRotate.html</anchorfile>
      <anchor>a13d3f5a7ea31da0d95b93d5541eb860d</anchor>
      <arglist>(GestureRotate &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GestureRotate &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1GestureRotate.html</anchorfile>
      <anchor>a72bb57eb9ba94cfbbe845cd294b60c26</anchor>
      <arglist>(GestureRotate &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GestureRotate</name>
      <anchorfile>classGtk_1_1GestureRotate.html</anchorfile>
      <anchor>acdb1ce5fed658033abc88ceb01044f02</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkGestureRotate *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GestureRotate.html</anchorfile>
      <anchor>a56b0ff157edb1d3bf8b97c2b8dba4fcf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkGestureRotate *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GestureRotate.html</anchorfile>
      <anchor>a3151f92ed3da7d4dc94cf9835e67cf95</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkGestureRotate *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1GestureRotate.html</anchorfile>
      <anchor>a045d7adfd6e8bcfb7c2b955c2eae717e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_angle_delta</name>
      <anchorfile>classGtk_1_1GestureRotate.html</anchorfile>
      <anchor>a3676993f14c1ea14daf56f534e2b96ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, double, double &gt;</type>
      <name>signal_angle_changed</name>
      <anchorfile>classGtk_1_1GestureRotate.html</anchorfile>
      <anchor>a8ae228bd91167fb431fe71dc90049689</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1GestureRotate.html</anchorfile>
      <anchor>ae268f7bc5f17788b682d6fc13115eb36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; GestureRotate &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1GestureRotate.html</anchorfile>
      <anchor>a42c8df6c7d819ca57d35adc5528c4dc9</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GestureRotate</name>
      <anchorfile>classGtk_1_1GestureRotate.html</anchorfile>
      <anchor>a020c2574ca642ce8a9d18f010423ee5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GestureRotate</name>
      <anchorfile>classGtk_1_1GestureRotate.html</anchorfile>
      <anchor>a4b0fd793457bdce39e0f2bd4d3d88fed</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::GestureRotate &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1GestureRotate.html</anchorfile>
      <anchor>a371f2634bfd0f00e960684bf985ae069</anchor>
      <arglist>(GtkGestureRotate *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::GestureSingle</name>
    <filename>classGtk_1_1GestureSingle.html</filename>
    <base>Gtk::Gesture</base>
    <member kind="function">
      <type></type>
      <name>GestureSingle</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>a19eeb7b92e7e4975f60fad7d4e7e85c9</anchor>
      <arglist>(GestureSingle &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GestureSingle &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>a1f00b6a187a621620a0ce8070460aa4c</anchor>
      <arglist>(GestureSingle &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GestureSingle</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>af124e320f5e5d249ed3aedb024dab710</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkGestureSingle *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>a74a3e655f6553a54cb7d1e9beb42a472</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkGestureSingle *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>aa1da0a6f588dd70ce95ea68f461d40e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkGestureSingle *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>a2cbacbe5353d1b3e24a2e8455a947c6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_touch_only</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>aca990586c8a007939c61e8d438f8dba1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_touch_only</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>ab128de7d43dd7632dfb689830aad64d2</anchor>
      <arglist>(bool touch_only=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_exclusive</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>a75b1b4175e1d4c32ec7ad60f1cf6b0f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_exclusive</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>ae7f65022dcfeb82cf1197c50da42ef92</anchor>
      <arglist>(bool exclusive=true) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>get_button</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>ac2c78892ba0655d997ef27a38d9ee13f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_button</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>a500b02cfc64d1ba89702561d78878696</anchor>
      <arglist>(unsigned int button=0)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>get_current_button</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>aeab726d96561e32d6d53650cd744625b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GdkEventSequence *</type>
      <name>get_current_sequence</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>ac455ad57ddccceec1d76a135a640d11a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GdkEventSequence *</type>
      <name>get_current_sequence</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>a076348588511b6b5eaf897ffa9fe56b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_touch_only</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>a2743cd8cb2c878f63d4c695956300a97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_touch_only</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>a093cf1c31043094cdfd55baf1d931ecc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_exclusive</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>aa314773666a771eba58bc7078cc0be1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_exclusive</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>ae0c28a40b4016f90fcbe108765dc42f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; unsigned int &gt;</type>
      <name>property_button</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>a137db7ee2316d89c0190cfe48c20cfb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; unsigned int &gt;</type>
      <name>property_button</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>a698afe4c60d3047268229a71860ba70c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>a363134dac96045d235bd890aa3aee44a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GestureSingle</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>ada3068818da092c34ed875cae42ff34f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::GestureSingle &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1GestureSingle.html</anchorfile>
      <anchor>a17e2aa00325dbf6a9b14bd5050a73dbf</anchor>
      <arglist>(GtkGestureSingle *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::GestureSwipe</name>
    <filename>classGtk_1_1GestureSwipe.html</filename>
    <base>Gtk::GestureSingle</base>
    <member kind="function">
      <type></type>
      <name>GestureSwipe</name>
      <anchorfile>classGtk_1_1GestureSwipe.html</anchorfile>
      <anchor>afd1fcada48109fdd74bb4e97bfb3d1d7</anchor>
      <arglist>(GestureSwipe &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GestureSwipe &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1GestureSwipe.html</anchorfile>
      <anchor>a336a96ae78388ee3440539d0b04fccf4</anchor>
      <arglist>(GestureSwipe &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GestureSwipe</name>
      <anchorfile>classGtk_1_1GestureSwipe.html</anchorfile>
      <anchor>a7fbd70b4451ae26157ba67586303ea07</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkGestureSwipe *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GestureSwipe.html</anchorfile>
      <anchor>a9f827ec9c3bd6e7a998124777f3e860b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkGestureSwipe *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GestureSwipe.html</anchorfile>
      <anchor>a0e8c7ac75ebe41a61138e20e465b438a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkGestureSwipe *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1GestureSwipe.html</anchorfile>
      <anchor>afcb1f65651fe3b067829acda4883a5ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_velocity</name>
      <anchorfile>classGtk_1_1GestureSwipe.html</anchorfile>
      <anchor>a904114880bcdd8d2837bc266eeca177a</anchor>
      <arglist>(double &amp;velocity_x, double &amp;velocity_y) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, double, double &gt;</type>
      <name>signal_swipe</name>
      <anchorfile>classGtk_1_1GestureSwipe.html</anchorfile>
      <anchor>a91c173adaf763fdee1a115635c152541</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1GestureSwipe.html</anchorfile>
      <anchor>a9e905392425aee5c649dee28078f8074</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; GestureSwipe &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1GestureSwipe.html</anchorfile>
      <anchor>a603177a22ebf0018aa2b478c7b4524ec</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GestureSwipe</name>
      <anchorfile>classGtk_1_1GestureSwipe.html</anchorfile>
      <anchor>a09acae70988dd2e3c0ff13377b809455</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GestureSwipe</name>
      <anchorfile>classGtk_1_1GestureSwipe.html</anchorfile>
      <anchor>aa0bd664be0da68eab70eae8a0c0400d9</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::GestureSwipe &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1GestureSwipe.html</anchorfile>
      <anchor>af1df159081fc80d6ac056ac683d51639</anchor>
      <arglist>(GtkGestureSwipe *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::GestureZoom</name>
    <filename>classGtk_1_1GestureZoom.html</filename>
    <base>Gtk::Gesture</base>
    <member kind="function">
      <type></type>
      <name>GestureZoom</name>
      <anchorfile>classGtk_1_1GestureZoom.html</anchorfile>
      <anchor>a3706e175e0c8acc725f275b90211b540</anchor>
      <arglist>(GestureZoom &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GestureZoom &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1GestureZoom.html</anchorfile>
      <anchor>a523cc0139379b22440e742ff566dd890</anchor>
      <arglist>(GestureZoom &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GestureZoom</name>
      <anchorfile>classGtk_1_1GestureZoom.html</anchorfile>
      <anchor>ac7676aa54e487ed9ec362f9bbd143d8b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkGestureZoom *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GestureZoom.html</anchorfile>
      <anchor>a946f199023e315a14a2834147479d7b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkGestureZoom *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GestureZoom.html</anchorfile>
      <anchor>acdee98389362ea2a3f49dd76bf510148</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkGestureZoom *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1GestureZoom.html</anchorfile>
      <anchor>a1c9870faf910f33bf17b2f1004eff308</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_scale_delta</name>
      <anchorfile>classGtk_1_1GestureZoom.html</anchorfile>
      <anchor>a8984b6391a9204bdf42dcca93f1a7a99</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, double &gt;</type>
      <name>signal_scale_changed</name>
      <anchorfile>classGtk_1_1GestureZoom.html</anchorfile>
      <anchor>a7882072685aed301d4dac5a94dca66cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1GestureZoom.html</anchorfile>
      <anchor>a8b0cca2a58f7a07fcc153496fc61f72f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; GestureZoom &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1GestureZoom.html</anchorfile>
      <anchor>a1e8e92ee0cc98eee70a961836ffcd838</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GestureZoom</name>
      <anchorfile>classGtk_1_1GestureZoom.html</anchorfile>
      <anchor>afb9736bb4743045f25818d140bf25044</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GestureZoom</name>
      <anchorfile>classGtk_1_1GestureZoom.html</anchorfile>
      <anchor>a671534d6963bb6412bddd429721778b9</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::GestureZoom &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1GestureZoom.html</anchorfile>
      <anchor>aed2b6aa6843e50d2a9731f85307dae01</anchor>
      <arglist>(GtkGestureZoom *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::GLArea</name>
    <filename>classGtk_1_1GLArea.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>GLArea</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>ace90644463d6b2f6303044b5bc6c3b3a</anchor>
      <arglist>(GLArea &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GLArea &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a5ad17aaaf6141e61b9c45123bf08c4d9</anchor>
      <arglist>(GLArea &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GLArea</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>aaea34598222f1690975728590c7b8407</anchor>
      <arglist>(const GLArea &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>GLArea &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a4d2e8881099ba68859ef5e8ac3931df8</anchor>
      <arglist>(const GLArea &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GLArea</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a40d129edfe0413071dcfdc2e4c866fb6</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkGLArea *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a2b3114364070466837c930d243c23929</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkGLArea *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a6a318a4505c8daafd8b749b915a8a42d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GLArea</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>af8dd6136d1a8c0d4f96375304a7f274d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::GLContext &gt;</type>
      <name>get_context</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a65ba138f296440b9a9b2132a86e1197b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::GLContext &gt;</type>
      <name>get_context</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>aad69781c891053887ea321ec47178e28</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>make_current</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a9551faf1f05e1d53a5271d5720fbf0d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>queue_render</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a84183c143fe9c2106e683a188fd68a1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attach_buffers</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>ad811e9c7ba2fdc7b4015962d68b6fb71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_error</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>aa36dabab687265fcad1543d39559f475</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>throw_if_error</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>ab7562f7b2bcae13fa561726c78914e82</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_error</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a90cdfc84b51c15cc37481dc4d123b5ce</anchor>
      <arglist>(const Glib::Error &amp;error)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_error</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a33e94310561aa27c7aa17f5ebc52ea84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_has_alpha</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>abb67c0b446ffc4eb483d006b0df59869</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_alpha</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>aa557ac74b2de5b561dc0d7f25188ee21</anchor>
      <arglist>(bool has_alpha=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_has_depth_buffer</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a96f50ba6a85e4eb70db0185dec7749dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_depth_buffer</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a166afad7e6019e0df4245b74f629f095</anchor>
      <arglist>(bool has_depth_buffer=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_has_stencil_buffer</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>ad691bbf1e84115520b7f3f1cc948fe59</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_stencil_buffer</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>af31493a46f88226fd5207d36534d0490</anchor>
      <arglist>(bool has_stencil_buffer=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_auto_render</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>acb744eb7158565472e70a2ab12376d59</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_auto_render</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>ae345bad1c063aafdb865393e7651eea3</anchor>
      <arglist>(bool auto_render=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_required_version</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a316f66982a69a86b9c62cd1209225739</anchor>
      <arglist>(int &amp;major, int &amp;minor) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_required_version</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a1f6a4da0d66461b5a89abbb784dc2ab9</anchor>
      <arglist>(int major, int minor)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_use_es</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a576eab5ba8b429cb6d7ff0cf5c46a3cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_es</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a23e31c2159ada10a38503735ac84385d</anchor>
      <arglist>(bool use_es=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_auto_render</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>aa7972c003afbcac575d5a37ed591f989</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_auto_render</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>aae4bfc20ae97018c2394d992c5e07866</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::GLContext &gt; &gt;</type>
      <name>property_context</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a5e7ab7e2efdd808996ef24e26d23184b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_has_alpha</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a3a7bb1cb8b466143c179d636a914c19a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_alpha</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a280bc3b521be471c64143eef2b2408e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_has_depth_buffer</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>ada1bd470ffa1354d4c8c37321dd1cb01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_depth_buffer</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>aa0c23e30d189c83bb12a139460fe2d47</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_has_stencil_buffer</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>af1194022b9ce2fecb00efe080646ec78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_stencil_buffer</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>ab1625d3db76fe5375618845eae90de97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_es</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a1e856aa7d42e7661ed331e9e213e8f34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_es</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a76f69f79f78e2bee5b368766e9abad4d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; Glib::RefPtr&lt; Gdk::GLContext &gt; &gt;</type>
      <name>signal_create_context</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a94d01fa4f8b6c09133e248af83c5ca29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, const Glib::RefPtr&lt; Gdk::GLContext &gt; &amp; &gt;</type>
      <name>signal_render</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>aa51348e0d38b2a39f50eea077ba45986</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, int, int &gt;</type>
      <name>signal_resize</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a1907f85ef1fc83c5383ab3384dde8acb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a0c624a50ee1d1f228a39038ce5711886</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Glib::RefPtr&lt; Gdk::GLContext &gt;</type>
      <name>on_create_context</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a4231d791d752f6bf9d70388f361f68d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_render</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a83c1174d3e59d2a5b3ae2fc4a3d517c8</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::GLContext &gt; &amp;context)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_resize</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a464a918bd19016270a46b847bdce3091</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::GLArea *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1GLArea.html</anchorfile>
      <anchor>a677d32c939662df389b694b986af5b9e</anchor>
      <arglist>(GtkGLArea *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Grid</name>
    <filename>classGtk_1_1Grid.html</filename>
    <base>Gtk::Container</base>
    <base>Gtk::Orientable</base>
    <member kind="function">
      <type></type>
      <name>Grid</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>ad75ec9d595f98a684b01c465c9ce16e1</anchor>
      <arglist>(Grid &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Grid &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a4f53cb44c4a8a93cdcc1eb8487d353e8</anchor>
      <arglist>(Grid &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Grid</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a847dce6617c2af3af8983da1b043858d</anchor>
      <arglist>(const Grid &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Grid &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a5c6e6e7522476bfc5f0bb27993e2d954</anchor>
      <arglist>(const Grid &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Grid</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a9d29ee3b7893975c17ec6a79df90577e</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkGrid *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a38dbe6adac2038e468beb6c38e13509c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkGrid *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a799c658c8595d5415f38aecad0dd9218</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Grid</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a41b9faaf5b40c854555055283839c2a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attach</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a664d8700c0a8176c2e2595e1d9938ff0</anchor>
      <arglist>(Widget &amp;child, int left, int top, int width=1, int height=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attach_next_to</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>abb0182cf16ebae0e0efbb719f9f27cce</anchor>
      <arglist>(Widget &amp;child, Widget &amp;sibling, PositionType side, int width=1, int height=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attach_next_to</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a1ed8a7ab9304a8227b7eda6dd10d8210</anchor>
      <arglist>(Widget &amp;child, PositionType side, int width=1, int height=1)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_child_at</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>adcf7c569fc63073c2600421840260396</anchor>
      <arglist>(int left, int top)</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_child_at</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a7706cc3acba0b7776a12c4ce60dafa99</anchor>
      <arglist>(int left, int top) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_row</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>ab9e62a5dac349a31477f1b4f29aa9d97</anchor>
      <arglist>(int position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_column</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>aed8dd0882d18dce3e54fde7ee6f944a9</anchor>
      <arglist>(int position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_row</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a2ee7c9ac10c0977312ef4241246abe96</anchor>
      <arglist>(int position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_column</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a5f68273bdb59ff911c6c1a0ded85bee2</anchor>
      <arglist>(int position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_next_to</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a93fd7a162bf0ffb84233dafdf10f95a1</anchor>
      <arglist>(Widget &amp;sibling, PositionType side)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_row_homogeneous</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>ad2587a5431a9fb864db8d6da21bb6844</anchor>
      <arglist>(bool homogeneous=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_row_homogeneous</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a544f2f342a745d45da7d838fc7611fe5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_row_spacing</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>ab68e13f2bd04240ddba33c440fdc24db</anchor>
      <arglist>(guint spacing)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_row_spacing</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a092219e8e7f51540369d197934ef5528</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_column_homogeneous</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a58ea6e69a33a9e719f5b5b4b430e8de3</anchor>
      <arglist>(bool homogeneous)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_column_homogeneous</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a98a8ac6f5d103bee3e9135555c5d9ed7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_column_spacing</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>ae6fd289f9ec6701894a1c39e99486cc6</anchor>
      <arglist>(guint spacing)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_column_spacing</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a893e6376c1092ebb8afea5813d387721</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_row_baseline_position</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a6145cfc5d3488c05bd7e927370ab51a8</anchor>
      <arglist>(int row, BaselinePosition pos)</arglist>
    </member>
    <member kind="function">
      <type>BaselinePosition</type>
      <name>get_row_baseline_position</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>aa22abfd36e502239e27fc55276da887f</anchor>
      <arglist>(int row) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_baseline_row</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a823e4e325ceb7c4469f28b3d6172c321</anchor>
      <arglist>(int row)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_baseline_row</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>ab8141368dca0395c596604bc1a303d7c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_row_spacing</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a89e51ea6404027df4ebc1396d091d305</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_row_spacing</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>ac559ee3f66c5cd09109ab93fe8a83394</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_column_spacing</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a11a947664a7a697eb6999612712f4b38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_column_spacing</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a3b9121d14d00e5674f57a6331de38ae7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_row_homogeneous</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>aefc8c3740b015d197e861aa0df9cf842</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_row_homogeneous</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a33cb9849dadf73aecd2f2fd449ae8126</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_column_homogeneous</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a76ad3803d2a87836cba29830fccd5b3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_column_homogeneous</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>aa0be93a8935ba305942dd233b64417cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_baseline_row</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a0a8d78fa97fabe173cf6bcff66618c6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_baseline_row</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a731ccfd213afd17c89dc86abe136a758</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; int &gt;</type>
      <name>child_property_left_attach</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>aa36e4ee81ca30cdd4796cbe858964fc2</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>child_property_left_attach</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a21aa8e4e342cd127e309626a63c9a635</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; int &gt;</type>
      <name>child_property_top_attach</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a4ac32ec5c0aa3098c3508a3b47b9a663</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>child_property_top_attach</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a8801731fd044f86a0475c216197da3a4</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; int &gt;</type>
      <name>child_property_width</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a2228ab0f844f31704d630662b65d6643</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>child_property_width</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>af1508a7037ba5a1692d684266b3fb0cd</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; int &gt;</type>
      <name>child_property_height</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a5411b9fcce8f7f08e520d97bb4c5a7b1</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>child_property_height</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>af22f39d238e681f925d1bb4f468178ee</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>adaa54c2f5aa670d69ea405b8065d9f4a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Grid *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Grid.html</anchorfile>
      <anchor>a68c9c43cf4e285287bdb377925db18cd</anchor>
      <arglist>(GtkGrid *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::HandleBox</name>
    <filename>classGtk_1_1HandleBox.html</filename>
    <base>Gtk::Bin</base>
    <member kind="function">
      <type></type>
      <name>HandleBox</name>
      <anchorfile>classGtk_1_1HandleBox.html</anchorfile>
      <anchor>acc73bed00d526e762487826408e08863</anchor>
      <arglist>(HandleBox &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>HandleBox &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1HandleBox.html</anchorfile>
      <anchor>a1e7e5dc0084c2b86acf93e085177b62d</anchor>
      <arglist>(HandleBox &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HandleBox</name>
      <anchorfile>classGtk_1_1HandleBox.html</anchorfile>
      <anchor>a4d2a2e5d2d7b10f4861562b8e06685a2</anchor>
      <arglist>(const HandleBox &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>HandleBox &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1HandleBox.html</anchorfile>
      <anchor>adcfbfea56abbf25ff366d79c02ca665c</anchor>
      <arglist>(const HandleBox &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~HandleBox</name>
      <anchorfile>classGtk_1_1HandleBox.html</anchorfile>
      <anchor>a7b09dd31e6b742c531fd301e4435455a</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkHandleBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1HandleBox.html</anchorfile>
      <anchor>a63722f67c9a993404b66b1f632755fb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkHandleBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1HandleBox.html</anchorfile>
      <anchor>aae354cf0bfa1cc173305b59add0721f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HandleBox</name>
      <anchorfile>classGtk_1_1HandleBox.html</anchorfile>
      <anchor>a1ddcb403d0702514a371f633ba83c1ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_shadow_type</name>
      <anchorfile>classGtk_1_1HandleBox.html</anchorfile>
      <anchor>a8e791d0a64f10d42453f262db0c1a349</anchor>
      <arglist>(ShadowType type)</arglist>
    </member>
    <member kind="function">
      <type>ShadowType</type>
      <name>get_shadow_type</name>
      <anchorfile>classGtk_1_1HandleBox.html</anchorfile>
      <anchor>a75b5f1cd46e8126cf66f42d5f901489e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_handle_position</name>
      <anchorfile>classGtk_1_1HandleBox.html</anchorfile>
      <anchor>a50fafe131d9164b6e2288107b089cd57</anchor>
      <arglist>(PositionType position)</arglist>
    </member>
    <member kind="function">
      <type>PositionType</type>
      <name>get_handle_position</name>
      <anchorfile>classGtk_1_1HandleBox.html</anchorfile>
      <anchor>ada5c7633f79449cbfc029d07eeae5cd9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_snap_edge</name>
      <anchorfile>classGtk_1_1HandleBox.html</anchorfile>
      <anchor>ada60d21ca8a66e90897a280d237efe81</anchor>
      <arglist>(PositionType edge)</arglist>
    </member>
    <member kind="function">
      <type>PositionType</type>
      <name>get_snap_edge</name>
      <anchorfile>classGtk_1_1HandleBox.html</anchorfile>
      <anchor>a41d2badd108aa934303311912f3f5395</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_child_detached</name>
      <anchorfile>classGtk_1_1HandleBox.html</anchorfile>
      <anchor>a79681b19c0f405400ed38f2e63210801</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, Widget * &gt;</type>
      <name>signal_child_attached</name>
      <anchorfile>classGtk_1_1HandleBox.html</anchorfile>
      <anchor>ac4669b782535f9023a1dfebbc5ae02da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, Widget * &gt;</type>
      <name>signal_child_detached</name>
      <anchorfile>classGtk_1_1HandleBox.html</anchorfile>
      <anchor>a0efd3316a94b894080bb38d330b221f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; ShadowType &gt;</type>
      <name>property_shadow_type</name>
      <anchorfile>classGtk_1_1HandleBox.html</anchorfile>
      <anchor>a7923cb103dbbbbf1c87df6662ccc1317</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; ShadowType &gt;</type>
      <name>property_shadow_type</name>
      <anchorfile>classGtk_1_1HandleBox.html</anchorfile>
      <anchor>a74208bc876f217c523c97a1ca2202d7e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; PositionType &gt;</type>
      <name>property_handle_position</name>
      <anchorfile>classGtk_1_1HandleBox.html</anchorfile>
      <anchor>a08f05978e18ae04832304801f681b012</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; PositionType &gt;</type>
      <name>property_handle_position</name>
      <anchorfile>classGtk_1_1HandleBox.html</anchorfile>
      <anchor>ab0208ee5bc0464cd4016091014f619ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; PositionType &gt;</type>
      <name>property_snap_edge</name>
      <anchorfile>classGtk_1_1HandleBox.html</anchorfile>
      <anchor>ad15f6ab3d2839dcd2622f13e3705ff9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; PositionType &gt;</type>
      <name>property_snap_edge</name>
      <anchorfile>classGtk_1_1HandleBox.html</anchorfile>
      <anchor>a9d25f1064f061d34b0890248311c8b18</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_snap_edge_set</name>
      <anchorfile>classGtk_1_1HandleBox.html</anchorfile>
      <anchor>a5df248ba1c04a6a071947942cb44c53a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_snap_edge_set</name>
      <anchorfile>classGtk_1_1HandleBox.html</anchorfile>
      <anchor>a623af1658c4933240335efd8193496d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_child_detached</name>
      <anchorfile>classGtk_1_1HandleBox.html</anchorfile>
      <anchor>a4927bc46e33bf674d08f9460553dc754</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1HandleBox.html</anchorfile>
      <anchor>ab89bd9e38e84c23702d99edc1daad66d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_child_attached</name>
      <anchorfile>classGtk_1_1HandleBox.html</anchorfile>
      <anchor>add23f8bf89f19a0d6ff0b564ca82fa9b</anchor>
      <arglist>(Widget *child)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_child_detached</name>
      <anchorfile>classGtk_1_1HandleBox.html</anchorfile>
      <anchor>a4fe2ffb94d8c813be0ffa3c6ad89965b</anchor>
      <arglist>(Widget *child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::HandleBox *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1HandleBox.html</anchorfile>
      <anchor>a4c96b65ab9a9146f7a78f8740809b6b3</anchor>
      <arglist>(GtkHandleBox *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::HBox</name>
    <filename>classGtk_1_1HBox.html</filename>
    <base>Gtk::Box</base>
    <member kind="function">
      <type></type>
      <name>HBox</name>
      <anchorfile>classGtk_1_1HBox.html</anchorfile>
      <anchor>a88db9d2deb3549fb64bdc728252a5f7f</anchor>
      <arglist>(HBox &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>HBox &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1HBox.html</anchorfile>
      <anchor>a8a85a6c206a275e2021073293fbcb6bf</anchor>
      <arglist>(HBox &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HBox</name>
      <anchorfile>classGtk_1_1HBox.html</anchorfile>
      <anchor>a8ba9391cb49ab22b0529824c50ff9d29</anchor>
      <arglist>(const HBox &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>HBox &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1HBox.html</anchorfile>
      <anchor>a6e6d25bf6f3aebe777bb5d6f95ea8ca9</anchor>
      <arglist>(const HBox &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~HBox</name>
      <anchorfile>classGtk_1_1HBox.html</anchorfile>
      <anchor>a4308da04ae9a639be30228505acc8908</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkHBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1HBox.html</anchorfile>
      <anchor>a276c36213ef878a34ab3a16a6f2dc94b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkHBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1HBox.html</anchorfile>
      <anchor>a200e7083acf10d6075633a5bb2eef9d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HBox</name>
      <anchorfile>classGtk_1_1HBox.html</anchorfile>
      <anchor>aaa532dc02c5e8e6b0646507ba2d197e7</anchor>
      <arglist>(bool homogeneous=false, int spacing=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1HBox.html</anchorfile>
      <anchor>a266b3352ba035d87861bebe72bdf7560</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::HBox *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1HBox.html</anchorfile>
      <anchor>a85035290b119fb3a416007329b6f4ea3</anchor>
      <arglist>(GtkHBox *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::HButtonBox</name>
    <filename>classGtk_1_1HButtonBox.html</filename>
    <base>Gtk::ButtonBox</base>
    <member kind="function">
      <type></type>
      <name>HButtonBox</name>
      <anchorfile>classGtk_1_1HButtonBox.html</anchorfile>
      <anchor>ae9634b15880692d4cc9c43b96f85cfae</anchor>
      <arglist>(HButtonBox &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>HButtonBox &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1HButtonBox.html</anchorfile>
      <anchor>a8eb8b50e03d2821954c8539572ba73d7</anchor>
      <arglist>(HButtonBox &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HButtonBox</name>
      <anchorfile>classGtk_1_1HButtonBox.html</anchorfile>
      <anchor>a18d456446af4f48eddb44f5727ba9397</anchor>
      <arglist>(const HButtonBox &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>HButtonBox &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1HButtonBox.html</anchorfile>
      <anchor>a2d35b76e64fbbc50ab449a7e52d49616</anchor>
      <arglist>(const HButtonBox &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~HButtonBox</name>
      <anchorfile>classGtk_1_1HButtonBox.html</anchorfile>
      <anchor>a8d1e824e149a91acbbb44a965258af58</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkHButtonBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1HButtonBox.html</anchorfile>
      <anchor>a5341332d3e0f09843eed8b7b5b08ec0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkHButtonBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1HButtonBox.html</anchorfile>
      <anchor>aed1412af6acc79ed8bf40ab2bb5c3e07</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HButtonBox</name>
      <anchorfile>classGtk_1_1HButtonBox.html</anchorfile>
      <anchor>aa52ee61f6a82dcad14adbf12f3f29149</anchor>
      <arglist>(ButtonBoxStyle layout=BUTTONBOX_EDGE, int spacing=BUTTONBOX_DEFAULT_SPACING)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1HButtonBox.html</anchorfile>
      <anchor>a82e51c27c3580adabd255fdb91b6e481</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::HButtonBox *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1HButtonBox.html</anchorfile>
      <anchor>a24c0e94ce09d5ec8a5203a929e69e8c7</anchor>
      <arglist>(GtkHButtonBox *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::HeaderBar</name>
    <filename>classGtk_1_1HeaderBar.html</filename>
    <base>Gtk::Container</base>
    <member kind="function">
      <type></type>
      <name>HeaderBar</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a23b419905c6e9d689e9116ff837c19eb</anchor>
      <arglist>(HeaderBar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>HeaderBar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a4e7f7aa9c1edfd6ec69da007245a14d1</anchor>
      <arglist>(HeaderBar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HeaderBar</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>ab6821e4671175216a09577ef504f49c3</anchor>
      <arglist>(const HeaderBar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>HeaderBar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a60e58211d676b63e368a5c0c01d26faf</anchor>
      <arglist>(const HeaderBar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~HeaderBar</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>adb317e9f362332ed0a5cd9de62cdf780</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkHeaderBar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a2ad8b8e02a06dab15125f4c14fa16513</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkHeaderBar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>abc5ba31e9db65fc7eecaf8b8e4ef4849</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HeaderBar</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>aaa8af5f2ed6116d7ed5bfd53aa1ae1c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_title</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a4f17a3774b2f73d4fb9c634d9b9e6c8c</anchor>
      <arglist>(const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_title</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a354dcee3f5dd07f1153418b76fe12117</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_subtitle</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a6fad5daa2d295c13ebc355b587d8dbff</anchor>
      <arglist>(const Glib::ustring &amp;subtitle)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_subtitle</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a05b0cb40bf62f520d6b00c4d96cf0228</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_subtitle</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a3ec51b561be0a6e445485c67bafd60ab</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_has_subtitle</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>ada175ba60bee267e54fb18cacd57631b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_custom_title</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a497f4008a3c13eed59ebb3431098431d</anchor>
      <arglist>(Gtk::Widget &amp;title_widget)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_custom_title</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>ab507727e1e8f7ba6ea671f20bf8dda07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_custom_title</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>ac920aaae3c3c645b38d89b975883ae50</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack_start</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a05ffbe8af3be47e1936abe977f416721</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack_end</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>abffbfc9fe9f6d7c29d0d6e2df70b0297</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_close_button</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a1d67e7d7600c6795d787965a1f1a8dad</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_close_button</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a79ee18e31c4ff06fd5b8101377d46285</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_decoration_layout</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a32492928b6c0cbcbecddc5d432022aea</anchor>
      <arglist>(const Glib::ustring &amp;layout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_decoration_layout</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a3ca80d371544a0b452c1e7d72cb41ba9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_decoration_layout</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a0829e80b87f8b0b17931e303a0b501b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gtk::Widget * &gt;</type>
      <name>property_custom_title</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a1e042878fde10dc5fb826cf045ceea36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gtk::Widget * &gt;</type>
      <name>property_custom_title</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>ae99de7a33045bb9159790b49009beaa9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_close_button</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a30f58ca7746a1a564b980bfb48bcb96b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_close_button</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a702658c73d2e7f70186064bf4634bdd3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_spacing</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>ae29de2517dd76d316f3fde3497f755fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_spacing</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a50dcf6110433608478a2e1a014e1c6a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_subtitle</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a0027307acef6f79888db7b171e74f791</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_subtitle</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a2df5d559a352e84c68c52a35f6da0644</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>ae8883097f060bacc9af2b8c84be66181</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>af122d5e043482614cd58a07af41c7d1d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_decoration_layout</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a88a4e20216edfbf9078b32256fba4efe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_decoration_layout</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>adb8146504d79d030b4aead11a5b9a0a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_decoration_layout_set</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a82e137a8e47b256b8f06fa8756ae90b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_decoration_layout_set</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a3570a2c89cc3b1c3901223fbb5997e9e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_has_subtitle</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>ab73f4e50f067230fd21906d498605a1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_subtitle</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a0593810f2018b9c75ce7bb278021660e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; PackType &gt;</type>
      <name>child_property_pack_type</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a55b2bc4eea2c2872855a6af3d6a74432</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; PackType &gt;</type>
      <name>child_property_pack_type</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a67964c746da326fa70e14824d4356064</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; int &gt;</type>
      <name>child_property_position</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a401c3346fcab8d764cd92fb9c9caa44d</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>child_property_position</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a0cfd39220ff8eb7883783aca013ffcef</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>ad65a6f26a116053d336dd488a135bcba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::HeaderBar *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1HeaderBar.html</anchorfile>
      <anchor>a615e8f2c1045b9502ae903d30fa321a0</anchor>
      <arglist>(GtkHeaderBar *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::HPaned</name>
    <filename>classGtk_1_1HPaned.html</filename>
    <base>Gtk::Paned</base>
    <member kind="function">
      <type></type>
      <name>HPaned</name>
      <anchorfile>classGtk_1_1HPaned.html</anchorfile>
      <anchor>a2759a31e61947ac1e930f3900efc0781</anchor>
      <arglist>(HPaned &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>HPaned &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1HPaned.html</anchorfile>
      <anchor>a515c1fad3cadc1373977502f2d3bf1a4</anchor>
      <arglist>(HPaned &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPaned</name>
      <anchorfile>classGtk_1_1HPaned.html</anchorfile>
      <anchor>a49cd023e478b74f69228d8811ae5d777</anchor>
      <arglist>(const HPaned &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>HPaned &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1HPaned.html</anchorfile>
      <anchor>ae3605da5ca80a80d741ed8f811b1d260</anchor>
      <arglist>(const HPaned &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~HPaned</name>
      <anchorfile>classGtk_1_1HPaned.html</anchorfile>
      <anchor>a1186014d78b2be488bcdfe76c0988016</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkHPaned *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1HPaned.html</anchorfile>
      <anchor>ac5b7ff64db8379d0c51bbfb8e9a59ea1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkHPaned *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1HPaned.html</anchorfile>
      <anchor>acfc5dbcfdc85a62d58102598dece2976</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPaned</name>
      <anchorfile>classGtk_1_1HPaned.html</anchorfile>
      <anchor>aac7763905f254a5e8917f91d58d01ad2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1HPaned.html</anchorfile>
      <anchor>ad643f0554239d30ca349255742297237</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::HPaned *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1HPaned.html</anchorfile>
      <anchor>ac0e9e640d1f55c4db32c6c72dfda775c</anchor>
      <arglist>(GtkHPaned *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::HScale</name>
    <filename>classGtk_1_1HScale.html</filename>
    <base>Gtk::Scale</base>
    <member kind="function">
      <type></type>
      <name>HScale</name>
      <anchorfile>classGtk_1_1HScale.html</anchorfile>
      <anchor>a8cd18640d82bd79efd5bf6501516dc73</anchor>
      <arglist>(HScale &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>HScale &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1HScale.html</anchorfile>
      <anchor>a7b658452546f5824c6148c2735e2b96d</anchor>
      <arglist>(HScale &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HScale</name>
      <anchorfile>classGtk_1_1HScale.html</anchorfile>
      <anchor>a41873ad9af078977c86e7d8b86e35615</anchor>
      <arglist>(const HScale &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>HScale &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1HScale.html</anchorfile>
      <anchor>a9ddc056af1698b67e1cf5c50c472bf96</anchor>
      <arglist>(const HScale &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~HScale</name>
      <anchorfile>classGtk_1_1HScale.html</anchorfile>
      <anchor>a1a3d2f013eed84a420bc1fbda934dfb9</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkHScale *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1HScale.html</anchorfile>
      <anchor>af8619097cce3380c90770b0f70fb032e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkHScale *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1HScale.html</anchorfile>
      <anchor>a52e921b7a37716ff8d6f33993a3cb1f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HScale</name>
      <anchorfile>classGtk_1_1HScale.html</anchorfile>
      <anchor>ad62f91a6f5b29c1b6548c115726faa31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HScale</name>
      <anchorfile>classGtk_1_1HScale.html</anchorfile>
      <anchor>abb547f5ac95a24288be4b38e42a5e556</anchor>
      <arglist>(double min, double max, double step)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HScale</name>
      <anchorfile>classGtk_1_1HScale.html</anchorfile>
      <anchor>abf1244f69c710a0f01680cbe5953490d</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;adjustment)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1HScale.html</anchorfile>
      <anchor>aefd67d4b7d753c13e2644b88e9075135</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::HScale *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1HScale.html</anchorfile>
      <anchor>a2f387d3d248ed5d4a1e1d699252b7845</anchor>
      <arglist>(GtkHScale *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::HScrollbar</name>
    <filename>classGtk_1_1HScrollbar.html</filename>
    <base>Gtk::Scrollbar</base>
    <member kind="function">
      <type></type>
      <name>HScrollbar</name>
      <anchorfile>classGtk_1_1HScrollbar.html</anchorfile>
      <anchor>a3a87c51c26de934176adf7a57f3a59e9</anchor>
      <arglist>(HScrollbar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>HScrollbar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1HScrollbar.html</anchorfile>
      <anchor>a63d17dc2967e368a6ee8e6195f202e87</anchor>
      <arglist>(HScrollbar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HScrollbar</name>
      <anchorfile>classGtk_1_1HScrollbar.html</anchorfile>
      <anchor>a4fdbe4fce4ed94a0c26864525e6401a1</anchor>
      <arglist>(const HScrollbar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>HScrollbar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1HScrollbar.html</anchorfile>
      <anchor>a458b262768de63ba2017f025cad2623d</anchor>
      <arglist>(const HScrollbar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~HScrollbar</name>
      <anchorfile>classGtk_1_1HScrollbar.html</anchorfile>
      <anchor>acefa6469217a7e83c929145c116c9a0c</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkHScrollbar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1HScrollbar.html</anchorfile>
      <anchor>ae713c43436a82d402a6ec5e8876d8ed0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkHScrollbar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1HScrollbar.html</anchorfile>
      <anchor>a9a6e4e47e633bb9d1d0680587d1ced0b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HScrollbar</name>
      <anchorfile>classGtk_1_1HScrollbar.html</anchorfile>
      <anchor>aead6514ab44f4505e99cb9cc8665b146</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HScrollbar</name>
      <anchorfile>classGtk_1_1HScrollbar.html</anchorfile>
      <anchor>a2f667e7b112ed97b6403c5401a6d365a</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;gtkadjustment)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1HScrollbar.html</anchorfile>
      <anchor>ab0189c2292ce2e9ac61c11781dc6e65e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::HScrollbar *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1HScrollbar.html</anchorfile>
      <anchor>a1ae48cb12e31229112897ed9942849f9</anchor>
      <arglist>(GtkHScrollbar *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::HSeparator</name>
    <filename>classGtk_1_1HSeparator.html</filename>
    <base>Gtk::Separator</base>
    <member kind="function">
      <type></type>
      <name>HSeparator</name>
      <anchorfile>classGtk_1_1HSeparator.html</anchorfile>
      <anchor>a367e2a212ae0a1bf5d8f706fb4426899</anchor>
      <arglist>(HSeparator &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>HSeparator &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1HSeparator.html</anchorfile>
      <anchor>a0843b0d2514127b0b1dd56dfcf043d6f</anchor>
      <arglist>(HSeparator &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HSeparator</name>
      <anchorfile>classGtk_1_1HSeparator.html</anchorfile>
      <anchor>a6d4d4387573be3ea8414f3fed69b838f</anchor>
      <arglist>(const HSeparator &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>HSeparator &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1HSeparator.html</anchorfile>
      <anchor>a285df486d3294a7b33df894508422af1</anchor>
      <arglist>(const HSeparator &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~HSeparator</name>
      <anchorfile>classGtk_1_1HSeparator.html</anchorfile>
      <anchor>a0dd130a1209625d4897778c4b80175d6</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkHSeparator *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1HSeparator.html</anchorfile>
      <anchor>a6f93396796b4db6ede9fa424365eb657</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkHSeparator *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1HSeparator.html</anchorfile>
      <anchor>a748ac0d71bf6127342d0ae6cdb8f0adb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HSeparator</name>
      <anchorfile>classGtk_1_1HSeparator.html</anchorfile>
      <anchor>ab55bf8d91614dbc0936b9ecf470d5e6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1HSeparator.html</anchorfile>
      <anchor>a8686c1adee18dbf48b686c618faea183</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::HSeparator *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1HSeparator.html</anchorfile>
      <anchor>a09a2e10f15c640093c8a141247e04bb9</anchor>
      <arglist>(GtkHSeparator *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::IconFactory</name>
    <filename>classGtk_1_1IconFactory.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>IconFactory</name>
      <anchorfile>classGtk_1_1IconFactory.html</anchorfile>
      <anchor>a461f5e994d583ba1b6b27bf7f9af4390</anchor>
      <arglist>(IconFactory &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>IconFactory &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1IconFactory.html</anchorfile>
      <anchor>a30585f84c968873f9b86639a6d4a6ebb</anchor>
      <arglist>(IconFactory &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~IconFactory</name>
      <anchorfile>classGtk_1_1IconFactory.html</anchorfile>
      <anchor>a7cac6370679be50d4586e20e3a769eb4</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkIconFactory *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1IconFactory.html</anchorfile>
      <anchor>a236e9524905fbdb226329b434434bf49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkIconFactory *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1IconFactory.html</anchorfile>
      <anchor>a47932b387dcb6738f3044a8a6dc7042c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkIconFactory *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1IconFactory.html</anchorfile>
      <anchor>adc700884a0e461cebc9741628c853096</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classGtk_1_1IconFactory.html</anchorfile>
      <anchor>ae95a54ee507cbb2ee0a663c801e3c4a3</anchor>
      <arglist>(const Gtk::StockID &amp;stock_id, const Glib::RefPtr&lt; IconSet &gt; &amp;icon_set)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_default</name>
      <anchorfile>classGtk_1_1IconFactory.html</anchorfile>
      <anchor>a34e574113298733a1b503eeb6ef8b185</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_default</name>
      <anchorfile>classGtk_1_1IconFactory.html</anchorfile>
      <anchor>a1a5f7511da06fe11d671773872946218</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1IconFactory.html</anchorfile>
      <anchor>aa773d986238ba25e18bf101e2f571046</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; IconFactory &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1IconFactory.html</anchorfile>
      <anchor>a7cc95658257598471ddba97630af0013</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>IconFactory</name>
      <anchorfile>classGtk_1_1IconFactory.html</anchorfile>
      <anchor>a333322ae36c00c42160646eff3e61739</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::IconFactory &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1IconFactory.html</anchorfile>
      <anchor>a5def8d6c4a128983a36e695dca66957d</anchor>
      <arglist>(GtkIconFactory *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::IconInfo</name>
    <filename>classGtk_1_1IconInfo.html</filename>
    <member kind="typedef">
      <type>const void *</type>
      <name>BoolExpr</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>af42ea038541bb079ce20f97cdfcdc690</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IconInfo</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>ad000ee1d628f675910d434921a4bb4b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IconInfo</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>ac5df0aa15650ffbbf7bf8560fb13df9c</anchor>
      <arglist>(GtkIconInfo *gobject, bool make_a_copy=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IconInfo</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>ab9bcacc37486ff2ded56ca4a6a9e2cac</anchor>
      <arglist>(const IconInfo &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>IconInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>a97b873870f84ffc61d4539aa291be36e</anchor>
      <arglist>(const IconInfo &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IconInfo</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>a30c61be7e347165767d695d4e99123cd</anchor>
      <arglist>(IconInfo &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>IconInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>ad97e13b7a761626300f861356badfac2</anchor>
      <arglist>(IconInfo &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~IconInfo</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>abbe32485e7e96a25aa9de7f45c9dcb10</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>aebda77e764e3b339ef6cd8e7fc1e0b58</anchor>
      <arglist>(IconInfo &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GtkIconInfo *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>a1159ab56328b1a410f06d86ef77d4ce1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkIconInfo *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>a3a935a8c376e729490ba66c0631685d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkIconInfo *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>a0bb1db80eedf7c85bd87a6f41ae59c5c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IconInfo</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>ae0aa7f9a3058745cb147c511c97d9a99</anchor>
      <arglist>(const Glib::RefPtr&lt; IconTheme &gt; &amp;icon_theme, const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;pixbuf)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator BoolExpr</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>addd7fe20fee4e9e17cd48f891d4f2fe7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>adf705ebac396ef663775182f3f028b97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_base_size</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>a360b401f202d85266d14c357884bc9ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_base_scale</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>a323b2bcd35a22e17ec05bc20d1f0f978</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_filename</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>a991fed1842e82757a693f6a607ce2150</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>get_builtin_pixbuf</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>acbdf9a42ea5ae1a89bccd83719ecc3ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Pixbuf &gt;</type>
      <name>get_builtin_pixbuf</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>a237c51033cff74382f35103b4e6579b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>load_icon</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>a5eec966046321610dba070b3c8d7e8e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>::Cairo::RefPtr&lt; ::Cairo::Surface &gt;</type>
      <name>load_surface</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>a01dfc11aaf94faa9edb3bb834257b880</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Window &gt; &amp;for_window)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>load_symbolic</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>a6978e6b274e4b4509428f7727fa7575e</anchor>
      <arglist>(const Gdk::RGBA &amp;fg, const Gdk::RGBA &amp;success_color, const Gdk::RGBA &amp;warning_color, const Gdk::RGBA &amp;error_color, bool &amp;was_symbolic) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load_icon_async</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>a7ac4105f63dccb47acb639809d26e3d9</anchor>
      <arglist>(const Gio::SlotAsyncReady &amp;slot, const Glib::RefPtr&lt; Gio::Cancellable &gt; &amp;cancellable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load_icon_async</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>ad5ea9bd3c06fe4eac3af64684bfec4d4</anchor>
      <arglist>(const Gio::SlotAsyncReady &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>load_icon_finish</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>a47b093ab51ccc7c0134041d0ba0b8eaf</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::AsyncResult &gt; &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>load_symbolic</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>a3def79240881f2ae2ef8b6fac22e8529</anchor>
      <arglist>(const Glib::RefPtr&lt; StyleContext &gt; &amp;style, bool &amp;was_symbolic)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load_symbolic_for_context_async</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>a4ab26861bb2f4220c95b233d897ba252</anchor>
      <arglist>(const Glib::RefPtr&lt; StyleContext &gt; &amp;context, const Gio::SlotAsyncReady &amp;slot, const Glib::RefPtr&lt; Gio::Cancellable &gt; &amp;cancellable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load_symbolic_for_context_async</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>aad5fc1ea0539002f03eb772f7014c715</anchor>
      <arglist>(const Glib::RefPtr&lt; StyleContext &gt; &amp;context, const Gio::SlotAsyncReady &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>load_symbolic_for_context_finish</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>aa3c7db0855682ef99335a36a2986319b</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::AsyncResult &gt; &amp;result, bool &amp;was_symbolic)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load_symbolic_async</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>a17db843b32de9f9208325ec98cd1e0dc</anchor>
      <arglist>(const Gdk::RGBA &amp;fg, const Gdk::RGBA &amp;success_color, const Gdk::RGBA &amp;warning_color, const Gdk::RGBA &amp;error_color, const Gio::SlotAsyncReady &amp;slot, const Glib::RefPtr&lt; Gio::Cancellable &gt; &amp;cancellable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load_symbolic_async</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>a88fcde752d2ab0ecab187aa34baf5360</anchor>
      <arglist>(const Gdk::RGBA &amp;fg, const Gdk::RGBA &amp;success_color, const Gdk::RGBA &amp;warning_color, const Gdk::RGBA &amp;error_color, const Gio::SlotAsyncReady &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>load_symbolic_finish</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>aa88386a551af3571df318c63c796d522</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::AsyncResult &gt; &amp;result, bool &amp;was_symbolic)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_raw_coordinates</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>a529c4c1e8729c18e7c7b43feaaf63d67</anchor>
      <arglist>(bool raw_coordinates=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_embedded_rect</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>a6737ad0cb2c087788393c6435570bfff</anchor>
      <arglist>(Gdk::Rectangle &amp;rectangle) const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Gdk::Point &gt;</type>
      <name>get_attach_points</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>a1836ff512cd66553b049190487b64144</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_display_name</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>af340104bf0354439311f197ce88065c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_symbolic</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>a95d575bd06c161906e97e5b566a8f15d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>a7ba1067efa3ae4671291c349e978dac6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GtkIconInfo *</type>
      <name>gobject_</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>adb0929f2020199570662394b264e5086</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>ad96b86bfee2a7527e0c46e50c9d48d15</anchor>
      <arglist>(IconInfo &amp;lhs, IconInfo &amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Gtk::IconInfo</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1IconInfo.html</anchorfile>
      <anchor>acdc54b26a982305d52967d4c99c0a0d1</anchor>
      <arglist>(GtkIconInfo *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::IconSet</name>
    <filename>classGtk_1_1IconSet.html</filename>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGtk_1_1IconSet.html</anchorfile>
      <anchor>ab3bf8bfae9059fa255c6eaf88ad5edc5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGtk_1_1IconSet.html</anchorfile>
      <anchor>a4271133515364d0774a3927c1922249e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkIconSet *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1IconSet.html</anchorfile>
      <anchor>a08103c2be66b90dc26ceb3a5a4f7cc3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkIconSet *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1IconSet.html</anchorfile>
      <anchor>aa0420b9ad08c80326bdf2d5a49f8ad6e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkIconSet *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1IconSet.html</anchorfile>
      <anchor>afb74d5729a6f1c7227293d81a3135916</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IconSet</name>
      <anchorfile>classGtk_1_1IconSet.html</anchorfile>
      <anchor>a2a4d762c96063787d0abf4ee9e0ffecd</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IconSet</name>
      <anchorfile>classGtk_1_1IconSet.html</anchorfile>
      <anchor>a57e55be46c34a3ae0989adb34947f9ec</anchor>
      <arglist>(const IconSet &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>IconSet &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1IconSet.html</anchorfile>
      <anchor>a568818a09ac4abeffbf35f59883f79c4</anchor>
      <arglist>(const IconSet &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; IconSet &gt;</type>
      <name>copy</name>
      <anchorfile>classGtk_1_1IconSet.html</anchorfile>
      <anchor>ab99e32169d674b9cb729a3bdcf23ed3f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>render_icon_pixbuf</name>
      <anchorfile>classGtk_1_1IconSet.html</anchorfile>
      <anchor>aee099a06c2949d1a7ccb25e53b44a374</anchor>
      <arglist>(const Glib::RefPtr&lt; StyleContext &gt; &amp;context, IconSize size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_source</name>
      <anchorfile>classGtk_1_1IconSet.html</anchorfile>
      <anchor>a6d929e0b56c46794132b237b022781bb</anchor>
      <arglist>(const IconSource &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; IconSize &gt;</type>
      <name>get_sizes</name>
      <anchorfile>classGtk_1_1IconSet.html</anchorfile>
      <anchor>a86c2538952b4230c31ff594b3f49701f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; IconSet &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1IconSet.html</anchorfile>
      <anchor>adfb3da43437fd1d74d145b3bfe4c20ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; IconSet &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1IconSet.html</anchorfile>
      <anchor>acd8285143f882bd4877d98f3d71ff514</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;pixbuf)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; IconSet &gt;</type>
      <name>lookup_default</name>
      <anchorfile>classGtk_1_1IconSet.html</anchorfile>
      <anchor>a8ab39a81ec80df154c348479bff9e141</anchor>
      <arglist>(const Gtk::StockID &amp;stock_id)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGtk_1_1IconSet.html</anchorfile>
      <anchor>a63c04460c8ebabb1d0a19369024751a3</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::IconSet &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1IconSet.html</anchorfile>
      <anchor>a5fba50783346b77016affd1b27ef7864</anchor>
      <arglist>(GtkIconSet *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::IconSize</name>
    <filename>classGtk_1_1IconSize.html</filename>
    <member kind="function">
      <type></type>
      <name>IconSize</name>
      <anchorfile>classGtk_1_1IconSize.html</anchorfile>
      <anchor>a9980786a8c9b6c74098e7ab20f6c8e51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IconSize</name>
      <anchorfile>classGtk_1_1IconSize.html</anchorfile>
      <anchor>a8c20145e771b016ea6746eeac47c0505</anchor>
      <arglist>(BuiltinIconSize size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IconSize</name>
      <anchorfile>classGtk_1_1IconSize.html</anchorfile>
      <anchor>a0c689319928c65b522029abee2d90e15</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator int</name>
      <anchorfile>classGtk_1_1IconSize.html</anchorfile>
      <anchor>a50a53dddcda41ee2ebf07b64a82dd45d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>lookup</name>
      <anchorfile>classGtk_1_1IconSize.html</anchorfile>
      <anchor>a93ac90db97f3e164d8698c249b546556</anchor>
      <arglist>(IconSize size, int &amp;width, int &amp;height)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>lookup</name>
      <anchorfile>classGtk_1_1IconSize.html</anchorfile>
      <anchor>adefa53779fe7acd7bfd42f9e07fe98ad</anchor>
      <arglist>(IconSize size, int &amp;width, int &amp;height, const Glib::RefPtr&lt; Gtk::Settings &gt; &amp;settings)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IconSize</type>
      <name>register_new</name>
      <anchorfile>classGtk_1_1IconSize.html</anchorfile>
      <anchor>aedea29b7b2de8b8d7e54fadd0c8f329a</anchor>
      <arglist>(const Glib::ustring &amp;name, int width, int height)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>register_alias</name>
      <anchorfile>classGtk_1_1IconSize.html</anchorfile>
      <anchor>a825d2c90489fd0f94db22113a2a4f514</anchor>
      <arglist>(const Glib::ustring &amp;alias, IconSize target)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IconSize</type>
      <name>from_name</name>
      <anchorfile>classGtk_1_1IconSize.html</anchorfile>
      <anchor>a5218ea776642be58193f111ce236b4e1</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>classGtk_1_1IconSize.html</anchorfile>
      <anchor>aac6b2fbfd2d1ad3321d8292d64fe1b1d</anchor>
      <arglist>(IconSize size)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::IconSource</name>
    <filename>classGtk_1_1IconSource.html</filename>
    <member kind="function">
      <type></type>
      <name>IconSource</name>
      <anchorfile>classGtk_1_1IconSource.html</anchorfile>
      <anchor>ad116d11a5d857ce6221a70262a84a3a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IconSource</name>
      <anchorfile>classGtk_1_1IconSource.html</anchorfile>
      <anchor>a44c4b41ece9f9bda5d196f757e7c5c8f</anchor>
      <arglist>(GtkIconSource *gobject, bool make_a_copy=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IconSource</name>
      <anchorfile>classGtk_1_1IconSource.html</anchorfile>
      <anchor>aa34725e2b0a2e09f7ae6d5130eaaf4df</anchor>
      <arglist>(const IconSource &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>IconSource &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1IconSource.html</anchorfile>
      <anchor>a803ad30e1544d4983fa5039a92f987f7</anchor>
      <arglist>(const IconSource &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IconSource</name>
      <anchorfile>classGtk_1_1IconSource.html</anchorfile>
      <anchor>ad627f203fcc6acaf83fb2693251152d4</anchor>
      <arglist>(IconSource &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>IconSource &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1IconSource.html</anchorfile>
      <anchor>a5f0f37778a1db51f303136fd8b6ebb10</anchor>
      <arglist>(IconSource &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~IconSource</name>
      <anchorfile>classGtk_1_1IconSource.html</anchorfile>
      <anchor>a9da057ed14fe6f13a932063a500b186f</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGtk_1_1IconSource.html</anchorfile>
      <anchor>a1d36bab2e2ccd68fcd0e0a5fb204ccdc</anchor>
      <arglist>(IconSource &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GtkIconSource *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1IconSource.html</anchorfile>
      <anchor>a7c14ee01bb90968b2c930b873524e6e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkIconSource *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1IconSource.html</anchorfile>
      <anchor>a58cf0bd123403dbee4ec19725a596ebd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkIconSource *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1IconSource.html</anchorfile>
      <anchor>abe204445677aaafac76225abe5a42db1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_filename</name>
      <anchorfile>classGtk_1_1IconSource.html</anchorfile>
      <anchor>a41801a184775c47e6c2e65fee0e4cec2</anchor>
      <arglist>(const Glib::ustring &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_pixbuf</name>
      <anchorfile>classGtk_1_1IconSource.html</anchorfile>
      <anchor>a8e569cec71141a8ecebacf225d22729a</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;pixbuf)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_filename</name>
      <anchorfile>classGtk_1_1IconSource.html</anchorfile>
      <anchor>abe7763cb46297ef0930d433357a66a09</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>get_pixbuf</name>
      <anchorfile>classGtk_1_1IconSource.html</anchorfile>
      <anchor>a95f73a9793d6af134dcbf41e57e51cff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Pixbuf &gt;</type>
      <name>get_pixbuf</name>
      <anchorfile>classGtk_1_1IconSource.html</anchorfile>
      <anchor>aa8f0e245c3cc1a099d958b3beed28f43</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_direction_wildcarded</name>
      <anchorfile>classGtk_1_1IconSource.html</anchorfile>
      <anchor>a1c306fcf2ac4d3e3f491c43921a3265f</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_state_wildcarded</name>
      <anchorfile>classGtk_1_1IconSource.html</anchorfile>
      <anchor>a799e9c455e5f78bb54c6214062535241</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_size_wildcarded</name>
      <anchorfile>classGtk_1_1IconSource.html</anchorfile>
      <anchor>a91a2063bfae7b6ad614dc15147b6d3b1</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_size_wildcarded</name>
      <anchorfile>classGtk_1_1IconSource.html</anchorfile>
      <anchor>a4c799234fee629dcf1821ff75499eff4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_state_wildcarded</name>
      <anchorfile>classGtk_1_1IconSource.html</anchorfile>
      <anchor>a3374f27ba60030fc82d2798c643ffbd5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_direction_wildcarded</name>
      <anchorfile>classGtk_1_1IconSource.html</anchorfile>
      <anchor>aa65e7296aadff66f2dccc5aa19fc1519</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_direction</name>
      <anchorfile>classGtk_1_1IconSource.html</anchorfile>
      <anchor>a3153f215a855ac1dbc93782692a3a9db</anchor>
      <arglist>(TextDirection direction)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_state</name>
      <anchorfile>classGtk_1_1IconSource.html</anchorfile>
      <anchor>a9cc65cff2d2574fb90b62fee4284af99</anchor>
      <arglist>(Gtk::StateType state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_size</name>
      <anchorfile>classGtk_1_1IconSource.html</anchorfile>
      <anchor>ae0b88adc6bbb4ff3b0b6a0279555efcf</anchor>
      <arglist>(IconSize size)</arglist>
    </member>
    <member kind="function">
      <type>TextDirection</type>
      <name>get_direction</name>
      <anchorfile>classGtk_1_1IconSource.html</anchorfile>
      <anchor>ac1c4a2fa081bf50df1f0938b35353837</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::StateType</type>
      <name>get_state</name>
      <anchorfile>classGtk_1_1IconSource.html</anchorfile>
      <anchor>ad8d7c3932eb7d56d56598b223ce44c0d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>IconSize</type>
      <name>get_size</name>
      <anchorfile>classGtk_1_1IconSource.html</anchorfile>
      <anchor>a690b0f0e7c34a49093869068674c7ff7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_name</name>
      <anchorfile>classGtk_1_1IconSource.html</anchorfile>
      <anchor>ae0ea072ab57ae724e5957218a2f195b7</anchor>
      <arglist>(const Glib::ustring &amp;icon_name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_icon_name</name>
      <anchorfile>classGtk_1_1IconSource.html</anchorfile>
      <anchor>a9c99baebe10e598d977fe08dcb6c93e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1IconSource.html</anchorfile>
      <anchor>aa66ee121c596b42efde937056226963d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GtkIconSource *</type>
      <name>gobject_</name>
      <anchorfile>classGtk_1_1IconSource.html</anchorfile>
      <anchor>a76826db186409af0f30676002a5734ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGtk_1_1IconSource.html</anchorfile>
      <anchor>a1a3dd7b9da92750a47b7093c3ff6239a</anchor>
      <arglist>(IconSource &amp;lhs, IconSource &amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Gtk::IconSource</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1IconSource.html</anchorfile>
      <anchor>a7d7a29bf9665ec2ca3eb03c6ff4ff841</anchor>
      <arglist>(GtkIconSource *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::IconTheme</name>
    <filename>classGtk_1_1IconTheme.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>IconTheme</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a80bb9ce21a9a67e57316759c4a391281</anchor>
      <arglist>(IconTheme &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>IconTheme &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a6385bba2969746cb5e12baac12ebef1b</anchor>
      <arglist>(IconTheme &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~IconTheme</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a226ca8b6121b47398b08a5b4cd7f84be</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkIconTheme *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a9f62bce0b8426d984104ca65493ad65b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkIconTheme *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>ab47f6ad780df65ae900862c469c1f45c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkIconTheme *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a47f5d7d4be820bdec8e3ed111e04a174</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_screen</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a101e27ca111105f250a7dccaa0407b52</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Screen &gt; &amp;screen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_search_path</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a2929f60b889a4aafc84a5acc288b24ff</anchor>
      <arglist>(const std::vector&lt; Glib::ustring &gt; &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>get_search_path</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a23de536e3cfd59dcdad02c8ad29a1444</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append_search_path</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a6d3cb198791d11293b53a6d72e86dd71</anchor>
      <arglist>(const Glib::ustring &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepend_search_path</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a3a7691445c999cf3f49fff52e6ef62b1</anchor>
      <arglist>(const Glib::ustring &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_resource_path</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a95edbfce09488f385b7cc4617bbeb254</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_custom_theme</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>acddc42b5b8c9731c3647953c5ab5196b</anchor>
      <arglist>(const Glib::ustring &amp;theme_name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_icon</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>ac39844b977b82e670b88a693d619c624</anchor>
      <arglist>(const Glib::ustring &amp;icon_name) const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; int &gt;</type>
      <name>get_icon_sizes</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a9b66916b322a459ff1428fb140238450</anchor>
      <arglist>(const Glib::ustring &amp;icon_name) const </arglist>
    </member>
    <member kind="function">
      <type>IconInfo</type>
      <name>lookup_icon</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a65eb6be589a121ece1bc5b267a033ab5</anchor>
      <arglist>(const Glib::ustring &amp;icon_name, int size, IconLookupFlags flags=(IconLookupFlags) 0) const </arglist>
    </member>
    <member kind="function">
      <type>IconInfo</type>
      <name>lookup_icon</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a66ad40da421efdefd5d0545eb6d75a46</anchor>
      <arglist>(const Glib::ustring &amp;icon_name, int size, int scale, IconLookupFlags flags=(IconLookupFlags) 0) const </arglist>
    </member>
    <member kind="function">
      <type>IconInfo</type>
      <name>lookup_icon</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a95a13c982c09dff60282ccfe814b9a3e</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gio::Icon &gt; &amp;icon, int size, IconLookupFlags flags=(IconLookupFlags) 0) const </arglist>
    </member>
    <member kind="function">
      <type>IconInfo</type>
      <name>lookup_icon</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a6c1881c0a3afc0686733774ffb83d0bc</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gio::Icon &gt; &amp;icon, int size, int scale, IconLookupFlags flags=(IconLookupFlags) 0) const </arglist>
    </member>
    <member kind="function">
      <type>IconInfo</type>
      <name>choose_icon</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a5b1680b76c11f7ac417b3efd2ec1582b</anchor>
      <arglist>(const std::vector&lt; Glib::ustring &gt; &amp;icon_names, int size, IconLookupFlags flags=(IconLookupFlags) 0)</arglist>
    </member>
    <member kind="function">
      <type>IconInfo</type>
      <name>choose_icon</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a11399833ffa7128c4e7fbeb9c5b515af</anchor>
      <arglist>(const std::vector&lt; Glib::ustring &gt; &amp;icon_names, int size, int scale, IconLookupFlags flags=(IconLookupFlags) 0)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>load_icon</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a9e9307cefa458eea1e8946d9def2e527</anchor>
      <arglist>(const Glib::ustring &amp;icon_name, int size, IconLookupFlags flags=(IconLookupFlags) 0) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>load_icon</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a5f42edffabc31879fd790a8007a995a5</anchor>
      <arglist>(const Glib::ustring &amp;icon_name, int size, int scale, IconLookupFlags flags=(IconLookupFlags) 0) const </arglist>
    </member>
    <member kind="function">
      <type>::Cairo::RefPtr&lt; ::Cairo::Surface &gt;</type>
      <name>load_surface</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a587cc4e0f1640166ef7b8705a2a55967</anchor>
      <arglist>(const Glib::ustring &amp;icon_name, int size, int scale, const Glib::RefPtr&lt; Gdk::Window &gt; &amp;for_window, IconLookupFlags flags=(IconLookupFlags) 0)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>list_icons</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>ae1811445f31727325fc27d255091fd83</anchor>
      <arglist>(const Glib::ustring &amp;context) const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>list_icons</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>ac348dfde39ecdefe5ae9bc9bae02f899</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>list_contexts</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>aee7c587ec0be0be691ebae2587d30041</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_example_icon_name</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>aa2a1cca16c9b048e5b023d2212579d1a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rescan_if_needed</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a5cb5c0e2c62d565995a4142ca93b65ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_changed</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a9e1e154def406ee4e9f0f8eb795e48cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>aad115f8c1359ecd1d6e7bd9bed70d91c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; IconTheme &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>ab5e19724cb84f116235ca256194d49df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; IconTheme &gt;</type>
      <name>get_default</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a3afdba1b52bd99e26cffae6bdc7746f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; IconTheme &gt;</type>
      <name>get_for_screen</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>ae345ef63d7ae954bfc290fb9ed708bbd</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Screen &gt; &amp;screen)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_builtin_icon</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>aec6f8962cf59343dbc30e1ba40bc5e72</anchor>
      <arglist>(const Glib::ustring &amp;icon_name, int size, const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;pixbuf)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>IconTheme</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a657508c71596013f27b6a7e71225d153</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_changed</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>ae19dff5d94f1e1f05c005c254a547e38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::IconTheme &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1IconTheme.html</anchorfile>
      <anchor>a54a6116e8b997b4e1f7489f6dd72dc29</anchor>
      <arglist>(GtkIconTheme *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::IconThemeError</name>
    <filename>classGtk_1_1IconThemeError.html</filename>
    <base>Glib::Error</base>
    <member kind="enumeration">
      <type></type>
      <name>Code</name>
      <anchorfile>classGtk_1_1IconThemeError.html</anchorfile>
      <anchor>a7e057ef08889ee57005ca7b12436d0bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_THEME_NOT_FOUND</name>
      <anchorfile>classGtk_1_1IconThemeError.html</anchorfile>
      <anchor>a7e057ef08889ee57005ca7b12436d0bbae947affffbf93fd295dbc4ce03decec4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_THEME_FAILED</name>
      <anchorfile>classGtk_1_1IconThemeError.html</anchorfile>
      <anchor>a7e057ef08889ee57005ca7b12436d0bbabccacb9bb6315de1cd0df41e80bfdc2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_THEME_NOT_FOUND</name>
      <anchorfile>classGtk_1_1IconThemeError.html</anchorfile>
      <anchor>a7e057ef08889ee57005ca7b12436d0bbae947affffbf93fd295dbc4ce03decec4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_THEME_FAILED</name>
      <anchorfile>classGtk_1_1IconThemeError.html</anchorfile>
      <anchor>a7e057ef08889ee57005ca7b12436d0bbabccacb9bb6315de1cd0df41e80bfdc2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IconThemeError</name>
      <anchorfile>classGtk_1_1IconThemeError.html</anchorfile>
      <anchor>ac3a9ae2c48631e8a5bf59cbc98ce8f80</anchor>
      <arglist>(Code error_code, const Glib::ustring &amp;error_message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IconThemeError</name>
      <anchorfile>classGtk_1_1IconThemeError.html</anchorfile>
      <anchor>aa297b34b950da1e921471e96ff91fe2a</anchor>
      <arglist>(GError *gobject)</arglist>
    </member>
    <member kind="function">
      <type>Code</type>
      <name>code</name>
      <anchorfile>classGtk_1_1IconThemeError.html</anchorfile>
      <anchor>aac25f042d743999c3cc1e6e12359cd16</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::IconView</name>
    <filename>classGtk_1_1IconView.html</filename>
    <base>Gtk::Container</base>
    <base>Gtk::CellLayout</base>
    <base>Gtk::Scrollable</base>
    <member kind="typedef">
      <type>sigc::slot&lt; void, const TreeModel::Path &amp; &gt;</type>
      <name>SlotForeach</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>aaacc93021922102f8b09f660e0c451d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IconView</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>aed25e42550a005dd92c0d765f1881043</anchor>
      <arglist>(IconView &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>IconView &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a9b113fe08cc1687142afab1de4f3745e</anchor>
      <arglist>(IconView &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IconView</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a66783789c6e8cb55eb804f162d033bfb</anchor>
      <arglist>(const IconView &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>IconView &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ad245c7e75ed66ab30d103b52a9f429b4</anchor>
      <arglist>(const IconView &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~IconView</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>abeffd2b0477f8c56f3270296d07b6111</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkIconView *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>abf13f9ea6448598b9b3c23a3c928e27c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkIconView *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a3c22b2c1e7a8b746d91bb8adef38f4c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IconView</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>af3f802fc8cad169d87cd37818599ae78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IconView</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>abfc8b6e3a07120e8a319d5ec1a47fb43</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IconView</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ae079e4b81d6b3957f1928fae98441784</anchor>
      <arglist>(const Glib::RefPtr&lt; CellArea &gt; &amp;cell_area)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_model</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ac9889a4e1793bd4385fde40308bc1f5b</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a36aff875a9378724b885dace4d2f5b0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a738ee406d96d1ad31fc69ffb38e8a468</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_model</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>acc01800ad2db011e8e081c89aacaa57d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_text_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a2b35d76fe8f61708be01374a9986bbbb</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_text_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a6135d09d914655b1f66cd485b4aa8c2a</anchor>
      <arglist>(const TreeModelColumnBase &amp;model_column)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_text_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a1d03144ae3397e569ac93d87dfba3b6a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_markup_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>add46c5563233cb57e48d12de7d1b12d7</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_markup_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a460d0def66230e89831894203167fb7f</anchor>
      <arglist>(const TreeModelColumnBase &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_markup_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a53c016149e7dd73a6a283a67f167a2a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_pixbuf_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a7f0cac207abbdc3152544259d366868d</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_pixbuf_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a1582732740fed65ba414944f96510274</anchor>
      <arglist>(const TreeModelColumnBase &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_pixbuf_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a85ddb276495a22b9b906da13e99e2315</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_item_orientation</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ab1ceae06cf80d524b475c2144d5ea9d2</anchor>
      <arglist>(Orientation orientation)</arglist>
    </member>
    <member kind="function">
      <type>Orientation</type>
      <name>get_item_orientation</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>aab8eb2e02dd95ae57ff09fc5131e59cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_columns</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a5292b7e7eea0562787d2325ec5efb0b8</anchor>
      <arglist>(int columns)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_columns</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>aabd469e7129edd65dfc43bc7b027caab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_item_width</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>adf0edb366cb11253f32ee873a70dc4f4</anchor>
      <arglist>(int item_width)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_icon_width</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a080b3ee1163bec62c3d25aea7be3efb0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_spacing</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a7c3fd37fd767cb408684dc44fc8e0e26</anchor>
      <arglist>(int spacing)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_spacing</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a10c0daf811b67a792a8f9b9e5ee32b6c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_row_spacing</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>af1dc3f45faf5c80532cc2499abf1f3e5</anchor>
      <arglist>(int row_spacing)</arglist>
    </member>
    <member kind="function">
      <type>gint</type>
      <name>get_row_spacing</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ab1dfd8114d3c6448ca7e69f11e118de0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_column_spacing</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a981304eb60ff6d6486f84acf9a8f66a1</anchor>
      <arglist>(int column_spacing)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_column_spacing</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ad7a295ff4bb95b503f004db335708cb9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_margin</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a16b711d34f9154581a72bd035eb9f29b</anchor>
      <arglist>(int margin)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_margin</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a44bdc06c689ae550aaed62654f01b9b6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_item_padding</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ac67ebe39e99af6d64454cd91d242486d</anchor>
      <arglist>(int item_padding)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_item_padding</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a240bdcaf8c526b4600e137547148f1fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TreeModel::Path</type>
      <name>get_path_at_pos</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a6fbbedce4ddffb83a1b0e40029fe399d</anchor>
      <arglist>(int x, int y) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_item_at_pos</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>aa0a7fd36f1514245330ed8211b51011e</anchor>
      <arglist>(int x, int y, TreeModel::Path &amp;path, CellRenderer *&amp;cell) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_item_at_pos</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>af9ca0039f6e623e77d84ee012e95885b</anchor>
      <arglist>(int x, int y, TreeModel::Path &amp;path) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_item_at_pos</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a96fe17113e70031b5d22f2b96ced017e</anchor>
      <arglist>(int x, int y, CellRenderer *&amp;cell) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_visible_range</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a6a7f81016102288e7a0bd3f1de26327b</anchor>
      <arglist>(TreeModel::Path &amp;start_path, TreeModel::Path &amp;end_path) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_activate_on_single_click</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>aee0728244ce8f71bd6215190836f11f4</anchor>
      <arglist>(bool single=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_activate_on_single_click</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a08d9aadf943a89e596b742dfd10bb95b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selected_foreach</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ace84f4d56dba6533dd9a4b98ffa7c5d4</anchor>
      <arglist>(const SlotForeach &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_selection_mode</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a40425b9b664567d59b098233a410c5e4</anchor>
      <arglist>(SelectionMode mode)</arglist>
    </member>
    <member kind="function">
      <type>SelectionMode</type>
      <name>get_selection_mode</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a992aa1c647d823bcf2cac441ad019ebf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select_path</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a4bc2d887359ba85d2a60393401eeaaeb</anchor>
      <arglist>(const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unselect_path</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a14e208570cd383386cf6d60d2cc43884</anchor>
      <arglist>(const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>path_is_selected</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a5aab9abf6b2953f4de1e8d6b8c3c2839</anchor>
      <arglist>(const TreeModel::Path &amp;path) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_item_row</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>af4bb37f3dcf9eb47fba810aae6c0b8fb</anchor>
      <arglist>(const TreeModel::Path &amp;path) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_item_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a183a54b642c547c92d119353be96d5f3</anchor>
      <arglist>(const TreeModel::Path &amp;path) const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; TreePath &gt;</type>
      <name>get_selected_items</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>af41539950b8f1513f31656fc0681ff9e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select_all</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a0336dd34d42cb519ab91112dd4c8a413</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unselect_all</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a69dfccc5ac206af4c803c3c4a04c1c46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>item_activated</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ad81f97dec44cea304cda9db81f79fc04</anchor>
      <arglist>(const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_cursor</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ab12050929b15211835f637d38a8c1ed5</anchor>
      <arglist>(const TreeModel::Path &amp;path, CellRenderer &amp;cell, bool start_editing)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_cursor</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>af55d7e7a63fba784160613a586ebdd2d</anchor>
      <arglist>(const TreeModel::Path &amp;path, bool start_editing)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_cursor</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a5704a1c6b60cd89814147c6bed072e87</anchor>
      <arglist>(TreeModel::Path &amp;path, CellRenderer *&amp;cell) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_cursor</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a1e3df912f43288de71bf75f74d6da174</anchor>
      <arglist>(TreeModel::Path &amp;path) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_cursor</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ae606dedf70bb8ca316d98e8f098abe51</anchor>
      <arglist>(CellRenderer *&amp;cell) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scroll_to_path</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a403368dc0d4d2ed11be691beca24c134</anchor>
      <arglist>(const TreeModel::Path &amp;path, bool use_align, gfloat row_align, gfloat col_align)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable_model_drag_source</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>aeec3b5dbe4e3b7d61859e80903fec769</anchor>
      <arglist>(const std::vector&lt; TargetEntry &gt; &amp;targets, Gdk::ModifierType start_button_mask=Gdk::MODIFIER_MASK, Gdk::DragAction actions=Gdk::ACTION_COPY|Gdk::ACTION_MOVE)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable_model_drag_dest</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a066e3992186a80dd1b7e45d797604a92</anchor>
      <arglist>(const std::vector&lt; TargetEntry &gt; &amp;targets, Gdk::DragAction actions=Gdk::ACTION_COPY|Gdk::ACTION_MOVE)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_model_drag_source</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a4d72e8aa56d0c81238408d8066d46d74</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_model_drag_dest</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ae5f147b113285bcf82df07a28292157a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_reorderable</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a04fe09dc32d974e38d679b1435c6f498</anchor>
      <arglist>(bool reorderable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_reorderable</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a1c40425b11f348e8f4194d09d4513fc7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_drag_dest_item</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a3e6b92d6a92d633e9bf927ac31259ef4</anchor>
      <arglist>(const TreeModel::Path &amp;path, IconViewDropPosition pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_drag_dest_item</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>aea078f1903eada867be4cce03254a6af</anchor>
      <arglist>(TreeModel::Path &amp;path, IconViewDropPosition &amp;pos) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_drag_dest_item</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ad5fb3a59a7ee464232fbc88b3e622bd4</anchor>
      <arglist>(TreeModel::Path &amp;path) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_drag_dest_item</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a4ae86da5d479b2f6da9aa826023da513</anchor>
      <arglist>(IconViewDropPosition &amp;pos) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_dest_item_at_pos</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a9a2bb3a6b161b5f0e233624840a0c36a</anchor>
      <arglist>(int drag_x, int drag_y, TreeModel::Path &amp;path, IconViewDropPosition &amp;pos) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_dest_item_at_pos</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a609769609d6b697fc0004c65da9afc1d</anchor>
      <arglist>(int drag_x, int drag_y, TreeModel::Path &amp;path) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_dest_item_at_pos</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ac0b9b6700252ad0ccdbc509fa7f5d1e5</anchor>
      <arglist>(int drag_x, int drag_y, IconViewDropPosition &amp;pos) const </arglist>
    </member>
    <member kind="function">
      <type>Cairo::RefPtr&lt; Cairo::Surface &gt;</type>
      <name>create_drag_icon</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>acbe51a34abd98b9f04d53fe3dec08ce4</anchor>
      <arglist>(const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convert_widget_to_bin_window_coords</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a0bdc31caba6f88c72c1ef4c8c624e1e6</anchor>
      <arglist>(int wx, int wy, int &amp;bx, int &amp;by) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_cell_rect</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a86c1abd8989c207236af2fe4146b25dc</anchor>
      <arglist>(const TreeModel::Path &amp;path, const CellRenderer &amp;cell, Gdk::Rectangle &amp;rect) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_cell_rect</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>aecd50191dc9a13e415c33bd1966f880f</anchor>
      <arglist>(const TreeModel::Path &amp;path, Gdk::Rectangle &amp;rect) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tooltip_item</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a50ff0eaea7c81e90fac465d18fa24c14</anchor>
      <arglist>(const Glib::RefPtr&lt; Tooltip &gt; &amp;tooltip, const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tooltip_cell</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a0f7234c1b2b194097dd93fd2fa8961bd</anchor>
      <arglist>(const Glib::RefPtr&lt; Tooltip &gt; &amp;tooltip, const TreeModel::Path &amp;path, CellRenderer &amp;cell)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tooltip_cell</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ac35129fb16b99aa5e14b6b9333b9fda8</anchor>
      <arglist>(const Glib::RefPtr&lt; Tooltip &gt; &amp;tooltip, const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_tooltip_context_path</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a55c4d84f01c588049a62f29ba259844f</anchor>
      <arglist>(int &amp;x, int &amp;y, bool keyboard_tip, TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_tooltip_context_iter</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>aa4e21e04e9ba9dc341da86b03ed5eeda</anchor>
      <arglist>(int &amp;x, int &amp;y, bool keyboard_tip, Gtk::TreeModel::iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tooltip_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a0e81a913a4f9bde2bdf38d802eee2e37</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_tooltip_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a0663f568a0c58ffb01c67e55d50fe181</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const TreeModel::Path &amp; &gt;</type>
      <name>signal_item_activated</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a3ea39b028e9d2829d2e492f3940b30f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_selection_changed</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ae251d7415076cfa438b82e314a666462</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_pixbuf_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a0528c6977a711c7510d0d7ba286cd518</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_pixbuf_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a82b07e5ae9606ebedff39e143eb1dc4b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_text_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a52799c9ddb0c65553ce3d6832508cff0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_text_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a15219eaab9cf21a35cb978fab36fe4ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_markup_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a6582c39b86873da73d793c84cb12793b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_markup_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a16900d114abf4998b62a04b6c9191424</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; SelectionMode &gt;</type>
      <name>property_selection_mode</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a7195e0aad9ab573b92a26f8066fabacb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; SelectionMode &gt;</type>
      <name>property_selection_mode</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>aa8e763b1013cee48f3d36deb9910b837</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Orientation &gt;</type>
      <name>property_item_orientation</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a740a55f8ca530ae1e3304e13fb6f7e6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Orientation &gt;</type>
      <name>property_item_orientation</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a6ae063e9f43894b5627fa05ce3bcc8ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; TreeModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a7dd8b23f10b18ad4055dec3ae39c1bd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; TreeModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a89780ab6a428af411c96703eab4ec72b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_columns</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a5bee8433e771074026aca775ed052b76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_columns</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a3c5b188fd623598611b96963a69d3821</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_item_width</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ab32c1fc41e66c70111fc1b999b066b7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_item_width</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>aa58dcb714a1e181638e868218cf19673</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_spacing</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a939b053506544ab2ca9e324ec0913513</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_spacing</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>abaad48fd5b048d3a22badd694c71318f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_row_spacing</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>aa6b4a19666b272ea0acd7c1eecc943f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_row_spacing</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>af36bdcc26beaab419dacba7bd15ea760</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_column_spacing</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a345e0be9d9571374aee59a737ab9d9ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_column_spacing</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a147c968fed46b38f922b8d0337255319</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_margin</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a0a1fed36a49e8d71b6de1aa9e0cdf8c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_margin</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ab1cc378f44d6a02940c83a79dd28e43d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_reorderable</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a941d7a174153250101a09008bda26eec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_reorderable</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>add9025c65e6bd11a3b89beba113a5f61</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_tooltip_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ae6c64267e1570cca8aac2f6b1b64eab1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_tooltip_column</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a7bcfbef6c6fd5b12bbd99b90ede0d639</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_item_padding</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ac4037eb2cdb09a5f4fd68157fe630309</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_item_padding</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>afa5515fdda24e47eb0f4cc95a1c9d5df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; CellArea &gt; &gt;</type>
      <name>property_cell_area</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ac86233f7447b6a1a2c5536928f1592cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_activate_on_single_click</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a5bcc2bbb8269cf8ce76659d8339cc591</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_activate_on_single_click</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a41a467f3073e2b8faa7c6a5975afcc3a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>ab84fe6e534a1d5ac7620776672e57245</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_item_activated</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>af4d4f6763d64392ca98f2758959f07fd</anchor>
      <arglist>(const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_selection_changed</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>a5b85044721792a6802c953598fa1ea9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::IconView *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1IconView.html</anchorfile>
      <anchor>acc54e1962ae23ab64bf25b153e61153f</anchor>
      <arglist>(GtkIconView *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Image</name>
    <filename>classGtk_1_1Image.html</filename>
    <base>Gtk::Misc</base>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a9587ba1655e14d2b0b4bd27b1dd03049</anchor>
      <arglist>(Image &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Image &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a970e13b3ac854474f64c1a6fc7ddb73a</anchor>
      <arglist>(Image &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a27b21800ee6ad8b3d1dbdf5f4b50fc6b</anchor>
      <arglist>(const Image &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Image &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a071b04b8db27682ca6208268bacb309b</anchor>
      <arglist>(const Image &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Image</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a5ec7523f4bb02268bc93f1b6c8b1db0c</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkImage *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a4bfed69cb1f978b1f03e8e91fe1da537</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkImage *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a63a86a9b0a8a37161cef7971b21e9ac6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a4de2d6e334d5ac01c3e80dc8382f14b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>ac0d647bcefc9286598349b5aa318b3d3</anchor>
      <arglist>(const std::string &amp;file)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a415bb5931fddba12830369bec91de154</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;pixbuf)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a4ad061304523827b7249d76827444914</anchor>
      <arglist>(const Gtk::StockID &amp;stock_id, IconSize size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a70f068ffb7ed24769e7d523edd2ac51b</anchor>
      <arglist>(const Glib::RefPtr&lt; IconSet &gt; &amp;icon_set, IconSize size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a8f0352b9c60095bd5807dcaa2dc97518</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::PixbufAnimation &gt; &amp;animation)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>afeddd6b6e212f38e612fac54cb413719</anchor>
      <arglist>(const Glib::ustring &amp;icon_name, IconSize icon_size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a88c233c48368196dbb57b3ce72a47b3c</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::Icon &gt; &amp;gicon, IconSize icon_size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Image</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a1a50cc1c14bbc5f9c8939f2c0226204c</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Surface &gt; &amp;surface)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>aac6da118aed4ade08b2a4556bf8ee508</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_from_resource</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>ad74f3e502b27c23502af949580dd3a27</anchor>
      <arglist>(const std::string &amp;resource_path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a5e1e3f5fd06aece9e706b2fba90a7a8e</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;pixbuf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>aaced75ef61cf12f37ab43e4718c0435f</anchor>
      <arglist>(const Gtk::StockID &amp;stock_id, IconSize size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>ad71aba6919e731df1d76df1ee7d40a0e</anchor>
      <arglist>(const Glib::RefPtr&lt; IconSet &gt; &amp;icon_set, IconSize size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a6e23d4abdfeda25211c8992b32dff494</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::PixbufAnimation &gt; &amp;animation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a6420311c6012c9515ef3071387499f1f</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gio::Icon &gt; &amp;icon, IconSize size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>aeca4824832a606809b8020cb776ecf85</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Surface &gt; &amp;surface)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_from_icon_name</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a69bb4a5ee7299f6b373edc95989bf4f4</anchor>
      <arglist>(const Glib::ustring &amp;icon_name, IconSize size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>aa9296aadfa716fc8ef75bfd11a25347c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ImageType</type>
      <name>get_storage_type</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a5354f06dd2a63de92e317cd1a4fab565</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>get_pixbuf</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>ad4e3b782ceebdc884a50dd93ed4c3e2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Pixbuf &gt;</type>
      <name>get_pixbuf</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a5ab3598e1685573bd18827a2bfffe789</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_stock</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a999d769547f0600d5f04da9e37fd01f7</anchor>
      <arglist>(Gtk::StockID &amp;stock_id, IconSize &amp;size) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_icon_set</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a67b35af8e7106eabfc19dd3b5b511bf9</anchor>
      <arglist>(Glib::RefPtr&lt; IconSet &gt; &amp;icon_set, IconSize &amp;size) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::PixbufAnimation &gt;</type>
      <name>get_animation</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a9593999a48fbe856b1f635f060bea461</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::PixbufAnimation &gt;</type>
      <name>get_animation</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a690aad89556259e94fe0593f0aeb63b6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::Icon &gt;</type>
      <name>get_gicon</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>abb95deb61d4236d930dbf55e094a3ffc</anchor>
      <arglist>(Gtk::IconSize &amp;icon_size)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::Icon &gt;</type>
      <name>get_gicon</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a2b4d68d1bca7b53b136627e561050bb7</anchor>
      <arglist>(Gtk::IconSize &amp;icon_size) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_icon_name</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>adcb5ef5f84a2f3a190ebfe480d95ac3a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_icon_name</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a5abe9a8db1132a22a3dec904bcf70dcf</anchor>
      <arglist>(IconSize &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_pixel_size</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>ade2c1490c03b41087a22ace7e7efc3a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_pixel_size</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a322eff14d34aa750340fdf89e6bf9bb5</anchor>
      <arglist>(int pixel_size)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gdk::Pixbuf &gt; &gt;</type>
      <name>property_pixbuf</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a103ba389637345835faedfccc9737ce6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::Pixbuf &gt; &gt;</type>
      <name>property_pixbuf</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>ab15b1e7774ab5de436eabbc4097596dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_file</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a1b140df0e81c0411a1a3800618599a5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_file</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a392f638c31c86f94916add6b52aba46b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_stock</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a31186fd4e566362745f9613d11e3bec7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_stock</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>aa87bec1e236d658d2f83c46799ec1603</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; IconSet &gt; &gt;</type>
      <name>property_icon_set</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a806f80cd89f3d0ff02fb54b55552a3bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; IconSet &gt; &gt;</type>
      <name>property_icon_set</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a3c16c10092bea9ce511f81c1852f7b34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_icon_size</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a5002a269e91fb3214a58e37925438afe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_icon_size</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>af53df910f6784065e7fdc13b3ea7e1dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_pixel_size</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a7b7c799da8f427ae0da8570367c9ece6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_pixel_size</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a015da5d4fac773ebc2a4b059997b48e1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gdk::PixbufAnimation &gt; &gt;</type>
      <name>property_pixbuf_animation</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a131c203eb3ea881903698bcd576967cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::PixbufAnimation &gt; &gt;</type>
      <name>property_pixbuf_animation</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a17e7f6576b22a614c72471bac76583e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_icon_name</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a7e2761e8d222783a9d630c8e780907c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_icon_name</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a609e0800bf6d3451c2e0dc5f30f0c4c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; ImageType &gt;</type>
      <name>property_storage_type</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a8b26ae4a8effec11e593006dd2177e4f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::Icon &gt; &gt;</type>
      <name>property_gicon</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a88a2d059742b431593fbd6d1fb0e8785</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::Icon &gt; &gt;</type>
      <name>property_gicon</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>acc75b0ebd0cf740765f7565e48f648b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_fallback</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a673809de2da16ea477251182921bd941</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_fallback</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a00b720b2e5e18dadeec401aac91a2d2a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; std::string &gt;</type>
      <name>property_resource</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a85a7d3a70dd225b17fff70da31185e0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; std::string &gt;</type>
      <name>property_resource</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a5493fe324387b4bfebefd500b9f3b947</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; ::Cairo::RefPtr&lt; ::Cairo::Surface &gt; &gt;</type>
      <name>property_surface</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>af216e23cb18f4b3bf690ebb817450780</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; ::Cairo::RefPtr&lt; ::Cairo::Surface &gt; &gt;</type>
      <name>property_surface</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a383bb8dc8b7a3554d7116332f2ff8c54</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>accc6e3ecff25f05e09b877b71c53a871</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Image *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Image.html</anchorfile>
      <anchor>a5d21ea1d0ef6fade2eba585171a83c61</anchor>
      <arglist>(GtkImage *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ImageMenuItem</name>
    <filename>classGtk_1_1ImageMenuItem.html</filename>
    <base>Gtk::MenuItem</base>
    <member kind="function">
      <type></type>
      <name>ImageMenuItem</name>
      <anchorfile>classGtk_1_1ImageMenuItem.html</anchorfile>
      <anchor>aa2e699b5cfaaba17ded73d6b366d2722</anchor>
      <arglist>(ImageMenuItem &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ImageMenuItem &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ImageMenuItem.html</anchorfile>
      <anchor>a17e8d7aa6106e0130d9f3e6f8805d67d</anchor>
      <arglist>(ImageMenuItem &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageMenuItem</name>
      <anchorfile>classGtk_1_1ImageMenuItem.html</anchorfile>
      <anchor>ac0a95cc20c1e6fae23c17b4e253a9fc1</anchor>
      <arglist>(const ImageMenuItem &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ImageMenuItem &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ImageMenuItem.html</anchorfile>
      <anchor>a1bfd10e7d1332f0e9c7962e77dd2a0ea</anchor>
      <arglist>(const ImageMenuItem &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ImageMenuItem</name>
      <anchorfile>classGtk_1_1ImageMenuItem.html</anchorfile>
      <anchor>a7c5be2617e5bbb4ae7f3420fb5471522</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkImageMenuItem *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ImageMenuItem.html</anchorfile>
      <anchor>aace048e4175f654d494a552f68ec44aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkImageMenuItem *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ImageMenuItem.html</anchorfile>
      <anchor>ab65068dfe8a44c60fcbe23114cd4b1e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageMenuItem</name>
      <anchorfile>classGtk_1_1ImageMenuItem.html</anchorfile>
      <anchor>a3d173019b9219089ba54366de8ff10cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageMenuItem</name>
      <anchorfile>classGtk_1_1ImageMenuItem.html</anchorfile>
      <anchor>a84b714d3ec222ecf37daa4e12afe80c4</anchor>
      <arglist>(Widget &amp;image, const Glib::ustring &amp;label, bool mnemonic=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageMenuItem</name>
      <anchorfile>classGtk_1_1ImageMenuItem.html</anchorfile>
      <anchor>a12d35d7e9424e1ae8453aa3c0763e2fe</anchor>
      <arglist>(const Glib::ustring &amp;label, bool mnemonic=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageMenuItem</name>
      <anchorfile>classGtk_1_1ImageMenuItem.html</anchorfile>
      <anchor>ac2723ab808199e0548ea2eb243d67cbf</anchor>
      <arglist>(const StockID &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_always_show_image</name>
      <anchorfile>classGtk_1_1ImageMenuItem.html</anchorfile>
      <anchor>a3ca4cf816ce9912f82b138d6ea2057f5</anchor>
      <arglist>(bool always_show=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_always_show_image</name>
      <anchorfile>classGtk_1_1ImageMenuItem.html</anchorfile>
      <anchor>aac27d2f9d8efb2f79301a01dfc66f77d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_image</name>
      <anchorfile>classGtk_1_1ImageMenuItem.html</anchorfile>
      <anchor>a2383bdfc0a5db17de9495290ad372c90</anchor>
      <arglist>(Widget &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_image</name>
      <anchorfile>classGtk_1_1ImageMenuItem.html</anchorfile>
      <anchor>af10e7a6aa352b30ddab8937dcc3e44da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_image</name>
      <anchorfile>classGtk_1_1ImageMenuItem.html</anchorfile>
      <anchor>a29bffe1484746dddf146ca76f88990dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_stock</name>
      <anchorfile>classGtk_1_1ImageMenuItem.html</anchorfile>
      <anchor>a2271fc9d88fe6deaa01cb21d6cd13a41</anchor>
      <arglist>(bool use_stock=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_use_stock</name>
      <anchorfile>classGtk_1_1ImageMenuItem.html</anchorfile>
      <anchor>acac89d5bc3b7e4c6b04acf99693153a4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_accel_group</name>
      <anchorfile>classGtk_1_1ImageMenuItem.html</anchorfile>
      <anchor>a8d9a9b51f4f54954c944fff2ba02d9e6</anchor>
      <arglist>(const Glib::RefPtr&lt; AccelGroup &gt; &amp;accel_group)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_image</name>
      <anchorfile>classGtk_1_1ImageMenuItem.html</anchorfile>
      <anchor>af540b233e992f27603bcafd1fb7878c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_image</name>
      <anchorfile>classGtk_1_1ImageMenuItem.html</anchorfile>
      <anchor>a655f5fecd67d88aed9325acf1931a358</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_stock</name>
      <anchorfile>classGtk_1_1ImageMenuItem.html</anchorfile>
      <anchor>ab279c626a1ce2e3bebecef1cff38a73e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_stock</name>
      <anchorfile>classGtk_1_1ImageMenuItem.html</anchorfile>
      <anchor>a54d09b61ea0c16094ad25126be0031d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_WriteOnly&lt; Glib::RefPtr&lt; AccelGroup &gt; &gt;</type>
      <name>property_accel_group</name>
      <anchorfile>classGtk_1_1ImageMenuItem.html</anchorfile>
      <anchor>ae1cb8095c5ebe8324cc75e12582567af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_always_show_image</name>
      <anchorfile>classGtk_1_1ImageMenuItem.html</anchorfile>
      <anchor>a04936531fde086dcaaa6804f0b2b1de7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_always_show_image</name>
      <anchorfile>classGtk_1_1ImageMenuItem.html</anchorfile>
      <anchor>a4e5650143143948dbd5cf28a2e8969e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ImageMenuItem.html</anchorfile>
      <anchor>a44fd91108677b408e463687c1e7929c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ImageMenuItem *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ImageMenuItem.html</anchorfile>
      <anchor>a536a8665561ced9a4ecb27f127ca4036</anchor>
      <arglist>(GtkImageMenuItem *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::InfoBar</name>
    <filename>classGtk_1_1InfoBar.html</filename>
    <base>Gtk::HBox</base>
    <member kind="function">
      <type></type>
      <name>InfoBar</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a0de1205097e970455a65b2a17d0c3c0f</anchor>
      <arglist>(InfoBar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>InfoBar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>ad256c2a4556a304176b3a24b95a9cb02</anchor>
      <arglist>(InfoBar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InfoBar</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a0c4008579ec4e85ffea03ff657433d00</anchor>
      <arglist>(const InfoBar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>InfoBar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a1daff9d96ab1a4e62d9467d26ec0aa2a</anchor>
      <arglist>(const InfoBar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~InfoBar</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a3ab95760cdddd9dae98b1ae07ec08da1</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkInfoBar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a64d9affd6ae0c2db8176799e7f537c73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkInfoBar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a2eae151f9555eb6dd7b6d2cfe68527bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InfoBar</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>ae6d3b9ebcba99c59342d7e503e18bdf3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_action_area</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>afddb70300bb21fd9d985f1014be66a69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_action_area</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>adf98101fc79b5d671a0aa26ba63d4a62</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_content_area</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>aacd09015a4f4a2f96e4adc42da88c02f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_content_area</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a0239b620ff0b78230cbc27667fa8d8be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_action_widget</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a91b61b0b09d281e916a144d1967f2118</anchor>
      <arglist>(Widget &amp;child, int response_id)</arglist>
    </member>
    <member kind="function">
      <type>Button *</type>
      <name>add_button</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a03b9a985be0b8e56e529c8559ba95c7f</anchor>
      <arglist>(const Glib::ustring &amp;button_text, int response_id)</arglist>
    </member>
    <member kind="function">
      <type>Button *</type>
      <name>add_button</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a9cbc253d36236449628ee3270cb8728c</anchor>
      <arglist>(const Gtk::StockID &amp;stock_id, int response_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_response_sensitive</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a4268bfa2cc6998a1b103b5ab0eb7cf0a</anchor>
      <arglist>(int response_id, bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_default_response</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a8f1e615b675b31f01b07172f6ad7dc52</anchor>
      <arglist>(int response_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>response</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a291d5ee1d3476de76306df6d2c48d78d</anchor>
      <arglist>(int response_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_message_type</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a118aee05364b0c0f4ee50f5fd8f9d304</anchor>
      <arglist>(MessageType message_type)</arglist>
    </member>
    <member kind="function">
      <type>MessageType</type>
      <name>get_message_type</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>ad4983833fe92d98fa9eac7438ea48661</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_close_button</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>ae580cd847a10545e78ec187c764bbe9e</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_close_button</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>ac182bab61ca262ecbaae98d68323640a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, int &gt;</type>
      <name>signal_response</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a3df481d3b3a9bba29dabee494f2dba5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; MessageType &gt;</type>
      <name>property_message_type</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a88ff014ff5ef7fb93f489e51bdc7ea22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; MessageType &gt;</type>
      <name>property_message_type</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>ac1f8a867a315eaab1a69d01631a7df9e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_close_button</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a132dc52f3972e654eb9965c410d0398b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_close_button</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>ac08a2ed88f803e02d75b2f105c04c460</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>aa63ab295b237830baa3ee2ce3908d80f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_response</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>aec677447b9fce30e6f154d631770b016</anchor>
      <arglist>(int response_id)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::InfoBar *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1InfoBar.html</anchorfile>
      <anchor>a4a1c7856c1c8b30910df3495787c5876</anchor>
      <arglist>(GtkInfoBar *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Invisible</name>
    <filename>classGtk_1_1Invisible.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>Invisible</name>
      <anchorfile>classGtk_1_1Invisible.html</anchorfile>
      <anchor>a91f072f65af9b407851e57c57b55f9ef</anchor>
      <arglist>(Invisible &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Invisible &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Invisible.html</anchorfile>
      <anchor>a299ff11185659fea23426dece6833c92</anchor>
      <arglist>(Invisible &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Invisible</name>
      <anchorfile>classGtk_1_1Invisible.html</anchorfile>
      <anchor>a49b96a94e66c7d481525d32a346e299f</anchor>
      <arglist>(const Invisible &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Invisible &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Invisible.html</anchorfile>
      <anchor>aa5525a32e70de5d06190e70b6e4e2a8e</anchor>
      <arglist>(const Invisible &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Invisible</name>
      <anchorfile>classGtk_1_1Invisible.html</anchorfile>
      <anchor>aef534c14ffef56fb4314d77c9d2cf30e</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkInvisible *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Invisible.html</anchorfile>
      <anchor>a3a317a37607a05f7009835b21e0e64b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkInvisible *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Invisible.html</anchorfile>
      <anchor>a9252a523b4b01a574057e500bff41fab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Invisible</name>
      <anchorfile>classGtk_1_1Invisible.html</anchorfile>
      <anchor>a923c24cee19db18b07126f7a27190fe7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Invisible</name>
      <anchorfile>classGtk_1_1Invisible.html</anchorfile>
      <anchor>a46cbc7aeadac48dea8465024e85b1365</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Screen &gt; &amp;screen)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Screen &gt;</type>
      <name>get_screen</name>
      <anchorfile>classGtk_1_1Invisible.html</anchorfile>
      <anchor>a0ed8f9b9dd48b61bb82e3a4059a28b09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Screen &gt;</type>
      <name>get_screen</name>
      <anchorfile>classGtk_1_1Invisible.html</anchorfile>
      <anchor>ae7737c67168ca0797cd52625c169aae0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_screen</name>
      <anchorfile>classGtk_1_1Invisible.html</anchorfile>
      <anchor>a628c3cd3efc2ff60bdba1ca6493aaf32</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Screen &gt; &amp;screen)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gdk::Screen &gt; &gt;</type>
      <name>property_screen</name>
      <anchorfile>classGtk_1_1Invisible.html</anchorfile>
      <anchor>a56e0dda9a4e59f6e7e329b685181ed59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::Screen &gt; &gt;</type>
      <name>property_screen</name>
      <anchorfile>classGtk_1_1Invisible.html</anchorfile>
      <anchor>a81aedfaa23631129df1e2b5bda26f27d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Invisible.html</anchorfile>
      <anchor>af28fd2d7a945d5e7508a7bcc340ade03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Invisible *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Invisible.html</anchorfile>
      <anchor>a1db44cf4521240dc5e1f2c56992720ec</anchor>
      <arglist>(GtkInvisible *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Label</name>
    <filename>classGtk_1_1Label.html</filename>
    <base>Gtk::Misc</base>
    <member kind="function">
      <type></type>
      <name>Label</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a52a4e9e17b24a388e5a8087fdd482dab</anchor>
      <arglist>(Label &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Label &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a86299a7dbcaf2ca9049454f687d9d580</anchor>
      <arglist>(Label &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Label</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>aea63f245783507aab7e16be932b3b388</anchor>
      <arglist>(const Label &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Label &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>afce380b101786bf5462bc925636a2d97</anchor>
      <arglist>(const Label &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Label</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a5efcc21dbca4d2f267e45974114df601</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkLabel *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>aa1a2f020caac2692098a97dc6828a23c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkLabel *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a29a59147ccef87f9213821dab85bbf10</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Label</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>ae9e3c17df3dbce1e185c1d45082b23f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Label</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a7d1d3a153e0952618a18b716352a2c14</anchor>
      <arglist>(const Glib::ustring &amp;label, bool mnemonic=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Label</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>af7e66c7666583d4afb324d92b6fee565</anchor>
      <arglist>(const Glib::ustring &amp;label, float xalign, float yalign, bool mnemonic=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Label</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>acec54e1c944d3b9734761d9445b52f6b</anchor>
      <arglist>(const Glib::ustring &amp;label, Align halign, Align valign=ALIGN_CENTER, bool mnemonic=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_text</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a2284e390d01964332ff421c965a6e49f</anchor>
      <arglist>(const Glib::ustring &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_text</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>ac9454a1455fd6c6a3ae8d9315076fd6a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_attributes</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a79b1642f8314e17babcc2808e74315b1</anchor>
      <arglist>(Pango::AttrList &amp;attrs)</arglist>
    </member>
    <member kind="function">
      <type>Pango::AttrList</type>
      <name>get_attributes</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a46eb8eb7e90c27d2ec7ed79797951bc8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_label</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a14bb0bfebb8711444cc824bff66dcd27</anchor>
      <arglist>(const Glib::ustring &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_label</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>aa75df69d4ab6f2f116eb97a112b3c96e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_markup</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a63c357c5247b89944d81ff2fc07977f4</anchor>
      <arglist>(const Glib::ustring &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_markup</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>aaf9ad0734654a2f10671ca7804e21434</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_use_markup</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>ad6977be9658057c82316220761d3b53c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_underline</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>ab4f8fa88f3fe54a462fd5b6c6b7958ff</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_use_underline</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a704bcd5b9a98fa5ffbb418047a80d53d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_markup_with_mnemonic</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>af3416c57a10654a234364e9129c94d89</anchor>
      <arglist>(const Glib::ustring &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_mnemonic_keyval</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>ae18f7c2d1999db9cd3d1958f91a9e05b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_mnemonic_widget</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>aee19a9bd4d6468633938f7a19203a9cc</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_mnemonic_widget</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>acdfa0d76859d1d478888f13a34c32366</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_mnemonic_widget</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>ab5e3512a9a651a6c9eade872f2ce9158</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_text_with_mnemonic</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a8d1093d177941101af0d109e845ffd65</anchor>
      <arglist>(const Glib::ustring &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_justify</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a750398a5c60b27ee6eec76debff943bb</anchor>
      <arglist>(Justification jtype)</arglist>
    </member>
    <member kind="function">
      <type>Justification</type>
      <name>get_justify</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a5c917e1fc51f227644fdf2658e050965</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_ellipsize</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>aef7347ac55e67dddaed9808987eec576</anchor>
      <arglist>(Pango::EllipsizeMode mode)</arglist>
    </member>
    <member kind="function">
      <type>Pango::EllipsizeMode</type>
      <name>get_ellipsize</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a188c07cf28f7f388819b7b3dfd8de2c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_width_chars</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a68576e81de5db72faa88c9a539ec495e</anchor>
      <arglist>(int n_chars)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_width_chars</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>ae046d80b93a33447a73046d2516cee34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_max_width_chars</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a769709b9efb3fdb66cae6cf2361443ed</anchor>
      <arglist>(int n_chars)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_max_width_chars</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a48da335d3bed8458064234f45316e8af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_lines</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a3c9dca6bddf4c885b95b89706873d80c</anchor>
      <arglist>(int lines)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_lines</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>aa24d22f683a228e98b466143099e0844</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_pattern</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>ad9b6f04f6b977e403ec32965d211c5e9</anchor>
      <arglist>(const Glib::ustring &amp;pattern)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_line_wrap</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a8f9e44a92fc49c462332d0eed675e7a5</anchor>
      <arglist>(bool wrap=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_line_wrap</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a228fd3ca871e8eb83dfb834e9cf8a505</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_line_wrap_mode</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a0281bba2bf1d253758bcd876c9bafbe1</anchor>
      <arglist>(Pango::WrapMode wrap_mode)</arglist>
    </member>
    <member kind="function">
      <type>Pango::WrapMode</type>
      <name>get_line_wrap_mode</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a58f558353eb1d11834119f64caefae9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_selectable</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a5c74b4a98edbe2eeafef177729ed786a</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_selectable</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>ab11e0c770da07cbe28d58cafd39defbc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_angle</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a2d3327f4903b7cf78537f1a0e0875743</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_angle</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a4131e3acb271a62fe7ff8b35a7fb9cbd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select_region</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>ab08a40a5e56346fde1fca0e5af283205</anchor>
      <arglist>(int start_offset, int end_offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select_region</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>ac02fbb3212e71297ccfb315f0adc430a</anchor>
      <arglist>(int start_offset)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_selection_bounds</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>aaa8fd6c2b634cdc5ca87fad2ebb61f88</anchor>
      <arglist>(int &amp;start, int &amp;end) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pango::Layout &gt;</type>
      <name>get_layout</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a7fb3fca237b7b58dc900b734b6599ed1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Pango::Layout &gt;</type>
      <name>get_layout</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>aa08f8df871d308a50f0a38886c8fc476</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_layout_offsets</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>ae853a29140ba515b7f5d4a05658c3278</anchor>
      <arglist>(int &amp;x, int &amp;y) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_single_line_mode</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a0d124486d364720a101a1d548d040f13</anchor>
      <arglist>(bool single_line_mode=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_single_line_mode</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a35ee794752349cf35e30e9dd15316e14</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_current_uri</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a5171324613c93fcf608da2cdb59ea052</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_track_visited_links</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a3b812b67fab1e927956beee12c3d1a7f</anchor>
      <arglist>(bool track_links=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_track_visited_links</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a5020c4a8c46f89350bab51cc9585cb89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_xalign</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>acee7d4e87d7cc14080a7b8ded5f84e5e</anchor>
      <arglist>(float xalign)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>get_xalign</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>ae2e99336f36ac25aaf216a55027319eb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_yalign</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a269e4347606c5c77bf6ea438f0b955ca</anchor>
      <arglist>(float yalign)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>get_yalign</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>af0dce94bf613de896ebb49d4064146d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, Menu * &gt;</type>
      <name>signal_populate_popup</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a9bcef6e23ccd21fcd616b92dc96157fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, const Glib::ustring &amp; &gt;</type>
      <name>signal_activate_link</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a2d0c6225d9cc122a43e44586ec34af72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_label</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a6b8a6ee66bdc4aeb3ff3b8fd98af79ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_label</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>acba7b9014a30c9345b9ccda9ac5eeefb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::AttrList &gt;</type>
      <name>property_attributes</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a02a39851de0815b814c9ba1e3e9c30a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::AttrList &gt;</type>
      <name>property_attributes</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>acb3989b6d33a64cd65cba6b3d9922fa9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_markup</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>adacfbd0859655ec55bbfe2c149a0f924</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_markup</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>afca6c124370aa111d7574b3366ac8fae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_underline</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>adeab22fec3724ea470adf62b88289956</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_underline</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a71d9b10e22c88e2f426defeda7bf4b51</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Justification &gt;</type>
      <name>property_justify</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a96011bf081ca05c09ce54d418e0e44a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Justification &gt;</type>
      <name>property_justify</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a75bd09e76da8c2be68735b7c1f0c78d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_WriteOnly&lt; Glib::ustring &gt;</type>
      <name>property_pattern</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a43cfc048a020885aa0870158453311c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_wrap</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a64de2013b78b50d5ffd8448daf0300e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_wrap</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a04705c1134bf3adeb3727604de2658fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::WrapMode &gt;</type>
      <name>property_wrap_mode</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a92057fba9a575df1a3d0796478042114</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::WrapMode &gt;</type>
      <name>property_wrap_mode</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>aa379d0237219a4abd172542c792d67b0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_selectable</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a1313fb3241b260a54b6c791db8eb5719</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_selectable</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a5c729d8567fe5ce866c2f5b777956633</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_mnemonic_keyval</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a2146c2d19c6807684b113fb85c4af0ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_mnemonic_widget</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a3f6ad29a2ebfe40d99fc031752259587</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_mnemonic_widget</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a6a547d416ef62654fd669a6928a10938</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_cursor_position</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>aac50c7622e7bd2ef2fd3136861a45b9f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_selection_bound</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>ad5e480600fc3a139cff8e041e3e664fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::EllipsizeMode &gt;</type>
      <name>property_ellipsize</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>ac216640845995e837071f32a97db80f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::EllipsizeMode &gt;</type>
      <name>property_ellipsize</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a09edea11563cf881d151e2de75a210d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_width_chars</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a8d2cb59173b31fcec760812baeeab7e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_width_chars</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a1904e0f816c67637a463ad3537db52bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_single_line_mode</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a0e1b4bda07a23dac93523b994195c69d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_single_line_mode</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a892135038ac12727635ec59b1da3b5a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_angle</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>afcc0dfa13452199442d3935d96505e93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_angle</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>aac0b5444e1856662f44434994e318d2e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_max_width_chars</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a661c1e988c7c00f3c414825f29eebb60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_max_width_chars</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a5d4aa796b55651849d8c732272344470</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_track_visited_links</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a3804431e03dd577eeee1d67af3ffdb9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_track_visited_links</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a9e0ab0fe1fb4a5dfa4bde35f995de672</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_lines</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>ac7ca4c689caa37fb19debd013c78c112</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_lines</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a0ed27c14560b202e97895bcb3d57cad6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; float &gt;</type>
      <name>property_xalign</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>af1905ab0963bbf7d4bd68cf74a793df1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; float &gt;</type>
      <name>property_xalign</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a8eda4024fedec92fc46da07313f36cf4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; float &gt;</type>
      <name>property_yalign</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a0492f61023dbfe32c1806b20f777cf21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; float &gt;</type>
      <name>property_yalign</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>acf10e38b86ae9c18bfea020119ffecfa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>ac4c29fb674f35c5dd560aacbb4300239</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_populate_popup</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>a09b41f1344777e955f1e7e32c81db621</anchor>
      <arglist>(Menu *menu)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Label *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Label.html</anchorfile>
      <anchor>add1b6e4820241f869ff776e9c69b6816</anchor>
      <arglist>(GtkLabel *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Layout</name>
    <filename>classGtk_1_1Layout.html</filename>
    <base>Gtk::Container</base>
    <base>Gtk::Scrollable</base>
    <member kind="function">
      <type></type>
      <name>Layout</name>
      <anchorfile>classGtk_1_1Layout.html</anchorfile>
      <anchor>ac624487bbcbb6262dbbf2807b0819b30</anchor>
      <arglist>(Layout &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Layout &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Layout.html</anchorfile>
      <anchor>a2ffe3873928abd80794ca111d85680e6</anchor>
      <arglist>(Layout &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Layout</name>
      <anchorfile>classGtk_1_1Layout.html</anchorfile>
      <anchor>a8e93485eaaec8d1f936d454faceabf63</anchor>
      <arglist>(const Layout &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Layout &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Layout.html</anchorfile>
      <anchor>aa66ea15de8fd89f6dd4209ac0790a391</anchor>
      <arglist>(const Layout &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Layout</name>
      <anchorfile>classGtk_1_1Layout.html</anchorfile>
      <anchor>a6c3275fd9a8e378ef1087e0be33d6f04</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkLayout *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Layout.html</anchorfile>
      <anchor>a4743c51f0297909db439438c6111e63d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkLayout *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Layout.html</anchorfile>
      <anchor>af69036f6c47f83d0401ddbe2a587c248</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Layout</name>
      <anchorfile>classGtk_1_1Layout.html</anchorfile>
      <anchor>ac552c2dabdea9f3b4fb92cbed101054d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Layout</name>
      <anchorfile>classGtk_1_1Layout.html</anchorfile>
      <anchor>aeac3694a7bed68d5642e30f982658d24</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;hadjustment, const Glib::RefPtr&lt; Adjustment &gt; &amp;vadjustment)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Window &gt;</type>
      <name>get_bin_window</name>
      <anchorfile>classGtk_1_1Layout.html</anchorfile>
      <anchor>a10c4037e685c4d05212e99f008925807</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Window &gt;</type>
      <name>get_bin_window</name>
      <anchorfile>classGtk_1_1Layout.html</anchorfile>
      <anchor>ac54572ac08ae13c0484a459cd8b1ae7f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put</name>
      <anchorfile>classGtk_1_1Layout.html</anchorfile>
      <anchor>a7e11761f95680af54a15de1752f8752c</anchor>
      <arglist>(Widget &amp;child_widget, int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move</name>
      <anchorfile>classGtk_1_1Layout.html</anchorfile>
      <anchor>a7de11771758110488b5f2256a2cd62b7</anchor>
      <arglist>(Widget &amp;child_widget, int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_size</name>
      <anchorfile>classGtk_1_1Layout.html</anchorfile>
      <anchor>aef591fb8992548cc334d233f696fb96f</anchor>
      <arglist>(guint width, guint height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_size</name>
      <anchorfile>classGtk_1_1Layout.html</anchorfile>
      <anchor>a7915e1e80c9b8b0b632ff7807be0fff0</anchor>
      <arglist>(guint &amp;width, guint &amp;height) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_width</name>
      <anchorfile>classGtk_1_1Layout.html</anchorfile>
      <anchor>a141f13bf3f9afc8978dad1f272597fcb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_width</name>
      <anchorfile>classGtk_1_1Layout.html</anchorfile>
      <anchor>ab10f972ec0dcfd8fbb3d2a600423e7a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_height</name>
      <anchorfile>classGtk_1_1Layout.html</anchorfile>
      <anchor>a3a722d3208501ade26b8c7bfe9c4a614</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_height</name>
      <anchorfile>classGtk_1_1Layout.html</anchorfile>
      <anchor>a5aa89c07e9eac821d0a744cf92ebd230</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; int &gt;</type>
      <name>child_property_x</name>
      <anchorfile>classGtk_1_1Layout.html</anchorfile>
      <anchor>a07f17b5ad6dd51dd932702f1390562b6</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>child_property_x</name>
      <anchorfile>classGtk_1_1Layout.html</anchorfile>
      <anchor>ad259d2bb292182299572ab0889b665da</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; int &gt;</type>
      <name>child_property_y</name>
      <anchorfile>classGtk_1_1Layout.html</anchorfile>
      <anchor>ae9166102ba97329f8bc75f25954c8219</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>child_property_y</name>
      <anchorfile>classGtk_1_1Layout.html</anchorfile>
      <anchor>aa3fdf11a8fc1eb7168db7b496e4c3cb5</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Layout.html</anchorfile>
      <anchor>abec99beaf2d4b3027e00e26db49a2cfe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Layout *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Layout.html</anchorfile>
      <anchor>a920e81bdc1d6fa6acc31277887629afb</anchor>
      <arglist>(GtkLayout *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::LevelBar</name>
    <filename>classGtk_1_1LevelBar.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>LevelBar</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a1866d5ecc4a2ca9286321787c12c6208</anchor>
      <arglist>(LevelBar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>LevelBar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a57881ad6681cd63e3c9fdb87ad0fd88e</anchor>
      <arglist>(LevelBar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LevelBar</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a2ff669040bec9a05ede431b313207e93</anchor>
      <arglist>(const LevelBar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>LevelBar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a3fdcf95448375cbaabeb7c50e21f7edc</anchor>
      <arglist>(const LevelBar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LevelBar</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a1e207767338c16b49d75ae554c81b2af</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkLevelBar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a3d780e54dda976085e7a4986a984bd69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkLevelBar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>ac0fbdddd71b7b81fcd0deee6946c9f8b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LevelBar</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a8e6e5c61488b5a55b251ee4a97a73b48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_orientation</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a28806c66b304f8970b2100cc5e431660</anchor>
      <arglist>(Orientation orientation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_mode</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>aa832a6634a3f20237cacabc70c886420</anchor>
      <arglist>(LevelBarMode mode)</arglist>
    </member>
    <member kind="function">
      <type>LevelBarMode</type>
      <name>get_mode</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a67588104ac51c0ab801f79e7ab9a129e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_value</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>ae4c95a76c1f561740b2081b1e512e968</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_value</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>ae270054401dc1e4d8dec6546cf9b2ed5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_min_value</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a692ec1669999dcf3d3ced296992ed855</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_min_value</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a9b03608b0ebb6bc8ba1bb419a52d3bdc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_max_value</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>ab2773c4e9119a2df92380cec5534e6b2</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_max_value</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>abd67f715eb1e899e75b3948a37df6080</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_inverted</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>aaac73c5fe66b35bd2261775043c028f1</anchor>
      <arglist>(bool inverted=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_inverted</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a502799bf196716294d51a08289a2758c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_offset_value</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>abbc88572fc7794caaf3bcf265a502b42</anchor>
      <arglist>(const Glib::ustring &amp;name, double value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_offset_value</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a1b73c857faaf8625fa802228e68bf43c</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_offset_value</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a22a56c7c440a31c7b60898a6c70215ab</anchor>
      <arglist>(const Glib::ustring &amp;name, double &amp;value) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::ustring &amp; &gt;</type>
      <name>signal_offset_changed</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a0e0556e8fa86a5ea2604488e1e994d68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxyDetailedAnyType&lt; void, const Glib::ustring &amp; &gt;</type>
      <name>signal_offset_changed</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>afea68798c7ae928417584304b452b6bd</anchor>
      <arglist>(const Glib::ustring &amp;offset_name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_value</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a982719eda5569a563f1efa1b30483db4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_value</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a09f0b40bed5fe18da485718b42d7e1e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_min_value</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a2548264300c242bbd302aea4bfff4292</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_min_value</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a26f1aaf3bbfccc1ca355e27c5cffba50</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_max_value</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>aaff29471178e096358b4d9fd77a89f49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_max_value</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a1bdd22dcf350eafe4170307c1341e3ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; LevelBarMode &gt;</type>
      <name>property_mode</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>ab89fa71efe2b054299ab7e57721fcbbe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; LevelBarMode &gt;</type>
      <name>property_mode</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>aadf037903c097c7475f76e14cc452a91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_inverted</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a275f8c839f2238b89efb261cdd3d7c1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_inverted</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a359cedc51d5bab097e4820a042681573</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a3837eaba3321b9feb261c6171978f3f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_offset_changed</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>a6c57602cf1bc3b8cca87caa224a19c3f</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::LevelBar *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1LevelBar.html</anchorfile>
      <anchor>ae5ca0b77187bdc201f507bd99295ee05</anchor>
      <arglist>(GtkLevelBar *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::LinkButton</name>
    <filename>classGtk_1_1LinkButton.html</filename>
    <base>Gtk::Button</base>
    <member kind="function">
      <type></type>
      <name>LinkButton</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>a05550a5c5d634bc20096ffce0ff540b7</anchor>
      <arglist>(LinkButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>LinkButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>ab3b91bb5911c0546c9ba51280cbab2ea</anchor>
      <arglist>(LinkButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LinkButton</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>a4ae205f8cba7b4d7ada97e732f7c954b</anchor>
      <arglist>(const LinkButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>LinkButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>af68fb6eac173427b23a0146ac536da69</anchor>
      <arglist>(const LinkButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LinkButton</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>af2f36076cb769708158b104b870af29f</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkLinkButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>a01e2192f9822c37b815fc6d1d2e33d84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkLinkButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>a33cb4ef15934e907b80b266ad8c862d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LinkButton</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>a9e945e76051cf4b10a479432280154b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LinkButton</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>a74eb16e81540ba56ec819e75833a8bee</anchor>
      <arglist>(const Glib::ustring &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LinkButton</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>a9c5aac6925b91bf5b80521bd11789339</anchor>
      <arglist>(const Glib::ustring &amp;uri, const Glib::ustring &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_uri</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>aa2e63f4944d99e0ccb385a0a8ac00ec0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_uri</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>a1c9e4f2925219604883f48499382f7fa</anchor>
      <arglist>(const Glib::ustring &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_visited</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>a2662ac4e14b3aa9b5c327a78dc448aea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visited</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>acc166b4be292555b232d824fea7de52c</anchor>
      <arglist>(bool visited=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_uri</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>a7961965c9b2e0d4190c7c9df006b0437</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_uri</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>a82191d956b9dbd63e86c327dec517f7d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_visited</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>a34b5b4230c1751d405d35bb35871dc73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_visited</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>afea4cdfd25d273c7550162c7ca744c98</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool &gt;</type>
      <name>signal_activate_link</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>ade70d4a914dd8d4aa53f91146cbb1620</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>a3c0101c2fa540d4b79b3623ef8d598cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_activate_link</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>a755aa076bce74955766c4cf148a296d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::LinkButton *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1LinkButton.html</anchorfile>
      <anchor>a5b87ae1c3eea47dee4af988eb8c9d2a1</anchor>
      <arglist>(GtkLinkButton *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ListBox</name>
    <filename>classGtk_1_1ListBox.html</filename>
    <base>Gtk::Container</base>
    <member kind="typedef">
      <type>sigc::slot&lt; bool, ListBoxRow * &gt;</type>
      <name>SlotFilter</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a42c993bfea1007a974f4d47ff6875478</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; int, ListBoxRow *, ListBoxRow * &gt;</type>
      <name>SlotSort</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a931a0b125d6514e0191a071900bf57c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; void, ListBoxRow *, ListBoxRow * &gt;</type>
      <name>SlotUpdateHeader</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>af2daf49c0e232f9755d21261636fd482</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; void, ListBoxRow * &gt;</type>
      <name>SlotForeach</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a073e362f63561b8d46aaabb61e2492c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; Gtk::Widget *, const Glib::RefPtr&lt; T_item &gt; &amp; &gt;</type>
      <name>SlotCreateWidget</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a308a7732fe8fd49d256fb6cb092d4efe</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ListBox</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a08f67231355abb99fc17836bb486ca14</anchor>
      <arglist>(ListBox &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ListBox &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>af016ce228138553470664416000ae639</anchor>
      <arglist>(ListBox &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ListBox</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>abdaff6633746f8b065630d790fbe8658</anchor>
      <arglist>(const ListBox &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ListBox &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a28725c08c37f2256ade47d333b41478b</anchor>
      <arglist>(const ListBox &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ListBox</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>ac07d7be61c242809f6f4e31d073306ec</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkListBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>acd18ff207f385ae34f73de0b0007078c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkListBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a2dd24a4551eae1bdd5f56e42c98e8057</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ListBox</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a4e7b189bad9617ba342f15d992010d73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepend</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a8d3f1bb679db890a438a18411ec85d3e</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>abec9d89f68d70ad6281a0ac0828a7bd0</anchor>
      <arglist>(Widget &amp;child, int position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>ac02504d926f246ce07877857631f255b</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>ListBoxRow *</type>
      <name>get_selected_row</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a62046af9c29705c7f4af02d590d63f9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ListBoxRow *</type>
      <name>get_selected_row</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a6d14d32ae58596274bc52533967e54c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ListBoxRow *</type>
      <name>get_row_at_index</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a9825f1198ac6043a56717f8b32a34692</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>const ListBoxRow *</type>
      <name>get_row_at_index</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a39ef94861fa265caf75c8b7b99d3091a</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>ListBoxRow *</type>
      <name>get_row_at_y</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>acd5e365f0796bd9f96c91c31eff93b0d</anchor>
      <arglist>(int y)</arglist>
    </member>
    <member kind="function">
      <type>const ListBoxRow *</type>
      <name>get_row_at_y</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a89d05fddf608a509e613cefd00be72e6</anchor>
      <arglist>(int y) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select_row</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a2b416dd55db990aaaa2d4581fa785781</anchor>
      <arglist>(ListBoxRow &amp;row)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unselect_row</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a4c4aefc497cbdf9282911d0eced4c4f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_placeholder</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a0dd8cb8a7348a69b7767481c5444178b</anchor>
      <arglist>(Widget &amp;placeholder)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_placeholder</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a7233ea96f6cb85772488deffda1f9282</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_adjustment</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>ad49d2fa8c6f7162d44954bdba506514e</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;adjustment)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Adjustment &gt;</type>
      <name>get_adjustment</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a2f5d69a4845487a360d7fb8b2188e996</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Adjustment &gt;</type>
      <name>get_adjustment</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a7aa02ae405c1991723e6c052595329cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selected_foreach</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>ae324348e618be246abee1a70e679ffe4</anchor>
      <arglist>(const SlotForeach &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ListBoxRow * &gt;</type>
      <name>get_selected_rows</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a83d0d01ecaf472826fc5070a597742e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ListBoxRow * &gt;</type>
      <name>get_selected_rows</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>afda6de9996183f0db264e7af5266bf93</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unselect_row</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a5a42ed34c5b05d8463ef0aa4aa5010af</anchor>
      <arglist>(ListBoxRow *row)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select_all</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a6c8ad9642b0d91df05d0d7979469956d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unselect_all</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>ace9b1cea0f7a98d5b6d6cb959d8fbe02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_selection_mode</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>ac1146ca9ca24d6e8ecca9533fe8e326c</anchor>
      <arglist>(SelectionMode mode)</arglist>
    </member>
    <member kind="function">
      <type>SelectionMode</type>
      <name>get_selection_mode</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a552661f58b8a3f3bbce4fd137c81d7ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_filter_func</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a26820805c4b78be1f924b1cb65e1ea0f</anchor>
      <arglist>(const SlotFilter &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_filter_func</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>aa66bcedf97c72cace3032deafce68e8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sort_func</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>acec1d5f8d73d591fc3eb2772c4f0e480</anchor>
      <arglist>(const SlotSort &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_sort_func</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a3c0c13a65d5bf2b4e1d646d288e4f898</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_header_func</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a328bf911cc92df6de0fe2617f6a96b62</anchor>
      <arglist>(const SlotUpdateHeader &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_header_func</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>ad5bf97cd6f1572913748770330fd600c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidate_filter</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a8697105c5381e7413db25ce1ebda750a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidate_sort</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a4383ba21f0095cbc2c2962c7e00121dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidate_headers</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>ad81c0387e715fd961bd95eb6545e84f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_activate_on_single_click</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a1898ce4466db562b69f9f5b39c127a1c</anchor>
      <arglist>(bool single=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_activate_on_single_click</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a78e1c78347e6ae3fba44df4c08b59b6b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drag_unhighlight_row</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a9bfb670adeeab4f8d28ccc6bb02b56f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drag_highlight_row</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a55f47065a53885fea8e5233ecda5171d</anchor>
      <arglist>(ListBoxRow &amp;row)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bind_model</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a91602dbe7a2ea127955f5f57df44bd5d</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListModel &gt; &amp;model, const SlotCreateWidget&lt; Glib::Object &gt; &amp;slot_create_widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bind_list_store</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>ae070254e93fcaf7913cd7847ea92dbc4</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::ListStore&lt; T_item &gt;&gt; &amp;store, T_slot &amp;&amp;slot_create_widget)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; SelectionMode &gt;</type>
      <name>property_selection_mode</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a98b7680e36557384f505ea5e78a436ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; SelectionMode &gt;</type>
      <name>property_selection_mode</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>aba75b902502ced0989be7807ffd1be9e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_activate_on_single_click</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a36569d806fbb012be295b3b3500dcbda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_activate_on_single_click</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a6118fb92c3cb8c306759bf02460c6d3f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, ListBoxRow * &gt;</type>
      <name>signal_row_selected</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a21d3afa19faed5125d8298ddfa3e9edc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, ListBoxRow * &gt;</type>
      <name>signal_row_activated</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>ac5d58e3a6b460e5e71fbbfecb4e38581</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_selected_rows_changed</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>aebf186bd83f54cad58265ab7f2a76c1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a15df6652eb5bc84294a7f0f39bd60b2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_row_selected</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>ad31ac835b936ee76ae8343486296e3d7</anchor>
      <arglist>(ListBoxRow *row)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_row_activated</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a05a4d1ff0cbc9492acab30bf4342973d</anchor>
      <arglist>(ListBoxRow *row)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ListBox *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ListBox.html</anchorfile>
      <anchor>a9f4c147f48f6af93e7332d44c675e62e</anchor>
      <arglist>(GtkListBox *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ListBoxRow</name>
    <filename>classGtk_1_1ListBoxRow.html</filename>
    <base>Gtk::Bin</base>
    <member kind="function">
      <type></type>
      <name>ListBoxRow</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>adca2264a171f0b4668f7b29ff03344cb</anchor>
      <arglist>(ListBoxRow &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ListBoxRow &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>a5e9e487390d0318d94cf2f7f5b069930</anchor>
      <arglist>(ListBoxRow &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ListBoxRow</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>ad3c9be49a419a4dd339253ddd48e8df5</anchor>
      <arglist>(const ListBoxRow &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ListBoxRow &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>af3640d5e9fc8ec0254a03f8d99512c37</anchor>
      <arglist>(const ListBoxRow &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ListBoxRow</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>aca4b89e7e9aca7cb7eee3d132fff7911</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkListBoxRow *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>a138a59f27bb1f6de8a247dac5ee5d8e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkListBoxRow *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>abc52599864f9c1dfcb7155385c43e0ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ListBoxRow</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>abcfe284a4932b5974e41de5a28d3b8c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_header</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>a36cb86bb15a37a7cb3bcb3aaa51fe6e4</anchor>
      <arglist>(Widget &amp;header)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_header</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>a5342933c5930949f0a9194319340eed7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_header</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>aab2d062d1b1156049ef47ce03ef34d77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_header</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>a89c78679b905f680db7b771a2270e15c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_index</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>a6d6c4a013cd592c7640b359fe70bcf50</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changed</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>a536ac1bbde16b4a5a91166b4fd64ecf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_selected</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>ace32e8f8de3b402458a7542fe3bb1501</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_selectable</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>a68fdfc059c5f1b69bb1aa335059bb2e0</anchor>
      <arglist>(bool selectable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_selectable</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>ad6c71f0447851e734150f79e041e2c63</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_activatable</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>a6def50402ee9ce47c4e02a3bae4283f5</anchor>
      <arglist>(bool activatable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_activatable</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>a37d48fdc9c388cff7a5fadf95c1b03c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_selectable</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>a810e9fc33295700048fb4452766ff5f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_selectable</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>a4ceba56625ef143124671279b09d0df4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_activatable</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>ab61a946a644377476a0bc97f92ed00ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_activatable</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>a07262be26af84db022d09db4a444e05c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>ab5ec7da95c59def3d2bf2d4f84d8ce4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ListBoxRow *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ListBoxRow.html</anchorfile>
      <anchor>a513222d90b6a448c0559eb5e0c009492</anchor>
      <arglist>(GtkListBoxRow *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ListStore</name>
    <filename>classGtk_1_1ListStore.html</filename>
    <base>Glib::Object</base>
    <base>Gtk::TreeModel</base>
    <base>Gtk::TreeSortable</base>
    <base>Gtk::TreeDragSource</base>
    <base>Gtk::TreeDragDest</base>
    <base>Gtk::Buildable</base>
    <member kind="function">
      <type></type>
      <name>ListStore</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>a8ceeabce402b50f6066c44ac34228fb7</anchor>
      <arglist>(ListStore &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ListStore &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>a771509722ae149f314e14849babced8c</anchor>
      <arglist>(ListStore &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ListStore</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>a557b9783d6c10fa264ceb926cf35ba38</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkListStore *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>a5086758716b9f34a5219b1387aebe59c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkListStore *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>a8d0844616280900206a77aaec2c546d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkListStore *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>aabc577b9267750688417879a066d49b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_column_types</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>a6abba5fb66c20f1bfcea79adff7aa321</anchor>
      <arglist>(const TreeModelColumnRecord &amp;columns)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>abf6e5cbe94951adc5b62120d9df1b562</anchor>
      <arglist>(const iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>ab71d860741465ea79bc352c4575e47ec</anchor>
      <arglist>(const iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert_after</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>ab9032c9d9f620e10f32428e2358f44df</anchor>
      <arglist>(const iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>prepend</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>a1fd8146c61bae1a95b050e9126ea1928</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>append</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>af47307c865cc5de0856fe3f8571fc681</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>iter_swap</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>a2f3617442cd5b52db485f4dc31f91da9</anchor>
      <arglist>(const iterator &amp;a, const iterator &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>acc5515fbabf7826d6d3a0e15ca81d2b9</anchor>
      <arglist>(const iterator &amp;source, const iterator &amp;destination)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reorder</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>a8afcdd1bd1b5c5b8fa2630d4ab106784</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;new_order)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>a770bf1cc24ab0e02bdd96531107da603</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>iter_is_valid</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>ae307acf882557f319dc309963c07705a</anchor>
      <arglist>(const iterator &amp;iter) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>a02c6259caa541faf590a2925e9244e6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; ListStore &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>aaa6c530560f66872482a0650739276c5</anchor>
      <arglist>(const TreeModelColumnRecord &amp;columns)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ListStore</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>aab8cae9bc8193ce13e7b983092405d25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ListStore</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>a6fdbba7946ad83842d61574697dddbc6</anchor>
      <arglist>(const TreeModelColumnRecord &amp;columns)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set_value_impl</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>ac3fcc4859dd5941d9aa0c54024f37bc9</anchor>
      <arglist>(const iterator &amp;row, int column, const Glib::ValueBase &amp;value) override</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::ListStore &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ListStore.html</anchorfile>
      <anchor>ac9a0a0d9b34c33a9775ec4d89da2f0df</anchor>
      <arglist>(GtkListStore *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ListViewText</name>
    <filename>classGtk_1_1ListViewText.html</filename>
    <base>Gtk::TreeView</base>
    <class kind="class">Gtk::ListViewText::TextModelColumns</class>
    <member kind="typedef">
      <type>std::vector&lt; int &gt;</type>
      <name>SelectionList</name>
      <anchorfile>classGtk_1_1ListViewText.html</anchorfile>
      <anchor>a1f97eb1ecf054d665dd557314853bd99</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ListViewText</name>
      <anchorfile>classGtk_1_1ListViewText.html</anchorfile>
      <anchor>aba3445363e7fd986e8344b5adcc37d1e</anchor>
      <arglist>(guint columns_count, bool editable=false, Gtk::SelectionMode mode=Gtk::SELECTION_SINGLE)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ListViewText</name>
      <anchorfile>classGtk_1_1ListViewText.html</anchorfile>
      <anchor>a53d7fffcf0fe5e0b17e7790fafc160eb</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_column_title</name>
      <anchorfile>classGtk_1_1ListViewText.html</anchorfile>
      <anchor>a7e773a6335b0bf999dedfe2df55667f1</anchor>
      <arglist>(guint column, const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_column_title</name>
      <anchorfile>classGtk_1_1ListViewText.html</anchorfile>
      <anchor>ac2612f60c19125b61c4c0f76da8258ad</anchor>
      <arglist>(guint column) const </arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>append</name>
      <anchorfile>classGtk_1_1ListViewText.html</anchorfile>
      <anchor>a9cea200ecaeefba042f49dfef4853baf</anchor>
      <arglist>(const Glib::ustring &amp;column_one_value=Glib::ustring())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepend</name>
      <anchorfile>classGtk_1_1ListViewText.html</anchorfile>
      <anchor>ab2b03c5b1071bb700b1d057113fdfbf5</anchor>
      <arglist>(const Glib::ustring &amp;column_one_value=Glib::ustring())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classGtk_1_1ListViewText.html</anchorfile>
      <anchor>aecf1cc656f786113d57b23ad7d886bb6</anchor>
      <arglist>(guint row, const Glib::ustring &amp;column_one_value=Glib::ustring())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_items</name>
      <anchorfile>classGtk_1_1ListViewText.html</anchorfile>
      <anchor>ad9e617ccce390aa6933a055def3139a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_text</name>
      <anchorfile>classGtk_1_1ListViewText.html</anchorfile>
      <anchor>a4462ff598156aa5064b3f810b75f01bb</anchor>
      <arglist>(guint row, guint column=0) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_text</name>
      <anchorfile>classGtk_1_1ListViewText.html</anchorfile>
      <anchor>a2d4b861b95e2ab0ae103b9970b1ca9bd</anchor>
      <arglist>(guint row, guint column, const Glib::ustring &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_text</name>
      <anchorfile>classGtk_1_1ListViewText.html</anchorfile>
      <anchor>a06c8b4f7c6144b1a50c22908f773b896</anchor>
      <arglist>(guint row, const Glib::ustring &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>size</name>
      <anchorfile>classGtk_1_1ListViewText.html</anchorfile>
      <anchor>a97aac028c9a130b1c08d7a07dce09f08</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_num_columns</name>
      <anchorfile>classGtk_1_1ListViewText.html</anchorfile>
      <anchor>aaf1a2f95f4909c4157fd774027c5f052</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SelectionList</type>
      <name>get_selected</name>
      <anchorfile>classGtk_1_1ListViewText.html</anchorfile>
      <anchor>a2a3d953ef7751801cbe406b19f3308ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Glib::RefPtr&lt; Gtk::ListStore &gt;</type>
      <name>m_model</name>
      <anchorfile>classGtk_1_1ListViewText.html</anchorfile>
      <anchor>a43b177deaa12148493b06918ab061699</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TextModelColumns</type>
      <name>m_model_columns</name>
      <anchorfile>classGtk_1_1ListViewText.html</anchorfile>
      <anchor>a111c03fad9d8cb07d7b915c01eb64c8e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ListViewText::TextModelColumns</name>
    <filename>classGtk_1_1ListViewText_1_1TextModelColumns.html</filename>
    <base>Gtk::TreeModelColumnRecord</base>
    <member kind="function">
      <type></type>
      <name>TextModelColumns</name>
      <anchorfile>classGtk_1_1ListViewText_1_1TextModelColumns.html</anchorfile>
      <anchor>a72b75538215e87e4c62a4461757304f3</anchor>
      <arglist>(guint columns_count)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TextModelColumns</name>
      <anchorfile>classGtk_1_1ListViewText_1_1TextModelColumns.html</anchorfile>
      <anchor>a8490eff2370a3d51102b0936efa2d4a9</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_num_columns</name>
      <anchorfile>classGtk_1_1ListViewText_1_1TextModelColumns.html</anchorfile>
      <anchor>a93250a1ba3fae84916e8baa33b5cc1b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>Gtk::TreeModelColumn&lt; Glib::ustring &gt; *</type>
      <name>m_columns</name>
      <anchorfile>classGtk_1_1ListViewText_1_1TextModelColumns.html</anchorfile>
      <anchor>aec72434550a757b162257709242a2fd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>guint</type>
      <name>m_columns_count</name>
      <anchorfile>classGtk_1_1ListViewText_1_1TextModelColumns.html</anchorfile>
      <anchor>aca01b633101f9840c6ea31fbae0ae2ef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::LockButton</name>
    <filename>classGtk_1_1LockButton.html</filename>
    <base>Gtk::Button</base>
    <member kind="function">
      <type></type>
      <name>LockButton</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>ab0c21639178b77d4323e94313dc2d7aa</anchor>
      <arglist>(LockButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>LockButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>acfb30d76d0f8f62d8bb22809c9d6faf2</anchor>
      <arglist>(LockButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LockButton</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>af58195672c4cf09f88689f998a69ab0f</anchor>
      <arglist>(const LockButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>LockButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a8190833084c61291333bc5a9eb9dd421</anchor>
      <arglist>(const LockButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LockButton</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>aeb0ef7b258fc23835eba79797d8325b3</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkLockButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>aff363278ed9236f83f2dfb8ff0494403</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkLockButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a961ce167141ad8266175e5739ae14b78</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LockButton</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>afe9c21b4d9eeacfbefaca4cbd4e95cb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LockButton</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a765efa50534cc38f724d9e2618c4c5f8</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gio::Permission &gt; &amp;permission)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::Permission &gt;</type>
      <name>get_permission</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a305fe15b284cf2ab34c205fb180637fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::Permission &gt;</type>
      <name>get_permission</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a2fae5a82f42a4cbe5b101aa87b1ce115</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_permission</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a69c6a01ad436b4fbc19f52d7e336d513</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gio::Permission &gt; &amp;permission)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_permission</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a8de94e8585dd52f464725a3f68a2dad5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::Permission &gt; &gt;</type>
      <name>property_permission</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>ae05b62d09f0b2b1b79a92414c4deeb29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::Permission &gt; &gt;</type>
      <name>property_permission</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a3a28947d1c1dd08afbe76871604b5e64</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_text_lock</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a770a0d73efb1ddbc5515932e02db814c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_text_lock</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a1a9e7abe684386c24ab7575e2eafda38</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_text_unlock</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a6c244d621c61595228efe183e1557b99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_text_unlock</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a99deb1290d33efe9017b20b4606ff244</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_tooltip_lock</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a8271fe3a401a14ca88537db5eef92eee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_tooltip_lock</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a0a45e309cb35d9b015d61b2650f1c883</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_tooltip_unlock</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a792e084943187a630bf4ea2d98447870</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_tooltip_unlock</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>aa662707b417a4062f966539e3c4b368c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_tooltip_not_authorized</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a1ff8b1482176f999fb1e44b0dbf4d566</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_tooltip_not_authorized</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a20f42f0f476fb4f3d624bc8eeeeb7104</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>a15b625cf7f9450abad24df450c755504</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::LockButton *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1LockButton.html</anchorfile>
      <anchor>aff71e7c9b7d9ddfb155f7d81a4959a59</anchor>
      <arglist>(GtkLockButton *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Main</name>
    <filename>classGtk_1_1Main.html</filename>
    <base>sigc::trackable</base>
    <member kind="function">
      <type></type>
      <name>Main</name>
      <anchorfile>classGtk_1_1Main.html</anchorfile>
      <anchor>afbc89daf89de698660ce02426967e135</anchor>
      <arglist>(int &amp;argc, char **&amp;argv, Glib::OptionContext &amp;option_context)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Main</name>
      <anchorfile>classGtk_1_1Main.html</anchorfile>
      <anchor>ae02744d26abd4abfe106ed31f05ad2dc</anchor>
      <arglist>(int *argc, char ***argv, bool set_locale=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Main</name>
      <anchorfile>classGtk_1_1Main.html</anchorfile>
      <anchor>a2b7340ad84fe8d66bb7489c635e8fd5e</anchor>
      <arglist>(int &amp;argc, char **&amp;argv, bool set_locale=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Main</name>
      <anchorfile>classGtk_1_1Main.html</anchorfile>
      <anchor>a2b1d4e4b1c450faa3a15ef397dec4175</anchor>
      <arglist>(bool set_locale=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Main</name>
      <anchorfile>classGtk_1_1Main.html</anchorfile>
      <anchor>a485eeb37361615a021ca21fb2a6f257c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Gtk::Main *</type>
      <name>instance</name>
      <anchorfile>classGtk_1_1Main.html</anchorfile>
      <anchor>a94b74eb618f4b0d213c79c2ada927446</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>run</name>
      <anchorfile>classGtk_1_1Main.html</anchorfile>
      <anchor>a6a8904c35952006d13cb07c1d0c16c10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>run</name>
      <anchorfile>classGtk_1_1Main.html</anchorfile>
      <anchor>aaa2e4e282834cbe2d789fe34c447a0dd</anchor>
      <arglist>(Window &amp;window)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>quit</name>
      <anchorfile>classGtk_1_1Main.html</anchorfile>
      <anchor>a8719a8ac37ff6bb66048ca8967dbd782</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static guint</type>
      <name>level</name>
      <anchorfile>classGtk_1_1Main.html</anchorfile>
      <anchor>a78f66b89dbe811cdce075a8b00c8987a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_gtk_option_group</name>
      <anchorfile>classGtk_1_1Main.html</anchorfile>
      <anchor>a16e384f8b3a02af8d3e86f59053b218e</anchor>
      <arglist>(Glib::OptionContext &amp;option_context, bool open_default_display=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>iteration</name>
      <anchorfile>classGtk_1_1Main.html</anchorfile>
      <anchor>ab9ba7993ef8a22b6bf8796a2e4862e68</anchor>
      <arglist>(bool blocking=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>events_pending</name>
      <anchorfile>classGtk_1_1Main.html</anchorfile>
      <anchor>a2a2a6cddef82f8c52026790f3f7887e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KeySnooperSig &amp;</type>
      <name>signal_key_snooper</name>
      <anchorfile>classGtk_1_1Main.html</anchorfile>
      <anchor>ab4c316c0789dfb4ab7926e062196c4e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>init_gtkmm_internals</name>
      <anchorfile>classGtk_1_1Main.html</anchorfile>
      <anchor>aab3b3f72ad21e91e4c644ee5131d4058</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>classGtk_1_1Main.html</anchorfile>
      <anchor>a6f855eae235b700e2242fb68252dcea5</anchor>
      <arglist>(int *argc, char ***argv, bool set_locale)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>run_impl</name>
      <anchorfile>classGtk_1_1Main.html</anchorfile>
      <anchor>a2642c570bde971015f97b97cce743f80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>quit_impl</name>
      <anchorfile>classGtk_1_1Main.html</anchorfile>
      <anchor>a785e09dce370a1c5260885ced9efb4a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual guint</type>
      <name>level_impl</name>
      <anchorfile>classGtk_1_1Main.html</anchorfile>
      <anchor>aad90e366d331016ce5ff68023f214d8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>iteration_impl</name>
      <anchorfile>classGtk_1_1Main.html</anchorfile>
      <anchor>a681a82f7118d71188e64ba9379bb33e7</anchor>
      <arglist>(bool blocking)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>events_pending_impl</name>
      <anchorfile>classGtk_1_1Main.html</anchorfile>
      <anchor>a4a8ca03d685b708e9dc38e3ddaa0875a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_window_hide</name>
      <anchorfile>classGtk_1_1Main.html</anchorfile>
      <anchor>a7c3bb918c54342b71e9e56d999b4dd4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static KeySnooperSig</type>
      <name>signal_key_snooper_</name>
      <anchorfile>classGtk_1_1Main.html</anchorfile>
      <anchor>a97582880bbb0ac12e957861a7ed165a3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Menu</name>
    <filename>classGtk_1_1Menu.html</filename>
    <base>Gtk::MenuShell</base>
    <member kind="typedef">
      <type>sigc::slot&lt; void, int &amp;, int &amp;, bool &amp; &gt;</type>
      <name>SlotPositionCalc</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>ac8978c6bcd462454c19e70a7f8805ea6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Menu</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a1cf1d8ecf1746eff238fddf9725162c8</anchor>
      <arglist>(Menu &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Menu &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>ab8d17ccc23c30b177b63e51f45cf78dc</anchor>
      <arglist>(Menu &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Menu</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>ad27631d751df516ab42c8be3860cab60</anchor>
      <arglist>(const Menu &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Menu &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a68de110f5bb9b992d9cfda3db9cafda3</anchor>
      <arglist>(const Menu &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Menu</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>ab600fa85d167da6820695b5ba1f34ab2</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkMenu *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a08434c6b137ce53eb939b09d577aa9bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkMenu *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a943271a828e8bfa829c6bf4ed0060203</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Menu</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>afd6add4a7ef105f29efa125bb5ef40cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Menu</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a154156cc45e241f08f93343f16f482f8</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::MenuModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popup</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>adb73be43a5c9f64e85dc159b5c1fe8e8</anchor>
      <arglist>(MenuShell &amp;parent_menu_shell, MenuItem &amp;parent_menu_item, const SlotPositionCalc &amp;slot, guint button, guint32 activate_time, const Glib::RefPtr&lt; Gdk::Device &gt; &amp;device=Glib::RefPtr&lt; Gdk::Device &gt;())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popup</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a2f38e19991809fc8bcef157868b3646e</anchor>
      <arglist>(const SlotPositionCalc &amp;position_calc_slot, guint button, guint32 activate_time, const Glib::RefPtr&lt; Gdk::Device &gt; &amp;device=Glib::RefPtr&lt; Gdk::Device &gt;())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popup</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a0cff8493262c23e46498b1b592e43b81</anchor>
      <arglist>(guint button, guint32 activate_time, const Glib::RefPtr&lt; Gdk::Device &gt; &amp;device=Glib::RefPtr&lt; Gdk::Device &gt;())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popup_at_rect</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a0c0be16195372fb61a26253c55fbe67c</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Window &gt; &amp;rect_window, const Gdk::Rectangle &amp;rect, Gdk::Gravity rect_anchor, Gdk::Gravity menu_anchor, const GdkEvent *trigger_event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popup_at_widget</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a407bd360b5fce356493ccfe3379e604c</anchor>
      <arglist>(Widget *widget, Gdk::Gravity widget_anchor, Gdk::Gravity menu_anchor, const GdkEvent *trigger_event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popup_at_pointer</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a4b5f00c1684891c1362c5c6f8eee3fd1</anchor>
      <arglist>(const GdkEvent *trigger_event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reposition</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a84f2f1e74ba1a6316077a4dcee13ed87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popdown</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a976bd97bc3879ed371cf9ef178a40543</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MenuItem *</type>
      <name>get_active</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>ab7ea3340aadb2c3afcedcd65ac6d3398</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const MenuItem *</type>
      <name>get_active</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>aacbd92ec63b1b8d98d90429f0dcdfa2b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_active</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a392d8010777bde0686aa904b73db265a</anchor>
      <arglist>(guint index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_accel_group</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a82f9e1d2e501b7cacec74bb9e3c7e4ce</anchor>
      <arglist>(const Glib::RefPtr&lt; AccelGroup &gt; &amp;accel_group)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_accel_group</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a7202ceac91d65cbf09def78c4f7e6628</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; AccelGroup &gt;</type>
      <name>get_accel_group</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a7bdd6c75710d48e4655bb28a4fb822cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const AccelGroup &gt;</type>
      <name>get_accel_group</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>aa9620d30b2f77260e826f785591624a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_accel_path</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>aa67f1f54bd72aa580e87150c5860a4b3</anchor>
      <arglist>(const Glib::ustring &amp;accel_path)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_accel_path</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>af252432d136900f11e622e798d352ba1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>detach</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a56101a2dfae44d7b5ae4220b7acac006</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_attach_widget</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a13e438d2b9e678178ab83eb20f4ab3fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_attach_widget</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>ac84c0e8179c5d0740137433019364c0a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tearoff_state</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>ab6c92b23e8efc7524882ca11ef956178</anchor>
      <arglist>(bool torn_off=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_tearoff_state</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a2c77bbf05cb9af10596df8f4eb15ed71</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_title</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a53cd143ce2b01b865fcf0171691623a8</anchor>
      <arglist>(const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_title</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a8c2228e776a0f1f8e3a3328c7e5f83a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_title</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a374e0a72b4595a01489409e48e7159cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_screen</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a7ee89975364a523c4662a188c02eaf28</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Screen &gt; &amp;screen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attach</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a553a507018a5b411c6e839d710cd5805</anchor>
      <arglist>(Gtk::Widget &amp;child, guint left_attach, guint right_attach, guint top_attach, guint bottom_attach)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_monitor</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a3a407327705ee7a135674fb7d75732a4</anchor>
      <arglist>(int monitor_num)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_monitor</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>aa172c1772304904c1f505f203a02014a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reorder_child</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>ab4c6d8d9f9c915c1fab7344440cb6e7e</anchor>
      <arglist>(const MenuItem &amp;child, int position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_reserve_toggle_size</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>ad605265ee9bc5ead53d9eb1bb1edbb06</anchor>
      <arglist>(bool reserve_toggle_size=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_reserve_toggle_size</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a43cf58cc993b1faa96ac44cf65baf7e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attach_to_widget</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a192b045df4c37eaff1277e3589960ac7</anchor>
      <arglist>(Widget &amp;attach_widget)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Gdk::Rectangle *, const Gdk::Rectangle *, bool, bool &gt;</type>
      <name>signal_popped_up</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>aca9f09f5b186747096d7ee990972e245</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_active</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a5234928809fcecd285c21e059ce80fdf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_active</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a68d485f67dcf478ff2ff955410f30a66</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; AccelGroup &gt; &gt;</type>
      <name>property_accel_group</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a3072a6188c6ef0c63d03c6f898d333c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; AccelGroup &gt; &gt;</type>
      <name>property_accel_group</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a873b2f97047e59d71a23813fa7ea5b8a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_accel_path</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a227bc4e9e09ba4112b3897eba25db725</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_accel_path</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a4754dea9af292a50a6a07956710e600e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_attach_widget</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>aa6f855f8de5c4761c3ba10bbf7a1b875</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_attach_widget</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a8fd41fc1e77f12963057ed15195bcce2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_tearoff_title</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>aee4f3d92eb579b5bb1ac2d4b5190e3f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_tearoff_title</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a28cd1b19740eedf5631431aa3c8270c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_tearoff_state</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a42dc536c6c5779a1e85c2b2074f2ea1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_tearoff_state</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a0d9f6b952ca6fe0be789d75370bfdf21</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_monitor</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a6bca3a31c81980a0521a10a00b1918a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_monitor</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a15616459b3634263378a66672deb3e6c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_reserve_toggle_size</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a5b3c8b0d7890081ed503b7a5e4c46c2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_reserve_toggle_size</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>ad13f3d381b2db3e2814029d0dee44508</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::AnchorHints &gt;</type>
      <name>property_anchor_hints</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a1d3f4b056be00ac66515e6e6a6524874</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::AnchorHints &gt;</type>
      <name>property_anchor_hints</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>ac43bb6117ba604aff34d26053d8a6441</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_rect_anchor_dx</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>aa24ba69c9016701f8877fb66d41c806a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_rect_anchor_dx</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>acebe6e40226d19dc55bb99f9a8325e44</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_rect_anchor_dy</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>aae13710ec04b62bb42e7b22fba33afd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_rect_anchor_dy</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a9ad68dc514f6947c438a3a2cbe1ec1fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::WindowTypeHint &gt;</type>
      <name>property_menu_type_hint</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a0e9fe60a567430ce02f8ac0c1d0f157c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::WindowTypeHint &gt;</type>
      <name>property_menu_type_hint</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>ae7fc553a31e07d43c1902579d4c2f903</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>aaedb8166770bc9fdff707c4824c71499</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>void(*</type>
      <name>GtkMenuDetachFunc</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a3826a4c0308262290f2cc44e0a5a139d</anchor>
      <arglist>)(GtkWidget *attach_widget, GtkMenu *menu)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>attach_to_widget</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>abbeea8311b50e1c2c180d83206431d71</anchor>
      <arglist>(Widget &amp;attach_widget, GtkMenuDetachFunc detacher)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Menu *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Menu.html</anchorfile>
      <anchor>a553dba6e5634da8fcf6381bc83bbc20f</anchor>
      <arglist>(GtkMenu *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::MenuBar</name>
    <filename>classGtk_1_1MenuBar.html</filename>
    <base>Gtk::MenuShell</base>
    <member kind="function">
      <type></type>
      <name>MenuBar</name>
      <anchorfile>classGtk_1_1MenuBar.html</anchorfile>
      <anchor>a097307764174c7ea1853bf67bafb623b</anchor>
      <arglist>(MenuBar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>MenuBar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1MenuBar.html</anchorfile>
      <anchor>a44eb9aab906a91551cf7fc58a9192a6b</anchor>
      <arglist>(MenuBar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MenuBar</name>
      <anchorfile>classGtk_1_1MenuBar.html</anchorfile>
      <anchor>abcc47b4a11b57c5e4c38d96703baa7bd</anchor>
      <arglist>(const MenuBar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>MenuBar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1MenuBar.html</anchorfile>
      <anchor>acb1fce3599045a726c9809ee22e3dcf8</anchor>
      <arglist>(const MenuBar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MenuBar</name>
      <anchorfile>classGtk_1_1MenuBar.html</anchorfile>
      <anchor>a405cb0364fef74b3bfdaabfd2c255f65</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkMenuBar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1MenuBar.html</anchorfile>
      <anchor>a3c2333c3c7c03939590bb2e41b4aaa63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkMenuBar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1MenuBar.html</anchorfile>
      <anchor>a3e7df05b207812ee2abca13e8c0f26e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MenuBar</name>
      <anchorfile>classGtk_1_1MenuBar.html</anchorfile>
      <anchor>af22ff68994bd4e05219d05bccaff742a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MenuBar</name>
      <anchorfile>classGtk_1_1MenuBar.html</anchorfile>
      <anchor>af1563834e3bc98a8fc2411c74b3184b3</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::MenuModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>PackDirection</type>
      <name>get_pack_direction</name>
      <anchorfile>classGtk_1_1MenuBar.html</anchorfile>
      <anchor>a52b17fd42acc60cdc73fb58ae65cce5c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_pack_direction</name>
      <anchorfile>classGtk_1_1MenuBar.html</anchorfile>
      <anchor>ab3d45aaf7918bf618d67e99ed808f562</anchor>
      <arglist>(PackDirection pack_dir)</arglist>
    </member>
    <member kind="function">
      <type>PackDirection</type>
      <name>get_child_pack_direction</name>
      <anchorfile>classGtk_1_1MenuBar.html</anchorfile>
      <anchor>a242f8d401aec20d0c6df11c764c4488e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_child_pack_direction</name>
      <anchorfile>classGtk_1_1MenuBar.html</anchorfile>
      <anchor>a26fa154c7dde42f715ac94f989cd8b0d</anchor>
      <arglist>(PackDirection child_pack_dir)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; PackDirection &gt;</type>
      <name>property_pack_direction</name>
      <anchorfile>classGtk_1_1MenuBar.html</anchorfile>
      <anchor>a9f29ef3395b019eae61b08f07b4c370e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; PackDirection &gt;</type>
      <name>property_pack_direction</name>
      <anchorfile>classGtk_1_1MenuBar.html</anchorfile>
      <anchor>a97b9d4ed008e332ce09275498108714e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; PackDirection &gt;</type>
      <name>property_child_pack_direction</name>
      <anchorfile>classGtk_1_1MenuBar.html</anchorfile>
      <anchor>a3bc21faa3a2a49ff065a7997785740e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; PackDirection &gt;</type>
      <name>property_child_pack_direction</name>
      <anchorfile>classGtk_1_1MenuBar.html</anchorfile>
      <anchor>ae9ec3a8de740d55957b8e3c405828871</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1MenuBar.html</anchorfile>
      <anchor>a3676f86b1a41f4fb8e25ed7ec0a8127c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::MenuBar *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1MenuBar.html</anchorfile>
      <anchor>a7dd4fa20cd355a993c3936fede2cf0f3</anchor>
      <arglist>(GtkMenuBar *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::MenuButton</name>
    <filename>classGtk_1_1MenuButton.html</filename>
    <base>Gtk::ToggleButton</base>
    <member kind="function">
      <type></type>
      <name>MenuButton</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a21f9162c78fce734eb023043cc5848aa</anchor>
      <arglist>(MenuButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>MenuButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a274850e31c630fc4acfce1ce85c83124</anchor>
      <arglist>(MenuButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MenuButton</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>aefce03398cb863c112513556a85e2312</anchor>
      <arglist>(const MenuButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>MenuButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a4c1c67bfc5d19a1dd386f72a459be455</anchor>
      <arglist>(const MenuButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MenuButton</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>af900ba072fb8345cc0fafa7fe181a316</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkMenuButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a2fcf20f090af5395ddb2804f2ad80d0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkMenuButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a556045fda313a3f7d3a6056e93981990</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MenuButton</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a8e235264ece5ce91e05ac289dc79b15f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_menu</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a9d05ba03f5cbad98b97e8ab225eafae3</anchor>
      <arglist>(Menu &amp;menu)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_menu</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a1bccd6658c3df2d11507adbdfb59e732</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Menu *</type>
      <name>get_menu</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a062db329147c35b95273c87a24147224</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Menu *</type>
      <name>get_menu</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a084adf68bf16a65e6aebdadd0e91e8b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_popup</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>ad5f9087e7e56f5e8b3e679edc8599291</anchor>
      <arglist>(Menu &amp;menu)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_popup</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a70bd82bebeebb29aa39aeea89a752106</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Menu *</type>
      <name>get_popup</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a1a60c701367e6d71feb86b788ed12889</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Menu *</type>
      <name>get_popup</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a6a9f01ed0fc90795b4a4fe290401dfd9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_popover</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>ae84a046ed1a43940976d93e317f0b67a</anchor>
      <arglist>(Popover &amp;popover)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_popover</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a0875556f797993029a4c40043e4dff8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Popover *</type>
      <name>get_popover</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a717780cd62b892e654672a3e7cfc8555</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Popover *</type>
      <name>get_popover</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a9b044435affe63ca2d681b3beab81455</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_popover</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a4859dabd299582d1022754a5c2a19731</anchor>
      <arglist>(bool use_popover=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_use_popover</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a516bb52f7479c138d7e85462534edfa3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_direction</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>ae685281383022cec34b111675969ac5b</anchor>
      <arglist>(ArrowType direction)</arglist>
    </member>
    <member kind="function">
      <type>ArrowType</type>
      <name>get_direction</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a8df02cefd5d440a9aee7fc8125e355f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_menu_model</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>af93de0eac741c8ca3d5f68b69f305bc8</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gio::MenuModel &gt; &amp;menu_model)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_menu_model</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a3b96f9cbbeabf493a1d6e3ce32a730d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::MenuModel &gt;</type>
      <name>get_menu_model</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a7b1351048530505379fe6d9ef062018a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::MenuModel &gt;</type>
      <name>get_menu_model</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a5976cb6a0dfe8767e08966962ae421a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_align_widget</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a949acb785a63451bc6b8bff23c59e4c2</anchor>
      <arglist>(Widget &amp;align_widget)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_align_widget</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a27fb99dea28399c8d902cf6effa1a54a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_align_widget</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>ad41806afbf18ef9492a99fc23e2f23a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Menu * &gt;</type>
      <name>property_menu</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>ae56190dfe7c02ee9d5ed7cb3dc56c3f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Menu * &gt;</type>
      <name>property_menu</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a657ba5638ff3290ac433fe503eeb8a5c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Menu * &gt;</type>
      <name>property_popup</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a8f8d0d525f11215c4cfa5393f97b4cdc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Menu * &gt;</type>
      <name>property_popup</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a7210a964e36a7913e7258300ae11863b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::MenuModel &gt; &gt;</type>
      <name>property_menu_model</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a691886f7973e144366402b4b1221b10f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::MenuModel &gt; &gt;</type>
      <name>property_menu_model</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>ac066144f738d240f7e245f17de542207</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_align_widget</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a2d074ae60ead3de555fb09caa7584f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_align_widget</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a4be375ee02dd9852a77396691f384526</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; ArrowType &gt;</type>
      <name>property_direction</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a584bf66fa518ef4fdc523abd466a1874</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; ArrowType &gt;</type>
      <name>property_direction</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>aef0aea433d16b078d6b69c59aca8abf4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_popover</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>ac6d692a8ee018e051aca15970dcd9b21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_popover</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a024aea50889fa41ec8f8618e8ebda3e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Popover * &gt;</type>
      <name>property_popover</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a7ef7664999fac495069bbbcdd6661bfb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Popover * &gt;</type>
      <name>property_popover</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a3bb5ea5d472bf9cb2db9dbe2ea7e2859</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>ad3c3177ae2df2ce92b0d5c4a34629c7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::MenuButton *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1MenuButton.html</anchorfile>
      <anchor>a9e338a776e234e33f534395f66327856</anchor>
      <arglist>(GtkMenuButton *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::MenuItem</name>
    <filename>classGtk_1_1MenuItem.html</filename>
    <base>Gtk::Bin</base>
    <base>Gtk::Activatable</base>
    <member kind="function">
      <type></type>
      <name>MenuItem</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>a0d55ea9c35fb433515f40293bb7c51e4</anchor>
      <arglist>(MenuItem &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>MenuItem &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>a8bb6d1fa08fdfbfc3eff0c09ecd4628f</anchor>
      <arglist>(MenuItem &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MenuItem</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>a79573a29c4b7e7504a189215b3e05201</anchor>
      <arglist>(const MenuItem &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>MenuItem &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>aef0207a39c8eb969e95557f474d6b1a1</anchor>
      <arglist>(const MenuItem &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MenuItem</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>acd81f13a1e586af9ffa77454e2175d1c</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkMenuItem *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>aa83fe08a8b6c5e36a7c464c5f2faf946</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkMenuItem *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>a0a65458b00dcc51d4c70402aa3fb0d75</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MenuItem</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>abe8561213a14b2faffb35119bce57f2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MenuItem</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>ae0b938d1b77bdc4eb09dc5b409f097cd</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MenuItem</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>ad82cb0e4f61fc508931afcef777f4ccf</anchor>
      <arglist>(const Glib::ustring &amp;label, bool mnemonic=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_submenu</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>ae3951835f8bb7fe881e008fc54bb2ff8</anchor>
      <arglist>(Menu &amp;submenu)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_submenu</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>a46d3f1716a7a6144e36240832d2958e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Menu *</type>
      <name>get_submenu</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>a4de6be224402ed50a44cdbafc61e24d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Menu *</type>
      <name>get_submenu</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>a84f789d277f0db653be6fd7c85fd49c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_submenu</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>ac300f7a6ee887cc399e4e285858e8c68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>acbd74c3c4fb5eff9c238db54c7cc13a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deselect</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>a25ddb97e1aa88646574f08072e6bf4d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>activate</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>a179bcd821b6b0fd97abaa220bf2b6117</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggle_size_request</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>a888020af1f4bc730d1230fbb15d9cede</anchor>
      <arglist>(int &amp;requisition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggle_size_allocate</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>acff2f9cdafad85ef444519267db70f1d</anchor>
      <arglist>(int allocation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_right_justified</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>a553c5e08626a712c1e6a1d202514dd05</anchor>
      <arglist>(bool right_justified=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_right_justified</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>ad5335f2d6f949ae0011aecf624ddc5d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_accel_path</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>aab05629dd1ed0bb52b3efaf197e5b675</anchor>
      <arglist>(const Glib::ustring &amp;accel_path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_accel_path</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>ac79fcb5d1205a257c41831b0f1a0cfba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_accel_path</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>a0995c1fb32e2bd9aaf93dcc70eb4a448</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_label</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>a23d706afac024398138c7e92fb306654</anchor>
      <arglist>(const Glib::ustring &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_label</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>a6418a2af3cb9b174d1fef5bbccafd1bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_underline</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>abb52d0aa35d76834d4c06583d4bad8d6</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_use_underline</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>a723a2f31b4c17ee1a27dc057ea74b5f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_reserve_indicator</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>a593dfb0181cbeaa79bd0cb5a69621efe</anchor>
      <arglist>(bool reserve=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_reserve_indicator</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>a0c9de76af5912d3338799460f37edbe1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_activate</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>a2c6e91435a4598b7f912da247e21c90e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_activate_item</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>aecbfb527976dcd4096146ff6429d55a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, int * &gt;</type>
      <name>signal_toggle_size_request</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>a5981c448540f74b8463c4b4a1f035b34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, int &gt;</type>
      <name>signal_toggle_size_allocate</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>a5c70ae6e1af98716329131e09069ee14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_select</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>acae8806ec6b081b06458460a79b95ff2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_deselect</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>af19d2e5ab4d725ce147822568a90ac84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accelerate</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>a5f158ad38075bd92350fed34345e65cb</anchor>
      <arglist>(Window &amp;window)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_right_justified</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>ad9a5e4b5012986b55fa3c048cd3a8558</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_right_justified</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>af6150f235d4c36694d667ccdef3c4cd7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gtk::Menu * &gt;</type>
      <name>property_submenu</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>acfa47d7288a7cec5f815661b5113909a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gtk::Menu * &gt;</type>
      <name>property_submenu</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>a26a15ff6c50d1656125f50fcc4d1545c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_accel_path</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>a6b4e2fba7a32b2dd3d1e479259baa910</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_accel_path</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>ae5016595b0b08aa17e5a7811d0b9cabe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_label</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>a3da7bb1f69d1bf262d0caa1a59e8bfbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_label</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>a7d3f306cfcc9b25bc29b22a67cb6fa2c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_underline</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>a8176108a96c3a7b790e1f76400e72507</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_underline</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>a8cab09e99d61014ac14c4926155ab455</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>a34c2663e72925047fda1bbaf66587615</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_activate</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>ad08b2b0cc4e753528c7c7e909f4e86ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_activate_item</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>a1d416c1c68b4bc31f657d1f815f1e2fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_toggle_size_request</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>a947cc82d06e3d1d26c08c5e49311090c</anchor>
      <arglist>(int *requisition)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_toggle_size_allocate</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>af962b02e1e0f70341452cb61e635684c</anchor>
      <arglist>(int allocation)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>add_accel_label</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>a4f96c9c7395e5befe65f71ba6a182cc7</anchor>
      <arglist>(const Glib::ustring &amp;label, bool mnemonic=true)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set_accel_key</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>a2b6e88fcfd9583f6f3a13e57c6cf47ee</anchor>
      <arglist>(const AccelKey &amp;accel_key)</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Menu_Helpers::Element</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>a83342ae878f73f7ad57b01e615dec1e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Gtk::MenuItem *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1MenuItem.html</anchorfile>
      <anchor>a0aa2192319575d08b552cab3a865cc0a</anchor>
      <arglist>(GtkMenuItem *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::MenuShell</name>
    <filename>classGtk_1_1MenuShell.html</filename>
    <base>Gtk::Container</base>
    <member kind="function">
      <type></type>
      <name>MenuShell</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>aeb208b588f4f18b8445d8accb547b606</anchor>
      <arglist>(MenuShell &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>MenuShell &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>ac67089c04d132b01df2b944fe3749700</anchor>
      <arglist>(MenuShell &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MenuShell</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>a418445d9b04cd3495eac31c0a684f85d</anchor>
      <arglist>(const MenuShell &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>MenuShell &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>aa1dd281992daa382eb6b951de56a2aa2</anchor>
      <arglist>(const MenuShell &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MenuShell</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>a4f58ee4ce02046e9f06786bb79ec9692</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkMenuShell *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>abb7c2641f9e3624f3225dcf76d8b994c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkMenuShell *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>a4417adfb6a301e40a0040517c43e69c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>a3440036b3c0264c183f76458dc2cbe7d</anchor>
      <arglist>(MenuItem &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepend</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>a7c92fe5fa955194cf2a67cab4af41ceb</anchor>
      <arglist>(MenuItem &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>ab047597f89e388b9102fdb46858b9dbc</anchor>
      <arglist>(MenuItem &amp;child, int position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select_item</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>ac38fde346621b24154540f83243956fd</anchor>
      <arglist>(MenuItem &amp;menu_item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deselect</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>ab90ff16ed2fcba9aa3460569d45f1c1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>activate_item</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>a6e5136fc61381ae6f2e529906066680a</anchor>
      <arglist>(MenuItem &amp;menu_item, bool force_deactivate=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select_first</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>a882dab72c89e462a879a6b6179464cc2</anchor>
      <arglist>(bool search_sensitive=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deactivate</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>a9b6af9110758ce34856b005b19a7a2fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancel</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>abc8e49ce84e81319c81bdc58020245c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_deactivate</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>a31453fa842b4f8b3054ee6a1955a4a7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_selection_done</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>acec68f1c5d7d5b1eabe757bdfe1416a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; gboolean, int &gt;</type>
      <name>signal_move_selected</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>a006ad34399d0eba938a7d1680e4a2928</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, Widget *, int &gt;</type>
      <name>signal_insert</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>a6e74e04475c2a037280d7c6cc2c869d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accelerate</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>ab871eaa94a1566f520beb132ba3794c4</anchor>
      <arglist>(Window &amp;window)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accelerate</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>ab854722984e3fc3e85d2ad7c7ba20c2f</anchor>
      <arglist>(Widget &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_take_focus</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>a959971445f815ecfcc2f3d3cda24708a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_take_focus</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>ac076143bf45a4c69cd65965a7779a963</anchor>
      <arglist>(bool take_focus=true)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_selected_item</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>ac3375cd37c8bd2f6889fc3f8ceb9ae06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_selected_item</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>a369664089f829ca77bd4e5d785d78fdf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_parent_shell</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>a3a750f0d5197ac7ea6b3a315284dfc19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_parent_shell</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>a5b183b07352eb61ad3fede102ab7cf25</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bind_model</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>a17db1b8c9ae8f466f55213d1d4a653c1</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::MenuModel &gt; &amp;model, const Glib::ustring &amp;action_namespace, bool with_separators)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bind_model</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>ad4cdfa9861e8b8d3b6119791c126bc4d</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::MenuModel &gt; &amp;model, bool with_separators)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_take_focus</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>a5aa0e2a3182a8b8ed7dca7d05079900a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_take_focus</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>accdbb49ff6b56ed86d814172e5eabf4f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>af751b3b47b5012e3e61d8c8222987141</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_deactivate</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>aeceb71b253394dbc8ca282feb8ae8e58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_selection_done</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>a407cbaed85670dc36c35a67cdefd015b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual gboolean</type>
      <name>on_move_selected</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>a8e1cb80464296cd7da9b5c1b0a7e5df2</anchor>
      <arglist>(int distance)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>MenuShell</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>a6af3cf3fd23271ebe15daa3210339bfe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::MenuShell *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1MenuShell.html</anchorfile>
      <anchor>a5a3342e817b330a6b353d25c37ea2359</anchor>
      <arglist>(GtkMenuShell *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::MenuToolButton</name>
    <filename>classGtk_1_1MenuToolButton.html</filename>
    <base>Gtk::ToolButton</base>
    <member kind="function">
      <type></type>
      <name>MenuToolButton</name>
      <anchorfile>classGtk_1_1MenuToolButton.html</anchorfile>
      <anchor>ae2f84ef1aa76e3fabea53a9dbc9c375f</anchor>
      <arglist>(MenuToolButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>MenuToolButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1MenuToolButton.html</anchorfile>
      <anchor>ad595cbd90c9148ace679762885c2d33e</anchor>
      <arglist>(MenuToolButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MenuToolButton</name>
      <anchorfile>classGtk_1_1MenuToolButton.html</anchorfile>
      <anchor>acf40c3bf5cfaebfb3b381b302a126b6d</anchor>
      <arglist>(const MenuToolButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>MenuToolButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1MenuToolButton.html</anchorfile>
      <anchor>afdab101d36d61b7e44764653c682c2ad</anchor>
      <arglist>(const MenuToolButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MenuToolButton</name>
      <anchorfile>classGtk_1_1MenuToolButton.html</anchorfile>
      <anchor>a4659adad00613a70168dc6a1c43db4f8</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkMenuToolButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1MenuToolButton.html</anchorfile>
      <anchor>a6d5506c273ce86a54862ba3b70758b47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkMenuToolButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1MenuToolButton.html</anchorfile>
      <anchor>a8f6c8dc97c8977b75b37a8160bbb8a55</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MenuToolButton</name>
      <anchorfile>classGtk_1_1MenuToolButton.html</anchorfile>
      <anchor>a43a1f2351eabf3e6bcbe01f78c3be35c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MenuToolButton</name>
      <anchorfile>classGtk_1_1MenuToolButton.html</anchorfile>
      <anchor>adcf4a930fdc93a3b96bc16fe02688523</anchor>
      <arglist>(const Gtk::StockID &amp;stock_id)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MenuToolButton</name>
      <anchorfile>classGtk_1_1MenuToolButton.html</anchorfile>
      <anchor>ab5b485f92c2517310a51dcc30f95b905</anchor>
      <arglist>(const Glib::ustring &amp;label)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MenuToolButton</name>
      <anchorfile>classGtk_1_1MenuToolButton.html</anchorfile>
      <anchor>a6428aeb6f02e0b7ade8dcacd207c48d2</anchor>
      <arglist>(Widget &amp;icon_widget, const Glib::ustring &amp;label=Glib::ustring())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_menu</name>
      <anchorfile>classGtk_1_1MenuToolButton.html</anchorfile>
      <anchor>a9ec12649e132fd492160be1788546705</anchor>
      <arglist>(Menu &amp;menu)</arglist>
    </member>
    <member kind="function">
      <type>Menu *</type>
      <name>get_menu</name>
      <anchorfile>classGtk_1_1MenuToolButton.html</anchorfile>
      <anchor>a39f2d1c846be54a1eca80c93f84fafaa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Menu *</type>
      <name>get_menu</name>
      <anchorfile>classGtk_1_1MenuToolButton.html</anchorfile>
      <anchor>acee1adbcde9520b35caa103539928251</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_arrow_tooltip_text</name>
      <anchorfile>classGtk_1_1MenuToolButton.html</anchorfile>
      <anchor>a59259aa6cb99757c9a459315c6d60b15</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_arrow_tooltip_markup</name>
      <anchorfile>classGtk_1_1MenuToolButton.html</anchorfile>
      <anchor>a64097d80577cf2eae567ca100e7a286c</anchor>
      <arglist>(const Glib::ustring &amp;markup)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_show_menu</name>
      <anchorfile>classGtk_1_1MenuToolButton.html</anchorfile>
      <anchor>a5996a08f2c9f4d1fc04b4b43d5139cbd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Menu * &gt;</type>
      <name>property_menu</name>
      <anchorfile>classGtk_1_1MenuToolButton.html</anchorfile>
      <anchor>ab7dfe3722f22381ed4f4bbffbf921c28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Menu * &gt;</type>
      <name>property_menu</name>
      <anchorfile>classGtk_1_1MenuToolButton.html</anchorfile>
      <anchor>a6011bd3b0817ca605db6a7fa18097ac2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1MenuToolButton.html</anchorfile>
      <anchor>a34d4cb6ba0103fbd1b930507a522be7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_show_menu</name>
      <anchorfile>classGtk_1_1MenuToolButton.html</anchorfile>
      <anchor>a261f2932985ebd7ad526661b9bf14d64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::MenuToolButton *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1MenuToolButton.html</anchorfile>
      <anchor>ae20b5bb8c723c755dbc71532da249de0</anchor>
      <arglist>(GtkMenuToolButton *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::MessageDialog</name>
    <filename>classGtk_1_1MessageDialog.html</filename>
    <base>Gtk::Dialog</base>
    <member kind="function">
      <type></type>
      <name>MessageDialog</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a955a6e0fe8dc55a8619af1510608f2eb</anchor>
      <arglist>(MessageDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>MessageDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>adeb5e1bbe24b37b4c2320eb35d6f0612</anchor>
      <arglist>(MessageDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MessageDialog</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a80fa2453f502cbd14290defe50d23a3d</anchor>
      <arglist>(const MessageDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>MessageDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>af78e4e71024caf74928e78a15a576e37</anchor>
      <arglist>(const MessageDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MessageDialog</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a112f9a4fb50a131b2c226ee0da1aa781</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkMessageDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a6019fc42bcc8e891dfbcc6565939ec8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkMessageDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a53ab4665373026c6c78782520ab3596d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MessageDialog</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>af75d4e69f0b2cfee295e30b4c750a083</anchor>
      <arglist>(const Glib::ustring &amp;message, bool use_markup=false, MessageType type=MESSAGE_INFO, ButtonsType buttons=BUTTONS_OK, bool modal=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MessageDialog</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a2c6913541f2796c8a523985e5e896909</anchor>
      <arglist>(Gtk::Window &amp;parent, const Glib::ustring &amp;message, bool use_markup=false, MessageType type=MESSAGE_INFO, ButtonsType buttons=BUTTONS_OK, bool modal=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_image</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a2d4208ebc4b86fef93c0429a98449484</anchor>
      <arglist>(Widget &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_image</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a5483cf24e8660a6f1348c40fc2e66fa2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_image</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a7d232bb0d38aff353de8725cbd2372f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_message</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a97e975958f9e913192c247d58e89f700</anchor>
      <arglist>(const Glib::ustring &amp;message, bool use_markup=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_secondary_text</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a49622e7b678a27beb868688d384ca232</anchor>
      <arglist>(const Glib::ustring &amp;text, bool use_markup=false)</arglist>
    </member>
    <member kind="function">
      <type>Box *</type>
      <name>get_message_area</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>ab514233dce507f797ecb83021bd65930</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Box *</type>
      <name>get_message_area</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>aaede8ef4fce7f5c7f98d26ccc2c0fab3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; MessageType &gt;</type>
      <name>property_message_type</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a9d31588c87592a70a3515aeb4ca346b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; MessageType &gt;</type>
      <name>property_message_type</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>ab9fe85a46429cfc9cb193cad0d28778f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_text</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a601dd1b9c96f77e67fccdcc8f0920371</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_text</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>ae571df7f2f082026b54ce76ef253a64f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_markup</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a491696ff6f8c0888076814e7686980a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_markup</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>ad06728b6f013d7a2c20a939adb53ef49</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_secondary_text</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>ac96632705e65db903999ab99fdee1242</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_secondary_text</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a0ea48a0475f707ea178b837d950603b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_secondary_use_markup</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a62abf769f06003a4253f2e2b3a098d69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_secondary_use_markup</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>af0eb127bd2eb86476e8ab7754e3b5d20</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_image</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a2451a32cceb9196f30820b02e019c5fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_image</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a1677414e05ca6327f659f62739f759a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Box * &gt;</type>
      <name>property_message_area</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a68e94263ea885d3b6217d3c4c732b13b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>a01e92bc47a01c904eb4ef915fd1b2d55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::MessageDialog *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1MessageDialog.html</anchorfile>
      <anchor>ab4333c7a2ff712f285e879653a6c324a</anchor>
      <arglist>(GtkMessageDialog *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Misc</name>
    <filename>classGtk_1_1Misc.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>Misc</name>
      <anchorfile>classGtk_1_1Misc.html</anchorfile>
      <anchor>a5499f3a3ce8d592c924396f5ef202455</anchor>
      <arglist>(Misc &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Misc &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Misc.html</anchorfile>
      <anchor>afdd56db968764e1547de34faeb41b8bc</anchor>
      <arglist>(Misc &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Misc</name>
      <anchorfile>classGtk_1_1Misc.html</anchorfile>
      <anchor>aa3ffab21f16af7b5ce23a9aeab981aa8</anchor>
      <arglist>(const Misc &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Misc &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Misc.html</anchorfile>
      <anchor>aeabda5656895e61c7458ec18e89bc9cd</anchor>
      <arglist>(const Misc &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Misc</name>
      <anchorfile>classGtk_1_1Misc.html</anchorfile>
      <anchor>a92957bf5d39d67f2134c8edb202664a0</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkMisc *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Misc.html</anchorfile>
      <anchor>a542556cc6ec31f3a33eda39b75cfa3a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkMisc *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Misc.html</anchorfile>
      <anchor>a6cfcf3a8abda85419ae8dd05e2fb192f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_alignment</name>
      <anchorfile>classGtk_1_1Misc.html</anchorfile>
      <anchor>a52b2675874cf46a3097938756b9fe9e8</anchor>
      <arglist>(float xalign=0.0, float yalign=0.5)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_alignment</name>
      <anchorfile>classGtk_1_1Misc.html</anchorfile>
      <anchor>adc0ad82a0d07604a1bf93b1b4f94df71</anchor>
      <arglist>(Align xalign=Gtk::ALIGN_START, Align yalign=Gtk::ALIGN_CENTER)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_alignment</name>
      <anchorfile>classGtk_1_1Misc.html</anchorfile>
      <anchor>a33c9f1234733ade8faf9c8d267b52d22</anchor>
      <arglist>(float &amp;xalign, float &amp;yalign) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_padding</name>
      <anchorfile>classGtk_1_1Misc.html</anchorfile>
      <anchor>ae030e331f148d0a6f8d56d4b09d453ef</anchor>
      <arglist>(int xpad, int ypad)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_padding</name>
      <anchorfile>classGtk_1_1Misc.html</anchorfile>
      <anchor>a15beed100609e7c42b3ca73421d2291d</anchor>
      <arglist>(int &amp;xpad, int &amp;ypad) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; float &gt;</type>
      <name>property_xalign</name>
      <anchorfile>classGtk_1_1Misc.html</anchorfile>
      <anchor>ac181c844d2fe2b43dbda2f23a4231a81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; float &gt;</type>
      <name>property_xalign</name>
      <anchorfile>classGtk_1_1Misc.html</anchorfile>
      <anchor>a5046590535be0e6930ce17f9cf824953</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; float &gt;</type>
      <name>property_yalign</name>
      <anchorfile>classGtk_1_1Misc.html</anchorfile>
      <anchor>ab67c479521501ac9ccfd689d874da0c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; float &gt;</type>
      <name>property_yalign</name>
      <anchorfile>classGtk_1_1Misc.html</anchorfile>
      <anchor>a655ae7b3d31c7c11aa6a7623e643a6e0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_xpad</name>
      <anchorfile>classGtk_1_1Misc.html</anchorfile>
      <anchor>a2cc61421fbcd8fc6a1b7642021a1c957</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_xpad</name>
      <anchorfile>classGtk_1_1Misc.html</anchorfile>
      <anchor>a25d7c4f6f25095ccba12c30fbfd190bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_ypad</name>
      <anchorfile>classGtk_1_1Misc.html</anchorfile>
      <anchor>ae51c9a39ad4d2fb1b0aa91f7d4c30927</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_ypad</name>
      <anchorfile>classGtk_1_1Misc.html</anchorfile>
      <anchor>a64c3b42c62932797c2a5eeb3c3ffda40</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Misc.html</anchorfile>
      <anchor>a25be146515654b36a1ee1e1fce04ea59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Misc</name>
      <anchorfile>classGtk_1_1Misc.html</anchorfile>
      <anchor>a8592d75a3371b3261a9e132fe65098c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Misc *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Misc.html</anchorfile>
      <anchor>a8350d4817f03a77df991dd1960d77505</anchor>
      <arglist>(GtkMisc *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ModelButton</name>
    <filename>classGtk_1_1ModelButton.html</filename>
    <base>Gtk::Button</base>
    <member kind="function">
      <type></type>
      <name>ModelButton</name>
      <anchorfile>classGtk_1_1ModelButton.html</anchorfile>
      <anchor>adfe063bd9a9b49cf40ce2e049064103f</anchor>
      <arglist>(ModelButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ModelButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ModelButton.html</anchorfile>
      <anchor>ac80cf81169b31f56b9bb6332ee486de3</anchor>
      <arglist>(ModelButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ModelButton</name>
      <anchorfile>classGtk_1_1ModelButton.html</anchorfile>
      <anchor>a8eef6cb9a7bc0b1ee558025757a48011</anchor>
      <arglist>(const ModelButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ModelButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ModelButton.html</anchorfile>
      <anchor>a560a242a1098576f8f544f60f5f9a065</anchor>
      <arglist>(const ModelButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ModelButton</name>
      <anchorfile>classGtk_1_1ModelButton.html</anchorfile>
      <anchor>a4d357dd4957dd6bd67d9efa015e519a3</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkModelButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ModelButton.html</anchorfile>
      <anchor>abeb0d917e99a5723b888062d638b0161</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkModelButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ModelButton.html</anchorfile>
      <anchor>a9e676a64c5a2a02edeeaeaac8bd167b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ModelButton</name>
      <anchorfile>classGtk_1_1ModelButton.html</anchorfile>
      <anchor>a714607e972c96e423bf4557f750715d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; ButtonRole &gt;</type>
      <name>property_role</name>
      <anchorfile>classGtk_1_1ModelButton.html</anchorfile>
      <anchor>aa34a0c8b1175aeb827e19291d4b25507</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; ButtonRole &gt;</type>
      <name>property_role</name>
      <anchorfile>classGtk_1_1ModelButton.html</anchorfile>
      <anchor>ac925402a570ffe9d2bdcf6cca9ecae64</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gio::Icon &gt;</type>
      <name>property_icon</name>
      <anchorfile>classGtk_1_1ModelButton.html</anchorfile>
      <anchor>a0792ec59408bda2f2dd8c4a9fdf1f22d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gio::Icon &gt;</type>
      <name>property_icon</name>
      <anchorfile>classGtk_1_1ModelButton.html</anchorfile>
      <anchor>a6ebd3a4c35f533c4021d20397a4d0a7d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_text</name>
      <anchorfile>classGtk_1_1ModelButton.html</anchorfile>
      <anchor>a7e63f959bf45b169bc0fc91c98350eda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_text</name>
      <anchorfile>classGtk_1_1ModelButton.html</anchorfile>
      <anchor>a1a5a77d0f0b4ff8d98f67c951b253276</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_active</name>
      <anchorfile>classGtk_1_1ModelButton.html</anchorfile>
      <anchor>a7ab499c6eff8ffabd7e6f458efb90010</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_active</name>
      <anchorfile>classGtk_1_1ModelButton.html</anchorfile>
      <anchor>a19d9d4b08de38943c85c40114b6c1e81</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_menu_name</name>
      <anchorfile>classGtk_1_1ModelButton.html</anchorfile>
      <anchor>adbd152de492b97c46ae31303dfb2e942</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_menu_name</name>
      <anchorfile>classGtk_1_1ModelButton.html</anchorfile>
      <anchor>a2060db4682f0f03f3be2fb5681ff9c8b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_inverted</name>
      <anchorfile>classGtk_1_1ModelButton.html</anchorfile>
      <anchor>ac555d1f90f2390ec0529f047d543a7b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_inverted</name>
      <anchorfile>classGtk_1_1ModelButton.html</anchorfile>
      <anchor>a51261976b8e0e203a0453fc915a99915</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_centered</name>
      <anchorfile>classGtk_1_1ModelButton.html</anchorfile>
      <anchor>a3933c16478b23e5eff1351f8dedf543a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_centered</name>
      <anchorfile>classGtk_1_1ModelButton.html</anchorfile>
      <anchor>a85fb9375b8cc8e8f2c320a3f2a81a050</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_iconic</name>
      <anchorfile>classGtk_1_1ModelButton.html</anchorfile>
      <anchor>a8e910ad6aafb071343a838e2cd194dc9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_iconic</name>
      <anchorfile>classGtk_1_1ModelButton.html</anchorfile>
      <anchor>a13b3b1f66b81da5f83df04674e7e2c0c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ModelButton.html</anchorfile>
      <anchor>a1cd23640e14fd02805bcd34c7759c2e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ModelButton *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ModelButton.html</anchorfile>
      <anchor>a97d8f13f91a5def6bf9af10e669023f0</anchor>
      <arglist>(GtkModelButton *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::NativeDialog</name>
    <filename>classGtk_1_1NativeDialog.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>NativeDialog</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a63697c8063e3772d07c436689b2ebcb2</anchor>
      <arglist>(NativeDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>NativeDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a7e3a5bd36c930003f595dbd4e1457a88</anchor>
      <arglist>(NativeDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NativeDialog</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a3aa8b225221de2924fc46eb69bd29f69</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkNativeDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>ad1050682ea9974c3d5f4c9a533a934b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkNativeDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a1db61335ed27cb133f054c1d7e87d032</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkNativeDialog *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>af664d825f247ee6221ea3cdf1aeee8c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>show</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>ab7531d6c65f809ea29f5b399be1927d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hide</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a7c1e9291f292657909f395cd9e564a1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_visible</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>af57973bf115f0a2326b09324dfcffa79</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_modal</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a26ef2d5720db2d66183a96c0fcb2ebb5</anchor>
      <arglist>(bool modal=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_modal</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a372f1edafce1945e71bcead68f02f720</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_title</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a28a9c5c5c26734b37cf4def52da2d673</anchor>
      <arglist>(const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_title</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>acf6e0b6180040e438529bb38309407cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_transient_for</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>ad98a894e95f2cc10a4cf7352ebc6ea04</anchor>
      <arglist>(Window &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_transient_for</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>af8ac4b48c7a934251b53dc346168ab73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Window *</type>
      <name>get_transient_for</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a8986f4f273a82d918b0c13864748b13d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Window *</type>
      <name>get_transient_for</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a1f3a05b167f017f7451f65035ff1a104</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>run</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a20d2829284938c6de56833c2aca323bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a4b7b00352deee14efe2b1890f402bc50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a8b8327df4ea96bc9a7e3471e16551843</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_modal</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a1bde852ef635a4703d1dc82689615912</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_modal</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a70ad7a9f32b2affa69f5888e26d91de7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_visible</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a504a56e2a256decb22c749de7129d003</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_visible</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>ac106154a46bd3dbfb9d6c68426bfbb54</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Window * &gt;</type>
      <name>property_transient_for</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a79b8883cafad34842ff5f5a69e6eb47b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Window * &gt;</type>
      <name>property_transient_for</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a8a60ee27aa6fe7668621a310630c5e41</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, int &gt;</type>
      <name>signal_response</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>ac14275d444ee985a5fb4a009a703e85f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a8ee5cf1446427f62867ada8a74560329</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>NativeDialog</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>aede35973a476ff7dda911888942d4643</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_response</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a7308bb574e67d62a18fe484fd78dde9a</anchor>
      <arglist>(int response_id)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::NativeDialog &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1NativeDialog.html</anchorfile>
      <anchor>a61296ac194efb002554f836ad62a3900</anchor>
      <arglist>(GtkNativeDialog *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Notebook</name>
    <filename>classGtk_1_1Notebook.html</filename>
    <base>Gtk::Container</base>
    <member kind="function">
      <type></type>
      <name>Notebook</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a543c96b4847d53413a35fa607ce67d55</anchor>
      <arglist>(Notebook &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Notebook &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>acbd59cdc621920b60d33b91044eeaba5</anchor>
      <arglist>(Notebook &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Notebook</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>aba4d30c5bd51eba13297e74a5e85a475</anchor>
      <arglist>(const Notebook &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Notebook &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a6eae0a87ddf95ca25f698abdacb16212</anchor>
      <arglist>(const Notebook &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Notebook</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>aec56acf1847bd6a7d1afbd29be082a37</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkNotebook *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>ac1990785090c73c43924d86d25a7035d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkNotebook *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a12ac78311484836a25dd5d16ca2b5214</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Notebook</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a246784cbd4db5dffabb109051364d079</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>prepend_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a35e14985c7a8baa31ad3ba1fbba444f9</anchor>
      <arglist>(Widget &amp;child, Widget &amp;tab_label)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>prepend_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a643a072b9be70fffbcea106153128a4e</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>prepend_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a8ce64c87a2b0a7a3f82f847f7665e099</anchor>
      <arglist>(Widget &amp;child, const Glib::ustring &amp;tab_label, bool use_mnemonic=false)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>prepend_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>ad611194f11a92bcc92a43f976de21d1d</anchor>
      <arglist>(Widget &amp;child, Widget &amp;tab_label, Widget &amp;menu_label)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>prepend_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a3d0993a6d1ce5f2e540242d805d80993</anchor>
      <arglist>(Widget &amp;child, const Glib::ustring &amp;tab_label, const Glib::ustring &amp;menu_label, bool use_mnemonic)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>append_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>af7bdf8ec9f703fb21aec6d372085f38a</anchor>
      <arglist>(Widget &amp;child, Widget &amp;tab_label)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>append_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>ad30547e3efa79994a6faf08939dd33c5</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>append_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a8398c92414dd1e3e5709e33e2611914a</anchor>
      <arglist>(Widget &amp;child, const Glib::ustring &amp;tab_label, bool use_mnemonic=false)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>append_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a3a1f038ff9da250b46af4704e92ac16c</anchor>
      <arglist>(Widget &amp;child, Widget &amp;tab_label, Widget &amp;menu_label)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>append_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>af3d22c96a66611a8c874c25521282101</anchor>
      <arglist>(Widget &amp;child, const Glib::ustring &amp;tab_label, const Glib::ustring &amp;menu_label, bool use_mnemonic=false)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>insert_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a3e12bc0a44aa1bb2adc34d95c251ebef</anchor>
      <arglist>(Widget &amp;child, Widget &amp;tab_label, int position)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>insert_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>acc6a124182c335fff1f92f25c91cb42a</anchor>
      <arglist>(Widget &amp;child, int position)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>insert_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>aa691f645fb2e06163c505ae532e09bf5</anchor>
      <arglist>(Widget &amp;child, const Glib::ustring &amp;tab_label, int position, bool use_mnemonic=false)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>insert_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>aa7c7fb6c19a8dcd1cc0e6a4166cda824</anchor>
      <arglist>(Widget &amp;child, Widget &amp;tab_label, Widget &amp;menu_label, int position)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>insert_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>ad6e61b655c32954bee24d11753d7acd7</anchor>
      <arglist>(Widget &amp;child, const Glib::ustring &amp;tab_label, const Glib::ustring &amp;menu_label, int position, bool use_mnemonic=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>aa6a990b0569647868e322287e9fff65a</anchor>
      <arglist>(int page_number=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a14d7df8f1c31d5c6cd94f5ed30d323d2</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_group_name</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a708defd4951bbd6cad10bc19845e2524</anchor>
      <arglist>(const Glib::ustring &amp;group_name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_group_name</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a085a72d00d8155eb0499eecb80ef3c9f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_current_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>af45cfad58e0d5ed998c551ede9015dff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_nth_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a8fec5a4edf0da1f602632b96e42157cd</anchor>
      <arglist>(int page_number)</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_nth_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a50a61e95cd77b4f7348f95330469159a</anchor>
      <arglist>(int page_number) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_n_pages</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a17edd5bef5671a5a884fc2545f7c0462</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>page_num</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>aa2cdf2cc644073134bf18ab4edb17ecb</anchor>
      <arglist>(const Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_current_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a3973ce8040c5a09cf3d0d109726dfd39</anchor>
      <arglist>(int page_number)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>next_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a541b764b5cfa4477603eee268729d448</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prev_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>aaa68ef247203cb6aa10f9a85bc788bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_border</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a808a962e182f89ab39e4c1ecceec809c</anchor>
      <arglist>(bool show_border=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_border</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a2075d44fc57ecd7741747490772d8017</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_tabs</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a5647410e4057a608182381e90c0d6206</anchor>
      <arglist>(bool show_tabs=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_tabs</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a5952ee70c14940bfba2d2f3e1f210636</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tab_pos</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>abaaff5c44279de084923d72f67d47fec</anchor>
      <arglist>(PositionType pos)</arglist>
    </member>
    <member kind="function">
      <type>PositionType</type>
      <name>get_tab_pos</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>acbb0eb43ee3fe93843c3b5624581602e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_scrollable</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a630bc75ab021187d8a0f51af0088435a</anchor>
      <arglist>(bool scrollable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_scrollable</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a3cc754b00d9e48550ec5be5ca13c7c87</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>guint16</type>
      <name>get_tab_hborder</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>acc9310fa9d6b928c6d93640006b39431</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>guint16</type>
      <name>get_tab_vborder</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a7534bec0f8d175c3e4fe7ed0fd3591b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popup_enable</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>ae3b10dd4426260c6241854429a6843cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popup_disable</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a010a04440ca6d87344da201a4496dc9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_tab_label</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>ab590df63b394d2edb6b96e5d937928e7</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_tab_label</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>af490ae3ddf580c334242b6f2367fb36a</anchor>
      <arglist>(Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tab_label</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a9cc1f87301aa22ca9dc14f86f29db6a4</anchor>
      <arglist>(Widget &amp;child, Widget &amp;tab_label)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tab_label_text</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a6bc59b5a0c766064caf86e9f8ea6958f</anchor>
      <arglist>(Widget &amp;child, const Glib::ustring &amp;tab_text)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_tab_label_text</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>aaee174e90efa5a6f56370e2d45a255cf</anchor>
      <arglist>(Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_menu_label</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>ab481a1f9a5389769a9eaee2cad5be20f</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_menu_label</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a985cd44ebb5218714481d4f326184c9e</anchor>
      <arglist>(Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_menu_label</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a82b0b3ee1e42962df6526d551ad2a8ff</anchor>
      <arglist>(Widget &amp;child, Widget &amp;menu_label)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_menu_label_text</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a0e3bd8b532d0b719d0235a78bfea0aa0</anchor>
      <arglist>(Widget &amp;child, const Glib::ustring &amp;menu_text)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_menu_label_text</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>acfe491e1e01a5198b2966ba0ff14380d</anchor>
      <arglist>(Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reorder_child</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>ae4032dff09c516ed5e5e8aed1a54b5f1</anchor>
      <arglist>(Widget &amp;child, int position)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_tab_reorderable</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>ae6a8a5e6efc38aa1d9824d919a814b44</anchor>
      <arglist>(Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tab_reorderable</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a283f670166e6b40523a73483a69eb075</anchor>
      <arglist>(Widget &amp;child, bool reorderable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_tab_detachable</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>ae02ddaf28050195b7391fb6353420f60</anchor>
      <arglist>(Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tab_detachable</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a7b0555d623c2784dc45b5b3e6aa9c3e1</anchor>
      <arglist>(Widget &amp;child, bool detachable=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>detach_tab</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>afc3693a955efa80d300f6b07c12080b7</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_action_widget</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a43e4c6450fa15d8e290c5ba78ca7b591</anchor>
      <arglist>(PackType pack_type=PACK_START)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_action_widget</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>ad7bbc1f71ebddc1a8b0b5f298e7dd1c1</anchor>
      <arglist>(Widget *widget, PackType pack_type=PACK_START)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, Widget *, guint &gt;</type>
      <name>signal_switch_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>ac3cbcfaab1f66313e1988def8bec0432</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, Widget *, guint &gt;</type>
      <name>signal_page_reordered</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>af1630a1d74270140e2d51ef26e8c7b64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, Widget *, guint &gt;</type>
      <name>signal_page_removed</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a36619a02ed353604117ff1f3adb48dac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, Widget *, guint &gt;</type>
      <name>signal_page_added</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a57fbda7af741570f4aabcf4e080bf027</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; PositionType &gt;</type>
      <name>property_tab_pos</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a1b0d40645e4a691b838d9c01d0fda6d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; PositionType &gt;</type>
      <name>property_tab_pos</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>aa88ba10bddf99be09b3a1f1d731ba354</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_tabs</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a74ac652814342ce02045c4e13123974e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_tabs</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>af72ba89f4f57809babbc6d821b44fe22</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_border</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>acd19a1cd009ac0e22067a7e95e50f95c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_border</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a8b9db71c1743e1256c2fe8580dec3d63</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_scrollable</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>afcfab07ef41aaced825464f1f3bd8434</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_scrollable</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a89cda83486fc6f33eccf60e21066e5bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a6941d718b5bbfcf1a874a46363cc7b37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>add2ae3c3a0971c41ea9a1b25c3d1f294</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_group_name</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a85db9542c79473ea0713c55b69dad8c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_group_name</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a58464ed23902b0ced4c1c486b66804a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_enable_popup</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a5e009a3bc5c3e41febbf54b3ee1e3813</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_enable_popup</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>af04f3afbd0dab4eb27f11fe23d1a65b6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; Glib::ustring &gt;</type>
      <name>child_property_tab_label</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a979e6521bed241f777360d5191cbfab8</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>child_property_tab_label</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a3d2d2c2659af4a1aa772d4277846dac0</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; Glib::ustring &gt;</type>
      <name>child_property_menu_label</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a573b5dbb026546d434dedcf732faf745</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>child_property_menu_label</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a9746205a6a0f7b276f980c45f31aa5d2</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; int &gt;</type>
      <name>child_property_position</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a6e1b62eeb302f0130365c86ce2d9f2fb</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>child_property_position</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>ad9ea54792ee4cb04b2e17cb8e1b3e77e</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; bool &gt;</type>
      <name>child_property_tab_expand</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>acc26153dda7604d67163798b2d1d9b0c</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>child_property_tab_expand</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a35b020c6da8a873e977a27f0f1ed9829</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; bool &gt;</type>
      <name>child_property_tab_fill</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>ab14596b84d84b7a59fb654ab1518adb7</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>child_property_tab_fill</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a1193f03dd063f942ca024c3d3decc3bd</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; bool &gt;</type>
      <name>child_property_reorderable</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>ac950f108f906671423d5bc521b7a0356</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>child_property_reorderable</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a1eb7dd97625a6f76d8ad56198434ebeb</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; bool &gt;</type>
      <name>child_property_detachable</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a5f9b8c7258d67fa295d45821ff0b6d96</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>child_property_detachable</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a9418040d37e67a2044fc56e133f72a6f</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>ab30d3c860480e2e910f7aaf581a4939c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_switch_page</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a7704b94c3967fe8c3e8812680eeb26ee</anchor>
      <arglist>(Widget *page, guint page_number)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Notebook *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Notebook.html</anchorfile>
      <anchor>a1ef95b6a13995a2ca58c44673967287d</anchor>
      <arglist>(GtkNotebook *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::NumerableIcon</name>
    <filename>classGtk_1_1NumerableIcon.html</filename>
    <base>Gio::EmblemedIcon</base>
    <member kind="function">
      <type></type>
      <name>NumerableIcon</name>
      <anchorfile>classGtk_1_1NumerableIcon.html</anchorfile>
      <anchor>a04a6ca61917b70ac45a9068298ba71b6</anchor>
      <arglist>(NumerableIcon &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>NumerableIcon &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1NumerableIcon.html</anchorfile>
      <anchor>af852cbf36708c56dacba6f8da0b92c47</anchor>
      <arglist>(NumerableIcon &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NumerableIcon</name>
      <anchorfile>classGtk_1_1NumerableIcon.html</anchorfile>
      <anchor>a4d3cc9647112dee07d635bc6a6e6ce37</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkNumerableIcon *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1NumerableIcon.html</anchorfile>
      <anchor>ac38792d60d151b2304a7ba3583aa5dab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkNumerableIcon *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1NumerableIcon.html</anchorfile>
      <anchor>a71d99c25dd4fdf533b65da86ace4daa9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkNumerableIcon *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1NumerableIcon.html</anchorfile>
      <anchor>a987df7dc84e4b485e29e0c37df294199</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; StyleContext &gt;</type>
      <name>get_style_context</name>
      <anchorfile>classGtk_1_1NumerableIcon.html</anchorfile>
      <anchor>a8e4ccce73f0ae2b2b3cce08d6b692cba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const StyleContext &gt;</type>
      <name>get_style_context</name>
      <anchorfile>classGtk_1_1NumerableIcon.html</anchorfile>
      <anchor>ac3152fb87887bb95aaec4c8cde19d4e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_style_context</name>
      <anchorfile>classGtk_1_1NumerableIcon.html</anchorfile>
      <anchor>a397be610eef82f6d1933123e37f4ca00</anchor>
      <arglist>(const Glib::RefPtr&lt; StyleContext &gt; &amp;style)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_count</name>
      <anchorfile>classGtk_1_1NumerableIcon.html</anchorfile>
      <anchor>ad51b5c53bce3033616bc75b7a55eef83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_count</name>
      <anchorfile>classGtk_1_1NumerableIcon.html</anchorfile>
      <anchor>a84dea117935160423cd7cd71d89ee9e1</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_label</name>
      <anchorfile>classGtk_1_1NumerableIcon.html</anchorfile>
      <anchor>ac114c03c6c5bfbd59da816eb8207ab59</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_label</name>
      <anchorfile>classGtk_1_1NumerableIcon.html</anchorfile>
      <anchor>adfe04c65f692830542c0eeb3b6c33d8c</anchor>
      <arglist>(const Glib::ustring &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_background_gicon</name>
      <anchorfile>classGtk_1_1NumerableIcon.html</anchorfile>
      <anchor>a8aedb47aec00dbdcbae0afdd492eadf6</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::Icon &gt; &amp;icon)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::Icon &gt;</type>
      <name>get_background_gicon</name>
      <anchorfile>classGtk_1_1NumerableIcon.html</anchorfile>
      <anchor>aa4a1d4c69b75ab85beb857e1eeeba710</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::Icon &gt;</type>
      <name>get_background_gicon</name>
      <anchorfile>classGtk_1_1NumerableIcon.html</anchorfile>
      <anchor>a878677c326bdd64ff8c5554fab83a31a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_background_icon_name</name>
      <anchorfile>classGtk_1_1NumerableIcon.html</anchorfile>
      <anchor>a5b0d64be2711c35e4298b29af097641d</anchor>
      <arglist>(const Glib::ustring &amp;icon_name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_background_icon_name</name>
      <anchorfile>classGtk_1_1NumerableIcon.html</anchorfile>
      <anchor>ac896afafe98c4f3edb15063e6676cb61</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_count</name>
      <anchorfile>classGtk_1_1NumerableIcon.html</anchorfile>
      <anchor>afea7bdcefe205b930c09a141aade5c48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_count</name>
      <anchorfile>classGtk_1_1NumerableIcon.html</anchorfile>
      <anchor>a235641e2665d5a42b266566076add346</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_label</name>
      <anchorfile>classGtk_1_1NumerableIcon.html</anchorfile>
      <anchor>ac675be605026096aa0689602a5d97674</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_label</name>
      <anchorfile>classGtk_1_1NumerableIcon.html</anchorfile>
      <anchor>ae96c1bd1135852c2cff21855299e1b9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; StyleContext &gt; &gt;</type>
      <name>property_style_context</name>
      <anchorfile>classGtk_1_1NumerableIcon.html</anchorfile>
      <anchor>a91d168cc91e9e2b51a2ea7bf278496df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; StyleContext &gt; &gt;</type>
      <name>property_style_context</name>
      <anchorfile>classGtk_1_1NumerableIcon.html</anchorfile>
      <anchor>a3d0d801b00d1d4d509f8aabd085cb1b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::Icon &gt; &gt;</type>
      <name>property_background_icon</name>
      <anchorfile>classGtk_1_1NumerableIcon.html</anchorfile>
      <anchor>ae3a51622f718f5e3f9ffacc76abb2953</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::Icon &gt; &gt;</type>
      <name>property_background_icon</name>
      <anchorfile>classGtk_1_1NumerableIcon.html</anchorfile>
      <anchor>aea179831c0f0e4d9221f5c1cebf8aad7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_background_icon_name</name>
      <anchorfile>classGtk_1_1NumerableIcon.html</anchorfile>
      <anchor>af12c1d023a39a70acf214aedb07e4d1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_background_icon_name</name>
      <anchorfile>classGtk_1_1NumerableIcon.html</anchorfile>
      <anchor>a8489ae1d3e1d2637fac9807be537012c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1NumerableIcon.html</anchorfile>
      <anchor>a3289c4f192eecae360c71157d8fc69a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; NumerableIcon &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1NumerableIcon.html</anchorfile>
      <anchor>a366b0d7cde64e754801ec52aa3b08d24</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::Icon &gt; &amp;icon)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; NumerableIcon &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1NumerableIcon.html</anchorfile>
      <anchor>a37c5a5523c1e55e91651aa07f6c1143b</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::Icon &gt; &amp;icon, const Glib::RefPtr&lt; StyleContext &gt; &amp;context)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>NumerableIcon</name>
      <anchorfile>classGtk_1_1NumerableIcon.html</anchorfile>
      <anchor>aafc58ffd1ad9acf84a9004ff4700e5e5</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::Icon &gt; &amp;icon)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>NumerableIcon</name>
      <anchorfile>classGtk_1_1NumerableIcon.html</anchorfile>
      <anchor>aff72c829ede770e7a8724d2d58c4faf5</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::Icon &gt; &amp;icon, const Glib::RefPtr&lt; StyleContext &gt; &amp;style_context)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::NumerableIcon &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1NumerableIcon.html</anchorfile>
      <anchor>ada49f50aa020a53e44d56ca76746b299</anchor>
      <arglist>(GtkNumerableIcon *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Object</name>
    <filename>classGtk_1_1Object.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>Object</name>
      <anchorfile>classGtk_1_1Object.html</anchorfile>
      <anchor>af1a972718cfedcb1547527d67037ac16</anchor>
      <arglist>(Object &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Object &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Object.html</anchorfile>
      <anchor>a486b8e502295ea8b96d08639a12a173b</anchor>
      <arglist>(Object &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Object</name>
      <anchorfile>classGtk_1_1Object.html</anchorfile>
      <anchor>a4927743f8b3b0649b6061c2abdbdcfc3</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GObject *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Object.html</anchorfile>
      <anchor>a94f5157285afa65f97c0c956c23bae99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GObject *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Object.html</anchorfile>
      <anchor>a1da4b2304169d444a4692fadac72fdfc</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::OffscreenWindow</name>
    <filename>classGtk_1_1OffscreenWindow.html</filename>
    <base>Gtk::Window</base>
    <member kind="function">
      <type></type>
      <name>OffscreenWindow</name>
      <anchorfile>classGtk_1_1OffscreenWindow.html</anchorfile>
      <anchor>a07f79a98ca02a275827e936e1864678f</anchor>
      <arglist>(OffscreenWindow &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>OffscreenWindow &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1OffscreenWindow.html</anchorfile>
      <anchor>a5d98e0c498f98c9023d46298976b2fb9</anchor>
      <arglist>(OffscreenWindow &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OffscreenWindow</name>
      <anchorfile>classGtk_1_1OffscreenWindow.html</anchorfile>
      <anchor>ac7685f0cd2c63b45429d0703cdf16289</anchor>
      <arglist>(const OffscreenWindow &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>OffscreenWindow &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1OffscreenWindow.html</anchorfile>
      <anchor>acaac094a02274c9508e5b0041dfece85</anchor>
      <arglist>(const OffscreenWindow &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~OffscreenWindow</name>
      <anchorfile>classGtk_1_1OffscreenWindow.html</anchorfile>
      <anchor>a81a4ab5220ba95fad291bd3209f51f40</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkOffscreenWindow *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1OffscreenWindow.html</anchorfile>
      <anchor>aae1b74de2df739a8e7450c4f822ead9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkOffscreenWindow *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1OffscreenWindow.html</anchorfile>
      <anchor>a46ea5cc9e5d95d2ee74a42552cfd2f00</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OffscreenWindow</name>
      <anchorfile>classGtk_1_1OffscreenWindow.html</anchorfile>
      <anchor>a8f100949a57b02106a5c41d100b0740f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Cairo::RefPtr&lt; Cairo::Surface &gt;</type>
      <name>get_surface</name>
      <anchorfile>classGtk_1_1OffscreenWindow.html</anchorfile>
      <anchor>a1437b0f6b8b710ae7db15cc9496865db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Cairo::RefPtr&lt; const Cairo::Surface &gt;</type>
      <name>get_surface</name>
      <anchorfile>classGtk_1_1OffscreenWindow.html</anchorfile>
      <anchor>a196827a6241457bc19dee99d9144a138</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>get_pixbuf</name>
      <anchorfile>classGtk_1_1OffscreenWindow.html</anchorfile>
      <anchor>a8ffeea999702a6e310b9b262a644f45b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Pixbuf &gt;</type>
      <name>get_pixbuf</name>
      <anchorfile>classGtk_1_1OffscreenWindow.html</anchorfile>
      <anchor>aedcfd093d9278e4d6126692b1464c995</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1OffscreenWindow.html</anchorfile>
      <anchor>a57e6d7afc0edcabda158c67739578675</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::OffscreenWindow *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1OffscreenWindow.html</anchorfile>
      <anchor>ab1e70e1cb4a9892111df0bfad10aa9d0</anchor>
      <arglist>(GtkOffscreenWindow *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Orientable</name>
    <filename>classGtk_1_1Orientable.html</filename>
    <base>Glib::Interface</base>
    <member kind="function">
      <type></type>
      <name>Orientable</name>
      <anchorfile>classGtk_1_1Orientable.html</anchorfile>
      <anchor>a5631598d8737859922b0f1e45223616c</anchor>
      <arglist>(Orientable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Orientable &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Orientable.html</anchorfile>
      <anchor>a9e41988b04fed45b2b5949d63fb2af9c</anchor>
      <arglist>(Orientable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Orientable</name>
      <anchorfile>classGtk_1_1Orientable.html</anchorfile>
      <anchor>accc7fbdd45d3d28d610a2b9fc518ad85</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkOrientable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Orientable.html</anchorfile>
      <anchor>aff3a192c3b691efa1f4227b8e161843d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkOrientable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Orientable.html</anchorfile>
      <anchor>affca54ff29e09edd51a6ce57dd93a9df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_orientation</name>
      <anchorfile>classGtk_1_1Orientable.html</anchorfile>
      <anchor>ad6ab22a97e3811deda0dbc1b16571162</anchor>
      <arglist>(Orientation orientation)</arglist>
    </member>
    <member kind="function">
      <type>Orientation</type>
      <name>get_orientation</name>
      <anchorfile>classGtk_1_1Orientable.html</anchorfile>
      <anchor>abac8cc298a1791471540f150b7ffac2e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Orientation &gt;</type>
      <name>property_orientation</name>
      <anchorfile>classGtk_1_1Orientable.html</anchorfile>
      <anchor>aac9c7b152a704fd78277a2110045b469</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Orientation &gt;</type>
      <name>property_orientation</name>
      <anchorfile>classGtk_1_1Orientable.html</anchorfile>
      <anchor>adb51cf354c02c708d1f54f2c5dfc02eb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1Orientable.html</anchorfile>
      <anchor>a8d719ce4ff64f64600625afef8c6f288</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Orientable.html</anchorfile>
      <anchor>a813eadcf6422e6a5a8d103d7f17744c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Orientable</name>
      <anchorfile>classGtk_1_1Orientable.html</anchorfile>
      <anchor>adfa250e7d05b46b9b726efd1b37e5642</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Orientable &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Orientable.html</anchorfile>
      <anchor>a5da33d954352cfdb3a3455cdc51cb79b</anchor>
      <arglist>(GtkOrientable *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Overlay</name>
    <filename>classGtk_1_1Overlay.html</filename>
    <base>Gtk::Bin</base>
    <member kind="function">
      <type></type>
      <name>Overlay</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>af53055cf0aac547a4ad92f50af701bfa</anchor>
      <arglist>(Overlay &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Overlay &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>a0ded1620b4bed8de281482823140f2f2</anchor>
      <arglist>(Overlay &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Overlay</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>af1c68876d72152dae35c779179c91ff3</anchor>
      <arglist>(const Overlay &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Overlay &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>a5f4f183674ddf672c28436d89d159055</anchor>
      <arglist>(const Overlay &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Overlay</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>ac99ca432d4c8122a90c97be41e44fbb5</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkOverlay *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>a26a40f99c8691dfe96a9fa145638ff70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkOverlay *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>acb77442ed8300c196a3e263b3f23a948</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Overlay</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>af85f598b4841b10a4d730b7a9666c084</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_overlay</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>a6e8eb1201093c8b9c0ea7f0f274ae587</anchor>
      <arglist>(Gtk::Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reorder_overlay</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>a9685f18a008da9d232659d4a7e9c18f7</anchor>
      <arglist>(Widget &amp;child, int position)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_overlay_pass_through</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>ad30fb05de57f5df1cd204a68f1edd271</anchor>
      <arglist>(Widget &amp;widget) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_overlay_pass_through</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>a1dd2eeb5332f351cc0889a74c18dae76</anchor>
      <arglist>(Widget &amp;widget, bool pass_through=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, Gtk::Widget *, Gdk::Rectangle &amp; &gt;</type>
      <name>signal_get_child_position</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>ae79f6434428052bba710430db2f1594b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; bool &gt;</type>
      <name>child_property_pass_through</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>a93c10795d8eb92aae25ef995b978004e</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>child_property_pass_through</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>aa17a656ee26fe349623d4d500dd54630</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; int &gt;</type>
      <name>child_property_index</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>a55ecb6311b58e17798d33a0fc22a4927</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>child_property_index</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>a113d12170364bf1f3b7a1af41c21277c</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>af6a8595c48242a26344f779f9f5be52e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_get_child_position</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>a452d315e63703bf4b585c05be1194d0a</anchor>
      <arglist>(Gtk::Widget *widget, Gdk::Rectangle &amp;allocation)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Overlay *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Overlay.html</anchorfile>
      <anchor>a1e7fda463c6b484106fded6217261518</anchor>
      <arglist>(GtkOverlay *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::PageSetup</name>
    <filename>classGtk_1_1PageSetup.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>PageSetup</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>ab781dbe497024c10e6b87c2d442bbad9</anchor>
      <arglist>(PageSetup &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PageSetup &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>aa5cdfc318cd52f9785dc0d4f9f7d6a31</anchor>
      <arglist>(PageSetup &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PageSetup</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a05aee329f596d9167b24e1ef739758d2</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkPageSetup *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a33ab2ab02543d996e0f68df9013c3d96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkPageSetup *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>adcde257086ea898bdfd9a8375ae4b74a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkPageSetup *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a9c0d228e27afbe4fe84495200ed77d94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; PageSetup &gt;</type>
      <name>copy</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a10ce336e902cb084a90d61eef9e42a57</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>load_from_file</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a973544ad4cb6318ca6339d2937158340</anchor>
      <arglist>(const std::string &amp;file_name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>load_from_key_file</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>acb896bc5126081dbd1eabf87b3a0fd85</anchor>
      <arglist>(const Glib::KeyFile &amp;key_file, const Glib::ustring &amp;group_name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>load_from_key_file</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a798ed5d9a28778dda3b4ed9184d30272</anchor>
      <arglist>(const Glib::KeyFile &amp;key_file)</arglist>
    </member>
    <member kind="function">
      <type>PageOrientation</type>
      <name>get_orientation</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a566083779219e44c0fddedb570fe3599</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_orientation</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>ab7932c9577ffa4cf479c09fb7a117072</anchor>
      <arglist>(PageOrientation orientation)</arglist>
    </member>
    <member kind="function">
      <type>PaperSize</type>
      <name>get_paper_size</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>ac9853f889e8cecfe62c3096f8b698cdf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const PaperSize</type>
      <name>get_paper_size</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a6df813a9a82801ee417f466d05966394</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_paper_size</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>ad563a5d83e98d493a608993abab4c9ef</anchor>
      <arglist>(const PaperSize &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_top_margin</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>ad4751e16a645d028660331b5ddf1d480</anchor>
      <arglist>(Unit unit) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_top_margin</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>acca55b5eb3a0a91f56b07b8b8b393e86</anchor>
      <arglist>(double margin, Unit unit)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_bottom_margin</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a172bcb7a4aded40a584cd563e5142aa8</anchor>
      <arglist>(Unit unit) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_bottom_margin</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a65a74df621c6543b86d06f0d0bfffb9a</anchor>
      <arglist>(double margin, Unit unit)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_left_margin</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a19a400f660c3237eb1655f690c77e667</anchor>
      <arglist>(Unit unit) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_left_margin</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a39f3559b024afcac8fd87d012f8193b4</anchor>
      <arglist>(double margin, Unit unit)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_right_margin</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>aa387f65e245cbe705a3e03bd97d09522</anchor>
      <arglist>(Unit unit) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_right_margin</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>afc9ed77357080264a306f3397014b4ec</anchor>
      <arglist>(double margin, Unit unit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_paper_size_and_default_margins</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a56182d0495449be884efcbc4eddd9686</anchor>
      <arglist>(const PaperSize &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_paper_width</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a40f44cb40dd1e3f5a2ba0fd91a36e7ee</anchor>
      <arglist>(Unit unit) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_paper_height</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a1f6841746b99c82e5bb7135ec08236c1</anchor>
      <arglist>(Unit unit) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_page_width</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>af5cb8c1fabadb562bc78937fe0817802</anchor>
      <arglist>(Unit unit) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_page_height</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a14078ba82c3a53a61b6c26df9e782a43</anchor>
      <arglist>(Unit unit) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>save_to_file</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a93a888c27e60e8f7707d79b2ee3e2ff1</anchor>
      <arglist>(const std::string &amp;file_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save_to_key_file</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a65a9fd8560f70e46b10d26988d0a73db</anchor>
      <arglist>(Glib::KeyFile &amp;key_file, const Glib::ustring &amp;group_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save_to_key_file</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a9b1fccba4fe46d3dbb2c2883cc72b92e</anchor>
      <arglist>(Glib::KeyFile &amp;key_file) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a82c81943c9d10cda00ba851c9304582c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PageSetup &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a3410299453609c9a7267ff4b99d85e76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PageSetup &gt;</type>
      <name>create_from_key_file</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a01ab81b124f8a340aa0d678216cc6532</anchor>
      <arglist>(const Glib::KeyFile &amp;key_file)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PageSetup &gt;</type>
      <name>create_from_key_file</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a1407e75fbe7a50662fb5cbb17363625d</anchor>
      <arglist>(const Glib::KeyFile &amp;key_file, const Glib::ustring &amp;group_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PageSetup &gt;</type>
      <name>create_from_file</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>ab2579949eae9ea4c8f595d349fd56e4e</anchor>
      <arglist>(const std::string &amp;file_name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PageSetup</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>af1265126802384735eeb4d261d51bf8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::PageSetup &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1PageSetup.html</anchorfile>
      <anchor>a23864bfe5e69d7d87ce9a369a21aa5cd</anchor>
      <arglist>(GtkPageSetup *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::PageSetupUnixDialog</name>
    <filename>classGtk_1_1PageSetupUnixDialog.html</filename>
    <base>Gtk::Dialog</base>
    <member kind="function">
      <type></type>
      <name>PageSetupUnixDialog</name>
      <anchorfile>classGtk_1_1PageSetupUnixDialog.html</anchorfile>
      <anchor>acea0088d142d76e35152f5d0e249c725</anchor>
      <arglist>(PageSetupUnixDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PageSetupUnixDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PageSetupUnixDialog.html</anchorfile>
      <anchor>ade6909058f6c45276b51ca22ff978117</anchor>
      <arglist>(PageSetupUnixDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PageSetupUnixDialog</name>
      <anchorfile>classGtk_1_1PageSetupUnixDialog.html</anchorfile>
      <anchor>a31c14903eeac699ed729b612c6a57cc0</anchor>
      <arglist>(const PageSetupUnixDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>PageSetupUnixDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PageSetupUnixDialog.html</anchorfile>
      <anchor>a0c0174bb66c479db24d6e9e57daa5c47</anchor>
      <arglist>(const PageSetupUnixDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PageSetupUnixDialog</name>
      <anchorfile>classGtk_1_1PageSetupUnixDialog.html</anchorfile>
      <anchor>a5d07bf88d527a8c6cfbf1de76d96d516</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkPageSetupUnixDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PageSetupUnixDialog.html</anchorfile>
      <anchor>a037e9e6f945a24d31cb2b16605eb1aab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkPageSetupUnixDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PageSetupUnixDialog.html</anchorfile>
      <anchor>aee73bd66a347d42840347afd1a747e0b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PageSetupUnixDialog</name>
      <anchorfile>classGtk_1_1PageSetupUnixDialog.html</anchorfile>
      <anchor>a363bffd0625fc06469cce72d228a5507</anchor>
      <arglist>(Gtk::Window &amp;parent, const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PageSetupUnixDialog</name>
      <anchorfile>classGtk_1_1PageSetupUnixDialog.html</anchorfile>
      <anchor>a2d08cd4a317c8d9eb6835a7410d51ce4</anchor>
      <arglist>(const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_page_setup</name>
      <anchorfile>classGtk_1_1PageSetupUnixDialog.html</anchorfile>
      <anchor>a889899b7971325bb006a2e431e496223</anchor>
      <arglist>(const Glib::RefPtr&lt; PageSetup &gt; &amp;page_setup)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; PageSetup &gt;</type>
      <name>get_page_setup</name>
      <anchorfile>classGtk_1_1PageSetupUnixDialog.html</anchorfile>
      <anchor>a67ede2096461e8323d7ed64f40741b93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const PageSetup &gt;</type>
      <name>get_page_setup</name>
      <anchorfile>classGtk_1_1PageSetupUnixDialog.html</anchorfile>
      <anchor>a825d885c0d79684faf81dedee42e0b2d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_print_settings</name>
      <anchorfile>classGtk_1_1PageSetupUnixDialog.html</anchorfile>
      <anchor>a08efaedff3def6f8d5adbd2b7aec380d</anchor>
      <arglist>(const Glib::RefPtr&lt; PrintSettings &gt; &amp;print_settings)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; PrintSettings &gt;</type>
      <name>get_print_settings</name>
      <anchorfile>classGtk_1_1PageSetupUnixDialog.html</anchorfile>
      <anchor>aedee632ca2491e912573b7d72d6c7c06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const PrintSettings &gt;</type>
      <name>get_print_settings</name>
      <anchorfile>classGtk_1_1PageSetupUnixDialog.html</anchorfile>
      <anchor>a99f3697e2f9588cd151546aab4625125</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1PageSetupUnixDialog.html</anchorfile>
      <anchor>a334592f8ed9c11b8ef988b326fbe1519</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::PageSetupUnixDialog *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1PageSetupUnixDialog.html</anchorfile>
      <anchor>afeaa6f6e0f487027d86974a7c3176d51</anchor>
      <arglist>(GtkPageSetupUnixDialog *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Paned</name>
    <filename>classGtk_1_1Paned.html</filename>
    <base>Gtk::Container</base>
    <base>Gtk::Orientable</base>
    <member kind="function">
      <type></type>
      <name>Paned</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a916e2965174b96d1ca7e226425fadcad</anchor>
      <arglist>(Paned &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Paned &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a8321839a25f16c4cdb803acefdded721</anchor>
      <arglist>(Paned &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Paned</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a58513c64f53e77ba28248a52c85d3935</anchor>
      <arglist>(const Paned &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Paned &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a9018b1f6026dedd5b804a67e4b792301</anchor>
      <arglist>(const Paned &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Paned</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a4552d7c54f658d840d08031b726b7387</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkPaned *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a672f115757f2bd346bec1163c1b6f29c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkPaned *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a823bcd62e3b26f195aae5237a78c158f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Paned</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>ac0e3570021cf422788e51ec632cc7a9c</anchor>
      <arglist>(Orientation orientation=ORIENTATION_HORIZONTAL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add1</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>ab4cf1c3eff6c4b1664ac8dafee2015a5</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add2</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>ae7ff241f5fe49b4d1c491f32c4b40c0f</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack1</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a20c1df3426b948d56150ad1600bcd7b3</anchor>
      <arglist>(Widget &amp;child, bool resize, bool shrink)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack1</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>ad848a3c9a96af7460a924adf4da82e53</anchor>
      <arglist>(Widget &amp;child, AttachOptions options=Gtk::EXPAND)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack2</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>ab888df4f410adaca6bd832a4ae51c20a</anchor>
      <arglist>(Widget &amp;child, bool resize, bool shrink)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack2</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a014fd97aaaaafaa0537dc213b458c68f</anchor>
      <arglist>(Widget &amp;child, AttachOptions options=Gtk::EXPAND)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_position</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a096864b61da0ce11acf906e749ba7308</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_position</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a2f8c09293943318951e42ee0972595ca</anchor>
      <arglist>(int position)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_child1</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a1a401412a5cb15b5a3960e86d8ea6a2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_child1</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a2e18615a4f78b0436e8b1c3f0d5bcb2b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_child2</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a56e37214c27467eee0f1e537f3bb5086</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_child2</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a568828df47e89302f1d4ca65dc2a5b79</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Window &gt;</type>
      <name>get_handle_window</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>af6d9dec0e253f92be8f0dcb2f945a31a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Window &gt;</type>
      <name>get_handle_window</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a41921190059bfad372d39623f64f7685</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_wide_handle</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>ae910c0cafd04f347d2f371994607182f</anchor>
      <arglist>(bool wide=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_wide_handle</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a1d1e2f27e9eaa4f6a1426ce1ce4af9d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_position</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a65923e19f26790786978ec07ba9e7b4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_position</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a1a9a025ce35bd8e189cb1b0427d5529b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_position_set</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a0293ef3ca8d2b0d97ace2591b65e1a70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_position_set</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>aeee0f4833d0bc27170ea7e8dcb7abd0a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_min_position</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>aa5672b4720c287d123cf96018ea2e7d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_max_position</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a80602ef6edf9fab289c6a238b8d0f2d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_wide_handle</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>ae2afc0bfb6aa693daa31e788a485006b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_wide_handle</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>ae83e411a26c6adedc7fb7651a30e1ac0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; bool &gt;</type>
      <name>child_property_resize</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a3f9eb662a08c0f2c98b84a31f3cf67a5</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>child_property_resize</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a2672730088261d8953089b2ece74eec0</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; bool &gt;</type>
      <name>child_property_shrink</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>a60b1f61003d744794d857d804e49030a</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>child_property_shrink</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>af75f46c71b7ad9fd0dd6ebeb77921e8a</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>abbbfa32f9a927c95b5f231c36fcc99af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Paned *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Paned.html</anchorfile>
      <anchor>aa2f1d669087433cc9410b7792315b6ea</anchor>
      <arglist>(GtkPaned *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::PaperSize</name>
    <filename>classGtk_1_1PaperSize.html</filename>
    <member kind="typedef">
      <type>const void *</type>
      <name>BoolExpr</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a47aa572760071741dd8812d7da13e473</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PaperSize</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>ab3684d32ae1642482596ed4654199728</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PaperSize</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a1b18b83ba01b5d9edda168bb3688ab4c</anchor>
      <arglist>(GtkPaperSize *gobject, bool make_a_copy=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PaperSize</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a50cde0b498878eb7d45f6c62f2a8ff92</anchor>
      <arglist>(const PaperSize &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>PaperSize &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a43e7c18ecca71cec077d4308e692cfe2</anchor>
      <arglist>(const PaperSize &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PaperSize</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a98f4428195ec8fba3d02de33dadbd6eb</anchor>
      <arglist>(PaperSize &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PaperSize &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>ac42c66e1e73af4593b016a15f9d8a6c7</anchor>
      <arglist>(PaperSize &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PaperSize</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>abac2d4d7e0a6ef765e52fce69591660f</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a08a6c95772beaaf05b7d25f895743767</anchor>
      <arglist>(PaperSize &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GtkPaperSize *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>aa97c8c8189e38029d9ae7697492bff6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkPaperSize *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a5732fb4cbcad2707a4ffc67fc23e86c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkPaperSize *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>ae98f7969d6d03b8ced27bf37bb437f5b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PaperSize</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>aaabd9c3ed3ca871bf642d2a954224020</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PaperSize</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>ace19a7922a89a4bf52177ff15b9eda40</anchor>
      <arglist>(const Glib::ustring &amp;ppd_name, const Glib::ustring &amp;ppd_display_name, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PaperSize</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>aa0aa75123c4f0e5637dde4f9e5561708</anchor>
      <arglist>(const Glib::ustring &amp;name, const Glib::ustring &amp;display_name, double width, double height, Unit unit)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PaperSize</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a5113fb9ddf432890642341564e215c96</anchor>
      <arglist>(const Glib::KeyFile &amp;key_file, const Glib::ustring &amp;group_name=Glib::ustring())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equal</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a92368be4dfccba8afb5e59e87f3f44dd</anchor>
      <arglist>(const PaperSize &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator BoolExpr</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a5c6ed446cff456924fe986089ee8b516</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a5508a0e4bc24967b0e929a5819daa12e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a59f7edfb7f5b46c2ece408e6b920fd04</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_display_name</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>ad4faf0a3c350abc8a0c9f52b55d76e37</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_ppd_name</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a071bea144e816a92033ca7347d4186d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_width</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a47e2f4371cc93c19b7e4efec0bfb8bb7</anchor>
      <arglist>(Unit unit) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_height</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>abb9553ca370fda4eb22f7e8f0b9fa690</anchor>
      <arglist>(Unit unit) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_custom</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a6abf52f9f2988f616dea6cd9fa3ae3b6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_ipp</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>aa283c93a582673374bd6ad459ad6940f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_size</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>ac9595adc9347b49a08a35529eb3520ea</anchor>
      <arglist>(double width, double height, Unit unit)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_default_top_margin</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a8b4fc39835323bd14af344bd9501290f</anchor>
      <arglist>(Unit unit) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_default_bottom_margin</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>abcf30de3223ee86de0976dd411df6257</anchor>
      <arglist>(Unit unit) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_default_left_margin</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a2015471bec8a70c55da5b90740caac3f</anchor>
      <arglist>(Unit unit) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_default_right_margin</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a74ac165537ef35c81645e81e209a4714</anchor>
      <arglist>(Unit unit) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save_to_key_file</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>ac53bad46d71a31122b2330b3a25b87ef</anchor>
      <arglist>(Glib::KeyFile &amp;key_file, const Glib::ustring &amp;group_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save_to_key_file</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a5637608e58cfa94d054596675db6343c</anchor>
      <arglist>(Glib::KeyFile &amp;key_file)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>acd4791178041faaaeb86f6e63f35c7ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; PaperSize &gt;</type>
      <name>get_paper_sizes</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a5335edfab0b32d68053cc733fa44f7b6</anchor>
      <arglist>(bool include_custom=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::ustring</type>
      <name>get_default</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>af734991bd70ffe66120b6958b8068097</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GtkPaperSize *</type>
      <name>gobject_</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>abbc16bae6e4829ee0a4bb5ae35c7f83d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a51acf7cdb2532db255a6e4e85744528b</anchor>
      <arglist>(const PaperSize &amp;lhs, const PaperSize &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a567e4713d60c88578b5a2bd74bf71964</anchor>
      <arglist>(const PaperSize &amp;lhs, const PaperSize &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a97115520a323bcf24e2e834999a3f133</anchor>
      <arglist>(PaperSize &amp;lhs, PaperSize &amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Gtk::PaperSize</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1PaperSize.html</anchorfile>
      <anchor>a84a14295fdac57599ece4d7a7024b853</anchor>
      <arglist>(GtkPaperSize *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::PlacesSidebar</name>
    <filename>classGtk_1_1PlacesSidebar.html</filename>
    <base>Gtk::ScrolledWindow</base>
    <member kind="function">
      <type></type>
      <name>PlacesSidebar</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a951e741dacc3e409193ecc3b0d79146d</anchor>
      <arglist>(PlacesSidebar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PlacesSidebar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a72f81f5d502fa56e4cd38810bc36fc68</anchor>
      <arglist>(PlacesSidebar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PlacesSidebar</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>ad818cb56c701df2b33157e53dc28d8e7</anchor>
      <arglist>(const PlacesSidebar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>PlacesSidebar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a689174d5dc22a1a0f80486176d9d4943</anchor>
      <arglist>(const PlacesSidebar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PlacesSidebar</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>ac71863d5776e1d57615cdfecd35ca506</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkPlacesSidebar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>aafec813a6f847c411c46079c5ab5a85e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkPlacesSidebar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a75ffe260bd689546dc239f3bfce1c375</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PlacesSidebar</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>ab4ae85a357409223b6b459618342ff4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_open_flags</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a8ed0aa9f03e632119c4382d975e77d0f</anchor>
      <arglist>(PlacesOpenFlags flags=PLACES_OPEN_NORMAL)</arglist>
    </member>
    <member kind="function">
      <type>PlacesOpenFlags</type>
      <name>get_open_flags</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a81f07e0d990d3d97f9ff7a78947dfa5b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_location</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>ae3bb4a9c3ab42408c33d76af3cbcf1de</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gio::File &gt; &amp;location)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::File &gt;</type>
      <name>get_location</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>ab06c512e2ba1bdf8ead995898be62dfc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_desktop</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>aec36fd2a6f78390817f08c90fc374dd5</anchor>
      <arglist>(bool show_desktop=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_desktop</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>ae7de0b26f557eb43954edde743150c96</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_shortcut</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>ad181341e11211da92393899e3e004f5b</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::File &gt; &amp;location)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_shortcut</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>aff0fd21227c663c61f2184a0cb0d3ede</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::File &gt; &amp;location)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; Gio::File &gt; &gt;</type>
      <name>list_shortcuts</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>abb486595a0ec6b6b0cc5940dc7a0a3d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::File &gt;</type>
      <name>get_nth_bookmark</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a0dc9f459da04b95f8d533d8de4289f56</anchor>
      <arglist>(int n) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_connect_to_server</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a5340734d1813cfb5da355bd14fab124c</anchor>
      <arglist>(bool show_connect_to_server=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_connect_to_server</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>ade28adb30d0f4c946c2482e9de6f069d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_local_only</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a88134537083a1cef276dbdb575a73e35</anchor>
      <arglist>(bool local_only=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_local_only</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a5cc6b9d9bfcd018e2f4c6d957e31a214</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_enter_location</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>ade1fc8a3c744c3ce26c591bea6bb884b</anchor>
      <arglist>(bool show_enter_location=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_enter_location</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a52ba4e4892862aa6201f175c4633b07f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_recent</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a36538cc28a55e011394d29c9a1a8259e</anchor>
      <arglist>(bool show_recent=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_recent</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>ad5d18d48423e50984b6caf6ace6f98c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_trash</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>adf4ad22737a0fc89dfaccecb63c1de6c</anchor>
      <arglist>(bool show_trash=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_trash</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a4437abd1f6104f9c3e2147f415724539</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_other_locations</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a6e0ba5a20eba7cdd78db58ce75083a69</anchor>
      <arglist>(bool show_other_locations=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_other_locations</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>aa669a677cf26602aff273088eeb15533</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_drop_targets_visible</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a6a3dafda4ac1a68004274e94f5a193ae</anchor>
      <arglist>(bool visible, const Glib::RefPtr&lt; Gdk::DragContext &gt; &amp;context)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; int, const Glib::RefPtr&lt; Gdk::DragContext &gt; &amp;, const Glib::RefPtr&lt; Gio::File &gt; &amp;, const std::vector&lt; Glib::RefPtr&lt; Gio::File &gt; &gt; &amp; &gt;</type>
      <name>signal_drag_action_requested</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a838c63fd45c3dee108729afc7867ebf4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Gio::File &gt; &amp;, const std::vector&lt; Glib::RefPtr&lt; Gio::File &gt; &gt; &amp;, int &gt;</type>
      <name>signal_drag_perform_drop</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a3d4e634c8a225f10d8b256bb12db0c12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; int, int &gt;</type>
      <name>signal_drag_action_ask</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>aeb85419c27b39c1c34bb2821be1a3040</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Gio::File &gt; &amp;, PlacesOpenFlags &gt;</type>
      <name>signal_open_location</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>afffd2788aabfd5b642d07e2edee47c22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, Menu *, const Glib::RefPtr&lt; Gio::File &gt; &amp;, const Glib::RefPtr&lt; Gio::Volume &gt; &amp; &gt;</type>
      <name>signal_populate_popup</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a9e853e06b27fbb578a3f9c623bf5d205</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_show_connect_to_server</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>acad17b833a5f2a6eeb96f979d28370a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::ustring &amp;, const Glib::ustring &amp; &gt;</type>
      <name>signal_show_error_message</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a1646b6823ecf363578f0c5a7bd0a9634</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_show_enter_location</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a8bd193ba112bcf844dd9fd85d9cb242c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_show_other_locations</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>aa1dd43d6e6dd40340116141159e81f1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, PlacesOpenFlags &gt;</type>
      <name>signal_show_other_locations_with_flags</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>ad7a9d15fbe2514c70adc2af98f6e6ec2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Gio::MountOperation &gt; &amp; &gt;</type>
      <name>signal_mount</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a85d9e50d419a1a36d4d8b6d4d5911d07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Gio::MountOperation &gt; &amp; &gt;</type>
      <name>signal_unmount</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a675981646e9e251be0b1a68eb40d796f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_local_only</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a083016e18c70c0d21c43e6d77383bf61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_local_only</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>ad3e516c516aad95f1544522950f0ffab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::File &gt; &gt;</type>
      <name>property_location</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a688a94ac845f895056749f13e6427f03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::File &gt; &gt;</type>
      <name>property_location</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>ada1a34816b296d04ce1b1fcb0d7941cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; PlacesOpenFlags &gt;</type>
      <name>property_open_flags</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>acad453088d4368095593f99fbdf8a674</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; PlacesOpenFlags &gt;</type>
      <name>property_open_flags</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a510ddd1629698d98f6c943e981a1db65</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_connect_to_server</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>aa206baf293c402f1e960b4b81f171c59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_connect_to_server</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a942545262f99a93e3879cd5dbdad8bff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_desktop</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a8d168dcfa7e2c8b77f4090b741aaeff2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_desktop</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a41780d45bee13af85834764adf31d506</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_enter_location</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a39ee700ddd5853e71f8cfb012c6ace06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_enter_location</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>ad7ba5a302a9881b7e8f4dd128819a519</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_recent</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a4b4c5aeb1189acfa9c8aff2889d1191d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_recent</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>aa64ad3574b67da4539da16f500fa3042</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_trash</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>abdad79cf038ef47288d791f8bfae3bfe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_trash</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a5c940f66c5eaa27de1cb439ffc1fa71d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_other_locations</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>afdb3bd999b5343308a4051756b54b25b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_other_locations</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a454034e2c81ababb5e815ab44ea77562</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_populate_all</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a438fb38056b5279a337f562fd7f79b4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_populate_all</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a66f5417972e0e34c6ef6f4a4972c4516</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>ad9168f1fab280c417b9159dc8e7d318f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::PlacesSidebar *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1PlacesSidebar.html</anchorfile>
      <anchor>a0237a86d19e8babe55bae427e52d59fd</anchor>
      <arglist>(GtkPlacesSidebar *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Plug</name>
    <filename>classGtk_1_1Plug.html</filename>
    <base>Gtk::Window</base>
    <member kind="function">
      <type></type>
      <name>Plug</name>
      <anchorfile>classGtk_1_1Plug.html</anchorfile>
      <anchor>a57275e9c2d4b54ea78f61f63aea7ee52</anchor>
      <arglist>(Plug &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Plug &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Plug.html</anchorfile>
      <anchor>a5b3fdeb7944e3ff8496c6db71eab5a4b</anchor>
      <arglist>(Plug &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Plug</name>
      <anchorfile>classGtk_1_1Plug.html</anchorfile>
      <anchor>ac8080aefc7c2bfcc6df616af358ca36f</anchor>
      <arglist>(const Plug &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Plug &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Plug.html</anchorfile>
      <anchor>a69bc90755765095dd8068c5c195f2081</anchor>
      <arglist>(const Plug &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Plug</name>
      <anchorfile>classGtk_1_1Plug.html</anchorfile>
      <anchor>a7aaa80f6dd19c14b3e36cf357137aa8b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkPlug *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Plug.html</anchorfile>
      <anchor>ac215b1d0d84d6783f9d737748cbc533b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkPlug *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Plug.html</anchorfile>
      <anchor>a1763387a245ac48492fee4cb50983edc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Plug</name>
      <anchorfile>classGtk_1_1Plug.html</anchorfile>
      <anchor>ac2869cbcc09c3f3ee74a4fe7318437ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Plug</name>
      <anchorfile>classGtk_1_1Plug.html</anchorfile>
      <anchor>a1ad346d98919f77e0824d92009de1e9c</anchor>
      <arglist>(::Window socket_id)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Plug</name>
      <anchorfile>classGtk_1_1Plug.html</anchorfile>
      <anchor>a5303ae2ed8a6015e9d8a72a4505a0f6e</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Display &gt; &amp;display,::Window socket_id)</arglist>
    </member>
    <member kind="function">
      <type>::Window</type>
      <name>get_id</name>
      <anchorfile>classGtk_1_1Plug.html</anchorfile>
      <anchor>a93bccf50cc33c5488b051269dafc4096</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_embedded</name>
      <anchorfile>classGtk_1_1Plug.html</anchorfile>
      <anchor>a248d7c41f32622f38439925b390657e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Window &gt;</type>
      <name>get_socket_window</name>
      <anchorfile>classGtk_1_1Plug.html</anchorfile>
      <anchor>a0e50f3782fd89295bf9ef0dc5ec989f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Window &gt;</type>
      <name>get_socket_window</name>
      <anchorfile>classGtk_1_1Plug.html</anchorfile>
      <anchor>a6439502c538764393db91c39aa8d436e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_embedded</name>
      <anchorfile>classGtk_1_1Plug.html</anchorfile>
      <anchor>a7aad6efa2a6ed20b94328524c63be880</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::Window &gt; &gt;</type>
      <name>property_socket_window</name>
      <anchorfile>classGtk_1_1Plug.html</anchorfile>
      <anchor>a0fc84cee373164633d341807c6f66ff5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_embedded</name>
      <anchorfile>classGtk_1_1Plug.html</anchorfile>
      <anchor>a7a025da8738cc163645d3f52111540ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Plug.html</anchorfile>
      <anchor>a02ef7639532c0feb9380ac87ad064d4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_embedded</name>
      <anchorfile>classGtk_1_1Plug.html</anchorfile>
      <anchor>af02c6e2990aa24fceeafab7803ea134b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Plug *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Plug.html</anchorfile>
      <anchor>abf2dce5cd058be0f2fae4ec616d6a662</anchor>
      <arglist>(GtkPlug *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Popover</name>
    <filename>classGtk_1_1Popover.html</filename>
    <base>Gtk::Bin</base>
    <member kind="function">
      <type></type>
      <name>Popover</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a7b8a9e6c1007d082dd351354d9f0f5e8</anchor>
      <arglist>(Popover &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Popover &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>abed378cbbfb815ed72c0630054ca7c73</anchor>
      <arglist>(Popover &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Popover</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>ac7d502328d957816dedf0fabd4a5a3da</anchor>
      <arglist>(const Popover &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Popover &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a20ac933b9e31e9f6fbaa987eb2fb2351</anchor>
      <arglist>(const Popover &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Popover</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a8c8d1e6b32d8b0627a680ce2d3fb9bc5</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkPopover *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>abf7d0bfec17b0bf71742703fa482e6e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkPopover *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a71df20c8912321d27f18a322630e6df0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Popover</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a4931635bcb83554096c4f2e4f359c9cf</anchor>
      <arglist>(const Widget &amp;relative_to)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Popover</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a1f986a5819a7708290e4cfb0eddc9042</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Popover</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>affe6a8800966d7a4e678d5693791dbe5</anchor>
      <arglist>(const Widget &amp;relative_to, const Glib::RefPtr&lt; Gio::MenuModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Popover</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>afb742b51cc4290493466d09a70b0f14c</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::MenuModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_relative_to</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>aeb0eca05a12e79f379bd1614b6200a89</anchor>
      <arglist>(const Widget &amp;relative_to)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_relative_to</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>adb77cebafaba122cd405529780fc8ed7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_relative_to</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>abb516e17fd0db79e7bad3f69dd5c899f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_pointing_to</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>acb37108108779298bd941eeabbbd6c10</anchor>
      <arglist>(const Gdk::Rectangle &amp;rect)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_pointing_to</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a0e3728017f0a3b4fc4786c439c9cf891</anchor>
      <arglist>(Gdk::Rectangle &amp;rect) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_position</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>abbbd0a0107c2fee16ba82ff39a3b9564</anchor>
      <arglist>(PositionType position=POS_TOP)</arglist>
    </member>
    <member kind="function">
      <type>PositionType</type>
      <name>get_position</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>ada16056dd7b018c8d3e7362a22fe953e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_modal</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>ac01a2247da48727624e8c91d74879022</anchor>
      <arglist>(bool modal=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_modal</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a74bd394760cff13307807f5ee4fabf85</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bind_model</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a787a22af2ee359eb2190de797d8eae17</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::MenuModel &gt; &amp;model, const Glib::ustring &amp;action_namespace)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bind_model</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>acd2558c13f7058b82b15471f2940b1bf</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::MenuModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_transitions_enabled</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>aeabfb2534815db7b787439cdf7e968fa</anchor>
      <arglist>(bool transitions_enabled=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_transitions_enabled</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a328b13a759f1ee19740c58d59ad56b4a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_default_widget</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a54f75f8a5ddfed0c4acd2ff477e8155f</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_default_widget</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a444eb18192e61a91e31065315cbc489e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_default_widget</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>aa54453c479462627ccab672595dd3ac1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_constrain_to</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>adbc91bed3eedbd79979ebfbd693af9f4</anchor>
      <arglist>(PopoverConstraint constraint)</arglist>
    </member>
    <member kind="function">
      <type>PopoverConstraint</type>
      <name>get_constrain_to</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>ab203d644359a8f0d2b9e7b470cedf30f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popup</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>afe870414fb09b9d7c0394b9e3f1f5350</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popdown</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>af9b2fa74913791beee00bcae6ba01fa0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_relative_to</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a44adb91a3600c9255a00c303a4b4e051</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_relative_to</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a93ab391cd96099ccf46ce448aba876de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::Rectangle &gt;</type>
      <name>property_pointing_to</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>acbae7c971ca5cd827d7dde7514d9e102</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::Rectangle &gt;</type>
      <name>property_pointing_to</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a779de74f6b02870e5ffd4d9e146516c3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; PositionType &gt;</type>
      <name>property_position</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a4e4b8060e0977073f1ea3eb0809794b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; PositionType &gt;</type>
      <name>property_position</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a73423ae632e2295b59efcc1d47467fa0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_modal</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a21cb7637cc35f2f62cb0b3584f848161</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_modal</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a4db837b7d88e2c997ec1c7862921b7aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_transitions_enabled</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>af7adcb3564c404732d784d73e27fcabe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_transitions_enabled</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a6d2a6a5ace08bf080965ca4e59fa1d76</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; PopoverConstraint &gt;</type>
      <name>property_constrain_to</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a18b239f0ec3cd30fdc2a5b6c199d62b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; PopoverConstraint &gt;</type>
      <name>property_constrain_to</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>acf93b8162774b06404d6984b20f12867</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_closed</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>ac3f2361fa47b100f887d740e966181b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a24cf0abc37f2c558c2c0144497d827d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_closed</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>aa10105916b901c7314746217429e7a73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Popover *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Popover.html</anchorfile>
      <anchor>a4c95251e5cca965825ba231fd813ecde</anchor>
      <arglist>(GtkPopover *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::PopoverMenu</name>
    <filename>classGtk_1_1PopoverMenu.html</filename>
    <base>Gtk::Popover</base>
    <member kind="function">
      <type></type>
      <name>PopoverMenu</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>ae329591277d198a8dbc3e41021737113</anchor>
      <arglist>(PopoverMenu &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PopoverMenu &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>aeb5991c6fe9954935d9e7dbe97160fc9</anchor>
      <arglist>(PopoverMenu &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PopoverMenu</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>a52fb6a2daf8ed51c48bf806e8167c70d</anchor>
      <arglist>(const PopoverMenu &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>PopoverMenu &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>abfb360dd1ee701b1b2e6349e8110e6e4</anchor>
      <arglist>(const PopoverMenu &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PopoverMenu</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>a02a62389fe0c125b29c35cec64b5185f</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkPopoverMenu *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>a2b7128022c0ed23818c40bf1fc248987</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkPopoverMenu *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>a915089a1ece82b330df926e27933f622</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PopoverMenu</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>af69da7390afaf49ef6b0a4d33b6ada9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>open_submenu</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>a7355fde8660d721bdade1b313bb55a64</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_visible_submenu</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>a5a607c5d0166b67180bfee73b8475624</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_visible_submenu</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>aaa81a9b1d14965d83e211f3c4db4c3cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; Glib::ustring &gt;</type>
      <name>child_property_submenu</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>adf7d0bd58242b2b66741a7d48ad138c6</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>child_property_submenu</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>aa8b3c93bf02315583ea5d84c6acae77a</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; int &gt;</type>
      <name>child_property_position</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>a5a8aba02341ff3346a6465eaaee6b5f3</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>child_property_position</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>a1189132d2af8233085e7ca380cb962a7</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>a1b93f509337ae2e0e361c381c8dc6a53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::PopoverMenu *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1PopoverMenu.html</anchorfile>
      <anchor>a8fda9aa99e4b5c3337c7c7cacd116c52</anchor>
      <arglist>(GtkPopoverMenu *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::PrintContext</name>
    <filename>classGtk_1_1PrintContext.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>PrintContext</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>a7ab936adbaec0942883f0031e711c369</anchor>
      <arglist>(PrintContext &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PrintContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>ab42ce21651900c1edf716e4015b0429c</anchor>
      <arglist>(PrintContext &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PrintContext</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>ae24e578106dcd4fdc7bb30f15c94a9c7</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkPrintContext *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>a50ba7aa69ddcffc8fc3a904bef55db6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkPrintContext *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>a6e722680328581239d548e7278b0f4d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkPrintContext *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>a104ed69ec09e0d9d55f9eb2a64ef9988</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>::Cairo::RefPtr&lt; ::Cairo::Context &gt;</type>
      <name>get_cairo_context</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>ac70e7287f0eb6c4ab228ca30ad463d2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>::Cairo::RefPtr&lt; const ::Cairo::Context &gt;</type>
      <name>get_cairo_context</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>a4415b0b6220680e51e4810ba995393e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; PageSetup &gt;</type>
      <name>get_page_setup</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>a19498ed2d837eef0fef04a6ba1bce064</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const PageSetup &gt;</type>
      <name>get_page_setup</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>a0432d6e07f7962202403656bcf96604b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_width</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>a05d966d25965ad488b880bcfa061089d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_height</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>ae27b234754baf920f6297e0243dc7749</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_dpi_x</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>a02d26ab8d99148d49afb623bcc11fc83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_dpi_y</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>a5fb9383c61b2de132b5801223b81954b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_hard_margins</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>aa2d6888e06694b09c6a1e7582d0f3fd1</anchor>
      <arglist>(double &amp;top, double &amp;bottom, double &amp;left, double &amp;right) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pango::FontMap &gt;</type>
      <name>get_pango_fontmap</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>a4d234d7eac19641278bd0b7016423e99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Pango::FontMap &gt;</type>
      <name>get_pango_fontmap</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>a7db3f32f5ddd541d8b53660452443712</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pango::Context &gt;</type>
      <name>create_pango_context</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>a7145573ba9c5eb52d07530baab3e1330</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pango::Layout &gt;</type>
      <name>create_pango_layout</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>a461a01fd0f5477ec9161037e82a1cde4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_cairo_context</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>af14335493dc8ea0d4259659238c14bcd</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;cr, double dpi_x, double dpi_y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>aa572c0e2937ab164db1b87b0b67fd8b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::PrintContext &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1PrintContext.html</anchorfile>
      <anchor>a913efa53e99f5579db2ea43edc1d9279</anchor>
      <arglist>(GtkPrintContext *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Printer</name>
    <filename>classGtk_1_1Printer.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>Printer</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a83b29d4e892be02a4c18ced3b6d81d78</anchor>
      <arglist>(Printer &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Printer &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a5f53d1863d824770eb97af24d0e31532</anchor>
      <arglist>(Printer &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Printer</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a32d887aa4d58b114a3c7f206439fd987</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkPrinter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a2a5ac333f9d8c1ddd32ae7acfcc20a58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkPrinter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a083c801ef36ba1b917e11811d100c34e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkPrinter *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>adcd574dcd0dd93e3af8d564b03b5b52d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equal</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a20ba73ea679f232e9adf75e3020d781e</anchor>
      <arglist>(const Glib::RefPtr&lt; Printer &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>aaa802be52d7202ce03605f97aecd1c6e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_state_message</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>af14a5de59a7deacac90ffc956df23c12</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_description</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>ad55614392469766798a2d311f38eaa16</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_location</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a6fa810b764684500ba3142fd5451ccee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_icon_name</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a090b664054e0afe324e71f487cf92f79</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_job_count</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a06d1510be6576f69e9588d415f08b960</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_active</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>ae918075cb8f34817c6238d4760d1d077</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_paused</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a8bb6df9b44e44dd937511c3cb49589fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_accepting_jobs</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>ac38d2cf2d22e66f9ec6371bc72d1415a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_virtual</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a3cb88f7e8fc916737003d2d43200847b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_default</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a5824d9ea97128284a0bb3c3ccf2f8d7e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>accepts_pdf</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>aaae5331843f8227b7c25d309dff61255</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>accepts_ps</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a0deda052c78b9f0b1d07efcd2ac70922</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; PageSetup &gt; &gt;</type>
      <name>list_papers</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>aec26730b9a6c59fcae88566c36c54d97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; PageSetup &gt;</type>
      <name>get_default_page_size</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a28c06db10103fc187d8e6ce403f2135c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; const PageSetup &gt; &gt;</type>
      <name>list_papers</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>ae62d9b814c3a055acc9889ee2e1b9b4f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_details</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>afb4c4bd6faf54a8408d3a7de9492d895</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>request_details</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a995c814fb4dcb345a84b29bb81e1bdd0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PrintCapabilities</type>
      <name>get_capabilities</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a95c59d9dc902f0df0d8b5f01a1888224</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_hard_margins</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a1f7e13ab9cc05d9d6a503c8c52606207</anchor>
      <arglist>(double &amp;top, double &amp;bottom, double &amp;left, double &amp;right) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, bool &gt;</type>
      <name>signal_details_acquired</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>ae15a0c7445c14b77f25308f65d4774d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_name</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>aa2ee911d6f50043964a55722a87b2eda</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_is_virtual</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a48fb64dfbc9d3003ac5be45008b2a126</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_state_message</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a416e5298a6caebe000ff2c2a3e29e3d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_location</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>ab5ad7602d1ec5ef344c8473dc8082b6d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_icon_name</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a0b781fa982010daf8924e48ae3ac7a67</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_job_count</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a173212fd199e3ad5a52e670acd16b991</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_accepts_pdf</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a61e08261e80ea181e8814bc739d6413b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_accepts_ps</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a8e5e974079f6b4e37d2edd1a8c35ceb8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_paused</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>aa6368a17bbf58451233408a18f66fb61</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_accepting_jobs</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>aa281b134a77ba4c3d67f46e1d1a58242</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>add7dc0f6cc9953c015ef5e3bdc23c793</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_details_acquired</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a96f36702cc3876c17ca82efadb1d49aa</anchor>
      <arglist>(bool success)</arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; bool, const Glib::RefPtr&lt; Printer &gt; &amp; &gt;</type>
      <name>SlotPrinterEnumerator</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a8225038393eff8da288ae34e104ba9ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>af2c0b05a37f73118b72fe603e5b97cbd</anchor>
      <arglist>(const Glib::RefPtr&lt; Printer &gt; &amp;lhs, const Glib::RefPtr&lt; Printer &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>acc09fd460d0737fc77f7a35e8d972af0</anchor>
      <arglist>(const Glib::RefPtr&lt; Printer &gt; &amp;lhs, const Glib::RefPtr&lt; Printer &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enumerate_printers</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a0cd158313b69aed1879759aaf08e9150</anchor>
      <arglist>(const SlotPrinterEnumerator &amp;slot, bool wait=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Printer &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Printer.html</anchorfile>
      <anchor>a5b036651133f38d4ca86821630089103</anchor>
      <arglist>(GtkPrinter *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::PrintError</name>
    <filename>classGtk_1_1PrintError.html</filename>
    <base>Glib::Error</base>
    <member kind="enumeration">
      <type></type>
      <name>Code</name>
      <anchorfile>classGtk_1_1PrintError.html</anchorfile>
      <anchor>ad886c75446921bf06bd79c18c78357a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GENERAL</name>
      <anchorfile>classGtk_1_1PrintError.html</anchorfile>
      <anchor>ad886c75446921bf06bd79c18c78357a1ac84d0d6c73628c9211a190b4dc224485</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTERNAL_ERROR</name>
      <anchorfile>classGtk_1_1PrintError.html</anchorfile>
      <anchor>ad886c75446921bf06bd79c18c78357a1aff507f58926aa74a3f17f6ef4c356350</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOMEM</name>
      <anchorfile>classGtk_1_1PrintError.html</anchorfile>
      <anchor>ad886c75446921bf06bd79c18c78357a1a842c69d72b90ad5b90eebd1419b96023</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_FILE</name>
      <anchorfile>classGtk_1_1PrintError.html</anchorfile>
      <anchor>ad886c75446921bf06bd79c18c78357a1a9775228070cb0ef32e8654c1043b13b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GENERAL</name>
      <anchorfile>classGtk_1_1PrintError.html</anchorfile>
      <anchor>ad886c75446921bf06bd79c18c78357a1ac84d0d6c73628c9211a190b4dc224485</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTERNAL_ERROR</name>
      <anchorfile>classGtk_1_1PrintError.html</anchorfile>
      <anchor>ad886c75446921bf06bd79c18c78357a1aff507f58926aa74a3f17f6ef4c356350</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOMEM</name>
      <anchorfile>classGtk_1_1PrintError.html</anchorfile>
      <anchor>ad886c75446921bf06bd79c18c78357a1a842c69d72b90ad5b90eebd1419b96023</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_FILE</name>
      <anchorfile>classGtk_1_1PrintError.html</anchorfile>
      <anchor>ad886c75446921bf06bd79c18c78357a1a9775228070cb0ef32e8654c1043b13b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PrintError</name>
      <anchorfile>classGtk_1_1PrintError.html</anchorfile>
      <anchor>a6b2f4a2946166fee286215ae5e57bda3</anchor>
      <arglist>(Code error_code, const Glib::ustring &amp;error_message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PrintError</name>
      <anchorfile>classGtk_1_1PrintError.html</anchorfile>
      <anchor>ac8d6980193b2c991de0b1a0265bfbba3</anchor>
      <arglist>(GError *gobject)</arglist>
    </member>
    <member kind="function">
      <type>Code</type>
      <name>code</name>
      <anchorfile>classGtk_1_1PrintError.html</anchorfile>
      <anchor>a0077d6bc37d853914c29e1dae65e08ad</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::PrintJob</name>
    <filename>classGtk_1_1PrintJob.html</filename>
    <base>Glib::Object</base>
    <member kind="typedef">
      <type>sigc::slot&lt; void, const Glib::RefPtr&lt; PrintJob &gt; &amp; &gt;</type>
      <name>SlotPrintJobComplete</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>ae31c599bc826a1ea1f9b8791bba1a0df</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PrintJob</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a70728fd29b132f4768769dd23bddbf44</anchor>
      <arglist>(PrintJob &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PrintJob &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a7b06909674201396d4d10c1bfd984457</anchor>
      <arglist>(PrintJob &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PrintJob</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a3f474eeb08da198ce6a0cd4f491b8f4d</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkPrintJob *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a2d1491f23726229671b14abd7ecb4631</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkPrintJob *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>aab18b0ea016ecdcc181488b12b8ebd8c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkPrintJob *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>abb89a7a5c24c1468bf30efb89cb45824</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; PrintSettings &gt;</type>
      <name>get_settings</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a748eb391baadff5736dd1c743efbab29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const PrintSettings &gt;</type>
      <name>get_settings</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a877a802fee264544b32e399a53cee7f9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Printer &gt;</type>
      <name>get_printer</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a70f274de89f207f8983e2550c1c3dd26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Printer &gt;</type>
      <name>get_printer</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a5175a1f26c2c5c7a6f9e576ebaf69ef6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_title</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a63d5559a8dd3ea7b93d5285364831336</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PrintStatus</type>
      <name>get_status</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a706da6291c55dcf154318230ea4f9b88</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_source_file</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>acbad0bc9a07aee1543bb03f89e8cf108</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>Cairo::RefPtr&lt; Cairo::Surface &gt;</type>
      <name>get_surface</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a3a665f440120da3261783f2039c0fd12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Cairo::RefPtr&lt; const Cairo::Surface &gt;</type>
      <name>get_surface</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>abe8c15ff0e5979674781fe6834774c14</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_track_print_status</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a64a70424f252a36e427908d9d16d8e00</anchor>
      <arglist>(bool track_status=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_track_print_status</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a354483fad1431dde3dcc835e224adfd0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>abea5e39747f71fe47c19b2fdd1126d7e</anchor>
      <arglist>(const SlotPrintJobComplete &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>PrintPages</type>
      <name>get_pages</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>ae61cebc696f28d0b8380483697a7b4d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_pages</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>ac5b58c59ff599b20566c324146ae5781</anchor>
      <arglist>(PrintPages pages)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; PrintSettings::PageRange &gt;</type>
      <name>get_page_ranges</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>afc6a535ab6a269e173b7fe5bf4c21e2d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_page_ranges</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a917eb379572dd85f012c04ac6796489a</anchor>
      <arglist>(const std::vector&lt; PrintSettings::PageRange &gt; &amp;ranges)</arglist>
    </member>
    <member kind="function">
      <type>PageSet</type>
      <name>get_page_set</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a789a6debcc3db6875ad01ff6490a8a4e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_page_set</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a1364f8f44e5e5f25d9f4e5467577d39f</anchor>
      <arglist>(PageSet page_set)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_num_copies</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a309b83e2d4cfc26be0c47d7f8293ecfe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_num_copies</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a670b6c611f742b6d9f8775f3cd6479e0</anchor>
      <arglist>(int num_copies)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_scale</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a2bed3c0f3c1825d26c7696b1df4a6af6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_scale</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a29cd11b0dc3628cfa087ee9a422fcb94</anchor>
      <arglist>(double scale)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_n_up</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a944113ad3635f7978a5d307ed8a1d9f9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_n_up</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a59d6634cc486fa84ba07e18c2d94a3d8</anchor>
      <arglist>(guint n_up)</arglist>
    </member>
    <member kind="function">
      <type>NumberUpLayout</type>
      <name>get_n_up_layout</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a189815637a605e975e9c7c2ce7cb843c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_n_up_layout</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a839d83ad8b8be371784821ac4a5052ed</anchor>
      <arglist>(NumberUpLayout layout)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_rotate</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a9f8dbcfefff2f7347950bd8c52aba2b0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_rotate</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a25cdc322acd43169e2112244428f71fc</anchor>
      <arglist>(bool rotate=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_collate</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a5f6e1e94707178e9a4b6ccfe01395473</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_collate</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a86835dd53126cb82ccb31d9ed7ddda0c</anchor>
      <arglist>(bool collate=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_reverse</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a57a4c6c88109fc0c76e62332dbe5065b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_reverse</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a66dc3b2d24a60dc6cdaffc2117e4dc1a</anchor>
      <arglist>(bool reverse=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_status_changed</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a12d2cd25d460b5f67b032b808bd1ff81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>ace1aaf226ff650c3b1212d448d5aa5ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Printer &gt; &gt;</type>
      <name>property_printer</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>ab2ea1ced40aa637046e4e830492d2a03</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; PrintSettings &gt; &gt;</type>
      <name>property_settings</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a032430fe1cab8c613ec55d91a344f9ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; PageSetup &gt; &gt;</type>
      <name>property_page_setup</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a2a1d5f3b16dddc27a5600da1d066a22d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_track_print_status</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>aec4b44530c26f3fbb2dabc3811126733</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_track_print_status</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a3db594804bca167d9ec9e84e5d2b4e04</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a0d8ab613e689743bb5b79b6459b77842</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PrintJob &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>adce1562d1e27158f6ac4968a66756320</anchor>
      <arglist>(const Glib::ustring &amp;title, const Glib::RefPtr&lt; Printer &gt; &amp;printer, const Glib::RefPtr&lt; PrintSettings &gt; &amp;settings, const Glib::RefPtr&lt; PageSetup &gt; &amp;page_setup)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PrintJob</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a872d57a98e2720d854276b1733ab7737</anchor>
      <arglist>(const Glib::ustring &amp;title, const Glib::RefPtr&lt; Printer &gt; &amp;printer, const Glib::RefPtr&lt; PrintSettings &gt; &amp;settings, const Glib::RefPtr&lt; PageSetup &gt; &amp;page_setup)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_status_changed</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>a08471454c76c4c87d938cfc9e36cd6eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::PrintJob &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1PrintJob.html</anchorfile>
      <anchor>ac3833c5b958fb443c198f1d1dfc9ff81</anchor>
      <arglist>(GtkPrintJob *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::PrintOperation</name>
    <filename>classGtk_1_1PrintOperation.html</filename>
    <base>Glib::Object</base>
    <base>Gtk::PrintOperationPreview</base>
    <member kind="function">
      <type></type>
      <name>PrintOperation</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a919efcc793c545f3b9ce7cd901053fda</anchor>
      <arglist>(PrintOperation &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PrintOperation &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>ae676232c1757ee9af1f414f3b3decdcc</anchor>
      <arglist>(PrintOperation &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PrintOperation</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>aaf20224f9d652f8bbfdc492757ecfff8</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkPrintOperation *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a0da600d77117bc22196a7279b156cf2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkPrintOperation *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a2d064f8de32d9ea5768dcc2c3a6bfcc3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkPrintOperation *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a206a6bdc2139611a54d093a4a0b12d40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_default_page_setup</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a7bea50c6ee58751f07e79959bc545326</anchor>
      <arglist>(const Glib::RefPtr&lt; PageSetup &gt; &amp;default_page_setup)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; PageSetup &gt;</type>
      <name>get_default_page_setup</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a628dcd32c90905ebe15f5e7b00366adc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const PageSetup &gt;</type>
      <name>get_default_page_setup</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>ab7f4cecef2cc869bd52166d7187f5818</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_print_settings</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>aa2b7cbeb184ab391ed10030cae56d290</anchor>
      <arglist>(const Glib::RefPtr&lt; PrintSettings &gt; &amp;print_settings)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; PrintSettings &gt;</type>
      <name>get_print_settings</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a3abca24b1ab551710c459d8afc48b91a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const PrintSettings &gt;</type>
      <name>get_print_settings</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a39654dea3407480890f0fdc3e8a74d42</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_job_name</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a2f823341ee850fdc82b83b789186027d</anchor>
      <arglist>(const Glib::ustring &amp;job_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_n_pages</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a41a215eff186075f793c29fd01d90502</anchor>
      <arglist>(int n_pages)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_current_page</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a6228a5dd3bed61a002185ccee6586705</anchor>
      <arglist>(int current_page)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_full_page</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>aecdd549da90856825d09f7ca9c23de40</anchor>
      <arglist>(bool use_full_page=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_unit</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a327bf7816fde596e01080b059edf8e1c</anchor>
      <arglist>(Unit unit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_export_filename</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>af6a3811929339ccbbe0e0b4f7172c2c7</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_track_print_status</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a0db78c570875001ae7752638a592f793</anchor>
      <arglist>(bool track_status=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_progress</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>aa9d267e6df375d17ed069eb62bb23e34</anchor>
      <arglist>(bool show_progress=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_allow_async</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>af4701d900a36b8ecedbb25605c1a355b</anchor>
      <arglist>(bool allow_async=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_custom_tab_label</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a36f4f4fd7ec8a3b2a2d40c7431ab99e3</anchor>
      <arglist>(const Glib::ustring &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>PrintOperationResult</type>
      <name>run</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a9155589b1d3cf4f4d87c5beb69b1f7a5</anchor>
      <arglist>(PrintOperationAction action=PRINT_OPERATION_ACTION_PRINT_DIALOG)</arglist>
    </member>
    <member kind="function">
      <type>PrintOperationResult</type>
      <name>run</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>ae58acaab40d7c3971831490a7195f411</anchor>
      <arglist>(PrintOperationAction action, Window &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type>PrintStatus</type>
      <name>get_status</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a095445cc734a8e9009eaa56fb0b10e37</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_status_string</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a7504c890df7208eface813c64b26499a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancel</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>aeabeb6ce5235bcd152dd0803565cf9d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_finished</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a4cf1012e1d347475278114f16036662a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw_page_finish</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a5d4cdc767c49064f1b58474b49206af7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_defer_drawing</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a41fd8d12cb747831e0c98208cd0f0e76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_support_selection</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>adfc86200f56ca59e6a28f31c508de2fe</anchor>
      <arglist>(bool support_selection=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_support_selection</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a7f552a4158ccbaac5eaa943e1b83040d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_selection</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a7149409106097f0f83a361bceeb2f441</anchor>
      <arglist>(bool has_selection=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_has_selection</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a3390b8e6b9d77196a202708f3d1c71c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_embed_page_setup</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>af7dc2111167970dda8b03e8a61b53205</anchor>
      <arglist>(bool embed=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_embed_page_setup</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a95a12ef74e98caca06ec7dfbee4501e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_n_pages_to_print</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a7271259b5b347fd8b8a750dfd131e061</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, PrintOperationResult &gt;</type>
      <name>signal_done</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a4039dcce92f8f8bb0e7ebaea4e59b18e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; PrintContext &gt; &amp; &gt;</type>
      <name>signal_begin_print</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>ac27abcde6e7f306ab4d2e803f379b337</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, const Glib::RefPtr&lt; PrintContext &gt; &amp; &gt;</type>
      <name>signal_paginate</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>ace05437df476d0667b8fcfdaa3dc9793</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; PrintContext &gt; &amp;, int, const Glib::RefPtr&lt; PageSetup &gt; &amp; &gt;</type>
      <name>signal_request_page_setup</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a456d0c3403c621f28e6df2b567effea5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; PrintContext &gt; &amp;, int &gt;</type>
      <name>signal_draw_page</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a3da39b04fb2be8b6cc24e20ff6dc848b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; PrintContext &gt; &amp; &gt;</type>
      <name>signal_end_print</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a88401b3bccba506d6e7839b4571f8ec3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_status_changed</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a95851379e9b3b7421945669fcb816ba2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; Widget * &gt;</type>
      <name>signal_create_custom_widget</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a32810c37d25d82aafc2327a103eca654</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, Widget * &gt;</type>
      <name>signal_custom_widget_apply</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>ab897d28d38407f081296d2a2ad5bd009</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, const Glib::RefPtr&lt; PrintOperationPreview &gt; &amp;, const Glib::RefPtr&lt; PrintContext &gt; &amp;, Window * &gt;</type>
      <name>signal_preview</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>abc2aa454cece8559378890c812422661</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, Widget *, const Glib::RefPtr&lt; PageSetup &gt; &amp;, const Glib::RefPtr&lt; PrintSettings &gt; &amp; &gt;</type>
      <name>signal_update_custom_widget</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>ad03444b02873ce47a179b60a35a93275</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; PageSetup &gt; &gt;</type>
      <name>property_default_page_setup</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a9a4fe390faf76ac21a636b7cb2f88cb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; PageSetup &gt; &gt;</type>
      <name>property_default_page_setup</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a667def88d2cfee8db106887de395aacd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; PrintSettings &gt; &gt;</type>
      <name>property_print_settings</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>aea08eb3cda07c207431c07a3d0d81978</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; PrintSettings &gt; &gt;</type>
      <name>property_print_settings</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a69e2b164251c337d2fc08fcafa13260d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_job_name</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a799559f1ac771946cf423119bf8e4628</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_job_name</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a2f72b920f5fb36db695ba985e1b3ad5c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_n_pages</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>aa4e7a7b187ac145f9ecde3bacc27b310</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_n_pages</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a52ac99b60df41767bd7c8e06bcca352a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_current_page</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a043038b8bdc3ef813677ad1f14391f00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_current_page</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a4e367307657f8cfddb65c086618e8b61</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_full_page</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a5692f583cef2657c0ffbed0bf5ee310a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_full_page</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a80c2b824efb7aaf40f1ce98f28ecaaca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_track_print_status</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a207a7786a03bad3df29b96caa16ff5c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_track_print_status</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a9cd98b1de8350ca1e9906711a0822f16</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Unit &gt;</type>
      <name>property_unit</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a1c3a04ec6e75b681d672b1dd82b00f3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Unit &gt;</type>
      <name>property_unit</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a827350214aabc932132efe64498f2ba5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_progress</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a12da3cc7d2cf6ad4feb15c5f3ad29e49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_progress</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>af0540d0f7c10d7a1f240d5ffec0b858e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_allow_async</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a98881dd3487baad33a14d3765adf9821</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_allow_async</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>af5a449e8ff6a6580155bf44da09a866a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; std::string &gt;</type>
      <name>property_export_filename</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a43b28eb8f580cce5cd5c0a50c7e26e62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; std::string &gt;</type>
      <name>property_export_filename</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a5da0b54cc755d4eace70724aaedc76a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; PrintStatus &gt;</type>
      <name>property_status</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a2f164744ddaf1c1f0abf46b1dc916c8b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_status_string</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a0a7308b6f8354a117003496f6ff574b9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_custom_tab_label</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a8333b2700926f8ab56447df195d68292</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_custom_tab_label</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>ade764e537daa2f0d7c124cbd20619606</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_support_selection</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>ab2e14ff7ce2921ba1a56581fe9687863</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_support_selection</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>acae4a3582d21452e069937ab6ad279e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_has_selection</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>ae1b14f53d924ea6ea1d709692ba019ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_selection</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a07221e3b43b5dbc18b3307c504753414</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_embed_page_setup</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>aaba28c148ffc156c35dd648c683d6748</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_embed_page_setup</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>ae6a5742f0408b0229b6f9ec62d1e367d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_n_pages_to_print</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>ae230956a94f18583f83b513f151d4536</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a64912c8b3f2611e78f3711cb10c5164b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PrintOperation &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a278086dd5fdc1447cf5e1e075e74a840</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PrintOperation</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a10380ef757e632edc581133c47306da8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_done</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a563c51b1d63218e65b48eb2aae1b6483</anchor>
      <arglist>(PrintOperationResult result)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_begin_print</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a49bbd3784381405c04375795dcaa9af0</anchor>
      <arglist>(const Glib::RefPtr&lt; PrintContext &gt; &amp;context)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_paginate</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>ab86b3f8e5743417bb4902e69184f344b</anchor>
      <arglist>(const Glib::RefPtr&lt; PrintContext &gt; &amp;context)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_request_page_setup</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a456730bd9ac267fa334dd44f8a4a6600</anchor>
      <arglist>(const Glib::RefPtr&lt; PrintContext &gt; &amp;context, int page_no, const Glib::RefPtr&lt; PageSetup &gt; &amp;setup)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_draw_page</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a64bb3aa5adfe371c88d46f40dcf50fc9</anchor>
      <arglist>(const Glib::RefPtr&lt; PrintContext &gt; &amp;context, int page_nr)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_end_print</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>aa0bfa6c5c6a031a4a9e5c2df95ad3dd9</anchor>
      <arglist>(const Glib::RefPtr&lt; PrintContext &gt; &amp;context)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_status_changed</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>ad609e661f2a3ad9172cb2145a5b5ab2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Widget *</type>
      <name>on_create_custom_widget</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a37aeb96be1f27f57acd5d0075fe02b02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_custom_widget_apply</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a35ea1d661f300aa9393d319a762863f2</anchor>
      <arglist>(Widget *widget)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_preview</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a0feb9b18f7f9af368f623db71bb3abb3</anchor>
      <arglist>(const Glib::RefPtr&lt; PrintOperationPreview &gt; &amp;preview, const Glib::RefPtr&lt; PrintContext &gt; &amp;context, Window *parent)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::PrintOperation &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1PrintOperation.html</anchorfile>
      <anchor>a647084f004a8d55d6f0408474871174e</anchor>
      <arglist>(GtkPrintOperation *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::PrintOperationPreview</name>
    <filename>classGtk_1_1PrintOperationPreview.html</filename>
    <base>Glib::Interface</base>
    <member kind="function">
      <type></type>
      <name>PrintOperationPreview</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>a149e226385ea1220cefd46f036b6a49e</anchor>
      <arglist>(PrintOperationPreview &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PrintOperationPreview &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>a5169e48824296f83cac1564c262c48dd</anchor>
      <arglist>(PrintOperationPreview &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PrintOperationPreview</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>af123ba680fcff6a169df284c5c20b95d</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkPrintOperationPreview *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>a718fce7a470e753f837c2ae2ab287c9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkPrintOperationPreview *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>ad2c611eb1a761ab4101f85ab65b72e24</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_page</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>a3dac5816cb7daa785e27870ad88d7185</anchor>
      <arglist>(int page_nr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>end_preview</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>a163fd8c9eaa30288b8556e041dddcbdb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_selected</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>aa7c3b47358b6d6783733585af5690d28</anchor>
      <arglist>(int page_nr) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>render_page_vfunc</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>abe9e9698a22db6f589a996713d4b7db2</anchor>
      <arglist>(int page_nr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>end_preview_vfunc</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>a900f7ea8384a538585a269e0689e4a22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>is_selected_vfunc</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>aa77b4815136f147bdcba9e3d9a64d32c</anchor>
      <arglist>(int page_nr) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; PrintContext &gt; &amp; &gt;</type>
      <name>signal_ready</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>a1b2f8620a69a3f1482d6ae73d986bf93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; PrintContext &gt; &amp;, const Glib::RefPtr&lt; PageSetup &gt; &amp; &gt;</type>
      <name>signal_got_page_size</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>a1d488bd096fb78a64a3946d8c1ae0c53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>a8c978ce2952255ade981fbcf89364cdd</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>a527668e99a3444b8c89b1324b26815ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PrintOperationPreview</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>ad033fa4191b81bb742df91fb9766b686</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_ready</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>a48e79ea95c740f11194fb62436b72881</anchor>
      <arglist>(const Glib::RefPtr&lt; PrintContext &gt; &amp;context)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_got_page_size</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>ac654e9acc7f1e27eb65193276df3ec5c</anchor>
      <arglist>(const Glib::RefPtr&lt; PrintContext &gt; &amp;context, const Glib::RefPtr&lt; PageSetup &gt; &amp;page_setup)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::PrintOperationPreview &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1PrintOperationPreview.html</anchorfile>
      <anchor>a89c6a4a8578fd3eb2f3ef3903ea5dfa2</anchor>
      <arglist>(GtkPrintOperationPreview *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::PrintSettings</name>
    <filename>classGtk_1_1PrintSettings.html</filename>
    <base>Glib::Object</base>
    <class kind="class">Gtk::PrintSettings::Keys</class>
    <class kind="class">Gtk::PrintSettings::PageRange</class>
    <member kind="typedef">
      <type>sigc::slot&lt; void, const Glib::ustring &amp;, const Glib::ustring &amp; &gt;</type>
      <name>SlotForeach</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>ac85f89b5d8929a58d9cb8c671b46f504</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PrintSettings</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>aa1e9113e5ed931f6a6d6dfd623c63ebc</anchor>
      <arglist>(PrintSettings &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PrintSettings &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a012e640628989e0ce5d0d0e2cf047621</anchor>
      <arglist>(PrintSettings &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PrintSettings</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a8659425ec5300803bc01420a5b2d75ca</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkPrintSettings *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a766dd9fbb60d56eed35e9fdc2a8cf519</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkPrintSettings *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a0c104b1cfb4f08db3b53a1cf48ebd03f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkPrintSettings *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a607c619af7aa38332dd3521b605d30ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; PrintSettings &gt;</type>
      <name>copy</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a356e563036523a3110de128c488d7452</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>load_from_file</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>aa6755f714b483b7d13b2c214d9b77c4d</anchor>
      <arglist>(const std::string &amp;file_name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>load_from_key_file</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>ac952631bd8aa672d9dd87d629ea06519</anchor>
      <arglist>(const Glib::KeyFile &amp;key_file, const Glib::ustring &amp;group_name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>load_from_key_file</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a13ea79af130b5015577ef98a2f47576b</anchor>
      <arglist>(const Glib::KeyFile &amp;key_file)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>save_to_file</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a2b00db44ee83cb9a48893c6c58a7e8a3</anchor>
      <arglist>(const std::string &amp;file_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save_to_key_file</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a868d9515e2e69b61dc9799c312255d23</anchor>
      <arglist>(Glib::KeyFile &amp;key_file, const Glib::ustring &amp;group_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save_to_key_file</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a713787987894c9125c97d7d472211fb7</anchor>
      <arglist>(Glib::KeyFile &amp;key_file) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_key</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a0edc5055b03b13bc2a20495961e50026</anchor>
      <arglist>(const Glib::ustring &amp;key) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>afaf6ff9f62628445e28ea367b74bddfd</anchor>
      <arglist>(const Glib::ustring &amp;key) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>aae5bd5cc0c634f2d4b85c74b5d9b24d7</anchor>
      <arglist>(const Glib::ustring &amp;key, const Glib::ustring &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a787c9f1ad2a6163d9892cf5d40ab371b</anchor>
      <arglist>(const Glib::ustring &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setting_foreach</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a4e72863f59c25a15a3ad98dcb4629cec</anchor>
      <arglist>(const SlotForeach &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_bool</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>aa7c1eac057503ad785c3c49e869836a8</anchor>
      <arglist>(const Glib::ustring &amp;key) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_bool</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>afcc5b6ed73334362f4a69036da6cd9e3</anchor>
      <arglist>(const Glib::ustring &amp;key, bool value=true)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_double</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>ae5d8c34cc63e8407ab32147d437844d7</anchor>
      <arglist>(const Glib::ustring &amp;key) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_double_with_default</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a7f643cbc64120512402244ce3f1548da</anchor>
      <arglist>(const Glib::ustring &amp;key, double def) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_double</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>adeca28a23d3281b2f097b404166c7418</anchor>
      <arglist>(const Glib::ustring &amp;key, double value)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_length</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>afd8e2980c5490a294f6bc10e40aef79c</anchor>
      <arglist>(const Glib::ustring &amp;key, Unit unit) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_length</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a6b74c2d0132156be768aa52c19917cc4</anchor>
      <arglist>(const Glib::ustring &amp;key, double value, Unit unit)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_int</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>afc1893d9e0412882a2c3179c35ef126d</anchor>
      <arglist>(const Glib::ustring &amp;key) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_int_with_default</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>ad7eb13efa7eb39c71e2208e483151abb</anchor>
      <arglist>(const Glib::ustring &amp;key, int def) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_int</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>ac43cec16132ae384d2934c9082085af7</anchor>
      <arglist>(const Glib::ustring &amp;key, int value)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_printer</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a7a9b36b4f96bedffd2370e91f87a92b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_printer</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a6a159239737dbe69b76c5255bb7b4118</anchor>
      <arglist>(const Glib::ustring &amp;printer)</arglist>
    </member>
    <member kind="function">
      <type>PageOrientation</type>
      <name>get_orientation</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>aca6b2c3e26d7046af45aa099a25731fe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_orientation</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>ae95e6f4b0953ed50e011b8592c454245</anchor>
      <arglist>(PageOrientation orientation)</arglist>
    </member>
    <member kind="function">
      <type>PaperSize</type>
      <name>get_paper_size</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a9360f7a816b58a0b6cf278e4e5d1dd7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const PaperSize</type>
      <name>get_paper_size</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a0a3c4504a528ab00efda7d91c8e20196</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_paper_size</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>ac7cd04abafe46bde90930a23338db3e7</anchor>
      <arglist>(const PaperSize &amp;paper_size)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_paper_width</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>abead97b1f5b91c560287c9f5a5502615</anchor>
      <arglist>(Unit unit) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_paper_width</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a60d82778f635cf3ec10479718fe6aa93</anchor>
      <arglist>(double width, Unit unit)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_paper_height</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>ab389734ffa5669464786f8fd9198653c</anchor>
      <arglist>(Unit unit) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_paper_height</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a617d9e76443850588e8c23221b7149ac</anchor>
      <arglist>(double height, Unit unit)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_use_color</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>ad6bc21e8cfdce760251d39ca7e2366aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_color</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a2688f2bf741263a05b6110cf8959e42a</anchor>
      <arglist>(bool use_color=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_collate</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>ae5086a720b5329cba023707ec64fbc4e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_collate</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a42ee5a6a3251d4b092c194732eee2ea0</anchor>
      <arglist>(bool collate=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_reverse</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>ad85d6b81968e70ea8b047d59f3e27015</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_reverse</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a194951700c82a3520ec9365f08977c38</anchor>
      <arglist>(bool reverse=true)</arglist>
    </member>
    <member kind="function">
      <type>PrintDuplex</type>
      <name>get_duplex</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>ad2b4bd4a4e8ef2e78c1fe5be0cc5f18b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_duplex</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a4c013dd0282b9461d62d34041fcb3d96</anchor>
      <arglist>(PrintDuplex duplex)</arglist>
    </member>
    <member kind="function">
      <type>PrintQuality</type>
      <name>get_quality</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a2ff5818b2a59593988623e840948b8e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_quality</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>ab1d275a378fd9dc2ecb2148134dbfb63</anchor>
      <arglist>(PrintQuality quality)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_n_copies</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a15a99f3c739cb80975a068ad77314fa7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_n_copies</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>ac7512473a8ba42d4b332e3fa9eedde88</anchor>
      <arglist>(int num_copies)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_number_up</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a843521905c474c94401a4336bbabb035</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_number_up</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a4bf9e5bec0e24f2eaab3e26b56403222</anchor>
      <arglist>(int number_up)</arglist>
    </member>
    <member kind="function">
      <type>NumberUpLayout</type>
      <name>get_number_up_layout</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>ac707107fa2705decdfffae2b7c9bf36d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_number_up</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>aa1e32315d2ad3047deb8e71912524f15</anchor>
      <arglist>(NumberUpLayout number_up_layout)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_resolution</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a1f6d1ac6164e4c9d91cae924fcceb947</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_resolution</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a96f73bbd21899c7887615f3c2d13dfaa</anchor>
      <arglist>(int resolution)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_resolution_x</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>af1cd03bfa23ce7a53d764d54c8d187b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_resolution_y</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a0ff1a7c1fe2c302071e6dbb25ab94fc9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_resolution_xy</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>ab7ab3ed073fe4e71304737bb9987e19e</anchor>
      <arglist>(int resolution_x, int resolution_y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_printer_lpi</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>aa1d8653b45c68a374f947e44df5aee04</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_printer_lpi</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>aa9ae289b6ab79634582b46c41ad315e0</anchor>
      <arglist>(double lpi)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_scale</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a25b62af0739d3c79645bcc491fe5d2e1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_scale</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a673180f17410a986c2f3ac24641044ed</anchor>
      <arglist>(double scale)</arglist>
    </member>
    <member kind="function">
      <type>PrintPages</type>
      <name>get_print_pages</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>af2188207ff4f184cf37a74a4ede04f92</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_print_pages</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>adb546321c898c41c8aa7aa2e76a27c9d</anchor>
      <arglist>(PrintPages pages)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; PageRange &gt;</type>
      <name>get_page_ranges</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>af7c175951f27eb0bc7182c8a441b0890</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_page_ranges</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a9fd8aa13a0687925c58faf3b594a29f0</anchor>
      <arglist>(const std::vector&lt; PageRange &gt; &amp;page_ranges)</arglist>
    </member>
    <member kind="function">
      <type>PageSet</type>
      <name>get_page_set</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a49c2ea929f017a1e99a414b64797cf81</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_page_set</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>addaba6a327eee6b2b7e104c8f6aa4438</anchor>
      <arglist>(PageSet page_set)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_default_source</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a0f2425afcaab4371e49f0cf4c626ab67</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_default_source</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a6c437f90ae922f3865b80053dcd14634</anchor>
      <arglist>(const Glib::ustring &amp;default_source)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_media_type</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a754ce84ca7127e7f0dadc31ecf25dcae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_media_type</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a3380f866e2183c82cb7b9c737c7968cf</anchor>
      <arglist>(const Glib::ustring &amp;media_type)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_dither</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>ab159f42a3e54b82a29effce328536e45</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_dither</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>aae630dd22311bff2dec07df0ccabc687</anchor>
      <arglist>(const Glib::ustring &amp;dither)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_finishings</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a7da33ca8e6785e8a4141aa54d7f7ae8e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_finishings</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a57823c89b11dbeaf7f9c44030c88582c</anchor>
      <arglist>(const Glib::ustring &amp;finishings)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_output_bin</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a80f73cb1981eab061993d881081298d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_output_bin</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a4217acc6b3be2d88e0c22f73ad7fe27c</anchor>
      <arglist>(const Glib::ustring &amp;output_bin)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a4ed6b8df0c6299274d933c16987480a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PrintSettings &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a11040215f807bf1daf52b22e53ada59e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PrintSettings &gt;</type>
      <name>create_from_key_file</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>aa61ee260c10537489ed82af0999dea22</anchor>
      <arglist>(const Glib::KeyFile &amp;key_file)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PrintSettings &gt;</type>
      <name>create_from_key_file</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>ad960d3a9b9831450e15a879472f76a1f</anchor>
      <arglist>(const Glib::KeyFile &amp;key_file, const Glib::ustring &amp;group_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; PrintSettings &gt;</type>
      <name>create_from_file</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a60a47b099019b9d883388c022be0d438</anchor>
      <arglist>(const std::string &amp;file_name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PrintSettings</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a73756625292f7e866ec90ed575f530e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::PrintSettings &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1PrintSettings.html</anchorfile>
      <anchor>a774374a459b75c38d4b86f2b6b03f914</anchor>
      <arglist>(GtkPrintSettings *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::PrintSettings::Keys</name>
    <filename>classGtk_1_1PrintSettings_1_1Keys.html</filename>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>PRINTER</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a85c9b5932806d97fa9661ca119ee87ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>ORIENTATION</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a5306b46e0ff0e33ba529d3f27faca60b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>PAPER_FORMAT</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a6ee604ef306131b902a27ae3773036bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>PAPER_WIDTH</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a50cdc710647867811c386d19e73fb735</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>PAPER_HEIGHT</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a97b36b8dbdeed865cec7efff762c2824</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>NUM_COPIES</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a24aa2b99a37352bee840076c5101b101</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>DEFAULT_SOURCE</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a6c28994a3a24b8fa3b606310eaafa065</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>QUALITY</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>abda00fad81e6cddfc2b2804b7db76b49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>RESOLUTION</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a8c65a2e69251bd673258df8b60feddc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>USE_COLOR</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>ae00c21a6baa3bfcf83172cdeb2196354</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>DUPLEX</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a48877bdf117a2120755249b4d6c6b035</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>COLLATE</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a9c0a1720011ff17522586b12f88f4149</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>REVERSE</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a8da8d47ac1d93764c89e77edfeb16078</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>MEDIA_TYPE</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a019f2d999feba85327cca3dea469f5fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>DITHER</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a0378931e2aaeb205e9db098f45920374</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>SCALE</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>ad594c30d34fdca82d34448f80cb6e19e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>PRINT_PAGES</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a4e36da4e23f1c0ceeaa0fc0eaf039224</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>PAGE_RANGES</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a63afd8b02e9401b49cae2423da6d5827</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>PAGE_SET</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a4daab0f18e6f3820af722e015aee9eb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>FINISHINGS</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a1fdec4e8027d880ec6c83f2b7c4b90de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>NUMBER_UP</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a0f9a9c0c04f25795ce72a56e9c0476c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>NUMBER_UP_LAYOUT</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a5a817169a7c0e0521d5e0369d2be57f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>OUTPUT_BIN</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a898ffd08395dede53f983694fdc045fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>OUTPUT_FILE_FORMAT</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>a3d231417edcce28a89adc54b179569e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>OUTPUT_URI</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>ab1518e9da1540b6c6dc4897e2f1e5dbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>WIN32_DRIVER_VERSION</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>ab9e1278b35c7d232040bd736408aadf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Glib::ustring</type>
      <name>WIN32_DRIVER_EXTRA</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1Keys.html</anchorfile>
      <anchor>ae61b3fecdb4907a47247c47187584701</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::PrintSettings::PageRange</name>
    <filename>classGtk_1_1PrintSettings_1_1PageRange.html</filename>
    <member kind="function">
      <type></type>
      <name>PageRange</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1PageRange.html</anchorfile>
      <anchor>afa9635a8ae0ffe3b1fbec4abe7c73be7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PageRange</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1PageRange.html</anchorfile>
      <anchor>aa4ea8cbb688126a890cc61ee7a6c6cf8</anchor>
      <arglist>(int start, int end)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>start</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1PageRange.html</anchorfile>
      <anchor>af684fca41b20a603670ae25d8c94fe5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>end</name>
      <anchorfile>classGtk_1_1PrintSettings_1_1PageRange.html</anchorfile>
      <anchor>ad4c378e3962f0708c6545f7162c5bba2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::PrintUnixDialog</name>
    <filename>classGtk_1_1PrintUnixDialog.html</filename>
    <base>Gtk::Dialog</base>
    <member kind="function">
      <type></type>
      <name>PrintUnixDialog</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>ac1c5ea2d83ecdfb0d70544a1c406ecda</anchor>
      <arglist>(PrintUnixDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>PrintUnixDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a526e549a528be073bec603250432ae03</anchor>
      <arglist>(PrintUnixDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PrintUnixDialog</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a94fbcf8fdf588917e4acaf41ded5a705</anchor>
      <arglist>(const PrintUnixDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>PrintUnixDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>ad5da3db8f237b5f150e31b4e507f6578</anchor>
      <arglist>(const PrintUnixDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PrintUnixDialog</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a12f818520c55e91b6164a6409c093af5</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkPrintUnixDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>ae8d543407e309cd6e7e67cd0aa2f82b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkPrintUnixDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a6f350b2c32507e663c640a4217068155</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PrintUnixDialog</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>acc62334cf969975437cbe307d0ce1cdd</anchor>
      <arglist>(Gtk::Window &amp;parent, const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PrintUnixDialog</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>aa8efdf7580e4b7504d4c944e090fe2b6</anchor>
      <arglist>(const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_page_setup</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>accaeece085ddce6ac7921eda20c67d80</anchor>
      <arglist>(const Glib::RefPtr&lt; PageSetup &gt; &amp;page_setup)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; PageSetup &gt;</type>
      <name>get_page_setup</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>afca868ff3ebcb4b2f7859660ee762e12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const PageSetup &gt;</type>
      <name>get_page_setup</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a7df68bd993989d7561491311c610ad08</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_current_page</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>af45f45a14bc6905f58dd96bee9436c91</anchor>
      <arglist>(int current_page)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_current_page</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a0b77a9b3cacad99b9ff94853d74b8693</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_settings</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a2ac1a73b1e48e810c4ebc946a4e2dbca</anchor>
      <arglist>(const Glib::RefPtr&lt; PrintSettings &gt; &amp;settings)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; PrintSettings &gt;</type>
      <name>get_settings</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a6bf4518e034887a06494cbed2c8624f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const PrintSettings &gt;</type>
      <name>get_settings</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>ae22fd0410d07535ce5d9402ab7f4bc03</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Printer &gt;</type>
      <name>get_selected_printer</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a24801b20bbf270f3d2d2ee3fc12cc9eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Printer &gt;</type>
      <name>get_selected_printer</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>aba01ec396710227c5d1c1732681b5141</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_custom_tab</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>ae57463cf1f82fc1ac14d8d976d24c823</anchor>
      <arglist>(const Widget &amp;child, const Glib::ustring &amp;tab_label)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_custom_tab</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a248574fcfb34dab7148bb13efa9b6232</anchor>
      <arglist>(const Widget &amp;child, const Widget &amp;tab_label)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_manual_capabilities</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a75bf92d2e5c722e1d0eda310e22f29ae</anchor>
      <arglist>(PrintCapabilities capabilities)</arglist>
    </member>
    <member kind="function">
      <type>PrintCapabilities</type>
      <name>get_manual_capabilities</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a93389e2cd9c5d17b16abb3837d36e735</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_support_selection</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>ac2e3e6e8dcf7b6d7be88f5ad3f746117</anchor>
      <arglist>(bool support_selection=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_support_selection</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>aa5aa6bfdda8bb1fef56d6d26288bf413</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_selection</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a289acd03bd9f320c2f72a056a1fc2a7a</anchor>
      <arglist>(bool has_selection=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_has_selection</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a9c6c2398c0357a1b607ec05578904a64</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_embed_page_setup</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a77558993cb97b10470f8887a0e5e2333</anchor>
      <arglist>(bool embed=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_embed_page_setup</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a1702dcad0fd0b00e22905a8392b306bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_page_setup_set</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a50c0b4ea82d504ac6ec863539a599885</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; PageSetup &gt; &gt;</type>
      <name>property_page_setup</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>aee7203527e9e460d2ef6db08264c9615</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; PageSetup &gt; &gt;</type>
      <name>property_page_setup</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a4026531ffa63ad6a8d7f230296e74e1f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_current_page</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>ac0d487e6a202e576054ae7f76903142c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_current_page</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a3c9577bd1f5bd35f372be2f69df44286</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; PrintSettings &gt; &gt;</type>
      <name>property_print_settings</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a3be9322ce01bd123d6b48f96e399e488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; PrintSettings &gt; &gt;</type>
      <name>property_print_settings</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a7331689585ecc0ad2bf5bd392b188c4e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Printer &gt; &gt;</type>
      <name>property_selected_printer</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a03963354f9de8ac50d2f824a8c9f0d5d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_manual_capabilities</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>acfde905496f4ba1fd6c533b6d7e4c68a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_manual_capabilities</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a1eb411754b72d84064e16332afda5677</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_support_selection</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a9a798cb6fc68d85e5ce75455922c5f72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_support_selection</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>abf5f90c80f49576df057a2d7d0161c24</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_has_selection</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a756016e87d10fdb5e7eb319190b33fa3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_selection</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>ac87cdf9174465e3153ae57242694232c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_embed_page_setup</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>aceb19d1f88b806f1565b11c47961c618</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_embed_page_setup</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a807df17101ff0a800f51aef405ab5d95</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a31b03c897accba31de002e6a18758ada</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::PrintUnixDialog *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1PrintUnixDialog.html</anchorfile>
      <anchor>a426925f0ed9e6a45e83372397d29d4bb</anchor>
      <arglist>(GtkPrintUnixDialog *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ProgressBar</name>
    <filename>classGtk_1_1ProgressBar.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::Orientable</base>
    <member kind="function">
      <type></type>
      <name>ProgressBar</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a1e663070cddc151a18ebc7c3d5a1a706</anchor>
      <arglist>(ProgressBar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ProgressBar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a7037bbe2c566995d9e0e13f70e9ff813</anchor>
      <arglist>(ProgressBar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProgressBar</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>ab50248934776fdf5b958d71316a6135b</anchor>
      <arglist>(const ProgressBar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ProgressBar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a86162d3925bed74e634bbe9ba779234a</anchor>
      <arglist>(const ProgressBar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ProgressBar</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a1fc49f0750ec31a6b49a1e4dfefd859a</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkProgressBar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a07f879d345611f7dd0066ceecb8ecf95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkProgressBar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a436514b2bbc7e65c6bb3acc8567a0962</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProgressBar</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a858446fa519774ff54caed7bb87be5f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pulse</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a540b11622168ecb6da6ec77a918287f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_text</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>ad253279dc9fa248082d21c8fb4ded6d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_text</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a8944b906ff4ecdfc284c12fbc3103dce</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_fraction</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a2a0c02bc2def272773dcf7e5c23a0470</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_fraction</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a2b0f1e2619bb296d0290cba2ce3de1b3</anchor>
      <arglist>(double fraction)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_pulse_step</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a454ad874e4579cab01da0eec12b41dd9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_pulse_step</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a44e339d07c2bbfdbc1d8722dd7ca265c</anchor>
      <arglist>(double fraction)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_inverted</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a4735a220f8bde7b5e55a6a5b6c76a78f</anchor>
      <arglist>(bool inverted=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_inverted</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a474cd2f54b5979fea318c10c5a005459</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_ellipsize</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a757a76b3e5850a27e3a072d55657279b</anchor>
      <arglist>(Pango::EllipsizeMode mode)</arglist>
    </member>
    <member kind="function">
      <type>Pango::EllipsizeMode</type>
      <name>get_ellipsize</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>aa0282e0b3feacc66a4c758804eef33aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_text</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a0bfa6042f5d4b3509967abc2d8af57fe</anchor>
      <arglist>(bool show_text=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_text</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a9ce61984ce442ec7a963f109a6083d7e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_fraction</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>af799c82783200ab27ec40ab8aac9ec61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_fraction</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a992c28e99931ccda8a108e90ae6c7d62</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_pulse_step</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a8d016e22a6d2a8d6ab1e1900da311a91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_pulse_step</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a3702c5f4cb99b253393b995b69149fe9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_text</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a36db9b8ff8a9971ec180d69de7ed2db9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_text</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a9ad1662dfde2b682ba9a41bbf083e6ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_ellipsize</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a67379680ea917cef905744dd40044ed9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_ellipsize</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a9dd88803de7e22e5a52affac8bf45e5a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_text</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a29ec2f390716fc8a3b585cb51b529c1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_text</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a8e80f6784aa889cb717bd9265a335a2a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_inverted</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>aa4232b8e100c8f09c7e13e3da1228963</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_inverted</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a53361b9138f1c1cf6cc88f0c70ee432e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>ada73ffc9f5e3d7a1eddde162b10d2198</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ProgressBar *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ProgressBar.html</anchorfile>
      <anchor>a4cfc731f614759c2cb4097396601a3a1</anchor>
      <arglist>(GtkProgressBar *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::RadioAction</name>
    <filename>classGtk_1_1RadioAction.html</filename>
    <base>Gtk::ToggleAction</base>
    <member kind="typedef">
      <type>RadioButtonGroup</type>
      <name>Group</name>
      <anchorfile>classGtk_1_1RadioAction.html</anchorfile>
      <anchor>a60670c2f501d9329dc14847f6b39f5f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RadioAction</name>
      <anchorfile>classGtk_1_1RadioAction.html</anchorfile>
      <anchor>a9b7af39391259b57bd8d7c826081f5f0</anchor>
      <arglist>(RadioAction &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>RadioAction &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1RadioAction.html</anchorfile>
      <anchor>a49da40a64a0bd5bda345fe461f1159e4</anchor>
      <arglist>(RadioAction &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RadioAction</name>
      <anchorfile>classGtk_1_1RadioAction.html</anchorfile>
      <anchor>a90c87c42db0c287e9d3af6c1d34d619c</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkRadioAction *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1RadioAction.html</anchorfile>
      <anchor>ac7bad4bfb5f8b50407645123e58dc162</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkRadioAction *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1RadioAction.html</anchorfile>
      <anchor>ac0f5faf8c1bcc2554d3dac7ae76f36ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkRadioAction *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1RadioAction.html</anchorfile>
      <anchor>a0d08e2c1e27c76c91c33aa095bfe66e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Group</type>
      <name>get_group</name>
      <anchorfile>classGtk_1_1RadioAction.html</anchorfile>
      <anchor>ae98b88fbe693802dd730e7515265bda0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_group</name>
      <anchorfile>classGtk_1_1RadioAction.html</anchorfile>
      <anchor>abb4447f5038d8d3760296d7216f527a3</anchor>
      <arglist>(Group &amp;group)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>join_group</name>
      <anchorfile>classGtk_1_1RadioAction.html</anchorfile>
      <anchor>a34af5a301ca35a6eaff859ce0719b1c1</anchor>
      <arglist>(const Glib::RefPtr&lt; RadioAction &gt; &amp;group_source)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_current_value</name>
      <anchorfile>classGtk_1_1RadioAction.html</anchorfile>
      <anchor>a3a464cb1de89dde5a8d30c9ca2d9c503</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_current_value</name>
      <anchorfile>classGtk_1_1RadioAction.html</anchorfile>
      <anchor>a95d0a6c4d3492c5221116664826e57e2</anchor>
      <arglist>(int current_value)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; RadioAction &gt; &amp; &gt;</type>
      <name>signal_changed</name>
      <anchorfile>classGtk_1_1RadioAction.html</anchorfile>
      <anchor>a12037573a6e6674ed9f963c235eb7e0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_value</name>
      <anchorfile>classGtk_1_1RadioAction.html</anchorfile>
      <anchor>a681bc0423c7e8e3aafb9386c1758129b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_value</name>
      <anchorfile>classGtk_1_1RadioAction.html</anchorfile>
      <anchor>a559d1f45b17046bd2220de93750eb6aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_current_value</name>
      <anchorfile>classGtk_1_1RadioAction.html</anchorfile>
      <anchor>ad65c47a2acdb4acd9ae01c2f1ab6afa5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_current_value</name>
      <anchorfile>classGtk_1_1RadioAction.html</anchorfile>
      <anchor>ad3963d87d544ac61d73aaed378dab710</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1RadioAction.html</anchorfile>
      <anchor>a657ef25dbb81ab948a8cde9d3ce0c5c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; RadioAction &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1RadioAction.html</anchorfile>
      <anchor>acd2d457874cb832c25545c09866ae8f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; RadioAction &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1RadioAction.html</anchorfile>
      <anchor>a0c2c4704856354242c6c9ea6eadbddda</anchor>
      <arglist>(Group &amp;group, const Glib::ustring &amp;name, const Glib::ustring &amp;label=Glib::ustring(), const Glib::ustring &amp;tooltip=Glib::ustring())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; RadioAction &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1RadioAction.html</anchorfile>
      <anchor>a88f859d1decf7d043771aa90eabd5504</anchor>
      <arglist>(Group &amp;group, const Glib::ustring &amp;name, const Gtk::StockID &amp;stock_id, const Glib::ustring &amp;label=Glib::ustring(), const Glib::ustring &amp;tooltip=Glib::ustring())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; RadioAction &gt;</type>
      <name>create_with_icon_name</name>
      <anchorfile>classGtk_1_1RadioAction.html</anchorfile>
      <anchor>aeb034042db0edc068381da25daf7b9eb</anchor>
      <arglist>(Group &amp;group, const Glib::ustring &amp;name, const Glib::ustring &amp;icon_name, const Glib::ustring &amp;label, const Glib::ustring &amp;tooltip)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>RadioAction</name>
      <anchorfile>classGtk_1_1RadioAction.html</anchorfile>
      <anchor>a8b7e14735c881adc9f96dcc524600ae5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>RadioAction</name>
      <anchorfile>classGtk_1_1RadioAction.html</anchorfile>
      <anchor>a7d73aad808cf17542c4c0c413eb5db05</anchor>
      <arglist>(Group &amp;group, const Glib::ustring &amp;name, const StockID &amp;stock_id=StockID(), const Glib::ustring &amp;label=Glib::ustring(), const Glib::ustring &amp;tooltip=Glib::ustring())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>RadioAction</name>
      <anchorfile>classGtk_1_1RadioAction.html</anchorfile>
      <anchor>adf6241bb356dc0ce2177e3ff89e0c584</anchor>
      <arglist>(Group &amp;group, const Glib::ustring &amp;name, const Glib::ustring &amp;icon_name, const Glib::ustring &amp;label=Glib::ustring(), const Glib::ustring &amp;tooltip=Glib::ustring())</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_changed</name>
      <anchorfile>classGtk_1_1RadioAction.html</anchorfile>
      <anchor>ab00413cd90105c92dcb4272457e8c122</anchor>
      <arglist>(const Glib::RefPtr&lt; RadioAction &gt; &amp;current)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::RadioAction &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1RadioAction.html</anchorfile>
      <anchor>a278af02f4181874c9e513e5a4412ccd5</anchor>
      <arglist>(GtkRadioAction *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::RadioButton</name>
    <filename>classGtk_1_1RadioButton.html</filename>
    <base>Gtk::CheckButton</base>
    <member kind="typedef">
      <type>RadioButtonGroup</type>
      <name>Group</name>
      <anchorfile>classGtk_1_1RadioButton.html</anchorfile>
      <anchor>afa55fc17cce9fa27355fd12f039404a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RadioButton</name>
      <anchorfile>classGtk_1_1RadioButton.html</anchorfile>
      <anchor>a003156069d47704969312842f25ec023</anchor>
      <arglist>(RadioButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>RadioButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1RadioButton.html</anchorfile>
      <anchor>aeb50f820fac5148eb8b6f38df330c3d9</anchor>
      <arglist>(RadioButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RadioButton</name>
      <anchorfile>classGtk_1_1RadioButton.html</anchorfile>
      <anchor>a1854937962b82e2e1315ccbfc8864958</anchor>
      <arglist>(const RadioButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>RadioButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1RadioButton.html</anchorfile>
      <anchor>a35b87fffa0b7784b2a5327c60f9c526f</anchor>
      <arglist>(const RadioButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RadioButton</name>
      <anchorfile>classGtk_1_1RadioButton.html</anchorfile>
      <anchor>a5081db0a2c998dc09cc6b02b32ac9c07</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkRadioButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1RadioButton.html</anchorfile>
      <anchor>a43c24cc7bea2c2edf043f4b76c632ee7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkRadioButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1RadioButton.html</anchorfile>
      <anchor>a03095fa6bb24ec52d0cceaa3d5ac353d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RadioButton</name>
      <anchorfile>classGtk_1_1RadioButton.html</anchorfile>
      <anchor>ade590ffb13615f882237bf30699903c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RadioButton</name>
      <anchorfile>classGtk_1_1RadioButton.html</anchorfile>
      <anchor>a323333aa38074535f21e728a4a17b0d9</anchor>
      <arglist>(const Glib::ustring &amp;label, bool mnemonic=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RadioButton</name>
      <anchorfile>classGtk_1_1RadioButton.html</anchorfile>
      <anchor>aa780fd00f89a3e0612e4c5f731b31465</anchor>
      <arglist>(Group &amp;group)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RadioButton</name>
      <anchorfile>classGtk_1_1RadioButton.html</anchorfile>
      <anchor>a326d68c96ae7d62c4ac9069d62d7d25e</anchor>
      <arglist>(Group &amp;group, const Glib::ustring &amp;label, bool mnemonic=false)</arglist>
    </member>
    <member kind="function">
      <type>Group</type>
      <name>get_group</name>
      <anchorfile>classGtk_1_1RadioButton.html</anchorfile>
      <anchor>a0591be656af22e98ec374b25175ceead</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_group</name>
      <anchorfile>classGtk_1_1RadioButton.html</anchorfile>
      <anchor>abd7707f4113d7006c35eee47d4243df5</anchor>
      <arglist>(Group &amp;group)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset_group</name>
      <anchorfile>classGtk_1_1RadioButton.html</anchorfile>
      <anchor>a4abf0b72c983a6156a97938af70ca0c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>join_group</name>
      <anchorfile>classGtk_1_1RadioButton.html</anchorfile>
      <anchor>a49046431c2a63231be693d73a7bb877a</anchor>
      <arglist>(RadioButton &amp;group_source)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_group_changed</name>
      <anchorfile>classGtk_1_1RadioButton.html</anchorfile>
      <anchor>a531f74e435f65cf1f46ff8fee588b009</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_WriteOnly&lt; RadioButton * &gt;</type>
      <name>property_group</name>
      <anchorfile>classGtk_1_1RadioButton.html</anchorfile>
      <anchor>a4ba185fe95c732618f5410d854c01efe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1RadioButton.html</anchorfile>
      <anchor>a9cb2a29f8680ab53233a02bedc69244a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_group_changed</name>
      <anchorfile>classGtk_1_1RadioButton.html</anchorfile>
      <anchor>a50d90dfa07d8b4d30fb7b328ff1ec457</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::RadioButton *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1RadioButton.html</anchorfile>
      <anchor>a64e0d63243a40db71e5920ba00e98f0d</anchor>
      <arglist>(GtkRadioButton *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::RadioButtonGroup</name>
    <filename>classGtk_1_1RadioButtonGroup.html</filename>
    <member kind="function">
      <type></type>
      <name>RadioButtonGroup</name>
      <anchorfile>classGtk_1_1RadioButtonGroup.html</anchorfile>
      <anchor>ac91273ad2896b8e6eaa6ae1567c8df64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RadioButtonGroup</name>
      <anchorfile>classGtk_1_1RadioButtonGroup.html</anchorfile>
      <anchor>a1fb2eed9a1f523ce7ee51bc6294b2a11</anchor>
      <arglist>(const RadioButtonGroup &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>RadioButtonGroup &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1RadioButtonGroup.html</anchorfile>
      <anchor>a0378ed96eaf377b3dbc2ff1619c091e3</anchor>
      <arglist>(const RadioButtonGroup &amp;src)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>RadioButtonGroup</name>
      <anchorfile>classGtk_1_1RadioButtonGroup.html</anchorfile>
      <anchor>a3fed29daccd270b5c7cb502e7765f130</anchor>
      <arglist>(GSList *group)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>add</name>
      <anchorfile>classGtk_1_1RadioButtonGroup.html</anchorfile>
      <anchor>a473f4ba4a038edb9f15bf3ba429de2ec</anchor>
      <arglist>(RadioButton &amp;item)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>add</name>
      <anchorfile>classGtk_1_1RadioButtonGroup.html</anchorfile>
      <anchor>a1141fe3731c9fbe46d1f04480406f473</anchor>
      <arglist>(RadioMenuItem &amp;item)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>add</name>
      <anchorfile>classGtk_1_1RadioButtonGroup.html</anchorfile>
      <anchor>a075814983e9eb35a22bce613ea4c4d89</anchor>
      <arglist>(const Glib::RefPtr&lt; RadioAction &gt; &amp;item)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>add</name>
      <anchorfile>classGtk_1_1RadioButtonGroup.html</anchorfile>
      <anchor>aa99245ffbefce35f7331601a09aaf0a4</anchor>
      <arglist>(RadioToolButton &amp;item)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void *</type>
      <name>operator new</name>
      <anchorfile>classGtk_1_1RadioButtonGroup.html</anchorfile>
      <anchor>ad8db16125b5b043b6c44dee06a59eb05</anchor>
      <arglist>(std::size_t)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GSList *</type>
      <name>group_</name>
      <anchorfile>classGtk_1_1RadioButtonGroup.html</anchorfile>
      <anchor>a0209d5d71b13b7a9c37c13dd4c004a73</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Gtk::RadioButton</name>
      <anchorfile>classGtk_1_1RadioButtonGroup.html</anchorfile>
      <anchor>aa4cc13ca6f73630a30b8d785779268e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Gtk::RadioMenuItem</name>
      <anchorfile>classGtk_1_1RadioButtonGroup.html</anchorfile>
      <anchor>a9ae541311c9b71e691c7c9bcd763e830</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Gtk::RadioAction</name>
      <anchorfile>classGtk_1_1RadioButtonGroup.html</anchorfile>
      <anchor>a551f9fc86a1052073df4829f9212d0fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Gtk::RadioToolButton</name>
      <anchorfile>classGtk_1_1RadioButtonGroup.html</anchorfile>
      <anchor>a0865af901cc9373a5c75c6fdf25b443a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::RadioMenuItem</name>
    <filename>classGtk_1_1RadioMenuItem.html</filename>
    <base>Gtk::CheckMenuItem</base>
    <member kind="typedef">
      <type>RadioButtonGroup</type>
      <name>Group</name>
      <anchorfile>classGtk_1_1RadioMenuItem.html</anchorfile>
      <anchor>a9e9d64b65efec1eeac362963f350f6f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RadioMenuItem</name>
      <anchorfile>classGtk_1_1RadioMenuItem.html</anchorfile>
      <anchor>a783f168cee28e8a657228376d30040eb</anchor>
      <arglist>(RadioMenuItem &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>RadioMenuItem &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1RadioMenuItem.html</anchorfile>
      <anchor>ab2d02bbeebe635f4bffe0f9effefc6e6</anchor>
      <arglist>(RadioMenuItem &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RadioMenuItem</name>
      <anchorfile>classGtk_1_1RadioMenuItem.html</anchorfile>
      <anchor>a6f5bb813c950111352af0cd63c2b0c47</anchor>
      <arglist>(const RadioMenuItem &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>RadioMenuItem &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1RadioMenuItem.html</anchorfile>
      <anchor>a049e44469b9204f564fa8cc7b65d1a5e</anchor>
      <arglist>(const RadioMenuItem &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RadioMenuItem</name>
      <anchorfile>classGtk_1_1RadioMenuItem.html</anchorfile>
      <anchor>a9a5d82d8c08b56575ca006e38c5ef5a5</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkRadioMenuItem *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1RadioMenuItem.html</anchorfile>
      <anchor>aabd8e463294ac590ba329a79bda1820b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkRadioMenuItem *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1RadioMenuItem.html</anchorfile>
      <anchor>a4e56cc44616edb1533dfcbe95705dc24</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RadioMenuItem</name>
      <anchorfile>classGtk_1_1RadioMenuItem.html</anchorfile>
      <anchor>a5512398aa5a87711892fa624de16e10a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RadioMenuItem</name>
      <anchorfile>classGtk_1_1RadioMenuItem.html</anchorfile>
      <anchor>a62225db8f0c897fbf2baafceb2e696d0</anchor>
      <arglist>(const Glib::ustring &amp;label, bool mnemonic=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RadioMenuItem</name>
      <anchorfile>classGtk_1_1RadioMenuItem.html</anchorfile>
      <anchor>af8c82185b7ab0506c23bad1d16e787db</anchor>
      <arglist>(Group &amp;groupx)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RadioMenuItem</name>
      <anchorfile>classGtk_1_1RadioMenuItem.html</anchorfile>
      <anchor>ac8d8e6bee9dde77606ae02efddc08bf8</anchor>
      <arglist>(Group &amp;groupx, const Glib::ustring &amp;label, bool mnemonic=false)</arglist>
    </member>
    <member kind="function">
      <type>Group</type>
      <name>get_group</name>
      <anchorfile>classGtk_1_1RadioMenuItem.html</anchorfile>
      <anchor>a3c1c68e18e00c9cf407d4dcc0396b4f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_group</name>
      <anchorfile>classGtk_1_1RadioMenuItem.html</anchorfile>
      <anchor>a354ba91843e02f3106e939a0f8699ae3</anchor>
      <arglist>(Group &amp;group)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset_group</name>
      <anchorfile>classGtk_1_1RadioMenuItem.html</anchorfile>
      <anchor>ae0527ceb6cc96cfffbce9a029ef8e38f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>join_group</name>
      <anchorfile>classGtk_1_1RadioMenuItem.html</anchorfile>
      <anchor>a379d67d1a4b54c9dde54f3e9376a82db</anchor>
      <arglist>(RadioMenuItem &amp;group_source)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_group_changed</name>
      <anchorfile>classGtk_1_1RadioMenuItem.html</anchorfile>
      <anchor>a920a82e35f7e64034172ccb1e0fa70ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_WriteOnly&lt; RadioMenuItem * &gt;</type>
      <name>property_group</name>
      <anchorfile>classGtk_1_1RadioMenuItem.html</anchorfile>
      <anchor>a3d2b0ce85e6479f7f5ca9c273bbaaa87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1RadioMenuItem.html</anchorfile>
      <anchor>a3891394a484f205137a67e3bc415f170</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_group_changed</name>
      <anchorfile>classGtk_1_1RadioMenuItem.html</anchorfile>
      <anchor>a78983dfd4223edfd26e37c1d1336b86d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>constructor</name>
      <anchorfile>classGtk_1_1RadioMenuItem.html</anchorfile>
      <anchor>a40c48e4f8095b565515c933dd4afb0cf</anchor>
      <arglist>(const Group &amp;group)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::RadioMenuItem *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1RadioMenuItem.html</anchorfile>
      <anchor>a82268819fc06d2eebe169a67d5f6351a</anchor>
      <arglist>(GtkRadioMenuItem *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::RadioToolButton</name>
    <filename>classGtk_1_1RadioToolButton.html</filename>
    <base>Gtk::ToggleToolButton</base>
    <member kind="typedef">
      <type>RadioButtonGroup</type>
      <name>Group</name>
      <anchorfile>classGtk_1_1RadioToolButton.html</anchorfile>
      <anchor>a9a672c737c603cd32ab4800012aeffae</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RadioToolButton</name>
      <anchorfile>classGtk_1_1RadioToolButton.html</anchorfile>
      <anchor>ad01930b9542a80e5414d0902b0ea6164</anchor>
      <arglist>(RadioToolButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>RadioToolButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1RadioToolButton.html</anchorfile>
      <anchor>a498aa71812825d507470d5fdea6e4194</anchor>
      <arglist>(RadioToolButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RadioToolButton</name>
      <anchorfile>classGtk_1_1RadioToolButton.html</anchorfile>
      <anchor>af2fa1c7a012edadf24cca837894ebb24</anchor>
      <arglist>(const RadioToolButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>RadioToolButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1RadioToolButton.html</anchorfile>
      <anchor>aad51338ea41271354c45effb15cbbec5</anchor>
      <arglist>(const RadioToolButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RadioToolButton</name>
      <anchorfile>classGtk_1_1RadioToolButton.html</anchorfile>
      <anchor>a6f8ffa7ce2180b9dbf1c786478a8da0e</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkRadioToolButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1RadioToolButton.html</anchorfile>
      <anchor>a7508ede2d8cda64545c0c1511db8333d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkRadioToolButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1RadioToolButton.html</anchorfile>
      <anchor>aa0b9bd1858a09e71d8405fc188b0e4dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RadioToolButton</name>
      <anchorfile>classGtk_1_1RadioToolButton.html</anchorfile>
      <anchor>a6891c4ee666eb5b29558336c11703caa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RadioToolButton</name>
      <anchorfile>classGtk_1_1RadioToolButton.html</anchorfile>
      <anchor>a5192577fb0c2e4c6b3ba2823938c848b</anchor>
      <arglist>(const Glib::ustring &amp;label)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RadioToolButton</name>
      <anchorfile>classGtk_1_1RadioToolButton.html</anchorfile>
      <anchor>a0559147d581372caf8829c8df0129949</anchor>
      <arglist>(Group &amp;group, const Glib::ustring &amp;label=Glib::ustring())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RadioToolButton</name>
      <anchorfile>classGtk_1_1RadioToolButton.html</anchorfile>
      <anchor>a5f060c736c30cee3bb10cfc48baa29e8</anchor>
      <arglist>(Group &amp;group, const Gtk::StockID &amp;stock_id)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RadioToolButton</name>
      <anchorfile>classGtk_1_1RadioToolButton.html</anchorfile>
      <anchor>a9e5c6709dedb6e4637e50289309fbab0</anchor>
      <arglist>(Widget &amp;icon_widget, const Glib::ustring &amp;label=Glib::ustring())</arglist>
    </member>
    <member kind="function">
      <type>Group</type>
      <name>get_group</name>
      <anchorfile>classGtk_1_1RadioToolButton.html</anchorfile>
      <anchor>a6052cada6eab7b6210ae06cdbca344b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_group</name>
      <anchorfile>classGtk_1_1RadioToolButton.html</anchorfile>
      <anchor>accc692b2e3ba892de86f2ccb67df690d</anchor>
      <arglist>(Group &amp;group)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset_group</name>
      <anchorfile>classGtk_1_1RadioToolButton.html</anchorfile>
      <anchor>a55b2f767a07a62315c569fdc475ebffd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>join_group</name>
      <anchorfile>classGtk_1_1RadioToolButton.html</anchorfile>
      <anchor>a6c83e97b7bc3cc8880d095ac7a08cb89</anchor>
      <arglist>(RadioToolButton &amp;group_source)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_WriteOnly&lt; RadioToolButton * &gt;</type>
      <name>property_group</name>
      <anchorfile>classGtk_1_1RadioToolButton.html</anchorfile>
      <anchor>ae794d480a4de9fff6ae98eff01ef33fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1RadioToolButton.html</anchorfile>
      <anchor>ac5f49a8dca23fd8e3f85256ff113e443</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::RadioToolButton *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1RadioToolButton.html</anchorfile>
      <anchor>aec168f9ab22a0597cf050eaad7da5199</anchor>
      <arglist>(GtkRadioToolButton *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Range</name>
    <filename>classGtk_1_1Range.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a763538b2aa6335c8184fb8fa34d65007</anchor>
      <arglist>(Range &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Range &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a5e00e2d9e4a445f71e5436ec259a2d3b</anchor>
      <arglist>(Range &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a1cc3b27bcb64a3fcb7702d0036e6d793</anchor>
      <arglist>(const Range &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Range &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>ac9cbb23a981d4e95dcf267a7fe7f8a39</anchor>
      <arglist>(const Range &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Range</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a3874510f0bb923dc25452113b460a73d</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkRange *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>ad1794114e1e316ce6640cef1dc70720b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkRange *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>ad575889c11d88b292188506b361321e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_adjustment</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a8dca757da44545d6ddb3055e9aad5883</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;adjustment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_adjustment</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a96a9ad1303f6f8a6d26b28a385538cb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Adjustment &gt;</type>
      <name>get_adjustment</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>af3206545f3c40bc6b576a288f1de423e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Adjustment &gt;</type>
      <name>get_adjustment</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a03111113480736e447709dde5b6b1bf5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_inverted</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>acdac2c0e3eee4095af408058620b22c3</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_inverted</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a371c2d854a528b7f98b8e6b094b1de59</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_flippable</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>adc125774f800480ca6512ed54b1078ce</anchor>
      <arglist>(bool flippable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_flippable</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a0f6a8a6335bf7209c4f840fffdef92d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_slider_size_fixed</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>af8985dd99d064e1328816335a43faaf2</anchor>
      <arglist>(bool size_fixed=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_slider_size_fixed</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>afddd744e06b2414633d7c55286399fff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_min_slider_size</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>ac12275a5761b23df429b83d354913ac5</anchor>
      <arglist>(bool min_size=true)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_min_slider_size</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a682b25cf2467a1541989f67fa0770651</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Gdk::Rectangle</type>
      <name>get_range_rect</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>abe25edc43aea2007a8c99c107f3dda8c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_slider_range</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>ac73351fc4260a28a07bade62386e7559</anchor>
      <arglist>(int &amp;slider_start, int &amp;slider_end) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_lower_stepper_sensitivity</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>aa5c7ef8052d8d276676928d934eb7d41</anchor>
      <arglist>(SensitivityType sensitivity)</arglist>
    </member>
    <member kind="function">
      <type>SensitivityType</type>
      <name>get_lower_stepper_sensitivity</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>af3a7fb6804ebb723fa5a1a671cb50c5a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_upper_stepper_sensitivity</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>ad29b8ca48aae729e0d56f864c1dbd27d</anchor>
      <arglist>(SensitivityType sensitivity)</arglist>
    </member>
    <member kind="function">
      <type>SensitivityType</type>
      <name>get_upper_stepper_sensitivity</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>ab690aecfe53ffedd8312f48c0a9410d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_increments</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>ad2ee02706b07e1f9feea798b3fae3294</anchor>
      <arglist>(double step, double page)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_range</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a499580725b0638ec0f057bd36e3d9ff8</anchor>
      <arglist>(double min, double max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_value</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a0dcdcc6742cb03a080ff24e376e3645a</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_value</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a86b988278f9f201a2cd5fe83e9ab53aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_fill_level</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>adbc3b0bc676bde91c270a5123cefd00c</anchor>
      <arglist>(bool show_fill_level=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_fill_level</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>afdd70b7ebf77a08e5ba59fe0ca11795f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_restrict_to_fill_level</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>af893a1164ec656c9e818c34fae7359e9</anchor>
      <arglist>(bool restrict_to_fill_level=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_restrict_to_fill_level</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>ac5f818e90a6cbe7608d71c43c3ce7b9f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_fill_level</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>ab8e26d5fdb1b481856efa2ac3f96f39a</anchor>
      <arglist>(double fill_level)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_fill_level</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a7045a586050d115fe3e65e0ed1c175fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_round_digits</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a137f0ba065f62a4b9d8114b751d04dfc</anchor>
      <arglist>(int round_digits)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_round_digits</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>aff63a00dfa8a425b6d388cd86d10542b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_value_changed</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a6168fd51e2b1edaab69197dfada61886</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, double &gt;</type>
      <name>signal_adjust_bounds</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a4d5984b824fd3b3bd8f9cdcfe5355d75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, ScrollType &gt;</type>
      <name>signal_move_slider</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a6b3bc74d2c4006de751523b18ffa899e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, ScrollType, double &gt;</type>
      <name>signal_change_value</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>aa653d586040e33e2e9bb66cf9fe63410</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Adjustment * &gt;</type>
      <name>property_adjustment</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>ae977454b6062f98ba0d5daad3d0a270e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Adjustment * &gt;</type>
      <name>property_adjustment</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a678186ee3c4fd334da75232051e1930a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_inverted</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a38769ceab47a8a6644d34778ba8e0b2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_inverted</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a9e80b383db0ac8c4e8d2eb9e4a3d4c0c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; SensitivityType &gt;</type>
      <name>property_lower_stepper_sensitivity</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a0df8323fad04151fc169116c7223b0eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; SensitivityType &gt;</type>
      <name>property_lower_stepper_sensitivity</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a94fe167d6c039a585790f1cc31c00059</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; SensitivityType &gt;</type>
      <name>property_upper_stepper_sensitivity</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>af2f97ec13027c06481ea6442061fcbe6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; SensitivityType &gt;</type>
      <name>property_upper_stepper_sensitivity</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a0c9094bc2c5926852ff5716419d61d0b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_fill_level</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a443a83cca1904ee00600992ea8b03044</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_fill_level</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a3dc9894c95265340a0e1b1970e08c69b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_restrict_to_fill_level</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a1bba1a3d0ad37b545fd379b2f5f09a0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_restrict_to_fill_level</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a74f1c53513da1aa5379a91ac9a195709</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_fill_level</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>ab983fa77445f9b576d404beef8aa5d70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_fill_level</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>aa3af66cce76150bdd1d0f35ccc9af7da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_round_digits</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>af29ec0552b3e2ed3c3437d85ec09c772</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_round_digits</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>afde34cb1c2263bc4c297612c769d76a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>ac3f078543c63a3b86f15326f5a817e76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_value_changed</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a1d3e4c4da265a723d6ed0707f10d0fb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_adjust_bounds</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a17472a7ad11c2f4023a2f36ffe8de61a</anchor>
      <arglist>(double new_value)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_move_slider</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>ab1357af5a89c8d0d136e259fdc11abfc</anchor>
      <arglist>(ScrollType scroll)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_change_value</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>af7f33a3dba3bd0728630921ba6c6b7a5</anchor>
      <arglist>(ScrollType scroll, double new_value)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Range</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>aecb34981203272244e0169ebfcb7c7f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>get_range_border_vfunc</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>aae9cddcadf74ddc1457c5c50993a02af</anchor>
      <arglist>(Gtk::Border &amp;border) const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::Range *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Range.html</anchorfile>
      <anchor>a7cdf860d055a8c82f352f0941a0d2613</anchor>
      <arglist>(GtkRange *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::RecentAction</name>
    <filename>classGtk_1_1RecentAction.html</filename>
    <base>Gtk::Action</base>
    <base>Gtk::RecentChooser</base>
    <member kind="function">
      <type></type>
      <name>RecentAction</name>
      <anchorfile>classGtk_1_1RecentAction.html</anchorfile>
      <anchor>aef5d64e6a0994930a562dbd5838d6ce2</anchor>
      <arglist>(RecentAction &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>RecentAction &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1RecentAction.html</anchorfile>
      <anchor>a3ec274d810aa1f1466b4c5a31dd2830d</anchor>
      <arglist>(RecentAction &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RecentAction</name>
      <anchorfile>classGtk_1_1RecentAction.html</anchorfile>
      <anchor>a315b3620217c53f5eefbd78949ef7d7a</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkRecentAction *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1RecentAction.html</anchorfile>
      <anchor>af33be3cc2266b09fb4eea062aab1070e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkRecentAction *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1RecentAction.html</anchorfile>
      <anchor>a7691119217ff66cf1a05a3e640c704fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkRecentAction *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1RecentAction.html</anchorfile>
      <anchor>ad63e9b6ef47fa139f4dd797213ad9292</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_numbers</name>
      <anchorfile>classGtk_1_1RecentAction.html</anchorfile>
      <anchor>a494f51656d98fb2b2c1778e008a89320</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_numbers</name>
      <anchorfile>classGtk_1_1RecentAction.html</anchorfile>
      <anchor>af5c4c809a1e92a022caadfd163360232</anchor>
      <arglist>(bool show_numbers=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_numbers</name>
      <anchorfile>classGtk_1_1RecentAction.html</anchorfile>
      <anchor>a01e253d0a95790ceae3e5726ed331ac2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_numbers</name>
      <anchorfile>classGtk_1_1RecentAction.html</anchorfile>
      <anchor>a087d85fdc6a41e613a2d39d035c1e502</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1RecentAction.html</anchorfile>
      <anchor>aee5dbfa55408cc8472bce59dfd551a19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; RecentAction &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1RecentAction.html</anchorfile>
      <anchor>a36dda759b0178eb7f40d6543ee98bf5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; RecentAction &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1RecentAction.html</anchorfile>
      <anchor>adb3994ef942744d9fec228e9edac4c20</anchor>
      <arglist>(const Glib::ustring &amp;name, const Glib::ustring &amp;label=Glib::ustring(), const Glib::ustring &amp;tooltip=Glib::ustring())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; RecentAction &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1RecentAction.html</anchorfile>
      <anchor>aad8c3f93209e2b617009dcd9cb0866b2</anchor>
      <arglist>(const Glib::ustring &amp;name, const Gtk::StockID &amp;stock_id, const Glib::ustring &amp;label=Glib::ustring(), const Glib::ustring &amp;tooltip=Glib::ustring())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; RecentAction &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1RecentAction.html</anchorfile>
      <anchor>a88342b8da436363ba8f466e4dec9d3a3</anchor>
      <arglist>(const Glib::ustring &amp;name, const Gtk::StockID &amp;stock_id, const Glib::ustring &amp;label, const Glib::ustring &amp;tooltip, const Glib::RefPtr&lt; RecentManager &gt; &amp;recent_manager)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>RecentAction</name>
      <anchorfile>classGtk_1_1RecentAction.html</anchorfile>
      <anchor>a87d2c8a852361216ca99d871b4799004</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>RecentAction</name>
      <anchorfile>classGtk_1_1RecentAction.html</anchorfile>
      <anchor>af4cb2e7d05195dab2225a0f1f4824a1b</anchor>
      <arglist>(const Glib::ustring &amp;name, const StockID &amp;stock_id=StockID(), const Glib::ustring &amp;label=Glib::ustring(), const Glib::ustring &amp;tooltip=Glib::ustring())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>RecentAction</name>
      <anchorfile>classGtk_1_1RecentAction.html</anchorfile>
      <anchor>a40a8f624c7c3dc1f6b693e5550c84676</anchor>
      <arglist>(const Glib::ustring &amp;name, const StockID &amp;stock_id, const Glib::ustring &amp;label, const Glib::ustring &amp;tooltip, const Glib::RefPtr&lt; RecentManager &gt; &amp;recent_manager)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::RecentAction &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1RecentAction.html</anchorfile>
      <anchor>a337075ea01acf1b3a3f25f2ccc6db193</anchor>
      <arglist>(GtkRecentAction *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::RecentChooser</name>
    <filename>classGtk_1_1RecentChooser.html</filename>
    <base>Glib::Interface</base>
    <member kind="typedef">
      <type>sigc::slot&lt; int, const Glib::RefPtr&lt; RecentInfo &gt; &amp;, const Glib::RefPtr&lt; RecentInfo &gt; &amp; &gt;</type>
      <name>SlotCompare</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a42b94cd1c9850afbc9f9fc36a4803695</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RecentChooser</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>aab7641ececb511c8922f3d64de5b3551</anchor>
      <arglist>(RecentChooser &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>RecentChooser &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a9bd212cb994a505946faedf50a60c157</anchor>
      <arglist>(RecentChooser &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RecentChooser</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>aa509cabadf84409cec6b77e077603e80</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkRecentChooser *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a8273d8433d7630546af52d66b732a1a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkRecentChooser *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>ab114d48428659e4c2b280798d23a88f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_private</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>af1aa0be9d52814fe9abdc7c37ae5a2a4</anchor>
      <arglist>(bool show_private=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_private</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>ab4d25ed989e2aa299c7abd6e51e35bb4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_not_found</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>abf4a8ac2fa532f8897cc1c36f3270a4f</anchor>
      <arglist>(bool show_not_found=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_not_found</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>ad6a64bd8e9d365b1568f525400fe0c53</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_select_multiple</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a1f39d2df99a1097efa9c58797e70091a</anchor>
      <arglist>(bool select_multiple=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_select_multiple</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a51c4c939133621bb6baf217d689fc759</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_limit</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>af5f04e647fdc3348b96440146122fc7e</anchor>
      <arglist>(int limit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_limit</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>ac8d6effcf55410c0b625700901fd220d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_limit</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a865e1110e7205c40748c1cd83b9ec3e0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_local_only</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>afa96f1d687ad05ecc9c27a358f1106d1</anchor>
      <arglist>(bool local_only=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_local_only</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a07615c9ed4d67eb0461369c0d6feba5a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_tips</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a28914cff1668703f52524498d177be8d</anchor>
      <arglist>(bool show_tips=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_tips</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a4eeea042dd78e0fec640d0baebb6ef79</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_icons</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a86eabc54c04a3209d285b6c6599ee2ba</anchor>
      <arglist>(bool show_icons=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_icons</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a634491c9a7bf1f3bacbf3550782f52fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sort_type</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>ae90c5478e8b4ff8d8d22925fc9f8be5d</anchor>
      <arglist>(RecentSortType sort_type)</arglist>
    </member>
    <member kind="function">
      <type>RecentSortType</type>
      <name>get_sort_type</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a80194cfc0c05c34afa6786fc75e65e92</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sort_func</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>acebd18e6e840d33b352c81273ac04239</anchor>
      <arglist>(const SlotCompare &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_current_uri</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>aa9d8a9dffbd8638cce676d453f99410d</anchor>
      <arglist>(const Glib::ustring &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_current_uri</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>aa9813c0a8607548716417d9784d8242d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; RecentInfo &gt;</type>
      <name>get_current_item</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>abd7ae607944c7e776e64c9bf4bd75215</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const RecentInfo &gt;</type>
      <name>get_current_item</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a4b73762b4c70acd87680a0b42cba57ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>select_uri</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a10555eb204d77f32f53777b9de025084</anchor>
      <arglist>(const Glib::ustring &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unselect_uri</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>ad43e820c0e368311162d96cd5f39136f</anchor>
      <arglist>(const Glib::ustring &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select_all</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a4f9be4a2c031c4f7c929470be12767d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unselect_all</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a3382b9a982959824692f7d052314c356</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; RecentInfo &gt; &gt;</type>
      <name>get_items</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a6e80e2df52e0be03a111f774f06675ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>get_uris</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a4c44f8874a09d05c2d1d4a74b50bd3ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_filter</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>ac8fb7d1ffee5804406cd1e48364cff49</anchor>
      <arglist>(const Glib::RefPtr&lt; RecentFilter &gt; &amp;filter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_filter</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a441ddefb8bc8f940159608c4769c95a9</anchor>
      <arglist>(const Glib::RefPtr&lt; RecentFilter &gt; &amp;filter)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; RecentFilter &gt; &gt;</type>
      <name>list_filters</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a3612e7f2f8643b407c280d79360a9b96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; const RecentFilter &gt; &gt;</type>
      <name>list_filters</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>aa2c9ee65b374dcd39a983913401c1da4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_filter</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a73c60128306ea13baf3dd4c328c1dd13</anchor>
      <arglist>(const Glib::RefPtr&lt; RecentFilter &gt; &amp;filter)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; RecentFilter &gt;</type>
      <name>get_filter</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>ac0f63149013a76278ab282224a66f8a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const RecentFilter &gt;</type>
      <name>get_filter</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>ae4f176d6a2da9a42f084f2726170c1f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_selection_changed</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>ac39bc098949309ce9f5626a40d28222e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_item_activated</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a599adc7610b10a80752c1b65101940d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_private</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a0591bb1f584b1f3b92b1b19ef7e9d84c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_private</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>af00f14f27fc6aca8c2cfe17e67fbd2e0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_tips</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a500c945e3dd77f1ab535e9b521738bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_tips</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>afe6b3f4251a177457450e30672bdb16b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_icons</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a4cc08869d5c4ad3edf21294fd6fa64cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_icons</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a25dda84548db2f0d2e6640b7e3216670</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_not_found</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>affac67e0c1de23c33c22607b4169e27d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_not_found</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>ab864fe71953c7edcb267161fe39a0fc6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_select_multiple</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>ae7eef2903f5c70d211eeca2bc8ce4ec3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_select_multiple</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a2eac83421722220f4c3e5753a6c6dc87</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_local_only</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>aa68afe393c377f77463cb05592dd0092</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_local_only</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>acdc980c6534dda282876a84109536bb6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_limit</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a0c605a9684c2553640f0d240345d504e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_limit</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a032f9d45507178602783e4665c20f1bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; RecentSortType &gt;</type>
      <name>property_sort_type</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a545e54019f5946b5987878e25374efe9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; RecentSortType &gt;</type>
      <name>property_sort_type</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>af65bd53cef7d9d2ccc47f7f846303e69</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; RecentFilter &gt; &gt;</type>
      <name>property_filter</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>afd6e1d0ff00f88d4d4d80e58e1f62194</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; RecentFilter &gt; &gt;</type>
      <name>property_filter</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a4b21ed65bff8437d10caf61fe50b3ce0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>acaafadad0f488aa0f4b059a2236a4ca5</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a08b47e5dd625cac7a5db26ddaeee1a9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>RecentChooser</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>aa237981fbd7177fdba22a1afbb8f7869</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Glib::ustring</type>
      <name>get_current_uri_vfunc</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a7c1fa8d7ca43cb01e86ff191c1b97ec9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>unselect_uri_vfunc</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a9e6f1b89eb4791bb7983dd4e025f0bac</anchor>
      <arglist>(const Glib::ustring &amp;uri)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>select_all_vfunc</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>aafd09c8c8b952c68e712b65a8b7d8993</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>unselect_all_vfunc</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a5d9931a9b1f972762721ecca34b53b67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Glib::RefPtr&lt; RecentManager &gt;</type>
      <name>get_recent_manager_vfunc</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a1fecaf88af60a868ef8f8c9f7dd1e0fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>add_filter_vfunc</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a3de043837cb081dac29d6ccc301f5ab4</anchor>
      <arglist>(const Glib::RefPtr&lt; RecentFilter &gt; &amp;filter)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>remove_filter_vfunc</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a123812fe303b4f59b166b2f2e19069a6</anchor>
      <arglist>(const Glib::RefPtr&lt; RecentFilter &gt; &amp;filter)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_selection_changed</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a252254f2cf7a953c083d1e3574cc7d71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_item_activated</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a2f3fb87d238be17f09d38ca3768e73e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::RecentChooser &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1RecentChooser.html</anchorfile>
      <anchor>a05a580686401be57b0ce10d7a8f763eb</anchor>
      <arglist>(GtkRecentChooser *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::RecentChooserDialog</name>
    <filename>classGtk_1_1RecentChooserDialog.html</filename>
    <base>Gtk::Dialog</base>
    <base>Gtk::RecentChooser</base>
    <member kind="function">
      <type></type>
      <name>RecentChooserDialog</name>
      <anchorfile>classGtk_1_1RecentChooserDialog.html</anchorfile>
      <anchor>a7028e2fb74c876a31bf55b093958bb2d</anchor>
      <arglist>(RecentChooserDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>RecentChooserDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1RecentChooserDialog.html</anchorfile>
      <anchor>a49fc4a2e681cba7ea8906b1d33d72f42</anchor>
      <arglist>(RecentChooserDialog &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RecentChooserDialog</name>
      <anchorfile>classGtk_1_1RecentChooserDialog.html</anchorfile>
      <anchor>aeb834ec114afc0b296aff8b15d65f732</anchor>
      <arglist>(const RecentChooserDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>RecentChooserDialog &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1RecentChooserDialog.html</anchorfile>
      <anchor>a2a8093a0e679aaa3a0168313aa38616c</anchor>
      <arglist>(const RecentChooserDialog &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RecentChooserDialog</name>
      <anchorfile>classGtk_1_1RecentChooserDialog.html</anchorfile>
      <anchor>adc223c8b142a573245359dea29d6d29e</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkRecentChooserDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1RecentChooserDialog.html</anchorfile>
      <anchor>aa9037355630ec732629caf279a3012cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkRecentChooserDialog *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1RecentChooserDialog.html</anchorfile>
      <anchor>a58dd5a2e883b2b4888a78257af12deac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RecentChooserDialog</name>
      <anchorfile>classGtk_1_1RecentChooserDialog.html</anchorfile>
      <anchor>a2251f627371438ae16e166814cfc3e6e</anchor>
      <arglist>(Gtk::Window &amp;parent, const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RecentChooserDialog</name>
      <anchorfile>classGtk_1_1RecentChooserDialog.html</anchorfile>
      <anchor>a847930de0c50400f1fabb7c7a2b1cbf5</anchor>
      <arglist>(const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RecentChooserDialog</name>
      <anchorfile>classGtk_1_1RecentChooserDialog.html</anchorfile>
      <anchor>af80da1390b4fc1cf4eb6003bc1c6fc3a</anchor>
      <arglist>(Gtk::Window &amp;parent, const Glib::ustring &amp;title, const Glib::RefPtr&lt; RecentManager &gt; &amp;recent_manager)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RecentChooserDialog</name>
      <anchorfile>classGtk_1_1RecentChooserDialog.html</anchorfile>
      <anchor>ae968d750f842562b303061da71128bfd</anchor>
      <arglist>(const Glib::ustring &amp;title, const Glib::RefPtr&lt; RecentManager &gt; &amp;recent_manager)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1RecentChooserDialog.html</anchorfile>
      <anchor>a59f6c4f203bf06059b0b1be2c4408aff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::RecentChooserDialog *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1RecentChooserDialog.html</anchorfile>
      <anchor>a9921c480c850d0a54582e8888df82ffb</anchor>
      <arglist>(GtkRecentChooserDialog *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::RecentChooserError</name>
    <filename>classGtk_1_1RecentChooserError.html</filename>
    <base>Glib::Error</base>
    <member kind="enumeration">
      <type></type>
      <name>Code</name>
      <anchorfile>classGtk_1_1RecentChooserError.html</anchorfile>
      <anchor>a7f4516b171f9d4f9b22bdbce1f8bc495</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOT_FOUND</name>
      <anchorfile>classGtk_1_1RecentChooserError.html</anchorfile>
      <anchor>a7f4516b171f9d4f9b22bdbce1f8bc495a402f31c7ba4287f71e95ccb669cc65fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_URI</name>
      <anchorfile>classGtk_1_1RecentChooserError.html</anchorfile>
      <anchor>a7f4516b171f9d4f9b22bdbce1f8bc495a85fbdb2472b18fee63cdb32871383a01</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOT_FOUND</name>
      <anchorfile>classGtk_1_1RecentChooserError.html</anchorfile>
      <anchor>a7f4516b171f9d4f9b22bdbce1f8bc495a402f31c7ba4287f71e95ccb669cc65fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_URI</name>
      <anchorfile>classGtk_1_1RecentChooserError.html</anchorfile>
      <anchor>a7f4516b171f9d4f9b22bdbce1f8bc495a85fbdb2472b18fee63cdb32871383a01</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RecentChooserError</name>
      <anchorfile>classGtk_1_1RecentChooserError.html</anchorfile>
      <anchor>a349931bade4754f3b675d29ae9b263eb</anchor>
      <arglist>(Code error_code, const Glib::ustring &amp;error_message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RecentChooserError</name>
      <anchorfile>classGtk_1_1RecentChooserError.html</anchorfile>
      <anchor>a7b093edfdc168b0943630c959c910d4e</anchor>
      <arglist>(GError *gobject)</arglist>
    </member>
    <member kind="function">
      <type>Code</type>
      <name>code</name>
      <anchorfile>classGtk_1_1RecentChooserError.html</anchorfile>
      <anchor>acfb3b5578d02a584984810711178e4a6</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::RecentChooserMenu</name>
    <filename>classGtk_1_1RecentChooserMenu.html</filename>
    <base>Gtk::Menu</base>
    <base>Gtk::RecentChooser</base>
    <base>Gtk::Activatable</base>
    <member kind="function">
      <type></type>
      <name>RecentChooserMenu</name>
      <anchorfile>classGtk_1_1RecentChooserMenu.html</anchorfile>
      <anchor>a19748189c0b1bfd1127b3600bb812198</anchor>
      <arglist>(RecentChooserMenu &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>RecentChooserMenu &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1RecentChooserMenu.html</anchorfile>
      <anchor>ae5aec26cf953a8f60585d5d53ec1cfec</anchor>
      <arglist>(RecentChooserMenu &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RecentChooserMenu</name>
      <anchorfile>classGtk_1_1RecentChooserMenu.html</anchorfile>
      <anchor>a3194fe87691e64de075ca80321f27355</anchor>
      <arglist>(const RecentChooserMenu &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>RecentChooserMenu &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1RecentChooserMenu.html</anchorfile>
      <anchor>a46f67cdcc6df0b4d3d2d284977ec66e5</anchor>
      <arglist>(const RecentChooserMenu &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RecentChooserMenu</name>
      <anchorfile>classGtk_1_1RecentChooserMenu.html</anchorfile>
      <anchor>ac022a575ceed2956c9260c8eea3a961e</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkRecentChooserMenu *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1RecentChooserMenu.html</anchorfile>
      <anchor>ae3863ae813b85f9b9ac6f4075370a55e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkRecentChooserMenu *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1RecentChooserMenu.html</anchorfile>
      <anchor>ac8d86c1bbe5f6997e524f28db4cb95b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RecentChooserMenu</name>
      <anchorfile>classGtk_1_1RecentChooserMenu.html</anchorfile>
      <anchor>a93a088f9beddfaeb2e41108f3fe53fde</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RecentChooserMenu</name>
      <anchorfile>classGtk_1_1RecentChooserMenu.html</anchorfile>
      <anchor>a9101d99eae3fac2de514511ab0234921</anchor>
      <arglist>(const Glib::RefPtr&lt; RecentManager &gt; &amp;recent_manager)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_numbers</name>
      <anchorfile>classGtk_1_1RecentChooserMenu.html</anchorfile>
      <anchor>ae5582f5a3baccd3abbce27a6ef78cd5a</anchor>
      <arglist>(bool show_numbers=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_numbers</name>
      <anchorfile>classGtk_1_1RecentChooserMenu.html</anchorfile>
      <anchor>ab62c21cb9ab556504f02746cfb877015</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_numbers</name>
      <anchorfile>classGtk_1_1RecentChooserMenu.html</anchorfile>
      <anchor>a6eecce71b6251857ae394aaac5961c46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_numbers</name>
      <anchorfile>classGtk_1_1RecentChooserMenu.html</anchorfile>
      <anchor>acdaea18f416aaaf3bb53ba6e2513e6f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1RecentChooserMenu.html</anchorfile>
      <anchor>aa9ce4526768ed0ed46039999659549c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::RecentChooserMenu *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1RecentChooserMenu.html</anchorfile>
      <anchor>a5392aa65118698aa289e09b2f9ee78d8</anchor>
      <arglist>(GtkRecentChooserMenu *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::RecentChooserWidget</name>
    <filename>classGtk_1_1RecentChooserWidget.html</filename>
    <base>Gtk::VBox</base>
    <base>Gtk::RecentChooser</base>
    <member kind="function">
      <type></type>
      <name>RecentChooserWidget</name>
      <anchorfile>classGtk_1_1RecentChooserWidget.html</anchorfile>
      <anchor>ade7a57c01723ee37ee2b656e92a64d72</anchor>
      <arglist>(RecentChooserWidget &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>RecentChooserWidget &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1RecentChooserWidget.html</anchorfile>
      <anchor>a3bc697153178013c94c0259a8abc7a9d</anchor>
      <arglist>(RecentChooserWidget &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RecentChooserWidget</name>
      <anchorfile>classGtk_1_1RecentChooserWidget.html</anchorfile>
      <anchor>abf75a134f96d961cd6ffb066442e28bc</anchor>
      <arglist>(const RecentChooserWidget &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>RecentChooserWidget &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1RecentChooserWidget.html</anchorfile>
      <anchor>ad3b9ffab448e9f2a0b1ac8bc01e5a20d</anchor>
      <arglist>(const RecentChooserWidget &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RecentChooserWidget</name>
      <anchorfile>classGtk_1_1RecentChooserWidget.html</anchorfile>
      <anchor>ad12cf6033f8c738ceeac5ef6bb5674ec</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkRecentChooserWidget *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1RecentChooserWidget.html</anchorfile>
      <anchor>a8ccf98a82c91472e50f695c81df2fb75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkRecentChooserWidget *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1RecentChooserWidget.html</anchorfile>
      <anchor>a43057a978df4f7b64dc1c742a0a6a34e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RecentChooserWidget</name>
      <anchorfile>classGtk_1_1RecentChooserWidget.html</anchorfile>
      <anchor>a97349580f5f6df48596c987a2f30cef1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RecentChooserWidget</name>
      <anchorfile>classGtk_1_1RecentChooserWidget.html</anchorfile>
      <anchor>afbc211801c660084b7cdf3aeb530f35a</anchor>
      <arglist>(const Glib::RefPtr&lt; RecentManager &gt; &amp;recent_manager)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1RecentChooserWidget.html</anchorfile>
      <anchor>ad82978f7d6b7b6775a874227f315ff9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::RecentChooserWidget *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1RecentChooserWidget.html</anchorfile>
      <anchor>a83bdfca45a4b4279de70d969ea487183</anchor>
      <arglist>(GtkRecentChooserWidget *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::RecentFilter</name>
    <filename>classGtk_1_1RecentFilter.html</filename>
    <base>Glib::Object</base>
    <class kind="class">Gtk::RecentFilter::Info</class>
    <member kind="typedef">
      <type>sigc::slot&lt; bool, const Info &amp; &gt;</type>
      <name>SlotCustom</name>
      <anchorfile>classGtk_1_1RecentFilter.html</anchorfile>
      <anchor>a2a46b4c386c3dbd4eca55197c51195ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RecentFilter</name>
      <anchorfile>classGtk_1_1RecentFilter.html</anchorfile>
      <anchor>a666d119b1749b5bf43741d34f0dd781c</anchor>
      <arglist>(RecentFilter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>RecentFilter &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1RecentFilter.html</anchorfile>
      <anchor>a38be0b1e31ebd82c9e7863bfd4d65a58</anchor>
      <arglist>(RecentFilter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RecentFilter</name>
      <anchorfile>classGtk_1_1RecentFilter.html</anchorfile>
      <anchor>afa245e2df5e3353aa397f70daf45aafd</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkRecentFilter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1RecentFilter.html</anchorfile>
      <anchor>aee1b9930e4348748d8de7c3143c5878b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkRecentFilter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1RecentFilter.html</anchorfile>
      <anchor>a6bcd5dd239067d571651c0a71305e0fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkRecentFilter *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1RecentFilter.html</anchorfile>
      <anchor>adacfeeaf39e10558b3b5ccf00352f74c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_name</name>
      <anchorfile>classGtk_1_1RecentFilter.html</anchorfile>
      <anchor>a57c6905667c9881376891e4d4cb2ff38</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>classGtk_1_1RecentFilter.html</anchorfile>
      <anchor>a01831ed5541ef3d4a975cd832926cdd0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_mime_type</name>
      <anchorfile>classGtk_1_1RecentFilter.html</anchorfile>
      <anchor>a230612101528ddfa56c9a9edcb5a39ca</anchor>
      <arglist>(const Glib::ustring &amp;mime_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_pattern</name>
      <anchorfile>classGtk_1_1RecentFilter.html</anchorfile>
      <anchor>ae1097e7d1f101a8c432840a415a77c75</anchor>
      <arglist>(const Glib::ustring &amp;pattern)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_pixbuf_formats</name>
      <anchorfile>classGtk_1_1RecentFilter.html</anchorfile>
      <anchor>a8fd8c80a98a20d1fdf49e1f4f701df59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_application</name>
      <anchorfile>classGtk_1_1RecentFilter.html</anchorfile>
      <anchor>a79c9a997495c5972b77149b9696a3a0a</anchor>
      <arglist>(const Glib::ustring &amp;application)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_group</name>
      <anchorfile>classGtk_1_1RecentFilter.html</anchorfile>
      <anchor>a1f6013b83391b2e23e6bce1d3ea7ca38</anchor>
      <arglist>(const Glib::ustring &amp;group)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_age</name>
      <anchorfile>classGtk_1_1RecentFilter.html</anchorfile>
      <anchor>a410af2c9fa2270ffa6f67e08625e6fb6</anchor>
      <arglist>(int days)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_custom</name>
      <anchorfile>classGtk_1_1RecentFilter.html</anchorfile>
      <anchor>a0baa74334e0b4297e5b1381198c12791</anchor>
      <arglist>(RecentFilterFlags needed, const SlotCustom &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>RecentFilterFlags</type>
      <name>get_needed</name>
      <anchorfile>classGtk_1_1RecentFilter.html</anchorfile>
      <anchor>aa4b001cae9f6a2821040e5cb1d8350de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1RecentFilter.html</anchorfile>
      <anchor>ad6c67203801b9c70bd36eaeeba3d4cdb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; RecentFilter &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1RecentFilter.html</anchorfile>
      <anchor>a5a0a3276aa5985031def86df7fdf3ab2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>RecentFilter</name>
      <anchorfile>classGtk_1_1RecentFilter.html</anchorfile>
      <anchor>a73339136367c38602f7871ba5517d3d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::RecentFilter &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1RecentFilter.html</anchorfile>
      <anchor>a26cb6ef9cb6dff913df704e33118d700</anchor>
      <arglist>(GtkRecentFilter *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::RecentFilter::Info</name>
    <filename>classGtk_1_1RecentFilter_1_1Info.html</filename>
    <member kind="function">
      <type></type>
      <name>Info</name>
      <anchorfile>classGtk_1_1RecentFilter_1_1Info.html</anchorfile>
      <anchor>ad2091125a3fc276177ee04b3ce99ec5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>RecentFilterFlags</type>
      <name>contains</name>
      <anchorfile>classGtk_1_1RecentFilter_1_1Info.html</anchorfile>
      <anchor>a248438d9717bdf8c2c55f11109394c9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Glib::ustring</type>
      <name>uri</name>
      <anchorfile>classGtk_1_1RecentFilter_1_1Info.html</anchorfile>
      <anchor>a50bdd289d4223e4bcf68ebded59a8429</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Glib::ustring</type>
      <name>display_name</name>
      <anchorfile>classGtk_1_1RecentFilter_1_1Info.html</anchorfile>
      <anchor>a9e8426c904086e2f88ddc23894f19e79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Glib::ustring</type>
      <name>mime_type</name>
      <anchorfile>classGtk_1_1RecentFilter_1_1Info.html</anchorfile>
      <anchor>a33e0d099cc9f47810dbdcd2dc7eda5ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::list&lt; Glib::ustring &gt;</type>
      <name>applications</name>
      <anchorfile>classGtk_1_1RecentFilter_1_1Info.html</anchorfile>
      <anchor>a0fc4c78cf105a6e4b398fd42c4c62e96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::list&lt; Glib::ustring &gt;</type>
      <name>groups</name>
      <anchorfile>classGtk_1_1RecentFilter_1_1Info.html</anchorfile>
      <anchor>ac8b1463fac11376942d551eb82ea85c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>age</name>
      <anchorfile>classGtk_1_1RecentFilter_1_1Info.html</anchorfile>
      <anchor>a1cb51b50c4a977b92b74fc5de0ddeeea</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::RecentInfo</name>
    <filename>classGtk_1_1RecentInfo.html</filename>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>acf93d2d5bcdf29d3c668b2c8edfd6ab6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a62a3c68ccab74057eb4be1c75b2b1eef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkRecentInfo *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>ad851411db952b2041bcc1dec5c09037a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkRecentInfo *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>af42f9236d765e719935910b9dc118bff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkRecentInfo *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a4d0c33979f8e2b016943317c00ba38d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RecentInfo</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a2b36a73c78c6ddd4e53a67e71144fe80</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RecentInfo</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a0ac6f78d14134269dbbb7129e7786a4f</anchor>
      <arglist>(const RecentInfo &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>RecentInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>add0d37ee509811f87d21ff735196bd70</anchor>
      <arglist>(const RecentInfo &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_uri</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>af9dd0f3d9fbb4a5788b0260c4429ee3a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_display_name</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>ae8f88d8b7fe964f359ec195a7fc9a408</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_description</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>ae7fa1a813557a0ce7ddb6103d4baf094</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_mime_type</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>ac712350fd1af96290b7c81b61cd7b30f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::time_t</type>
      <name>get_added</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a243b4599f43029e93eb63249cb2f843c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::time_t</type>
      <name>get_modified</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a3fb8ed2de9c50d1dda1a9391414e8dfb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::time_t</type>
      <name>get_visited</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>aab91eec167197ae13bb5db4cae03d880</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_private_hint</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>aeed18c1b521d9eb323c522698c68e85e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::AppInfo &gt;</type>
      <name>create_app_info</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a8d28e829646ff9a12ab66047c6a2b8f4</anchor>
      <arglist>(const Glib::ustring &amp;app_name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_application_info</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a2dea97981dfc201b9f2b2f32e4027261</anchor>
      <arglist>(const Glib::ustring &amp;app_name, std::string &amp;app_exec, guint &amp;count, std::time_t &amp;time) const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>get_applications</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a6c6a5435518040aa0aae32a53b93b894</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>last_application</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>ae9d878b4cc91eed65d989ccb16f7a34f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_application</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>aedabc0699402a800689727b5736f4523</anchor>
      <arglist>(const Glib::ustring &amp;app_name) const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>get_groups</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>adbcf48b83829f83cd4a7ff2beb5c0b19</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_group</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a76db74df9bfe6d1674009a2c452a0ab0</anchor>
      <arglist>(const Glib::ustring &amp;group_name) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>get_icon</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>ac3efc797a1ad7323f910493022212ec9</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Pixbuf &gt;</type>
      <name>get_icon</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>aff943071d7b16c58943bf7c5c827cd1b</anchor>
      <arglist>(int size) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::Icon &gt;</type>
      <name>get_gicon</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a9ec0523e28deb4e85247067e6316bf7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::Icon &gt;</type>
      <name>get_gicon</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a6db73e96fe6bf5a739791df86cca179e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_short_name</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>ab34936aa07da5c7622c7c6774413c5bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_uri_display</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>acde7de7444b70c580d7e8e209902954f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_age</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a88a3cd6760ce4abff01cdaca46982f79</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_local</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a7f6eef6546933f061f99043034b7d0cb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exists</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a9a1b7992f631a3b34918a145fff6e1e0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equal</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a5f345402bced60bf54111d216ebc5d9a</anchor>
      <arglist>(const RecentInfo &amp;info_b) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>a7bcc85b22525ec08f13d63aaf00ceeb7</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>ae4a4f24a3942a5893ec0a0dece7061d1</anchor>
      <arglist>(const RecentInfo &amp;lhs, const RecentInfo &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>afe6f2916a6106a6469a34ccee072088e</anchor>
      <arglist>(const RecentInfo &amp;lhs, const RecentInfo &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::RecentInfo &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1RecentInfo.html</anchorfile>
      <anchor>ad1f3fa78ef465f24e2f1febd2b19cae6</anchor>
      <arglist>(GtkRecentInfo *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::RecentManager</name>
    <filename>classGtk_1_1RecentManager.html</filename>
    <base>Glib::Object</base>
    <class kind="class">Gtk::RecentManager::Data</class>
    <member kind="typedef">
      <type>sigc::slot&lt; void &gt;</type>
      <name>SlotChanged</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>a377901b12ae77569e78e58a338ffdf9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RecentManager</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>a0d6ac2fbf197e24611500a4a450df83d</anchor>
      <arglist>(RecentManager &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>RecentManager &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>a6d360efbf13be78dd318d465009d42a1</anchor>
      <arglist>(RecentManager &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RecentManager</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>a1697008ce88423e79c00b1abcdc0bbbc</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkRecentManager *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>aeb3fee7edcf9f2a35f9bba6a5c05bc29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkRecentManager *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>a16ba98921b4d3eef7d6b93f052423112</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkRecentManager *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>a590150f439560f351bdbbe7e4e085327</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_item</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>a40399f4843c5ab7ab83736a7be08eb36</anchor>
      <arglist>(const Glib::ustring &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>add_item</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>a6ed8039a13e90ad09a36d7214798b87d</anchor>
      <arglist>(const Glib::ustring &amp;uri, const Data &amp;recent_data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove_item</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>a706bd39925f209dc38fcb5465348ca1c</anchor>
      <arglist>(const Glib::ustring &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; RecentInfo &gt;</type>
      <name>lookup_item</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>a06657f84ccee0963bcff22db6be29d73</anchor>
      <arglist>(const Glib::ustring &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const RecentInfo &gt;</type>
      <name>lookup_item</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>ad0ae9435533efce8218989e01af76b61</anchor>
      <arglist>(const Glib::ustring &amp;uri) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_item</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>ae05e919ccdd0221f5b0de334d3c5b751</anchor>
      <arglist>(const Glib::ustring &amp;uri) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>move_item</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>a37908dbe8d829d473e3399691c29ca1a</anchor>
      <arglist>(const Glib::ustring &amp;uri, const Glib::ustring &amp;new_uri)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; RecentInfo &gt; &gt;</type>
      <name>get_items</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>a912d8842be7d550b1ff30dbe4f36636c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>purge_items</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>aa393d1be0690fa74313a7e4f51fc3860</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_changed</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>a7d1f07c7aea8ebfd1528993b6320dc15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_filename</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>ad629e0b128c7e113fada393f8ed12bcb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_size</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>a1b07ed7c6873f0539f3afc817501130a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>aad861cbd76788c7dde947d7df4f5ed4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; RecentManager &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>a5fa470d8dc5f71d5a51faeba82ea8980</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; RecentManager &gt;</type>
      <name>get_default</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>a6147eea0bc983c8f84cf9b0657280412</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>RecentManager</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>ab43690a69bb1ba69c8ea9744a93d9065</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_changed</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>aba88dad9d1c648b47c01954a23b887e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::RecentManager &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1RecentManager.html</anchorfile>
      <anchor>a5f2ae744f762ca72e98c45e981ae8584</anchor>
      <arglist>(GtkRecentManager *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::RecentManager::Data</name>
    <filename>classGtk_1_1RecentManager_1_1Data.html</filename>
    <member kind="variable">
      <type>Glib::ustring</type>
      <name>display_name</name>
      <anchorfile>classGtk_1_1RecentManager_1_1Data.html</anchorfile>
      <anchor>a880c435648a5ed3b81875664263b4a21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Glib::ustring</type>
      <name>description</name>
      <anchorfile>classGtk_1_1RecentManager_1_1Data.html</anchorfile>
      <anchor>a8febd5211477594cd2597b7d318dbdff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Glib::ustring</type>
      <name>mime_type</name>
      <anchorfile>classGtk_1_1RecentManager_1_1Data.html</anchorfile>
      <anchor>a235083b0b3120fa624a5e474a02a0a00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Glib::ustring</type>
      <name>app_name</name>
      <anchorfile>classGtk_1_1RecentManager_1_1Data.html</anchorfile>
      <anchor>a275a497e18afc763f37e7638b6b75812</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Glib::ustring</type>
      <name>app_exec</name>
      <anchorfile>classGtk_1_1RecentManager_1_1Data.html</anchorfile>
      <anchor>a442c240764b959e6222d54a3c780311d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>groups</name>
      <anchorfile>classGtk_1_1RecentManager_1_1Data.html</anchorfile>
      <anchor>ae44b4cd2939000089441a5d7b88da6b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_private</name>
      <anchorfile>classGtk_1_1RecentManager_1_1Data.html</anchorfile>
      <anchor>abca93736e97986d77420d6d5cc7c91ed</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::RecentManagerError</name>
    <filename>classGtk_1_1RecentManagerError.html</filename>
    <base>Glib::Error</base>
    <member kind="enumeration">
      <type></type>
      <name>Code</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a502e47feef0f40a1a779f0425536da63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOT_FOUND</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a502e47feef0f40a1a779f0425536da63ad05e6e4baf003ca786c11ca1aebf777b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_URI</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a502e47feef0f40a1a779f0425536da63aa5b04a74781fc95aca064dbe1cd3317d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_ENCODING</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a502e47feef0f40a1a779f0425536da63a63e8c60b01e28bf5803808146d6afcce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOT_REGISTERED</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a502e47feef0f40a1a779f0425536da63a8bebf2847f8da54ed8321b787a93b045</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>READ</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a502e47feef0f40a1a779f0425536da63a68c7a3814a4ae88364ac90e006c81e1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WRITE</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a502e47feef0f40a1a779f0425536da63a891dda7a443ee13000b71846c33ed1f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNKNOWN</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a502e47feef0f40a1a779f0425536da63a0d3c356c1bdae22569559315aca08d13</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOT_FOUND</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a502e47feef0f40a1a779f0425536da63ad05e6e4baf003ca786c11ca1aebf777b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_URI</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a502e47feef0f40a1a779f0425536da63aa5b04a74781fc95aca064dbe1cd3317d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID_ENCODING</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a502e47feef0f40a1a779f0425536da63a63e8c60b01e28bf5803808146d6afcce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOT_REGISTERED</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a502e47feef0f40a1a779f0425536da63a8bebf2847f8da54ed8321b787a93b045</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>READ</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a502e47feef0f40a1a779f0425536da63a68c7a3814a4ae88364ac90e006c81e1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WRITE</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a502e47feef0f40a1a779f0425536da63a891dda7a443ee13000b71846c33ed1f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNKNOWN</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a502e47feef0f40a1a779f0425536da63a0d3c356c1bdae22569559315aca08d13</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RecentManagerError</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a5ebc2cf31a1a9b3f041ff66749ce6bc0</anchor>
      <arglist>(Code error_code, const Glib::ustring &amp;error_message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RecentManagerError</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a573cfe02f473a501cc8126aefdd3056e</anchor>
      <arglist>(GError *gobject)</arglist>
    </member>
    <member kind="function">
      <type>Code</type>
      <name>code</name>
      <anchorfile>classGtk_1_1RecentManagerError.html</anchorfile>
      <anchor>a7b79c8f1c1620dcd244caea1c652f84a</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Revealer</name>
    <filename>classGtk_1_1Revealer.html</filename>
    <base>Gtk::Bin</base>
    <member kind="function">
      <type></type>
      <name>Revealer</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a7b5c216aaa7cdc10f74eabcf4a117027</anchor>
      <arglist>(Revealer &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Revealer &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a429960087cd7e815e5811a625634e69a</anchor>
      <arglist>(Revealer &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Revealer</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>ae9fbe27308177117642825b34c91186b</anchor>
      <arglist>(const Revealer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Revealer &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a32263b020cd60bc3cc83e80faae98666</anchor>
      <arglist>(const Revealer &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Revealer</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a6d7d5551cf836dd3413cd48ca02e8c49</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkRevealer *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a28cbfc239d4488bf41a523510a728cb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkRevealer *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>ae56f3d97506fb4fee9628ffd62ba2d75</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Revealer</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a83fd7b4d3088bd496f3001904baffd99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_reveal_child</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a40839f7a93ba2f9f8dd661511096677a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_reveal_child</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a5ef2dd33cd6ad0af9a459222c03929bc</anchor>
      <arglist>(bool reveal_child=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_child_revealed</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a4eccb900551a1425ef0a7ef944af406f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_transition_duration</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a54194fe3caff29f998449bb2d68d2342</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_transition_duration</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a5ed3eddecd4ec18be1671dd6d8d18fb8</anchor>
      <arglist>(guint duration)</arglist>
    </member>
    <member kind="function">
      <type>RevealerTransitionType</type>
      <name>get_transition_type</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a1889f8a5da03aa6b8a78c6906ec3c0ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_transition_type</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a4f4012134991c6f72f6fe1cf9e0e2f70</anchor>
      <arglist>(RevealerTransitionType transition)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; RevealerTransitionType &gt;</type>
      <name>property_transition_type</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a0775db838cf45facb5e75eed1a8ae6d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; RevealerTransitionType &gt;</type>
      <name>property_transition_type</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a8338246dbc96da63660b3c02d714c6e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_transition_duration</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a50e7b0161537d2c87b3be73d2a435398</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_transition_duration</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>ad680b3ead3e2d30d066a7b4bc0de9588</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_reveal_child</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a4bd433db3af64ea130bb5b35eb0bb3bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_reveal_child</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>aafcb831d04eeff2b875b05c8d29f92af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_child_revealed</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>aef17b7b7f014c0f787d7b6c45cba7f19</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a9275ba3c8fbd099f4805adee4ba90e38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Revealer *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Revealer.html</anchorfile>
      <anchor>a286e693cf758d7f5d2c500e855b67f88</anchor>
      <arglist>(GtkRevealer *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Scale</name>
    <filename>classGtk_1_1Scale.html</filename>
    <base>Gtk::Range</base>
    <member kind="function">
      <type></type>
      <name>Scale</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a3d6c0c2ae8a31a51c18ef4e80b4290a2</anchor>
      <arglist>(Scale &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Scale &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a70d1199ca62aaaa7a5e26e59295514ac</anchor>
      <arglist>(Scale &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Scale</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a658d7f540eca81fc8db26dc59af75800</anchor>
      <arglist>(const Scale &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Scale &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a4e73428504fcc27b555bf1f93e7c27cf</anchor>
      <arglist>(const Scale &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Scale</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>ac3888b352a72950d39bc965fd7e1acb4</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkScale *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>afc7d5fb5223af20c105c473dff2cb5bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkScale *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a07df5a12a5e4a27aff06cbe9e66e3d86</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Scale</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a3b4c0f4d069a0309e21a60f497bf546e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Scale</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a6c25b5312366a0aa94d284a0f1596875</anchor>
      <arglist>(Orientation orientation)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Scale</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>ad05f786edc2ee064ef2999cb1ea8b6c3</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;adjustment, Orientation orientation=ORIENTATION_HORIZONTAL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_digits</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a7cd895f5c2f298f12a67db035f99bb47</anchor>
      <arglist>(int digits)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_digits</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a922de69e479a00b87bd4539eb027a431</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_draw_value</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a28473a3dead4c2a29bfe1399234266e2</anchor>
      <arglist>(bool draw_value=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_draw_value</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a198d0e8c858f4a2c6e357c97fc5f5330</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_value_pos</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>aaefd87ceaf890e6d0d8f01df27a51dd9</anchor>
      <arglist>(PositionType pos)</arglist>
    </member>
    <member kind="function">
      <type>PositionType</type>
      <name>get_value_pos</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a8ffee09d212456320b69cd6352da138f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_origin</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a7ddf5dab0a5896faf56a470d4a140179</anchor>
      <arglist>(bool has_origin=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_has_origin</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>aeb70bcb8cf8512cebecccdd520a6d49d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pango::Layout &gt;</type>
      <name>get_layout</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>adcba211aa3877294cb9fef98cb35d8b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Pango::Layout &gt;</type>
      <name>get_layout</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a9ef33e3dc9cb54e9bd01d0fa14a8649e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_layout_offsets</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>aa76b390c21e6710910ea5c592ac0bbf2</anchor>
      <arglist>(int &amp;x, int &amp;y) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_mark</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a283af7d7d0ddb8fb3077b8082786d8d0</anchor>
      <arglist>(double value, PositionType position, const Glib::ustring &amp;markup)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_marks</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a9e3e8d0d052a6b9851a89de31cc13003</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; Glib::ustring, double &gt;</type>
      <name>signal_format_value</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a5b42b75ec37a195758b1121e857253b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_digits</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a7b52dddc7ec049bc7e5c231bcf0b48f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_digits</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a60ecf386434a3f4543316815ec43a2bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_draw_value</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a4a72080b7356e7d6e764f038a78edcc9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_draw_value</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a28ba3c5fd85af9301f1f82c1cd3b415b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; PositionType &gt;</type>
      <name>property_value_pos</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>af3d7a69169b1c1f932211d3a1e183eb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; PositionType &gt;</type>
      <name>property_value_pos</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a6c7c6d2a5bac73457050399311dfeca1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_has_origin</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a88638cc438b2dba449985fee03dff573</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_origin</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a2340d43a045a982417b4e960c6f9986b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>af8dd4b82352ee5af8575953992b32ff3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Glib::ustring</type>
      <name>on_format_value</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a4a3077296b964a1140af324b0747601e</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>draw_value_vfunc</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a1a8610694ad2ff3e2123951af8a7ad55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>calc_digits_</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>a222499c514f33d1d4b83d09edfdebc9c</anchor>
      <arglist>(double step) const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::Scale *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Scale.html</anchorfile>
      <anchor>af4cd737ce65264070c74e7002858d9a5</anchor>
      <arglist>(GtkScale *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ScaleButton</name>
    <filename>classGtk_1_1ScaleButton.html</filename>
    <base>Gtk::Button</base>
    <base>Gtk::Orientable</base>
    <member kind="function">
      <type></type>
      <name>ScaleButton</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>aec9b9891dd71bf4e3965560275cc4604</anchor>
      <arglist>(ScaleButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ScaleButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a163571ad1c88ac7908092fa9985eeb12</anchor>
      <arglist>(ScaleButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScaleButton</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>ae3fe8cba17ea10e0851c417ad3a47e00</anchor>
      <arglist>(const ScaleButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ScaleButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>abaed459a95c940fbda327d89a7b7ef6d</anchor>
      <arglist>(const ScaleButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScaleButton</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a56834de4214c3389b3a2713b9cb4ccc2</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkScaleButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>abd9b41acbedadf2ae1e4bf96250bf99f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkScaleButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>ac517467566cde32ec931fa95d01964d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScaleButton</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a96753b6cb6b8adb0ed3727ba3eb8cfb7</anchor>
      <arglist>(IconSize size, double min, double max, double step, const std::vector&lt; Glib::ustring &gt; &amp;icons)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScaleButton</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a1354fa78081191605759fc71e213a094</anchor>
      <arglist>(IconSize size, double min, double max, double step)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icons</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a3f8f0fed2d84fdaf0e491425f9a7271d</anchor>
      <arglist>(const std::vector&lt; Glib::ustring &gt; &amp;icons)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_value</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a3dacb3cba22bc5d4f1efb6b76ba05e8a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_value</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a3d817b49350e45667e675c193fa6e945</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Adjustment &gt;</type>
      <name>get_adjustment</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>aabf2cc34a8267e9196a97aa2a6d2a82f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Adjustment &gt;</type>
      <name>get_adjustment</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>af016306f0694804008a064f700f9ee69</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_adjustment</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a3e6cb93006047f2292167e39f26decb1</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;adjustment)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_plus_button</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a18fe450c240c73b08b3ae4f248209d94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_plus_button</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a6dac3186fc21e1bfac6b4ff4c8920cde</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_minus_button</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>aa7ad2ed19ff7b545133bda10f0dd2c8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_minus_button</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>aedde95ef04dc01f3dd44fb99a2e3d40d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::Widget *</type>
      <name>get_popup</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a2a6f814648fa561ad88b31066efe7c8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Gtk::Widget *</type>
      <name>get_popup</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>aff70619c1d86fed03469e65e04cb5a72</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, double &gt;</type>
      <name>signal_value_changed</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>adb0565b3e3a47f0d6b8262bac34a5999</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_value</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a696dc4abe82c53a78505aee5a635f6e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_value</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>acd61ec983ab222d00a1f2807890f8ee6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; IconSize &gt;</type>
      <name>property_size</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a1a45899f2749633de78fac35d5d2c982</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; IconSize &gt;</type>
      <name>property_size</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a21db0d3d035110ad4c27061a457cc1c3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Adjustment * &gt;</type>
      <name>property_adjustment</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>ad3151f64af85b6c0445f38bf3332a709</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Adjustment * &gt;</type>
      <name>property_adjustment</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a0bac0715b1e92c520a6f19b98192ce99</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; std::vector&lt; Glib::ustring &gt; &gt;</type>
      <name>property_icons</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>ac551b3d95c791b7489b7901f4f59b838</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; std::vector&lt; Glib::ustring &gt; &gt;</type>
      <name>property_icons</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a26acf0bd17a490e0e04b7f0062bcc05d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a9c16e280a60ed4c755d88b5dcb535d3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_value_changed</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a9ca46954af0fd6f42764b0da943981f3</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ScaleButton *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ScaleButton.html</anchorfile>
      <anchor>a38b00f5c1cb1925042801f10d653ab7b</anchor>
      <arglist>(GtkScaleButton *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Scrollable</name>
    <filename>classGtk_1_1Scrollable.html</filename>
    <base>Glib::Interface</base>
    <member kind="function">
      <type></type>
      <name>Scrollable</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a6666b48efaafdeede4540cd67c6135e2</anchor>
      <arglist>(Scrollable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Scrollable &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a0ace19dd8b3aa40d99170942a6147865</anchor>
      <arglist>(Scrollable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Scrollable</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a80d9818530aa7a042495c72145bf1dd3</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkScrollable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a570bc9462785d8b587e972bf2dc32bf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkScrollable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>aa386e50a9c880f30efc9db82346f6422</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Adjustment &gt;</type>
      <name>get_hadjustment</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>af3878da4887660abbae5957b24bbbc14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Adjustment &gt;</type>
      <name>get_hadjustment</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a2b1f80b4c13d5658448a3f2f0c9b6e0e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_hadjustment</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>ad17532865862c76e1be9a35172acd975</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;hadjustment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_hadjustment</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>ac6f56218d168ce3088f5cf7634b6bf81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Adjustment &gt;</type>
      <name>get_vadjustment</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a692d45b9aa8fae3d24f60a926a84b19f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Adjustment &gt;</type>
      <name>get_vadjustment</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a7886e304418957335898a20edbd32f12</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_vadjustment</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a4916a14d49ef7023ebcac30c6406d376</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;vadjustment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_vadjustment</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a61ce61f0d1853d9a073afa7aa1e5c48e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ScrollablePolicy</type>
      <name>get_hscroll_policy</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a5bfdb863435bb714594399c94b140782</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_hscroll_policy</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a48b8ae4a6eba12acd1c60b1c34ada9f8</anchor>
      <arglist>(ScrollablePolicy policy)</arglist>
    </member>
    <member kind="function">
      <type>ScrollablePolicy</type>
      <name>get_vscroll_policy</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>ad8c69f346bc9ef1e7136a009409d375c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_vscroll_policy</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a29e07bd532e7658152b42b17aaaa56b9</anchor>
      <arglist>(ScrollablePolicy policy)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_border</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a8407c4f94a347d70f079d5e7cc89be49</anchor>
      <arglist>(Border &amp;border) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Adjustment &gt; &gt;</type>
      <name>property_hadjustment</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>ab3575935018c8385235cd4d00a2ac7da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Adjustment &gt; &gt;</type>
      <name>property_hadjustment</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>ae42f3cb097b149383e34c006181c9cf6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Adjustment &gt; &gt;</type>
      <name>property_vadjustment</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a86018ac8089ef01d30663e90d8bdbcca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Adjustment &gt; &gt;</type>
      <name>property_vadjustment</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a542f49b3372ea56217010ebadb542773</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; ScrollablePolicy &gt;</type>
      <name>property_hscroll_policy</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a09a9a2db3286cdc743ce6ea2800095ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; ScrollablePolicy &gt;</type>
      <name>property_hscroll_policy</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>ac0a7966f961543f2d0f032a1b4f35fad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; ScrollablePolicy &gt;</type>
      <name>property_vscroll_policy</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>abffc7e716b656b90a3cc41d138d88bc6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; ScrollablePolicy &gt;</type>
      <name>property_vscroll_policy</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a34eb4a890096660459c3a88dc354fdff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a55b0e4b474fa585a669898a9c60056de</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>a4af4c9ea49af9d2148e3f06ff86cadc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Scrollable</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>ac5a66c426bb0eccfcf845e036ecf55f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Scrollable &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Scrollable.html</anchorfile>
      <anchor>add7b87bdfa7cba3bf768b8d5f8f0ea76</anchor>
      <arglist>(GtkScrollable *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Scrollbar</name>
    <filename>classGtk_1_1Scrollbar.html</filename>
    <base>Gtk::Range</base>
    <base>Gtk::Orientable</base>
    <member kind="function">
      <type></type>
      <name>Scrollbar</name>
      <anchorfile>classGtk_1_1Scrollbar.html</anchorfile>
      <anchor>ae21bd79bcbb284984e17d0829dc12478</anchor>
      <arglist>(Scrollbar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Scrollbar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Scrollbar.html</anchorfile>
      <anchor>aea493485fd5048ec61df829bd3c6bc2b</anchor>
      <arglist>(Scrollbar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Scrollbar</name>
      <anchorfile>classGtk_1_1Scrollbar.html</anchorfile>
      <anchor>a7e495a541997919e7e83610e3cd95fea</anchor>
      <arglist>(const Scrollbar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Scrollbar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Scrollbar.html</anchorfile>
      <anchor>a916c454d41670a02a27b456c30bc09e6</anchor>
      <arglist>(const Scrollbar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Scrollbar</name>
      <anchorfile>classGtk_1_1Scrollbar.html</anchorfile>
      <anchor>a6b2c2f2cf4d350343b571f50c8984cb3</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkScrollbar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Scrollbar.html</anchorfile>
      <anchor>a37b9bc182ebc88880d99d6dd8155a247</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkScrollbar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Scrollbar.html</anchorfile>
      <anchor>ac3128aa0a3a8116b3c7b740184085cf8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Scrollbar</name>
      <anchorfile>classGtk_1_1Scrollbar.html</anchorfile>
      <anchor>aeacc50cf8f8022213c7a4c359422fb96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Scrollbar</name>
      <anchorfile>classGtk_1_1Scrollbar.html</anchorfile>
      <anchor>aef70bd4d373e112c73816f5fb4a1e3ec</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;adjustment, Orientation orientation=ORIENTATION_HORIZONTAL)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Scrollbar.html</anchorfile>
      <anchor>a7aaf5a72bbd1083abc4e45c404c97f4a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Scrollbar *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Scrollbar.html</anchorfile>
      <anchor>a0faf964f67656f6af288145c1bb25e3d</anchor>
      <arglist>(GtkScrollbar *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ScrolledWindow</name>
    <filename>classGtk_1_1ScrolledWindow.html</filename>
    <base>Gtk::Bin</base>
    <member kind="function">
      <type></type>
      <name>ScrolledWindow</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a9881d8d03e1b7cab53ea127135a0c7e7</anchor>
      <arglist>(ScrolledWindow &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ScrolledWindow &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a527ff3c09e1a11f522e7adad18f0ba11</anchor>
      <arglist>(ScrolledWindow &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScrolledWindow</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>ab9f230af713ed5c208f69b8244b9e809</anchor>
      <arglist>(const ScrolledWindow &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ScrolledWindow &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a573a0b41978bd40c81e7c46fff16bb68</anchor>
      <arglist>(const ScrolledWindow &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScrolledWindow</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>adf7e94425ab43bf1069e7fc15fe1be6b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkScrolledWindow *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>abacc27fa2d7d97d377974c8cd698ec2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkScrolledWindow *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a7a97b89b72d74ee9e489992cbef3cca5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScrolledWindow</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>acfea794428221cb9d56517ea6d349579</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScrolledWindow</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a7f80f17ec8fd21e5b810f31bb9ddd583</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;hadjustment, const Glib::RefPtr&lt; Adjustment &gt; &amp;vadjustment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_hadjustment</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>ac70ff030af23aac126db811280c41013</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;hadjustment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_vadjustment</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>ad378f122096a72ae84b76cc1c3a703bf</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;vadjustment)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Adjustment &gt;</type>
      <name>get_hadjustment</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>adec2b734a2b89ba46fceb1b26a2054e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Adjustment &gt;</type>
      <name>get_hadjustment</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a16cfc3436b4c249aea7556c3feb80713</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Adjustment &gt;</type>
      <name>get_vadjustment</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a95693ae8d127c5e84199a3ca84fcf656</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Adjustment &gt;</type>
      <name>get_vadjustment</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a48099cfe54fdf4d0b5b7393d9cb38fb2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_policy</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a17352bdfd39d8a895e5c885f0bd1a246</anchor>
      <arglist>(PolicyType hscrollbar_policy, PolicyType vscrollbar_policy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_policy</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>ae71a3d73dc890f0c3972164627eba91b</anchor>
      <arglist>(PolicyType &amp;hscrollbar_policy, PolicyType &amp;vscrollbar_policy) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_placement</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a0f18402db19c53c106bd7a820682ba78</anchor>
      <arglist>(CornerType window_placement)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_placement</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>abd0e5020be7a77509201a3a15f0da8bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CornerType</type>
      <name>get_placement</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a3a6ca6462c48ae9ecc088aa4c1f7cad8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_shadow_type</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>af77cafa057cf36404d634eede6b773d8</anchor>
      <arglist>(ShadowType type)</arglist>
    </member>
    <member kind="function">
      <type>ShadowType</type>
      <name>get_shadow_type</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a16bd35a8ba7ed97f10346a15379dba86</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a6aa86320ceb526ea623621d9e3804a2c</anchor>
      <arglist>(Gtk::Widget &amp;widget) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_with_viewport</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>ac3ad324ec9013a612a9f9f1aacf5277a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Scrollbar *</type>
      <name>get_vscrollbar</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a82225324d8d08f136872c5b434a26e81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Scrollbar *</type>
      <name>get_vscrollbar</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>ac648427298ca727e814547ceb6a78916</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Scrollbar *</type>
      <name>get_hscrollbar</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a4ec08225cc1c4cb1fcae8e488cc8cf72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Scrollbar *</type>
      <name>get_hscrollbar</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>aad1381259d333d9cae42993ba37b0fbc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_min_content_width</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a2a1da86e0ca4cbb591e9a929dcbd5d23</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_min_content_width</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>aa9602bd46046edcfe7f7781b3a738407</anchor>
      <arglist>(int width)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_min_content_height</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a5dadcc8f90222c1d3fd4c15398a739e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_min_content_height</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a2c07b526bc043cdd2b92d4bc93714fe7</anchor>
      <arglist>(int height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_kinetic_scrolling</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a88132d21cc8378c793889b9fa20ac1ca</anchor>
      <arglist>(bool kinetic_scrolling=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_kinetic_scrolling</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a387309ca017908a5b6730a421e3829aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_capture_button_press</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>aa84223ce21f2c9c8dda3ea063b2a1f18</anchor>
      <arglist>(bool capture_button_press)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_capture_button_press</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a2711082b6880c8ba593da22d60e01948</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_overlay_scrolling</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>ae0110ffe76610bd9e50e71e1e7b4729d</anchor>
      <arglist>(bool overlay_scrolling=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_overlay_scrolling</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>ae5e1637893049f0536e64925e21d0382</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_max_content_width</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a2a61ad6af5c3b62a21438909f2080e42</anchor>
      <arglist>(int width)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_max_content_width</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a6a7b067f92f0a91b84bb638425076c34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_max_content_height</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a8de97279e618a60049c27f706309c163</anchor>
      <arglist>(int height)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_max_content_height</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a7d759ba0637d2ceac4dbe3e83daa8df1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_propagate_natural_width</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a2d4cb945688ecb8739efd70b18742779</anchor>
      <arglist>(bool propagate=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_propagate_natural_width</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>aea656cb2d07c2ccd03799e7fc2698215</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_propagate_natural_height</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>ad0cfabe5dcd72812b3260091a726bf38</anchor>
      <arglist>(bool propagate=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_propagate_natural_height</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a6da17ff502e26d188af9095a9a187e1b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, Gtk::PositionType &gt;</type>
      <name>signal_edge_overshot</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a087b6c00d5ef8d9109cdc45d2452906f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, Gtk::PositionType &gt;</type>
      <name>signal_edge_reached</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a53c3d67db3fd60c8ba1099878d18a61d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Adjustment &gt; &gt;</type>
      <name>property_hadjustment</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>ae0e22ed47a78abcad7349ba57c97412a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Adjustment &gt; &gt;</type>
      <name>property_hadjustment</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>afda6362275fecdcaf097788b1ad18fd6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Adjustment &gt; &gt;</type>
      <name>property_vadjustment</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a168e148cfe9446ff1f7b17be63c676d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Adjustment &gt; &gt;</type>
      <name>property_vadjustment</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>abd981d77ac3ebae334183a0ca4d29a2a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; PolicyType &gt;</type>
      <name>property_hscrollbar_policy</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a34565d4e25f8ab217742dbdc9997610b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; PolicyType &gt;</type>
      <name>property_hscrollbar_policy</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>abd23ce72e2e724ccc5e7c179c2983c89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; PolicyType &gt;</type>
      <name>property_vscrollbar_policy</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>abaf9e0527d21281231f8dfb387171dae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; PolicyType &gt;</type>
      <name>property_vscrollbar_policy</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>af03171e415b653940130c3724b792e5d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; CornerType &gt;</type>
      <name>property_window_placement</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a6da6ea2b52099d0ea0fd0845e8a9f662</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; CornerType &gt;</type>
      <name>property_window_placement</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a8e270f127f2320b2cb6931506e783559</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_window_placement_set</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a5e20e97997424a725f8dfc061e85f8ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_window_placement_set</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a18ac6c7e4065708bf117ed7d889aadcc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; ShadowType &gt;</type>
      <name>property_shadow_type</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a784f718dbe090b5e737c043af27b90e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; ShadowType &gt;</type>
      <name>property_shadow_type</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a92378e1fd6428d6337db1a7154123f2d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_min_content_width</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>afa843207b04c1e2d71cc83e89f381033</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_min_content_width</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a2a7295e6550d03af2407700c143bed65</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_min_content_height</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>aedc8784514cd4e0e8bf8c93b56ef0da1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_min_content_height</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a1e32acd8c1fbae7f3c9b83c3a3918d2b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_kinetic_scrolling</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a9ed2c226611949f9960f851601d20004</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_kinetic_scrolling</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a6d7394895835405ef78fcde1ddada25a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_overlay_scrolling</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a490d5b396e82257ab505f4d9e6167ee0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_overlay_scrolling</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a44fa15fe22b7df5754495ef6c833208f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_max_content_width</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>ae988155bdc45922be1c2ce898ff7c15e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_max_content_width</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a1119f5f1d03e7689ad23296cd0c4e678</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_max_content_height</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a514cf4dd77b552c4b60c782fd291d4ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_max_content_height</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a739afd57706a3582374d43411623b9f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_propagate_natural_width</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a6e100440459c919e47c1a83c97b9d0a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_propagate_natural_width</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>af386bb195be6c81289cbc9858fc35e5f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_propagate_natural_height</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a16453960aa7f7dab6e376b9c5a6a8a58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_propagate_natural_height</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>ae3a1164de9498db2fe9ddfa5341ea651</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a13190cd304b5b4d03fed1fa5aacce99f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ScrolledWindow *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ScrolledWindow.html</anchorfile>
      <anchor>a08e8c15db9b3d1d025b5d7d6ec46ae5f</anchor>
      <arglist>(GtkScrolledWindow *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::SearchBar</name>
    <filename>classGtk_1_1SearchBar.html</filename>
    <base>Gtk::Bin</base>
    <member kind="function">
      <type></type>
      <name>SearchBar</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>aeaf2f496d3ade230802e2369bc558e19</anchor>
      <arglist>(SearchBar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SearchBar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>ab3d490f0e64bfe891dbd7f9dcdbac83f</anchor>
      <arglist>(SearchBar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SearchBar</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>aa1fa5ac662be5dfadb4414280e537995</anchor>
      <arglist>(const SearchBar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>SearchBar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>a4b569ee4cbcbad3bcdf6a45b81b19a84</anchor>
      <arglist>(const SearchBar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SearchBar</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>a6af9c5e792634d6be0730d10277cba5c</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkSearchBar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>aaecd0621d8144332b047b8abd10bf6ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkSearchBar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>ac33b40cc9a0ba0f7973188ea33eab6e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SearchBar</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>a493cdb8c613b90c5c939c415b8a2b10c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect_entry</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>a1a2298eebfae1ce613b473243fb00d54</anchor>
      <arglist>(Gtk::Entry &amp;entry)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_search_mode</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>ae6110e920513104685551c8cd891b7c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_search_mode</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>a307dde44bc0c7454f38a438b70a22b9e</anchor>
      <arglist>(bool search_mode=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_close_button</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>ab0d1a60f6187ab7d6d9a70adf2850fd8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_close_button</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>a6d50810bf5e43b7403fd58c2f3bd73b5</anchor>
      <arglist>(bool visible=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>handle_event</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>aec02fa4c713e824e235fdb7236f2927b</anchor>
      <arglist>(GdkEventKey *gdk_event)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_search_mode_enabled</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>ae65d50f2d1362a68e2ec08e04735ec14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_search_mode_enabled</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>a176f85392d908a776fd5879f4b8bc7a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_close_button</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>a7e4f2e6fdcce3892b21eddaf74fe108b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_close_button</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>aabe01cddca85c6c304fb63243e38277a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>a3e783bb503ad3d6e552a180b29154b44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::SearchBar *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1SearchBar.html</anchorfile>
      <anchor>a0644cfc37a9e39e7e8198ed04ce170b1</anchor>
      <arglist>(GtkSearchBar *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::SearchEntry</name>
    <filename>classGtk_1_1SearchEntry.html</filename>
    <base>Gtk::Entry</base>
    <member kind="function">
      <type></type>
      <name>SearchEntry</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>abce4df4a814d44acc3570850fb0ad948</anchor>
      <arglist>(SearchEntry &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SearchEntry &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>ad1e4560cf7de1bac3c18f4ceb1369e1a</anchor>
      <arglist>(SearchEntry &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SearchEntry</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>ac7a534798916b3cd1e6b617a86b89bbd</anchor>
      <arglist>(const SearchEntry &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>SearchEntry &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>a8d694e0ea48d0ee5ea517b366d72ad6e</anchor>
      <arglist>(const SearchEntry &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SearchEntry</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>ab0eabdace2c6d8343562234bf63f27ab</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkSearchEntry *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>a950155950b0b2aa7d3c30c19d3f77abf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkSearchEntry *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>a0123229b64f1c915b11d5d3c17639a08</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SearchEntry</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>a19f16898b8301f28364d9a2b088e279c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>handle_event</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>a25dd28e0b598e04577c96238b67c7e48</anchor>
      <arglist>(GdkEventKey *gdk_event)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_search_changed</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>a8181a3910f953c5a58de0d2f753cee6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_next_match</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>a3d4e49e3b3b593d9e09ab154cda06a1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_previous_match</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>a69c3a5753915fd7adf256464d9dba5d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_stop_search</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>a8f85eaafbaa6a034e94bcfe55f729eb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>a995b994819e8e18fed70d70e82f3a820</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::SearchEntry *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1SearchEntry.html</anchorfile>
      <anchor>a648ed40d8b02fcafe04d7a3fe1576502</anchor>
      <arglist>(GtkSearchEntry *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::SelectionData</name>
    <filename>classGtk_1_1SelectionData.html</filename>
    <member kind="function">
      <type></type>
      <name>SelectionData</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>a960d5979b57c7a2a9d025b4c3bdce3d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SelectionData</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>a737d81c0ec50c493a362851153fb37d0</anchor>
      <arglist>(GtkSelectionData *gobject, bool make_a_copy=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SelectionData</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>a38e56cf805c11aa747c010f4f3aaf3df</anchor>
      <arglist>(const SelectionData &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>SelectionData &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>a3f4a823c42ea8380d0b70c209b62e979</anchor>
      <arglist>(const SelectionData &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SelectionData</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>af373da78f2d3a286bd92df38bd9984b1</anchor>
      <arglist>(SelectionData &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SelectionData &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>adeb535aa89906008b02f8749466622ee</anchor>
      <arglist>(SelectionData &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SelectionData</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>ad9c65ed8c98a4b8edcfb1d8fac189d13</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>a027d31220e644e2ebb048a6cdd75a43f</anchor>
      <arglist>(SelectionData &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GtkSelectionData *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>a64da01e677cb9937a08d5eee606374f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkSelectionData *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>a61975208c3a824d985a876d76b82791d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkSelectionData *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>a553aea8a0ef83b67096e7ed26ea5d785</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>aa5d6c006f1e575808bb64c3a1724eb87</anchor>
      <arglist>(int format, const guint8 *data, int length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>a3f34e9f6ec1986cd4c299c89585d7926</anchor>
      <arglist>(const std::string &amp;type, int format, const guint8 *data, int length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>a1464571fb61f96ac66f15731e8214091</anchor>
      <arglist>(const std::string &amp;type, const std::string &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_text</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>a85a4ed9fd2da8ff6174842d3c53167e3</anchor>
      <arglist>(const Glib::ustring &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_text</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>ad6fe5dc64610a8ef8b76582e09facaea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_pixbuf</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>abbcfbbbbd1bbc7d581711f32b97b938a</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;pixbuf)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>get_pixbuf</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>a9c39b784e5977aac600b369c0062bb2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Pixbuf &gt;</type>
      <name>get_pixbuf</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>a32adbe8fe464cc6572c2337951fae84e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_uris</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>aa73e3d0b7d8eec201e4e2242133b47f9</anchor>
      <arglist>(const std::vector&lt; Glib::ustring &gt; &amp;uris)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>get_uris</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>aabaf632a2b0454c53199a16be4cabfa6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const guchar *</type>
      <name>get_data</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>a0dd1ae04cb843a1c9648ea62c81a8841</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_length</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>a5c8913e1086614c80f4e84325c649d42</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const guchar *</type>
      <name>get_data</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>a8aa6dbb3ae7a59c408f3556b6decfbf1</anchor>
      <arglist>(int &amp;length) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_data_as_string</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>a652b34830f8c54515f3a70f458e6c152</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_selection</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>aedf2fd11ed9e0709efe6e24498b9385e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_target</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>a34ee1b33006bf4f2be11c8fdb65df33e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>get_targets</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>af879ef592339304dae13d7be339321e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_data_type</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>a20257cb7db350176a9b66d6ce2dedcd4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_format</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>a0dd95ca2a722651db2ad3e7d1e30f260</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>abe771f4375acf6e152fbe4666534534b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>aca4a73f550bd8172b42e76031bc8b985</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>targets_include_uri</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>a9fbf51e548ecb51d983531ecccf49fb9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>targets_include_text</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>a589b34bbc75182de5195dd5a22708892</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>targets_include_rich_text</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>a23502b282ec4546943b6fb4c2d0d8e3d</anchor>
      <arglist>(const Glib::RefPtr&lt; TextBuffer &gt; &amp;buffer) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>targets_include_image</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>a97521408bbef83c56ed4b8c3faa53bd8</anchor>
      <arglist>(bool writable=true) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>a145eef69ee940d37fdab6285d4b33d91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GtkSelectionData *</type>
      <name>gobject_</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>aeccc1384f7e8decb49a0188c76c99658</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>a4ecb0408a4349572c98c2969d4c3ca9a</anchor>
      <arglist>(SelectionData &amp;lhs, SelectionData &amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Gtk::SelectionData</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1SelectionData.html</anchorfile>
      <anchor>a6e49ccb1719123dd777a6b9b35004dfe</anchor>
      <arglist>(GtkSelectionData *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Separator</name>
    <filename>classGtk_1_1Separator.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::Orientable</base>
    <member kind="function">
      <type></type>
      <name>Separator</name>
      <anchorfile>classGtk_1_1Separator.html</anchorfile>
      <anchor>a5e2a8938d95222db291117e50cca214e</anchor>
      <arglist>(Separator &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Separator &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Separator.html</anchorfile>
      <anchor>ac0e799865c4d6b96443b9002544ba06a</anchor>
      <arglist>(Separator &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Separator</name>
      <anchorfile>classGtk_1_1Separator.html</anchorfile>
      <anchor>a6ff64093053d9f0d5ad075a70f938d30</anchor>
      <arglist>(const Separator &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Separator &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Separator.html</anchorfile>
      <anchor>a4d36eb70392d0919f27c9285c52a1a28</anchor>
      <arglist>(const Separator &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Separator</name>
      <anchorfile>classGtk_1_1Separator.html</anchorfile>
      <anchor>ab99a843df190027c95b76107dbdef58c</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkSeparator *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Separator.html</anchorfile>
      <anchor>a099f2665c0820474c66cf42ab4de65e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkSeparator *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Separator.html</anchorfile>
      <anchor>a1184d8a37ef1699acdd3cd6d50076e1f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Separator</name>
      <anchorfile>classGtk_1_1Separator.html</anchorfile>
      <anchor>ab8f2e9b0b4b27ddb6ebc091d226e95d6</anchor>
      <arglist>(Orientation orientation=ORIENTATION_HORIZONTAL)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Separator.html</anchorfile>
      <anchor>ae69b0a87c2b297c28ee6e9bf2908ec37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Separator *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Separator.html</anchorfile>
      <anchor>a110f1e622f4e3eaaffbe3184529a8603</anchor>
      <arglist>(GtkSeparator *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::SeparatorMenuItem</name>
    <filename>classGtk_1_1SeparatorMenuItem.html</filename>
    <base>Gtk::MenuItem</base>
    <member kind="function">
      <type></type>
      <name>SeparatorMenuItem</name>
      <anchorfile>classGtk_1_1SeparatorMenuItem.html</anchorfile>
      <anchor>a50ccb3bbfd31061f2f4dd0d5dfc3af3b</anchor>
      <arglist>(SeparatorMenuItem &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SeparatorMenuItem &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1SeparatorMenuItem.html</anchorfile>
      <anchor>af6b8bf2192b8cbc25fbf08daa59a9711</anchor>
      <arglist>(SeparatorMenuItem &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SeparatorMenuItem</name>
      <anchorfile>classGtk_1_1SeparatorMenuItem.html</anchorfile>
      <anchor>aff07a4643393af9ccc92fb8107eacf8e</anchor>
      <arglist>(const SeparatorMenuItem &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>SeparatorMenuItem &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1SeparatorMenuItem.html</anchorfile>
      <anchor>a0d26cfbae040d1aff97939b66a44f07a</anchor>
      <arglist>(const SeparatorMenuItem &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SeparatorMenuItem</name>
      <anchorfile>classGtk_1_1SeparatorMenuItem.html</anchorfile>
      <anchor>a92ac57059bb159585685d6a19b95c213</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkSeparatorMenuItem *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SeparatorMenuItem.html</anchorfile>
      <anchor>a9b75733e98f771db456c2fe190652272</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkSeparatorMenuItem *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SeparatorMenuItem.html</anchorfile>
      <anchor>a9faf949d67dc515dd82a7ec42ba59dec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SeparatorMenuItem</name>
      <anchorfile>classGtk_1_1SeparatorMenuItem.html</anchorfile>
      <anchor>afb856ab28979800dfb4db0f9feda5dba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1SeparatorMenuItem.html</anchorfile>
      <anchor>aaf77b5e760cc36b6ff67443f985faf97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::SeparatorMenuItem *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1SeparatorMenuItem.html</anchorfile>
      <anchor>a2c5e791dfc9fc6f701bf11889124a5d7</anchor>
      <arglist>(GtkSeparatorMenuItem *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::SeparatorToolItem</name>
    <filename>classGtk_1_1SeparatorToolItem.html</filename>
    <base>Gtk::ToolItem</base>
    <member kind="function">
      <type></type>
      <name>SeparatorToolItem</name>
      <anchorfile>classGtk_1_1SeparatorToolItem.html</anchorfile>
      <anchor>a79b4173ea268bd272bc0f767c28c99ff</anchor>
      <arglist>(SeparatorToolItem &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SeparatorToolItem &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1SeparatorToolItem.html</anchorfile>
      <anchor>a6e123dc2e3a0002fb7ee4e6f64474ec3</anchor>
      <arglist>(SeparatorToolItem &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SeparatorToolItem</name>
      <anchorfile>classGtk_1_1SeparatorToolItem.html</anchorfile>
      <anchor>afa19e7604821b4a322ba8a0ad0e644e2</anchor>
      <arglist>(const SeparatorToolItem &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>SeparatorToolItem &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1SeparatorToolItem.html</anchorfile>
      <anchor>a692a2905b1b1fccd783fc500eae10070</anchor>
      <arglist>(const SeparatorToolItem &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SeparatorToolItem</name>
      <anchorfile>classGtk_1_1SeparatorToolItem.html</anchorfile>
      <anchor>aaacbf720df6541b06ca14b1cf8ece390</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkSeparatorToolItem *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SeparatorToolItem.html</anchorfile>
      <anchor>af88c8baefe7909b8544bda83705220ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkSeparatorToolItem *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SeparatorToolItem.html</anchorfile>
      <anchor>aac14dc8f944446718d36d491409c839d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SeparatorToolItem</name>
      <anchorfile>classGtk_1_1SeparatorToolItem.html</anchorfile>
      <anchor>aae94d511716e5c30272ac2ef971145d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_draw</name>
      <anchorfile>classGtk_1_1SeparatorToolItem.html</anchorfile>
      <anchor>ad2c43eff6973b44cf8f7900ae14c720b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_draw</name>
      <anchorfile>classGtk_1_1SeparatorToolItem.html</anchorfile>
      <anchor>aad20e10f6cd7add1d54fe08d4dd6f3d2</anchor>
      <arglist>(bool should_draw=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_draw</name>
      <anchorfile>classGtk_1_1SeparatorToolItem.html</anchorfile>
      <anchor>a4fab1a08aa0e3210e1c8901e5a780bfe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_draw</name>
      <anchorfile>classGtk_1_1SeparatorToolItem.html</anchorfile>
      <anchor>a80c5bb37ebff5d13d5c913382d1325a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1SeparatorToolItem.html</anchorfile>
      <anchor>ac0529109546711ed633b284b460d48bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::SeparatorToolItem *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1SeparatorToolItem.html</anchorfile>
      <anchor>a1a932571cbd914a68fd3dc75dc582829</anchor>
      <arglist>(GtkSeparatorToolItem *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Settings</name>
    <filename>classGtk_1_1Settings.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>Settings</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a845c5ecbeeb584a2e36efc9d0543f52a</anchor>
      <arglist>(Settings &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Settings &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ac8cc3b91333217a936f3c92e01fd1d5b</anchor>
      <arglist>(Settings &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Settings</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a57a9e5c0a1d638586a57edcd2e982b02</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkSettings *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>af2e86369e2f479c2058860582aaa9ae5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkSettings *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a2c67f50a561a0ed424b9e7eac827f28c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkSettings *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>af0edba32dc50c05016344b7e3c88545a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset_property</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a4e6b657ac0fded3a807ead8cf24ed66d</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_gtk_double_click_time</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a9bfa2b745a223d0e0502ced07ed4889b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_gtk_double_click_time</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>aa922b0c4eccd80c8563f2fc8f62d8ede</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_gtk_double_click_distance</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a930db2309a66aceb349bae2e634f11e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_gtk_double_click_distance</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>aee55024ad6ffbe3b2f3c42ca4c1699f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_cursor_blink</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>aeced7447c079b52e1247caf9ba0fa039</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_cursor_blink</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>acc52194e389ef926ed499e323a7aca64</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_gtk_cursor_blink_time</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a6139291a00bc2a19f351ee8f6f46a655</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_gtk_cursor_blink_time</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a6901eaecfa4de6bdfb36dcfc110237ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_gtk_cursor_blink_timeout</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ae4dd73a12aa05fd10d57af9ff9aa829d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_gtk_cursor_blink_timeout</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a8a646e3d9ec82b24015599bfac07b7bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_split_cursor</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ab9f6bec9fee6ee95f72b56e8afd0a8b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_split_cursor</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a9ef0ebdaa659da2a64eca66e8b69d286</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_theme_name</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ab996d60f7c452606cd874d1afc275cde</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_theme_name</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>aeb4e23e68b5fee9510c119244c535f7f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_key_theme_name</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a4dd40457ea2ec7408f2a876f5d6efabf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_key_theme_name</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ab3dcd67c56f36694ac62327fbf8a723a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_menu_bar_accel</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a54da6aea346f6358774dd36df1897297</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_menu_bar_accel</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a144aeb52c7d85a566e5525cf9fae3b82</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_gtk_dnd_drag_threshold</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a3cd67d26e0133917f21e8e69769a7bad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_gtk_dnd_drag_threshold</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a67df7a1c1c7ad7ac44fcb4ab74fceefd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_font_name</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a6b2d701398186e690d5188a682bef694</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_font_name</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a35ce86b6c3638107f80e6fd1d688700b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_modules</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a31587cd92ff434c1b077410bae889c93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_modules</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a9c6668713a221724c31161983bfcf2dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_gtk_xft_antialias</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a40906216244d171134659a8162db64a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_gtk_xft_antialias</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ac843189d9c4fedf46fd72097f90a087b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_gtk_xft_hinting</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a7de0aefe7a4b35d0c8d24b4081ba4831</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_gtk_xft_hinting</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a3ef4a64fff3313d64f83b9e8baebd244</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_xft_hintstyle</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ab70bfb3a4909fd0ff035a223c57131aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_xft_hintstyle</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ab7c6c9243f19b3ea441d154031df8393</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_xft_rgba</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ae0806cf7a045b3533c75993497c41d10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_xft_rgba</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a3a11e0d04791b969275ffdba648099ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_gtk_xft_dpi</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a72482e82b467a451a395cbef87494073</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_gtk_xft_dpi</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a1911eb41a2c7652cde283600d7bd1f59</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_cursor_theme_name</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a53c9a8bc8c1d6e6cb7287f47b75c9cde</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_cursor_theme_name</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>adfa3218a47a56a06ef5b37644b93dc36</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_gtk_cursor_theme_size</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a42f83d0d8409c8568d5a98b9e53f2934</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_gtk_cursor_theme_size</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a4ae98f52d0644d7a758b1d4f860ca951</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_alternative_button_order</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>abe3c942e8f579391e4491effdcbea7f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_alternative_button_order</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a0de322e0a7ed6184fe8c50ebbe68e593</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_alternative_sort_arrows</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>af6781dc7cc2e8de9dd5653811635824c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_alternative_sort_arrows</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a8aa1f4d007f6642b96553831cb5a1e79</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_show_input_method_menu</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a2a2919fa167656128fca468bc4de263f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_show_input_method_menu</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>afa59365afa0d4d1c49764810e6b0c447</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_show_unicode_menu</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a98c233fea7ec510da7928579f6afc9be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_show_unicode_menu</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>aa011ef541a0dd8a63dd86488775ae183</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_gtk_timeout_initial</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ac92b62917850dc5443651ca762eb6845</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_gtk_timeout_initial</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a701462a05bb9f14662725752b2c425c3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_gtk_timeout_repeat</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a09228d1295f66f1e7739b874f9aadcbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_gtk_timeout_repeat</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>aa1241255e843217988bd794c51363df8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_gtk_timeout_expand</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a366f8450f3ccef6164fe4051af213a60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_gtk_timeout_expand</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a76fdf7ccaf3958ae4dc9de6a8a14713c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_color_scheme</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ae03ae659405ca5b02126636e1616066e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_color_scheme</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>add98c383970e81058d69d39ae65ce630</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_enable_animations</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a4dca3b2d399f7e50144dfe5608a73a15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_enable_animations</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a5cdf9b993abfaeaa9e169931e23f5a85</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_touchscreen_mode</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a999402eff92e46060e9d4a22b085541d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_touchscreen_mode</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a576e71f29a967c4c61087873fda29acf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_gtk_tooltip_timeout</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>accf0b0aae9ec73cd2e8347c4ad6f77f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_gtk_tooltip_timeout</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a91ba7300894236ddc0d9e20fb218dc35</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_gtk_tooltip_browse_timeout</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a1784b5751527cebb11debe7dd7140cca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_gtk_tooltip_browse_timeout</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>aae601ad00a0a264c9b46b2cf807a6f9d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_gtk_tooltip_browse_mode_timeout</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a07005841abea12ed395c8d4d3b403b10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_gtk_tooltip_browse_mode_timeout</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a0911d9331a863df9750751624ed7ecbf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_keynav_cursor_only</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a11fa21d4c0bf3382993387a8926885ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_keynav_cursor_only</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ac51512a8a230450daec236da7684b977</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_keynav_wrap_around</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>aef8488dd80b72d6d742f400eb20aa43d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_keynav_wrap_around</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>aa67018f80f761839a86769c8588e7b72</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_error_bell</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a1b681b6df57734d3558ea9e78b37c4c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_error_bell</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a13ea66224f1dfdf0c098bcdf8cf07246</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::Color &gt;</type>
      <name>property_color_hash</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ac7fd06ce03cce6be7e2d8a1ba4800fa4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_file_chooser_backend</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a91517f165f75a7b12c0d3dc73652ae64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_file_chooser_backend</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a21771a963bcaa5d4d82c644483446d0d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_print_backends</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>aa20003edc12cb661616c396122ced517</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_print_backends</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a2c8d80368aab6cf14d5f44483acb9a51</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_print_preview_command</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a7192c330446b0ad3387a142788b423ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_print_preview_command</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a6c133990a05d7d8068a5db480ab6aada</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_enable_mnemonics</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>aea807e47c3da18075ed67a9778684523</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_enable_mnemonics</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a2e13eac69b8ead4a1f254fc0c1391372</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_enable_accels</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>aec5fb2cdc07d553a1300daeff077cee6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_enable_accels</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a52d0c2f0174aa3d8a746b1c87b809fb5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_gtk_recent_files_limit</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a606d2c1e21cbda52fcb40c9f3f986f2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_gtk_recent_files_limit</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a3b3b1804b6f4aed4613bc4dccfcf7683</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_im_module</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a206083fa7b0c7505238beae28378c333</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_im_module</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a72772f08dbb691fc4838abc6be315b64</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_gtk_recent_files_max_age</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a79cd3c77fd21e4547dbe5711fb9eccd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_gtk_recent_files_max_age</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a6f8de57af431e5a11c4150fe831e151a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_gtk_fontconfig_timestamp</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>aad58b83b15523b68bee5f3083f905975</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_gtk_fontconfig_timestamp</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a4042e8c50b6a4d0da8d41fc20c7044d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_sound_theme_name</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>adc428a346ba795b9175e0c788a8859b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_sound_theme_name</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a7429c434b0c126ba0ae3b93b4d8a00b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_enable_input_feedback_sounds</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>abbd363537dce30150c2c4606a5ea1300</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_enable_input_feedback_sounds</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a4df0797748fca9c82b3f2ed8726b3414</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_enable_event_sounds</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>aeb7f94853b538d192b640e76fd7e3ab3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_enable_event_sounds</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a4b971360c910d554634b81b43da44dad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_enable_tooltips</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>add470b979b497dcade22b731618c8c84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_enable_tooltips</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a285c95219f433923713653afa62378da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_application_prefer_dark_theme</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a40ac901fea4b95dedf972ed5aa971c51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_application_prefer_dark_theme</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a43c1eebddd062373f158d2baeef1c723</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_auto_mnemonics</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a95a548278f3c975f64bd0ca783239b51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_auto_mnemonics</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a662d3979725ebbef6febc91cd605e025</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gtk::PolicyType &gt;</type>
      <name>property_gtk_visible_focus</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a38eb2d0c6852688f7aeca6cb279a62ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gtk::PolicyType &gt;</type>
      <name>property_gtk_visible_focus</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a64b0c3e2155f0c9c535deb87028c4dbb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; IMPreeditStyle &gt;</type>
      <name>property_gtk_im_preedit_style</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ad44047e587f6476be1a7a1b6d0f84708</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; IMPreeditStyle &gt;</type>
      <name>property_gtk_im_preedit_style</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a203f9dfd5835f667d22daf3b9978dbb6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; IMStatusStyle &gt;</type>
      <name>property_gtk_im_status_style</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a9ae3db3d5e1b530803a938c844efd1ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; IMStatusStyle &gt;</type>
      <name>property_gtk_im_status_style</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a4da13fbadd8232c5dce77ec4666dbf59</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_shell_shows_app_menu</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a316d4cc839eb2ae4bba755e3a8d360c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_shell_shows_app_menu</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a862e91a3193873a5686340b404c4cf7d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_shell_shows_menubar</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ab26ce26aec3126fce33e1f9703665bcc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_shell_shows_menubar</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a5fe7c172e3bc418dd46cfcf59ef42652</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_shell_shows_desktop</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a149111e304ec39b46e95dc27da6991dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_shell_shows_desktop</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ad88fa2059940355329297f239a6ad578</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_enable_primary_paste</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a9708c91bd84caab9acc30b6822b2ad55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_enable_primary_paste</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a749b2be14c7500fb2b5048b0abe54ebf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_gtk_menu_popup_delay</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>aca567b3bd88e8d41843b0a028f2443aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_gtk_menu_popup_delay</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a2beaa9bab6c306f63f5b4bcd6a95bfa2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_gtk_menu_popdown_delay</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a213ab89bc6cac8f8f1c9f2ce93c449ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_gtk_menu_popdown_delay</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>aaebcdf9d03821d0eb14e7fbd3fd8c97f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_label_select_on_focus</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a2e104e946d531dd41f6458750ecfc8e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_label_select_on_focus</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a5735b8deff964b1e83de2fc48182ac89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_gtk_entry_password_hint_timeout</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a9f302bc8638a5e995a6443a306c4f682</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_gtk_entry_password_hint_timeout</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a9177d96711b7cb6dbd3a0f256f5fe472</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_menu_images</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a3e83c01d85b6d03c7eedef75a87457ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_menu_images</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a9bbd48ada20879ad8dcfedd5fb836424</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_gtk_menu_bar_popup_delay</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a301f3c5a84e63ea170207289cd5c5492</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_gtk_menu_bar_popup_delay</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ae2b7967c16efe7283144a87d78103433</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; GtkCornerType &gt;</type>
      <name>property_gtk_scrolled_window_placement</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a5b2d33c6201c8795197b7d5f1686d5aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; GtkCornerType &gt;</type>
      <name>property_gtk_scrolled_window_placement</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a7063260fa7a6ee06259d55ec27a8a7b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; ToolbarStyle &gt;</type>
      <name>property_gtk_toolbar_style</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>afc9e09b3ab1e2048fb84e2f07a72a761</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; ToolbarStyle &gt;</type>
      <name>property_gtk_toolbar_style</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ab7daefd722fb9f514bc3c4fbc6d44a7d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; IconSize &gt;</type>
      <name>property_gtk_toolbar_icon_size</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ae1ebd4c44da35b38ce7f996c19c364b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; IconSize &gt;</type>
      <name>property_gtk_toolbar_icon_size</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>afb8ee9683e00a018179de632056bc59b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_can_change_accels</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a84aae21c533ffb610b1d5f5132ab9179</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_can_change_accels</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ab11a640bde634ba09b0a503f89d497a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_entry_select_on_focus</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a70db9ff7288fbb970435e0e7d4665a54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_entry_select_on_focus</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a4d1de1190f84c90f7d5a344b7c91252d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_color_palette</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a1ebd41f0c04532117e8321113555ba63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_color_palette</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a06cdf6f9475208e78d31208481ec6fa1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_button_images</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a12fe2a4da6a78f5283e2e6bc7f72dd4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_button_images</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>aa0dc388691469d7b0b82cfabec5e66f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_icon_theme_name</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ab28ff5868c4caa35c5ac64f2ab096d78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_icon_theme_name</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>adb7fa3557b34ce6b0ca07b0139666842</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_fallback_icon_theme</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>afb6f8f29a3ed09d84272a09f0d518348</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_fallback_icon_theme</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>adc6fb4f8d95142bbafce9ee26d8b73eb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_icon_sizes</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>aa4ed5faa9951b2ccf0f3c18e5bb4679b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_icon_sizes</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ae353ce1e4f8828a5c0b4f8b4d90030a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_recent_files_enabled</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a138e4fd3e90b3398e2a2e42ab3ada764</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_recent_files_enabled</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a7a5e920e6733e1e1497d7382f857a3d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_primary_button_warps_slider</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>acf95ccbd0f307cc88ce7aead78572afa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_primary_button_warps_slider</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a12f986e56da8028c4b0f96b2b70c09e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_decoration_layout</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a64151266bf982437c1eefeabf163f105</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_decoration_layout</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a6b2e2c10528c300e73bfcb430375ecd1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_titlebar_double_click</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a42cd18e8951efa3753fe1d2f404c9c02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_titlebar_double_click</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>afb39119bd33ef8fb930f135e070d70df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_titlebar_middle_click</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a91e6e816f29bce9ba38b3a0243c1ba5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_titlebar_middle_click</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>aa8e741e673a7decade483e2d197164ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_gtk_titlebar_right_click</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>afb8fca7271829b1ab751b839f5665da4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_gtk_titlebar_right_click</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ad565d3ebbc1788a567155eb26b2481ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_dialogs_use_header</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a41ebb4fdfe1216712dfaeac43cad4543</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_dialogs_use_header</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>aa7b402abad41a39d3585cbcc984cca27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_gtk_long_press_time</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a21221af67f0334e12ec976b7e370aeec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_gtk_long_press_time</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a6f3eb9344b16967f19592116888d586b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_gtk_keynav_use_caret</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ac90c3f3edb775c28ff7e69d450453804</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_gtk_keynav_use_caret</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>ad141b2f0262c4d5cf6da55b2a1a3ca04</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a11d0b8caed8064bd341b4f18fec54d5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Settings &gt;</type>
      <name>get_default</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a935700b34ba84e1fc10a626d0b70ad61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Settings &gt;</type>
      <name>get_for_screen</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a46b8befe2aac84d56d2aeb0cd8aa058e</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Screen &gt; &amp;screen)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Settings &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Settings.html</anchorfile>
      <anchor>a848b43a1ce44bfbb4f1286d8f36e0eee</anchor>
      <arglist>(GtkSettings *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ShortcutLabel</name>
    <filename>classGtk_1_1ShortcutLabel.html</filename>
    <base>Gtk::Box</base>
    <member kind="function">
      <type></type>
      <name>ShortcutLabel</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>aa6d0fb688ea029abcaf34e79e275e84e</anchor>
      <arglist>(ShortcutLabel &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ShortcutLabel &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>a0cda1b439109018d60ac00e262ce7a59</anchor>
      <arglist>(ShortcutLabel &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ShortcutLabel</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>a430c23127435c1c541288a973168b7f9</anchor>
      <arglist>(const ShortcutLabel &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ShortcutLabel &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>adebfd6f3365d94b0aeb8d7bf3e35a507</anchor>
      <arglist>(const ShortcutLabel &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ShortcutLabel</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>af568239403739c7de734006f9f3e25a3</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkShortcutLabel *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>ac351c1d87aff1d0423cf4d1e6dd99acd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkShortcutLabel *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>a6edcaaf337aaa38c23e601913e2f4361</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ShortcutLabel</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>a3233d4a78dec19e4b1d46cc5ddff4c1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ShortcutLabel</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>a8d6586bc4fe0eb76d8cd43dd81f65113</anchor>
      <arglist>(const Glib::ustring &amp;accelerator)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_accelerator</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>a7ccd1e7e515a6f1ba0fcf4a15926d97d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_accelerator</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>ade06f3fe38c54f2e52b9693be6b60038</anchor>
      <arglist>(const Glib::ustring &amp;accelerator)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_disabled_text</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>a2f5b920521c971fe7e0e963cf15969f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_disabled_text</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>a577e3795265ad63358c60a4a47b30d5e</anchor>
      <arglist>(const Glib::ustring &amp;disabled_text)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_accelerator</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>af2ab68f4f762caafb8088c84fa6d7dba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_accelerator</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>a397ec352561478e93675766300ed7a1a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_disabled_text</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>a647974d2989d64b4e83efe8c9fd9a341</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_disabled_text</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>ac08843d25db89ed171ca0395e8787bab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>a94c0551350f582bd74ba083d46fc708d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ShortcutLabel *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ShortcutLabel.html</anchorfile>
      <anchor>af306b6886db3f9129c2f467cd72dad86</anchor>
      <arglist>(GtkShortcutLabel *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ShortcutsGroup</name>
    <filename>classGtk_1_1ShortcutsGroup.html</filename>
    <base>Gtk::Box</base>
    <member kind="function">
      <type></type>
      <name>ShortcutsGroup</name>
      <anchorfile>classGtk_1_1ShortcutsGroup.html</anchorfile>
      <anchor>adb9ed97dda1c2a1fb5b19434c398645f</anchor>
      <arglist>(ShortcutsGroup &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ShortcutsGroup &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ShortcutsGroup.html</anchorfile>
      <anchor>ad2e345215604850b1446ec617dbea49a</anchor>
      <arglist>(ShortcutsGroup &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ShortcutsGroup</name>
      <anchorfile>classGtk_1_1ShortcutsGroup.html</anchorfile>
      <anchor>aeed68a6d453cf0518bd63a28f5c0768f</anchor>
      <arglist>(const ShortcutsGroup &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ShortcutsGroup &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ShortcutsGroup.html</anchorfile>
      <anchor>a2f0baa8078aa2026a34e1360dec7c350</anchor>
      <arglist>(const ShortcutsGroup &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ShortcutsGroup</name>
      <anchorfile>classGtk_1_1ShortcutsGroup.html</anchorfile>
      <anchor>a7d9fafe4d8ff036db2477b1f71c4df22</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkShortcutsGroup *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ShortcutsGroup.html</anchorfile>
      <anchor>a69ba53c96b0fd2ed1fb247a71393fc38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkShortcutsGroup *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ShortcutsGroup.html</anchorfile>
      <anchor>af0aa2c2207d5ce3ceedab08682a8415b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ShortcutsGroup</name>
      <anchorfile>classGtk_1_1ShortcutsGroup.html</anchorfile>
      <anchor>a3a0350a98e990f78d31dc156adb4b5da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_view</name>
      <anchorfile>classGtk_1_1ShortcutsGroup.html</anchorfile>
      <anchor>a6588886ea25999c05ce60a3c31d81fc4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1ShortcutsGroup.html</anchorfile>
      <anchor>adcebc992ca4aa70458bb4e5d866752bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1ShortcutsGroup.html</anchorfile>
      <anchor>aabcf9ba8a599a585cbbf05876e1076db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_view</name>
      <anchorfile>classGtk_1_1ShortcutsGroup.html</anchorfile>
      <anchor>ac9105f828036ba99b3d951f03491fdd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_view</name>
      <anchorfile>classGtk_1_1ShortcutsGroup.html</anchorfile>
      <anchor>a9a68a6a775b01c53857677ad2b0dacef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ShortcutsGroup.html</anchorfile>
      <anchor>ada25f47f914c06012e1d06164ac6a857</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ShortcutsGroup *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ShortcutsGroup.html</anchorfile>
      <anchor>a5e11ba683104e4a344e7c64fe99b6208</anchor>
      <arglist>(GtkShortcutsGroup *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ShortcutsSection</name>
    <filename>classGtk_1_1ShortcutsSection.html</filename>
    <base>Gtk::Box</base>
    <member kind="function">
      <type></type>
      <name>ShortcutsSection</name>
      <anchorfile>classGtk_1_1ShortcutsSection.html</anchorfile>
      <anchor>ace5749086cef9216c3199eff3c76d3e1</anchor>
      <arglist>(ShortcutsSection &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ShortcutsSection &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ShortcutsSection.html</anchorfile>
      <anchor>a5bd938f0cae3da0f6a6dd2dd016e3f42</anchor>
      <arglist>(ShortcutsSection &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ShortcutsSection</name>
      <anchorfile>classGtk_1_1ShortcutsSection.html</anchorfile>
      <anchor>af099ceb4298341deb8354da574973523</anchor>
      <arglist>(const ShortcutsSection &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ShortcutsSection &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ShortcutsSection.html</anchorfile>
      <anchor>a675274713c6c2f880d056fa5f50c4bcc</anchor>
      <arglist>(const ShortcutsSection &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ShortcutsSection</name>
      <anchorfile>classGtk_1_1ShortcutsSection.html</anchorfile>
      <anchor>a57192bd773b835c93c8ee82b4b32f6c1</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkShortcutsSection *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ShortcutsSection.html</anchorfile>
      <anchor>ab37049bcf6c94f9326a9ea89cb0e113f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkShortcutsSection *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ShortcutsSection.html</anchorfile>
      <anchor>a22efcf32bb9f81e75c39d236a2c6d264</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ShortcutsSection</name>
      <anchorfile>classGtk_1_1ShortcutsSection.html</anchorfile>
      <anchor>a3e30f863873999f85a58d0163c3c97dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_section_name</name>
      <anchorfile>classGtk_1_1ShortcutsSection.html</anchorfile>
      <anchor>a8ace0b8b54ad21e0bf91801b5ce033e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_section_name</name>
      <anchorfile>classGtk_1_1ShortcutsSection.html</anchorfile>
      <anchor>a9dd49300d2944a0a29ef540cdd46da0b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1ShortcutsSection.html</anchorfile>
      <anchor>a6becfcd1ab2d777a7dc55360eec8da18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1ShortcutsSection.html</anchorfile>
      <anchor>adc604268be5cbcc3c6ad3fc77fa5454a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; unsigned int &gt;</type>
      <name>property_max_height</name>
      <anchorfile>classGtk_1_1ShortcutsSection.html</anchorfile>
      <anchor>ad81a2fd425f90b929999e2d5aa3698a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; unsigned int &gt;</type>
      <name>property_max_height</name>
      <anchorfile>classGtk_1_1ShortcutsSection.html</anchorfile>
      <anchor>ab30c58599574eb74dac2c94e72545c00</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ShortcutsSection.html</anchorfile>
      <anchor>a7328b74d1d919195867ef50d9d8462ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ShortcutsSection *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ShortcutsSection.html</anchorfile>
      <anchor>a04b058d6ceb5584d7f64165f8afe9124</anchor>
      <arglist>(GtkShortcutsSection *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ShortcutsShortcut</name>
    <filename>classGtk_1_1ShortcutsShortcut.html</filename>
    <base>Gtk::Box</base>
    <member kind="function">
      <type></type>
      <name>ShortcutsShortcut</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a370a6428a0d7f05b678f0ecb0a72e991</anchor>
      <arglist>(ShortcutsShortcut &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ShortcutsShortcut &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a9ed1880ec899081720c28abbbd562a98</anchor>
      <arglist>(ShortcutsShortcut &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ShortcutsShortcut</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>aaf6129204bd6f7bb8f55a6e157502611</anchor>
      <arglist>(const ShortcutsShortcut &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ShortcutsShortcut &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>ab222332d3cd5d4c1d338bfa0c55d36e6</anchor>
      <arglist>(const ShortcutsShortcut &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ShortcutsShortcut</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a885af3ce0df7b357d53bb386762ba329</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkShortcutsShortcut *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a4c94df0bd261fabae843aa12942103a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkShortcutsShortcut *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>af8d264183c26ba457babd0445a5c563f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ShortcutsShortcut</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a0c8b6e0af893e41bd02c974c0c3c9806</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_accelerator</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a1b483692852c9d2c62ee3ad9a2b49026</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_accelerator</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>ac6a494561823b052f437c74b89458fd6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::Icon &gt; &gt;</type>
      <name>property_icon</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a561e8efbab2f38bff4c8d3e925715e12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::Icon &gt; &gt;</type>
      <name>property_icon</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a84c2331456261c13aa03d279fea323da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_icon_set</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a16ee6bed1ece6d8e7cae446abed22e2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_icon_set</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>ac5abd22decc261c9605a30cdc9d0b3b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>af086037e3e1e6498afdb774d1ce27184</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a6a64c8937da5310b6ad1781fcb2641cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_subtitle</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a2ba22717ba230894eee7b4dd9b2cc8e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_subtitle</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a0df97ccb67b94397114ea634fdf18eef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_subtitle_set</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a35470404b56927c65b21ddbb4669c933</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_subtitle_set</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>ad910eb795ef4170e4bd913d809070864</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; TextDirection &gt;</type>
      <name>property_direction</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>aa251cd626930ec02c0e2f5a37d7c73fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; TextDirection &gt;</type>
      <name>property_direction</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a0102c3df2de2ea335d8d6a84f86cf5a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; ShortcutType &gt;</type>
      <name>property_shortcut_type</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>aac0d2e2c63f376687375e8af22069867</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; ShortcutType &gt;</type>
      <name>property_shortcut_type</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a943c1edbb7ceb1534fdf0061e0fa9dea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_action_name</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a7b63ad6d70797a44935df975aa2c89fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_action_name</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a4946b7f45b0018406afc6a0d07e3bbc0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a57832f3dfde3cfe4c165974ea8945a86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ShortcutsShortcut *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ShortcutsShortcut.html</anchorfile>
      <anchor>a06d88608796f3e338b0f679bf4f6ecaa</anchor>
      <arglist>(GtkShortcutsShortcut *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ShortcutsWindow</name>
    <filename>classGtk_1_1ShortcutsWindow.html</filename>
    <base>Gtk::Window</base>
    <member kind="function">
      <type></type>
      <name>ShortcutsWindow</name>
      <anchorfile>classGtk_1_1ShortcutsWindow.html</anchorfile>
      <anchor>afeb2917c25eadef66896f908a7d2bf64</anchor>
      <arglist>(ShortcutsWindow &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ShortcutsWindow &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ShortcutsWindow.html</anchorfile>
      <anchor>afb740e7b8025f9db28cf3c14092e07a9</anchor>
      <arglist>(ShortcutsWindow &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ShortcutsWindow</name>
      <anchorfile>classGtk_1_1ShortcutsWindow.html</anchorfile>
      <anchor>a5fc354e7da0c97905b959481a3aac91d</anchor>
      <arglist>(const ShortcutsWindow &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ShortcutsWindow &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ShortcutsWindow.html</anchorfile>
      <anchor>aa47ee46b161b5181d9528ef5aad22e44</anchor>
      <arglist>(const ShortcutsWindow &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ShortcutsWindow</name>
      <anchorfile>classGtk_1_1ShortcutsWindow.html</anchorfile>
      <anchor>a749ac95d38072439af96d133a1b67255</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkShortcutsWindow *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ShortcutsWindow.html</anchorfile>
      <anchor>ae9535b63b70b5ae9a42e6764b138f383</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkShortcutsWindow *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ShortcutsWindow.html</anchorfile>
      <anchor>a642c90f7b2c7b4c996583706d1eeee45</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ShortcutsWindow</name>
      <anchorfile>classGtk_1_1ShortcutsWindow.html</anchorfile>
      <anchor>ab585a8784148dce01074c61738e3cb6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_view_name</name>
      <anchorfile>classGtk_1_1ShortcutsWindow.html</anchorfile>
      <anchor>a434ee880c55cd0122b6182c2b1ecd4c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_section_name</name>
      <anchorfile>classGtk_1_1ShortcutsWindow.html</anchorfile>
      <anchor>ab01347d877ef066011a2def5416975b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_section_name</name>
      <anchorfile>classGtk_1_1ShortcutsWindow.html</anchorfile>
      <anchor>ab3662aba5045e1f29a538e5d5d9e0cba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_view_name</name>
      <anchorfile>classGtk_1_1ShortcutsWindow.html</anchorfile>
      <anchor>a4ba99fbf7d540fab0cf511ee6373991a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_view_name</name>
      <anchorfile>classGtk_1_1ShortcutsWindow.html</anchorfile>
      <anchor>ac050939d2ab53b201c98c47418c10df7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ShortcutsWindow.html</anchorfile>
      <anchor>ad2010df8eec9926bedd50027a86987a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ShortcutsWindow *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ShortcutsWindow.html</anchorfile>
      <anchor>ae5144c2a448f38f13ecd88c87de96ac8</anchor>
      <arglist>(GtkShortcutsWindow *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::SignalProxyChildProperty</name>
    <filename>classGtk_1_1SignalProxyChildProperty.html</filename>
    <base>Glib::SignalProxyProperty</base>
    <member kind="function">
      <type></type>
      <name>SignalProxyChildProperty</name>
      <anchorfile>classGtk_1_1SignalProxyChildProperty.html</anchorfile>
      <anchor>ad321663a2044123805ba1e47de27d0b2</anchor>
      <arglist>(Widget *child, const char *property_name)</arglist>
    </member>
    <member kind="function">
      <type>sigc::connection</type>
      <name>connect</name>
      <anchorfile>classGtk_1_1SignalProxyChildProperty.html</anchorfile>
      <anchor>a37c39cf3635cb33cecca2c736176ba9a</anchor>
      <arglist>(const SlotType &amp;sl)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::SizeGroup</name>
    <filename>classGtk_1_1SizeGroup.html</filename>
    <base>Glib::Object</base>
    <base>Gtk::Buildable</base>
    <member kind="function">
      <type></type>
      <name>SizeGroup</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>a8099eee55cd14d1286b96f0474db676b</anchor>
      <arglist>(SizeGroup &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SizeGroup &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>a61bfb7a2bbcd3672ec243f20e2dbd62f</anchor>
      <arglist>(SizeGroup &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SizeGroup</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>add99da998a8f229977144091e7876327</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkSizeGroup *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>afbd6958d54324554818300bada2ffd24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkSizeGroup *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>a2df501038e60d4d92b0602d18355ac17</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkSizeGroup *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>a1ab82c162c73e5ccb4d957c80da70e7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_mode</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>acf4fdc20c82107070d107f666e5ebc60</anchor>
      <arglist>(SizeGroupMode mode)</arglist>
    </member>
    <member kind="function">
      <type>SizeGroupMode</type>
      <name>get_mode</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>a9d80663134beb8502c167af48bfab6e1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_ignore_hidden</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>a159e0317bf7a973ace4318fbe59de149</anchor>
      <arglist>(bool ignore_hidden=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_ignore_hidden</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>ae00dded1ecab7df9af2347670a8c569b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_widget</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>a04a5dfe9cf8aecf92c98bed118c6f469</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_widget</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>a453030fa3bed8b0351daacdb720074c4</anchor>
      <arglist>(Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Widget * &gt;</type>
      <name>get_widgets</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>a4ceac73743de637d12d0176a8eb4baca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const Widget * &gt;</type>
      <name>get_widgets</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>a72447995576f86cc31c32b45e99aeb13</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; SizeGroupMode &gt;</type>
      <name>property_mode</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>af112ebe82ffe4c0591bb02045ad88843</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; SizeGroupMode &gt;</type>
      <name>property_mode</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>a83d5d76f97639408589f2d759493fe38</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_ignore_hidden</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>ab4d87ae8da0fbcc7089d2a9deb9c8bbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_ignore_hidden</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>a3c1befda8643ecc47cd113b9d818cbce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>a96064f393c7e390bbb0b279889dbdda2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; SizeGroup &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>a017dd92172ab9628d3b18443741b94e0</anchor>
      <arglist>(SizeGroupMode mode)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SizeGroup</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>ac3c20df7eb8f5a1660e3302b3453e9a7</anchor>
      <arglist>(SizeGroupMode mode)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::SizeGroup &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1SizeGroup.html</anchorfile>
      <anchor>aab19ca78f44ec8ab815a8a96fcdc4a0a</anchor>
      <arglist>(GtkSizeGroup *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Socket</name>
    <filename>classGtk_1_1Socket.html</filename>
    <base>Gtk::Container</base>
    <member kind="function">
      <type></type>
      <name>Socket</name>
      <anchorfile>classGtk_1_1Socket.html</anchorfile>
      <anchor>a180be987845108ef6ffa8c3a6f3934e7</anchor>
      <arglist>(Socket &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Socket &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Socket.html</anchorfile>
      <anchor>a1b552cd54a827da3552822fe8405623e</anchor>
      <arglist>(Socket &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Socket</name>
      <anchorfile>classGtk_1_1Socket.html</anchorfile>
      <anchor>ae54db739501dd79b88d70ed3b036cba1</anchor>
      <arglist>(const Socket &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Socket &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Socket.html</anchorfile>
      <anchor>a5e166881c8a5a5d091225b4dafcc3d8d</anchor>
      <arglist>(const Socket &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Socket</name>
      <anchorfile>classGtk_1_1Socket.html</anchorfile>
      <anchor>ae4834df82cf4e238962935d8f0cb6dbd</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkSocket *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Socket.html</anchorfile>
      <anchor>a8db159ba10c1e0af31dcf42a03a4265c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkSocket *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Socket.html</anchorfile>
      <anchor>a94390f29a2553cbb30b5d17ed089b26a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Socket</name>
      <anchorfile>classGtk_1_1Socket.html</anchorfile>
      <anchor>ae1e8129b8da37b2f7a0c4d70a59307fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_id</name>
      <anchorfile>classGtk_1_1Socket.html</anchorfile>
      <anchor>a02b8b467cc5526e1155f05a49fb39c25</anchor>
      <arglist>(::Window window_id)</arglist>
    </member>
    <member kind="function">
      <type>::Window</type>
      <name>get_id</name>
      <anchorfile>classGtk_1_1Socket.html</anchorfile>
      <anchor>a56a9340b39481da999989fbd27194e5d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Window &gt;</type>
      <name>get_plug_window</name>
      <anchorfile>classGtk_1_1Socket.html</anchorfile>
      <anchor>a44789a3ac36cc710d5f4630e38bb65e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Window &gt;</type>
      <name>get_plug_window</name>
      <anchorfile>classGtk_1_1Socket.html</anchorfile>
      <anchor>a12a63edab85944b08a4ead299803d44e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_plug_added</name>
      <anchorfile>classGtk_1_1Socket.html</anchorfile>
      <anchor>addca855f48b30d7a733e0d5e9c5dc6db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool &gt;</type>
      <name>signal_plug_removed</name>
      <anchorfile>classGtk_1_1Socket.html</anchorfile>
      <anchor>a40cb0ad4fa50cf78ab13d77bf1bf756b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Socket.html</anchorfile>
      <anchor>a9652b62184a3d15e8353e80e2d2c1e6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_plug_added</name>
      <anchorfile>classGtk_1_1Socket.html</anchorfile>
      <anchor>afb6fdb1e21c47565510bd57b3d817c59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_plug_removed</name>
      <anchorfile>classGtk_1_1Socket.html</anchorfile>
      <anchor>ae889153786cc66c35b3db61ec857456c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Socket *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Socket.html</anchorfile>
      <anchor>a9ad8d2c8cba37b3583cb23dfaa8795de</anchor>
      <arglist>(GtkSocket *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::SpinButton</name>
    <filename>classGtk_1_1SpinButton.html</filename>
    <base>Gtk::Entry</base>
    <member kind="function">
      <type></type>
      <name>SpinButton</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a86459b024b4139d80166948c87ac68da</anchor>
      <arglist>(SpinButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SpinButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a457824331ec6f8ce6e4b1cf5641bbe1c</anchor>
      <arglist>(SpinButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SpinButton</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a07ff80acbd6ada5ffb0c91cde256e203</anchor>
      <arglist>(const SpinButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>SpinButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>aa484ec4e145a220d5a027f3872348c35</anchor>
      <arglist>(const SpinButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SpinButton</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a883499ae8bdabb7e1d6cfffb3ad3706d</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkSpinButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a8f8d443a53121273bd7b464a347690da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkSpinButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a3728f504486a2397ca7536760b898088</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SpinButton</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a42ce311c125de708c3e6515925c13dfc</anchor>
      <arglist>(double climb_rate=0.0, guint digits=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SpinButton</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a89431a5f824c3e31d04949c990af8ea8</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;adjustment, double climb_rate=0.0, guint digits=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>configure</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>ab5b11a1af5508f19ef361c7f57a4d2f3</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;adjustment, double climb_rate, guint digits)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_adjustment</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a74cc3f16b49ab6eabaa9da2195156ede</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;adjustment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_adjustment</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>ae1e334e711e195441c5b1533bd05ca2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Adjustment &gt;</type>
      <name>get_adjustment</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a89a5150bfa51a84360b5114c9846a20b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Adjustment &gt;</type>
      <name>get_adjustment</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a4d9230c0e46e3885e1c5e3a61809edd1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_digits</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a2d6913e87673bf34b04afd4595ffd797</anchor>
      <arglist>(guint digits)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_digits</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a664ee6d6352b7ce8592cc85d574306d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_increments</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a879b8eff06f35012b00453aad93f8a72</anchor>
      <arglist>(double step, double page)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_increments</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a74ccc3346bd25baea54497e921c52240</anchor>
      <arglist>(double &amp;step, double &amp;page) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_range</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a7fdcf657e0776f2ca748e6f653b2d404</anchor>
      <arglist>(double min, double max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_range</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a1aa7ec8593d1f19116e22d9c166439d4</anchor>
      <arglist>(double &amp;min, double &amp;max) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_value</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a9762bfb226e37e7131e0cc9ac550b047</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_value_as_int</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>abe5bad2f0322f3aa10ada0659079fc81</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_value</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a6ccada5358fee59092b2cbf89c7bdc89</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_update_policy</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a7933bec9c5616db5c0091454c9706c73</anchor>
      <arglist>(SpinButtonUpdatePolicy policy)</arglist>
    </member>
    <member kind="function">
      <type>SpinButtonUpdatePolicy</type>
      <name>get_update_policy</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a8e1401062c9c3c4cb00bb57b6c7d311d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_numeric</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a02b4b86b909c1c3410cfd8c77dbaa804</anchor>
      <arglist>(bool numeric=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_numeric</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a66087e4f732b5d4c55452e4fa155654e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>spin</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a740503c08f262b4386afd7812615652d</anchor>
      <arglist>(SpinType direction, double increment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_wrap</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>ad0aae779878e48a65b612b2b3ca37c61</anchor>
      <arglist>(bool wrap=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_wrap</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a49c643c563f06ffe97f44abc9ea787e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_snap_to_ticks</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a167aa3cc1c5e12f644f30d81860847bc</anchor>
      <arglist>(bool snap_to_ticks=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_snap_to_ticks</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a985bafd7f7ada668cc689d647d6ce500</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a8f55a8c35d4de7e59780ba987d1971b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; int, double * &gt;</type>
      <name>signal_input</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>ac1bffd7a579a68762e7470db52bb96fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool &gt;</type>
      <name>signal_output</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a7dbe6e13abf7407b7cdd84e11c5a4c7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_wrapped</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>aa0d4f903efd1e6bb2eedb58084f76e18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_value_changed</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a5053b426155b3e253ffe44865c93da93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Adjustment &gt; &gt;</type>
      <name>property_adjustment</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>ad70c34ff0c7836855f2d7a5f53725f1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Adjustment &gt; &gt;</type>
      <name>property_adjustment</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a32ae2c15a948ea849d5295040a48e26b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_climb_rate</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>aad95b174ccbfc29a4c4835b520eeadd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_climb_rate</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a0073ceb7bb1c1d34777dbf3caace08a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_digits</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a09f900e140d326a4c99c16f376500eee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_digits</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>ac09ada623be3672e2b8f02032d97d907</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_snap_to_ticks</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>acea2268800ec84b5064de5b95faa6b92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_snap_to_ticks</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a37546d2390caad1c700e8d94fa21d8db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_numeric</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>acc4bf0d9bb5e3a90b5ad34c710496948</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_numeric</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a41b2232f5a90597dba7dda5bcce52b16</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_wrap</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a2bbb8e98b5d23c5892aa22375a8aacb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_wrap</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a5059cfb743fd2cbe1751178210c0dad8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; SpinButtonUpdatePolicy &gt;</type>
      <name>property_update_policy</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a2a07aab529db8284dbd023832860486e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; SpinButtonUpdatePolicy &gt;</type>
      <name>property_update_policy</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>ae69ff76f15fbd8e2484ea84326ffc440</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_value</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a87cac1e9db5d499d02e9014962ba9c57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_value</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a14b48604ba6dec87da7fa044ab825002</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>affb6189a22838ceef14c31bcde13ce0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>on_input</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a8b63a8393761d9f80b80d77727860b7c</anchor>
      <arglist>(double *new_value)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_output</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>aaeb45a00950c9162ed70ccdb788d84f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_wrapped</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>a99f5ea1f872dc6ae06f83b80b2f1706f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_value_changed</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>ad827e3ef8cbd4ab89a953924d29213b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::SpinButton *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1SpinButton.html</anchorfile>
      <anchor>aab144a3980161b5ebe36cf643ee52b16</anchor>
      <arglist>(GtkSpinButton *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Spinner</name>
    <filename>classGtk_1_1Spinner.html</filename>
    <base>Gtk::Widget</base>
    <member kind="function">
      <type></type>
      <name>Spinner</name>
      <anchorfile>classGtk_1_1Spinner.html</anchorfile>
      <anchor>a32aab56e6654f6fbb55bc9e94775fe36</anchor>
      <arglist>(Spinner &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Spinner &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Spinner.html</anchorfile>
      <anchor>a325d487d1db59f7f6dbf2ddaae28cdb5</anchor>
      <arglist>(Spinner &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Spinner</name>
      <anchorfile>classGtk_1_1Spinner.html</anchorfile>
      <anchor>a67488aa48b5ac9930fc2ea512d922f62</anchor>
      <arglist>(const Spinner &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Spinner &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Spinner.html</anchorfile>
      <anchor>a3762817a7c83743bb27cd3faaeb21a83</anchor>
      <arglist>(const Spinner &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Spinner</name>
      <anchorfile>classGtk_1_1Spinner.html</anchorfile>
      <anchor>a83a14dae97c14c052bf1b7b9838c7c42</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkSpinner *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Spinner.html</anchorfile>
      <anchor>abe17cffe9c7a572c145f7b1a5b97a0af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkSpinner *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Spinner.html</anchorfile>
      <anchor>a4decb0c07a05d468a3ab81f2c8537eb4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Spinner</name>
      <anchorfile>classGtk_1_1Spinner.html</anchorfile>
      <anchor>ac95232e18f410eca09926d9e25efb738</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classGtk_1_1Spinner.html</anchorfile>
      <anchor>a108783a0f07a00756979be458bd42471</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classGtk_1_1Spinner.html</anchorfile>
      <anchor>a0343bc16394f925e03ba2feead53a136</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_active</name>
      <anchorfile>classGtk_1_1Spinner.html</anchorfile>
      <anchor>a590324c3bdb21cd8c52031da2a3f8faf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_active</name>
      <anchorfile>classGtk_1_1Spinner.html</anchorfile>
      <anchor>adf83f002aaf93c7ea1404983e51a0dc6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Spinner.html</anchorfile>
      <anchor>a09ef6aef1b8b4cb276f6aeab82294189</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Spinner *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Spinner.html</anchorfile>
      <anchor>af75c8143663d0b0965a873e7bbeae3c2</anchor>
      <arglist>(GtkSpinner *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Stack</name>
    <filename>classGtk_1_1Stack.html</filename>
    <base>Gtk::Container</base>
    <member kind="function">
      <type></type>
      <name>Stack</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a6cd69cec6bab672535f1f8723648df1b</anchor>
      <arglist>(Stack &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Stack &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>af603498bfa03217f2f36f081c866def9</anchor>
      <arglist>(Stack &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Stack</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a401efd8e6d35fbcfe2e0a3ce7bf9b903</anchor>
      <arglist>(const Stack &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Stack &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a1ddb71fb19f7e60ea4e107a7520ff77b</anchor>
      <arglist>(const Stack &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Stack</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a7645bb02a04deac1fd127275bad4d77b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkStack *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>ae1de3fe382ed90b56873a162fbc60cab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkStack *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a5e69f4ddd3268f24be0531fbe75e2820</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Stack</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a58929496b926e1ff6805405906048664</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a5661c5f96cbff648d683b28e1330c94a</anchor>
      <arglist>(Widget &amp;child, const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a4a48743d3e829347c70a332d8a572fc9</anchor>
      <arglist>(Widget &amp;child, const Glib::ustring &amp;name, const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a2279ae62d9f4fe357d91ed615480180f</anchor>
      <arglist>(Widget &amp;child) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visible_child</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a02499eafcb598f41a3ff0179ec82c510</anchor>
      <arglist>(Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_visible_child</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>aac319eb84ca5eb5447305df1ef19b95b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_visible_child</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a69c8b34dc72b56369384dad30ab4ceeb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visible_child</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>afa0ddd90931852dbebe4d98251e5f621</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visible_child</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a71f4a889e162e31e27ab26bccd82517c</anchor>
      <arglist>(const Glib::ustring &amp;name, StackTransitionType transition)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_visible_child_name</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>aa160f2c936bb1241c90adaa6927fde7e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_homogeneous</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a510fe30a3db0e8a6731f1963011cba00</anchor>
      <arglist>(bool homogeneous=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_homogeneous</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>ae0543f7af2c1618f5492e55485aa7d37</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_hhomogeneous</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a9c06dee94e0b2f7626b73299d5306dce</anchor>
      <arglist>(bool hhomogeneous=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_hhomogeneous</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a6a2cb122bb40c33e1efd0b265e06f055</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_vhomogeneous</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>ab3574764f2dfdd03920d381f7355cfc5</anchor>
      <arglist>(bool vhomogeneous=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_vhomogeneous</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>ad42993f86f990e32d902f79548234e7e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_transition_duration</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>aa197685026ab0aeac989ca7253be6b77</anchor>
      <arglist>(guint duration)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_transition_duration</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>ae945b03867bf62c21f5942021d2d36f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_transition_type</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>adf885a2c50c0b603807cac06f69aabef</anchor>
      <arglist>(StackTransitionType transition)</arglist>
    </member>
    <member kind="function">
      <type>StackTransitionType</type>
      <name>get_transition_type</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a196ba838dc996c92ecf9f2782b24bb13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StackTransitionType</type>
      <name>get_transition_type</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a50d7ebc9b59a7acd9ee7df953fa2afc0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_transition_running</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a6af26ec1fd2e8bb45b34deea8144d4d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_child_by_name</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a06680f023e8599862a6762be56c2714e</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_child_by_name</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>ae9317673de8e8146373963abebbe138d</anchor>
      <arglist>(const Glib::ustring &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_interpolate_size</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>aa45604fe2f68dc730048ff6045a2a88e</anchor>
      <arglist>(bool interpolate_size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_interpolate_size</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>adf45bf570dce922b66d3cacbfa5fb27b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_homogeneous</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a4b4c456f829d65e54be9881ae317dd39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_homogeneous</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>ad0883fb25dd4ab5baa6a78fb6c181adc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_hhomogeneous</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a60913744ac5d9fc40407a6f3d4e28ee3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_hhomogeneous</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>ab7d3a0920f69d72359b8c80fb216197b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; unsigned int &gt;</type>
      <name>property_transition_duration</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>adb8a8873834d0b575f0a37d94c6e0df7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; unsigned int &gt;</type>
      <name>property_transition_duration</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>acd4c556bf5d536561f2e90747bec9e4a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_transition_running</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a9e67f87ce35fc9f5c985336ed2dba8ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; StackTransitionType &gt;</type>
      <name>property_transition_type</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a11d8f55879a8f5397bdc7123a0d2839b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; StackTransitionType &gt;</type>
      <name>property_transition_type</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a2c493f8d0e89095871bce042c043780d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_vhomogeneous</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a2e56e8491d5fe9e431e37d3dd554d581</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_vhomogeneous</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>af5a44e2fac84c95723a50f2dd8c4fe5b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_visible_child</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a63d93247e1eb23bf59d058ff6c5ff089</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_visible_child</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a6b6bcef4da6d0d3a492c8cd845992072</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_visible_child_name</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>afd99113d5c3af22c329a38f80f2e89b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_visible_child_name</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a2ce022f0fe9db0cfcba1d0defeea9b83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_interpolate_size</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>aa4c36d3bdbcc7fed2797cc3117bd9017</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_interpolate_size</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a89d837179d8b5dfadf8634d05448a33a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; Glib::ustring &gt;</type>
      <name>child_property_name</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a4c8c57a686dc644c1341e5670b198e18</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>child_property_name</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>aca043957cf7c57dbadfc1b4f263c5a85</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; Glib::ustring &gt;</type>
      <name>child_property_title</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>ac20ee16d91e737efe0ba8f3466fc5915</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>child_property_title</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a9bdc320e4d72e3dba6cf452d74ebfdb6</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; Glib::ustring &gt;</type>
      <name>child_property_icon_name</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a77dbe7663b33bd6052b6b9edad8d6457</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>child_property_icon_name</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a84511078255e8e259115f59c071a2936</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; int &gt;</type>
      <name>child_property_position</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a5ce575cad8243571f2e4de0580c46a04</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>child_property_position</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a039a7c45771f9e652211c1bbdc079ff8</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; bool &gt;</type>
      <name>child_property_needs_attention</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a8ff8f50bd5d60090f63fab4e46b6f9a7</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>child_property_needs_attention</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a045b26cfac58037e38a7b7528229a2c4</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>a7e3dc52ba1ff63345c00e19fc03a9391</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Stack *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Stack.html</anchorfile>
      <anchor>aa66de162682d1ee4472d149f7da978dd</anchor>
      <arglist>(GtkStack *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::StackSidebar</name>
    <filename>classGtk_1_1StackSidebar.html</filename>
    <base>Gtk::Bin</base>
    <member kind="function">
      <type></type>
      <name>StackSidebar</name>
      <anchorfile>classGtk_1_1StackSidebar.html</anchorfile>
      <anchor>a69d6f50115286d2ce88543e668a6fe6e</anchor>
      <arglist>(StackSidebar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>StackSidebar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1StackSidebar.html</anchorfile>
      <anchor>ab7b11eecfc97a07872bffdf62efc1375</anchor>
      <arglist>(StackSidebar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StackSidebar</name>
      <anchorfile>classGtk_1_1StackSidebar.html</anchorfile>
      <anchor>a19679f04c00571baf0bb427d818bbb43</anchor>
      <arglist>(const StackSidebar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>StackSidebar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1StackSidebar.html</anchorfile>
      <anchor>ada8b5a67e363bb0e804c715d1818c029</anchor>
      <arglist>(const StackSidebar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StackSidebar</name>
      <anchorfile>classGtk_1_1StackSidebar.html</anchorfile>
      <anchor>a557503122305aae392147edbb7e254fa</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkStackSidebar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1StackSidebar.html</anchorfile>
      <anchor>a50ed7d54e458eedd2684ca5d9302f446</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkStackSidebar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1StackSidebar.html</anchorfile>
      <anchor>a245582c0babc5697cb6ffe39937520ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StackSidebar</name>
      <anchorfile>classGtk_1_1StackSidebar.html</anchorfile>
      <anchor>aa937eeb8ab26a0280eca4e3570798868</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_stack</name>
      <anchorfile>classGtk_1_1StackSidebar.html</anchorfile>
      <anchor>a9a9304d229e3c4b08e3064ce27bf7775</anchor>
      <arglist>(Stack &amp;stack)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_stack</name>
      <anchorfile>classGtk_1_1StackSidebar.html</anchorfile>
      <anchor>af3166538165da960ebfc0a3d6b4968f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Stack *</type>
      <name>get_stack</name>
      <anchorfile>classGtk_1_1StackSidebar.html</anchorfile>
      <anchor>ab6a9d1df18812756589948b1eb285dce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Stack *</type>
      <name>get_stack</name>
      <anchorfile>classGtk_1_1StackSidebar.html</anchorfile>
      <anchor>a3d5e17bdc95b6b0f04cd55a018385dc0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Stack * &gt;</type>
      <name>property_stack</name>
      <anchorfile>classGtk_1_1StackSidebar.html</anchorfile>
      <anchor>a372524358277e7c59690c08083c48e18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Stack * &gt;</type>
      <name>property_stack</name>
      <anchorfile>classGtk_1_1StackSidebar.html</anchorfile>
      <anchor>afec652dac2cfc3a1ab71b9ed6dae795d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1StackSidebar.html</anchorfile>
      <anchor>a8db35c4d10fdb5f38699766dcd63c191</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::StackSidebar *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1StackSidebar.html</anchorfile>
      <anchor>a587d82a8f8eab20069c305e4be96bcd9</anchor>
      <arglist>(GtkStackSidebar *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::StackSwitcher</name>
    <filename>classGtk_1_1StackSwitcher.html</filename>
    <base>Gtk::Box</base>
    <member kind="function">
      <type></type>
      <name>StackSwitcher</name>
      <anchorfile>classGtk_1_1StackSwitcher.html</anchorfile>
      <anchor>aefa1e93987c13c70a615b6699242471b</anchor>
      <arglist>(StackSwitcher &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>StackSwitcher &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1StackSwitcher.html</anchorfile>
      <anchor>a7eed250254db0c60067bdaab489f0b54</anchor>
      <arglist>(StackSwitcher &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StackSwitcher</name>
      <anchorfile>classGtk_1_1StackSwitcher.html</anchorfile>
      <anchor>a2d6bff803073368784fc3f70906fa22c</anchor>
      <arglist>(const StackSwitcher &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>StackSwitcher &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1StackSwitcher.html</anchorfile>
      <anchor>a133baba408c537df8a6cd05ef988b647</anchor>
      <arglist>(const StackSwitcher &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StackSwitcher</name>
      <anchorfile>classGtk_1_1StackSwitcher.html</anchorfile>
      <anchor>a010fb1821648bada5ec128d449cc22cf</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkStackSwitcher *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1StackSwitcher.html</anchorfile>
      <anchor>aa4eef8c1663947c83c38549f1948dd99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkStackSwitcher *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1StackSwitcher.html</anchorfile>
      <anchor>a1f9d7ae0f04b7208f918ce81c947b5f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StackSwitcher</name>
      <anchorfile>classGtk_1_1StackSwitcher.html</anchorfile>
      <anchor>a3f151444f4f63c90f9e5d196bf76f608</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_stack</name>
      <anchorfile>classGtk_1_1StackSwitcher.html</anchorfile>
      <anchor>a2c80d7ea871ccbf6c6ce985afecfd09e</anchor>
      <arglist>(Stack &amp;stack)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_stack</name>
      <anchorfile>classGtk_1_1StackSwitcher.html</anchorfile>
      <anchor>a430648476a666869a4dbe2f242ce407d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Stack *</type>
      <name>get_stack</name>
      <anchorfile>classGtk_1_1StackSwitcher.html</anchorfile>
      <anchor>a53d7e8e83f4d3e1f2b2ed83823594c65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Stack *</type>
      <name>get_stack</name>
      <anchorfile>classGtk_1_1StackSwitcher.html</anchorfile>
      <anchor>afafe38558fde347b01492fd685ee5d77</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; IconSize &gt;</type>
      <name>property_icon_size</name>
      <anchorfile>classGtk_1_1StackSwitcher.html</anchorfile>
      <anchor>ac5b354d32a5c103528a1210e0eec1e23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; IconSize &gt;</type>
      <name>property_icon_size</name>
      <anchorfile>classGtk_1_1StackSwitcher.html</anchorfile>
      <anchor>a1e495216208f0f0bfc6b2e68781ba6c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Stack * &gt;</type>
      <name>property_stack</name>
      <anchorfile>classGtk_1_1StackSwitcher.html</anchorfile>
      <anchor>ad507dd755540f0ad1bed17258beaafd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Stack * &gt;</type>
      <name>property_stack</name>
      <anchorfile>classGtk_1_1StackSwitcher.html</anchorfile>
      <anchor>a31e35793b9dff18cf740c2df7e154a3b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1StackSwitcher.html</anchorfile>
      <anchor>abb388a2143d8bdf875fa3b196190d225</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::StackSwitcher *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1StackSwitcher.html</anchorfile>
      <anchor>a0f30d41d659286af549533a74a58493f</anchor>
      <arglist>(GtkStackSwitcher *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Statusbar</name>
    <filename>classGtk_1_1Statusbar.html</filename>
    <base>Gtk::HBox</base>
    <member kind="function">
      <type></type>
      <name>Statusbar</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>a999f84ec017fa3629629be6a9b54620a</anchor>
      <arglist>(Statusbar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Statusbar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>ab2d981166598201093339c0dc537cf73</anchor>
      <arglist>(Statusbar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Statusbar</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>ad977d0fcd3ba64cf30cc4c60c80ce517</anchor>
      <arglist>(const Statusbar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Statusbar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>a1b8eed452eaa945de5fd3d43e3a878b9</anchor>
      <arglist>(const Statusbar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Statusbar</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>a43ae53a2f56f0b2e15462c067e8ecf1f</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkStatusbar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>ad33396939cbee540766e74ea6003a1db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkStatusbar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>ad184cb208df418091ccece5e6be2eabe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Statusbar</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>a53fd19badce858dee44bfd17a9a88822</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_context_id</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>a3c53ebf11ed09e65898e5a806a49ce35</anchor>
      <arglist>(const Glib::ustring &amp;context_description)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>push</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>a74854d6fefa48ff8e07d4ded53b0702f</anchor>
      <arglist>(const Glib::ustring &amp;text, guint context_id=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pop</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>ad2ee39dcb2e1c146f315b3d8d436b523</anchor>
      <arglist>(guint context_id=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_message</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>aed78ebcebfe28e5dfdda9552940f5b42</anchor>
      <arglist>(guint message_id, guint context_id=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_all_messages</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>acde367d9775682d7ca24e1387af8d20f</anchor>
      <arglist>(guint context_id=0)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Widget *</type>
      <name>get_message_area</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>a110c9494341408d1edf720f7ec105935</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Gtk::Widget *</type>
      <name>get_message_area</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>a1475e9241981d24fd8c1f803b19a28c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, guint, const Glib::ustring &amp; &gt;</type>
      <name>signal_text_pushed</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>a2ce948f83890ace27bc16592ef571cc5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, guint, const Glib::ustring &amp; &gt;</type>
      <name>signal_text_popped</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>af9b357fce7d6fddcccbc3ca2ab0e7718</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>aae8b3d7f4d40588d906a0e65fd996e53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_text_pushed</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>afe9706e804e1bed1a468de46b5f3fe62</anchor>
      <arglist>(guint context_id, const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_text_popped</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>a8489960e37dbf107c198d738f5b6c282</anchor>
      <arglist>(guint context_id, const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Statusbar *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Statusbar.html</anchorfile>
      <anchor>a6a1323ea614dccf0fa4bc20c79485acd</anchor>
      <arglist>(GtkStatusbar *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::StatusIcon</name>
    <filename>classGtk_1_1StatusIcon.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>StatusIcon</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a06493018abd5886dfa4a06e619320781</anchor>
      <arglist>(StatusIcon &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>StatusIcon &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>aaa6b513ee30e126d14cb4ff3fb97979e</anchor>
      <arglist>(StatusIcon &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StatusIcon</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a3f5180b8220a7aea8ef7a61c9ff66bdd</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkStatusIcon *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a529f1bf38ec0a667ea6c78b346bfc594</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkStatusIcon *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>ac3587a4babef0fd8e8c86a86b78fca1a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkStatusIcon *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>aea8e88685443016f8badf1abac501f38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>ac0384b77ff1bf80d77799685078c919e</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;pixbuf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_from_file</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>adf0aeb58ab868156646d0a600d3cbc61</anchor>
      <arglist>(const Glib::ustring &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a762abaa21f09995f5b94313100b305bc</anchor>
      <arglist>(const StockID &amp;stock_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a5099ce153989d2e5a8b17428de5b1b0d</anchor>
      <arglist>(const Glib::ustring &amp;icon_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a46930a1e7d21b1eb42fc8fd39acbd77c</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gio::Icon &gt; &amp;icon)</arglist>
    </member>
    <member kind="function">
      <type>ImageType</type>
      <name>get_storage_type</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a89a8a2d3b5549c7357b6094c619b4944</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>get_pixbuf</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a77ab11a97f02aab3e486c9ef3a1f5251</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Pixbuf &gt;</type>
      <name>get_pixbuf</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a61de89095dd8f7cdf875673e8f007d09</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>StockID</type>
      <name>get_stock</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a7e008396a0e1d3b23798e3422d297ce8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_icon_name</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a74233b7970a595f246ff23746838f439</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::Icon &gt;</type>
      <name>get_icon</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>abe15b71252d1574ab854db1f28e5ca4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::Icon &gt;</type>
      <name>get_icon</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>abc634401b2ccee6d08c323b33b3b829c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_size</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a778633fd0e074b407382942b4822a27c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_screen</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a056678a0ccef53abd77744ebaf8a7f26</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Screen &gt; &amp;screen)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Screen &gt;</type>
      <name>get_screen</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>ae60016280eeac61d0090f1a4be3b8889</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Screen &gt;</type>
      <name>get_screen</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a131ec1b89e240b19fbd717b5807d2c1c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visible</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>aa8071914856af839dd210cc4b244be6a</anchor>
      <arglist>(bool visible=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_visible</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a5b40c219aa9c76c51c045902480e7c4f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_embedded</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a97ed393cf244bf1b88d106b3896e2a4f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popup_menu_at_position</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a5a5145595c7f884d215860b026732882</anchor>
      <arglist>(Menu &amp;menu, guint button, guint32 activate_time)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_geometry</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a1a9fe1c7776fa0509ab31835f4949195</anchor>
      <arglist>(Glib::RefPtr&lt; Gdk::Screen &gt; &amp;screen, Gdk::Rectangle &amp;area, Orientation &amp;orientation)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_has_tooltip</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a0a21e8effdd363c7cfffb2409ed27427</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_tooltip</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a508202043de135c8ef5ed9e037e7df8c</anchor>
      <arglist>(bool has_tooltip=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_tooltip_text</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a7f5107175e3fbbe358411ceffa1cbfed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tooltip_text</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>ac55a8196e4a9626b96a8abb77ea5730a</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_tooltip_markup</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>aa8e27db0ae99716041b96f42c8b121b0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tooltip_markup</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a1ec8e5695a5f1253bda80254cc1d9b29</anchor>
      <arglist>(const Glib::ustring &amp;markup)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_title</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a55d4be5a5ef51fb6e57adfc35b1d579f</anchor>
      <arglist>(const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_title</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a87e3166213fcbbca9b1fe7e9bd0c31e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_name</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a39942b26f52390cd96452c9afcb00615</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>guint32</type>
      <name>get_x11_window_id</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a78f6bde98e5ec91ac3fc5e18f5575ea9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gdk::Pixbuf &gt; &gt;</type>
      <name>property_pixbuf</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a8519af853bcac6f252f036b68818eada</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::Pixbuf &gt; &gt;</type>
      <name>property_pixbuf</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a2d011297c1ae336e544adfb55cb28fec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_WriteOnly&lt; std::string &gt;</type>
      <name>property_file</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a11d29b2b3bd497506612f134dc1f0dfb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; StockID &gt;</type>
      <name>property_stock</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>ade9dd08444414e9057677e6fc049f4e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; StockID &gt;</type>
      <name>property_stock</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>aee21ba4c07e2f4010200945ec71089b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_icon_name</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>ab68b7cf63a285c0ad5ecccdb4b60b20e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_icon_name</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a5cd4cd16337ba1357705abe3b832898b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gio::Icon &gt; &gt;</type>
      <name>property_gicon</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a9f642f6c35cc063ff0dfb2377476d291</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gio::Icon &gt; &gt;</type>
      <name>property_gicon</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a177a122253549967f9c6509206509bc8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; ImageType &gt;</type>
      <name>property_storage_type</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a5ceacf2d368088772a453d65012f4da8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_size</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>af4ba928d91b6e26d8f7b7d28dbab340d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gdk::Screen &gt; &gt;</type>
      <name>property_screen</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a231c32346250863c05e53f54bbc40297</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::Screen &gt; &gt;</type>
      <name>property_screen</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>aff4a8ed310e4494575d2fc55236b2b4a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_visible</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>af0086e8728e32249aaeaf2f7fd1eb433</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_visible</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a70e17888928ddd28575b48d91d63f42e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_embedded</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a8fcd5f42b5b7565603a78b30d96eef01</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Orientation &gt;</type>
      <name>property_orientation</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a06252a19068f806333d6fe488b490f31</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_has_tooltip</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a2ec981986981925cb733b0dd4076e45f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_tooltip</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a9cb38f785acf4d1c3cfc647f32e5e825</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_tooltip_text</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a23605fcecba4fb2196957b111ab054ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_tooltip_text</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>adc0ebd4c161d1382ceb5b096118bed32</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_tooltip_markup</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a268322b94c14046b6607f7323405ac56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_tooltip_markup</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>ab4c6e9621e0397455ed0f15131e1b663</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a6ec3c29646f25c91b83e0fbb064aa5a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a28420f70430f0e34cdfff76bc0cec800</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, int &gt;</type>
      <name>signal_size_changed</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a8e7a54f419bd5ae20c99e9093cd58602</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_activate</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>afed79a8ab1fd9c74787800813289c1af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, guint, guint32 &gt;</type>
      <name>signal_popup_menu</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a423046678e3a51585a66836ae0bdf0a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, GdkEventButton * &gt;</type>
      <name>signal_button_press_event</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>ad364e580b99cb5fdd94c751692ee918b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, GdkEventButton * &gt;</type>
      <name>signal_button_release_event</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>aa9bb6a3af5174f20549675d2eac27d1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, GdkEventScroll * &gt;</type>
      <name>signal_scroll_event</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a37887bfcbca53bc0094ad9beb739fc07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, int, int, bool, const Glib::RefPtr&lt; Tooltip &gt; &amp; &gt;</type>
      <name>signal_query_tooltip</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a3350afafd4b8036ec3b7f8c0a63d90ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a9ad55d085e6f68b8c1a256d8dca96afd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; StatusIcon &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a306477d0d7208f0401ab90f2f4b25f1d</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;pixbuf)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; StatusIcon &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>ab0d930fc95745e5a9251a9582d2bd669</anchor>
      <arglist>(const StockID &amp;stock_id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; StatusIcon &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a3f1e30373c022028c7c5ce6d02355c38</anchor>
      <arglist>(const Glib::ustring &amp;icon_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; StatusIcon &gt;</type>
      <name>create_from_file</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a7d249edb6954d315d136fc7d67080a37</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>StatusIcon</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a5d33c845a4b7971fab3389a58a745651</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>StatusIcon</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a64f37726a34071148bebeb2954adc5d1</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;pixbuf)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>StatusIcon</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a1573c8e492fc1b7397f4d01947d76cb0</anchor>
      <arglist>(const StockID &amp;stock)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>StatusIcon</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>aaae55ceca75537115be0c17dd30723e2</anchor>
      <arglist>(const Glib::ustring &amp;icon_name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>StatusIcon</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a1b42aa704c545ecdd1f6fea871b41342</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gio::Icon &gt; &amp;icon)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_size_changed</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a58ec3a2b7798af4cffb2c9b6bf892738</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_activate</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a359a5446cf8cc4f6dadb1696bad56d3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_popup_menu</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>ada4df7d1c00bfb92ac9c7f9f980ecd16</anchor>
      <arglist>(guint button, guint32 activate_time)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_button_press_event</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a891938fa367948b7e6e02d7803ca0c1f</anchor>
      <arglist>(GdkEventButton *event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_button_release_event</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a6ecd49bda03976c430481fc850df1b01</anchor>
      <arglist>(GdkEventButton *event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_scroll_event</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a3cffe0819f4a17c961008edbc70180ae</anchor>
      <arglist>(GdkEventScroll *event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_query_tooltip</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>ac043cada81cc28a0e5634cd9e80f785d</anchor>
      <arglist>(int x, int y, bool keyboard_mode, const Glib::RefPtr&lt; Tooltip &gt; &amp;tooltip)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::StatusIcon &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1StatusIcon.html</anchorfile>
      <anchor>a610066adb78b7006b42dd4d980a28cae</anchor>
      <arglist>(GtkStatusIcon *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::StockID</name>
    <filename>classGtk_1_1StockID.html</filename>
    <member kind="typedef">
      <type>const void *</type>
      <name>BoolExpr</name>
      <anchorfile>classGtk_1_1StockID.html</anchorfile>
      <anchor>a4efbb687620c82aaf970522dc6cb589d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StockID</name>
      <anchorfile>classGtk_1_1StockID.html</anchorfile>
      <anchor>a396a25a3222d3a1b3090d6f1c8e6028e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StockID</name>
      <anchorfile>classGtk_1_1StockID.html</anchorfile>
      <anchor>aeff681c4d82aab583ee7a3463d5adee2</anchor>
      <arglist>(const BuiltinStockID &amp;id)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StockID</name>
      <anchorfile>classGtk_1_1StockID.html</anchorfile>
      <anchor>a544642b811eac9faef5ca7f3e78f5293</anchor>
      <arglist>(const Glib::ustring &amp;id)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StockID</name>
      <anchorfile>classGtk_1_1StockID.html</anchorfile>
      <anchor>aef532ae81966fa61d623037815b5240d</anchor>
      <arglist>(const char *id)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StockID</name>
      <anchorfile>classGtk_1_1StockID.html</anchorfile>
      <anchor>a8811ba2d06c288a9ae7a22f6cf4cbf4e</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StockID</name>
      <anchorfile>classGtk_1_1StockID.html</anchorfile>
      <anchor>a96b18fa2cc1d647527a5ff8165b54982</anchor>
      <arglist>(const StockID &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>StockID &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1StockID.html</anchorfile>
      <anchor>ae7fa41edd77f7ac111401edffaff315a</anchor>
      <arglist>(const StockID &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator BoolExpr</name>
      <anchorfile>classGtk_1_1StockID.html</anchorfile>
      <anchor>ae96f74bbd9bfcfa2dc6caeaebc736579</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equal</name>
      <anchorfile>classGtk_1_1StockID.html</anchorfile>
      <anchor>a84896cf914a43b06f13358e8126d3e99</anchor>
      <arglist>(const StockID &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_string</name>
      <anchorfile>classGtk_1_1StockID.html</anchorfile>
      <anchor>a0c2ddabd2d77ff2a3de7becce0b08d30</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>get_c_str</name>
      <anchorfile>classGtk_1_1StockID.html</anchorfile>
      <anchor>a30fc4db0c04a2ba73d2e4ee62fd7816d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Glib::ustring</type>
      <name>id_</name>
      <anchorfile>classGtk_1_1StockID.html</anchorfile>
      <anchor>a6b86e0c5726a913fb5d5634469760d92</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classGtk_1_1StockID.html</anchorfile>
      <anchor>acc5dc4eb3c309a0896c0b98dd6eac844</anchor>
      <arglist>(const StockID &amp;lhs, const StockID &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classGtk_1_1StockID.html</anchorfile>
      <anchor>abecb9c3a29eea450232ef8649cc3dc37</anchor>
      <arglist>(const StockID &amp;lhs, const StockID &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::StockItem</name>
    <filename>classGtk_1_1StockItem.html</filename>
    <member kind="function">
      <type></type>
      <name>StockItem</name>
      <anchorfile>classGtk_1_1StockItem.html</anchorfile>
      <anchor>a37d3b24a517c51c60b6d3d0378756753</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StockItem</name>
      <anchorfile>classGtk_1_1StockItem.html</anchorfile>
      <anchor>a1157353051898c008e0a0f21a88adfd5</anchor>
      <arglist>(GtkStockItem *castitem, bool make_a_copy=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StockItem</name>
      <anchorfile>classGtk_1_1StockItem.html</anchorfile>
      <anchor>ac62f6a99745319c79d60db1992aacaaa</anchor>
      <arglist>(const StockItem &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>StockItem &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1StockItem.html</anchorfile>
      <anchor>a7c52aa9feb81c4438e305b95f24e9981</anchor>
      <arglist>(const StockItem &amp;src)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StockItem</name>
      <anchorfile>classGtk_1_1StockItem.html</anchorfile>
      <anchor>a5a25596651296f95124d5f1824b47557</anchor>
      <arglist>(StockItem &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>StockItem &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1StockItem.html</anchorfile>
      <anchor>a41987c7df6db167490c936be109be9d7</anchor>
      <arglist>(StockItem &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StockItem</name>
      <anchorfile>classGtk_1_1StockItem.html</anchorfile>
      <anchor>a941cee8c2f4734e83884c57e1139ca6c</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGtk_1_1StockItem.html</anchorfile>
      <anchor>a5c72490f5660453aeeb749f005f68639</anchor>
      <arglist>(StockItem &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GtkStockItem *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1StockItem.html</anchorfile>
      <anchor>a146f767dc72cace3f40353268ef64fb7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkStockItem *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1StockItem.html</anchorfile>
      <anchor>a71ded4e34f375e11e660afdca1f4c374</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkStockItem *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1StockItem.html</anchorfile>
      <anchor>afeb87fbe92b64039be071653a507948a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StockItem</name>
      <anchorfile>classGtk_1_1StockItem.html</anchorfile>
      <anchor>aceb64c39c6fe731a0013946a538fc83b</anchor>
      <arglist>(const Gtk::StockID &amp;stock_id, const Glib::ustring &amp;label, Gdk::ModifierType modifier=Gdk::ModifierType(0), unsigned int keyval=0, const Glib::ustring &amp;translation_domain=Glib::ustring())</arglist>
    </member>
    <member kind="function">
      <type>StockID</type>
      <name>get_stock_id</name>
      <anchorfile>classGtk_1_1StockItem.html</anchorfile>
      <anchor>aee4164c3686f15be97188bb8f88009e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_label</name>
      <anchorfile>classGtk_1_1StockItem.html</anchorfile>
      <anchor>ac9869f54f5242b634f5f385a76740009</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Gdk::ModifierType</type>
      <name>get_modifier</name>
      <anchorfile>classGtk_1_1StockItem.html</anchorfile>
      <anchor>a9a3641a65c2a2d76e102ead8a4bc7b3d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_keyval</name>
      <anchorfile>classGtk_1_1StockItem.html</anchorfile>
      <anchor>a68f8620b53bacd360f5d87316a759a44</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_translation_domain</name>
      <anchorfile>classGtk_1_1StockItem.html</anchorfile>
      <anchor>adb3be65b44f8b35c8df6b2d798530919</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>lookup</name>
      <anchorfile>classGtk_1_1StockItem.html</anchorfile>
      <anchor>acdf8142c1a7913777348468ca9e0bb1e</anchor>
      <arglist>(const Gtk::StockID &amp;stock_id, Gtk::StockItem &amp;item)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GtkStockItem *</type>
      <name>gobject_</name>
      <anchorfile>classGtk_1_1StockItem.html</anchorfile>
      <anchor>a4545913bb4bc6fd84cf3adfac57270aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGtk_1_1StockItem.html</anchorfile>
      <anchor>a9d26c9d8e058255ce0f8128dbb93c0ee</anchor>
      <arglist>(StockItem &amp;lhs, StockItem &amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Gtk::StockItem</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1StockItem.html</anchorfile>
      <anchor>a90f8d8fbaf7c401edf6cd64fa3276fe9</anchor>
      <arglist>(GtkStockItem *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::StyleContext</name>
    <filename>classGtk_1_1StyleContext.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>StyleContext</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a69595ef7d17ea53329257c227d70cd23</anchor>
      <arglist>(StyleContext &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>StyleContext &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a7ca51ed24097476eb0aefeb69cfba0b3</anchor>
      <arglist>(StyleContext &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StyleContext</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a30c53510c9b286b4194afd28362592f4</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkStyleContext *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a630019456f1aa3042bde720250609a10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkStyleContext *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a5e7a77e76d4597a6afeb8b421cabc66f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkStyleContext *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>ae4cf3dda485e366e9cfdad0e1117b51d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_provider</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>aab2fda726358dd2f4b4f4ee516aad62c</anchor>
      <arglist>(const Glib::RefPtr&lt; StyleProvider &gt; &amp;provider, guint priority)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_provider</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a09138480a8231430c4d93cddfd77c790</anchor>
      <arglist>(const Glib::RefPtr&lt; StyleProvider &gt; &amp;provider)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>context_save</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a137fc9041736661065afda7cc86d679d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>context_restore</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>aff7792c300d9f39811c76dddf2d37199</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_state</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a88da0033bc012c4c91a34c61a49adf53</anchor>
      <arglist>(StateFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>StateFlags</type>
      <name>get_state</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a48a38519d7a9fe4552455ffad5b536f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_scale</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a5a91aabdb587a3c123340c5b1c06966f</anchor>
      <arglist>(int scale)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_scale</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a6a1b9b2d5dc562053359d75004c6b519</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>state_is_running</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a048bb9257e501759272fbd40ddcec612</anchor>
      <arglist>(StateType state, gdouble *progress)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_path</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>ad52ee881c53c09d216e05b824a6d6d4b</anchor>
      <arglist>(const WidgetPath &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>WidgetPath</type>
      <name>get_path</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a8733d48d2b34b42f20c0031736e278e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_parent</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a4d9f937add36390eb7a42512ec9e9c61</anchor>
      <arglist>(const Glib::RefPtr&lt; StyleContext &gt; &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_parent</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a88f627722d89a91b17181056651d3030</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; StyleContext &gt;</type>
      <name>get_parent</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a9280e18b913a0658bdb304ed570ff835</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const StyleContext &gt;</type>
      <name>get_parent</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>ac366783209d46fcdfb5f9e11da8b7558</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>list_classes</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a63537430952e27c9bb6685eb9eeea4ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_class</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a13f8b00a08ef17de1b95be09fb3d8963</anchor>
      <arglist>(const Glib::ustring &amp;class_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_class</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a4f817a6d8f05dff30eef042d9c470df2</anchor>
      <arglist>(const Glib::ustring &amp;class_name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_class</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>acfc282115a909fe5e08e6fcc26d61b9d</anchor>
      <arglist>(const Glib::ustring &amp;class_name)</arglist>
    </member>
    <member kind="function">
      <type>GList *</type>
      <name>list_regions</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a2cd398bc01c2418bec5a1e17340240ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_region</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a71047910de26a545dea448ac1a6deea4</anchor>
      <arglist>(const Glib::ustring &amp;region_name, RegionFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_region</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>aab5f8b0e1346bc61803a184f8a487423</anchor>
      <arglist>(const Glib::ustring &amp;region_name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_region</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>acb84aca8617da4186e4235952660647b</anchor>
      <arglist>(const Glib::ustring &amp;region_name, RegionFlags &amp;flags_return)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_style_property</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a7cafb79abba7859cd413bb08b581e658</anchor>
      <arglist>(const Glib::ustring &amp;property_name, PropertyType &amp;value) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_style_property_value</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a734271ea8fdb4f6a5684e978e11eaec3</anchor>
      <arglist>(const Glib::ustring &amp;property_name, Glib::ValueBase &amp;value) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; IconSet &gt;</type>
      <name>lookup_icon_set</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>ad00b70ab96ca9829138118e9a405c6f3</anchor>
      <arglist>(const Glib::ustring &amp;stock_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_screen</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>ae27675654d601241aeb4c84573f6f8ee</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Screen &gt; &amp;screen)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Screen &gt;</type>
      <name>get_screen</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>aacd9ea7089c95f7022e6be0d4e20b682</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Screen &gt;</type>
      <name>get_screen</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>adc319e2baf861f77ca862d7f704e4e58</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_direction</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a299e736b1903ad78f6ce1a14743b6a5f</anchor>
      <arglist>(TextDirection direction)</arglist>
    </member>
    <member kind="function">
      <type>TextDirection</type>
      <name>get_direction</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>ae0f8471b02cc3c08eb37accf1a1e40ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_junction_sides</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>aa1c32539d5423f96640fe4808990a80f</anchor>
      <arglist>(JunctionSides sides)</arglist>
    </member>
    <member kind="function">
      <type>JunctionSides</type>
      <name>get_junction_sides</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>aca4d153225d3040eff58660427269f87</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_frame_clock</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a6ac54b3ab299880ce998d65353a3b335</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::FrameClock &gt; &amp;frame_clock)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::FrameClock &gt;</type>
      <name>get_frame_clock</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a9954e20f1a75ccc6326e4a1c4866725e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::FrameClock &gt;</type>
      <name>get_frame_clock</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>aa5d6ad790f7154e525219c2bf1829889</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>lookup_color</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a6c3feeb9b715e7853da65c5a87ea3ee8</anchor>
      <arglist>(const Glib::ustring &amp;color_name, Gdk::RGBA &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notify_state_change</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a69828cfb2665f5a911f22d09224f86f5</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Window &gt; &amp;window, gpointer region_id, StateType state, bool state_value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancel_animations</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>ae6788bb4d5f209ebc9c1ebb3641cac71</anchor>
      <arglist>(gpointer region_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scroll_animations</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a5c52d00b107c557e2749e76e589943e5</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Window &gt; &amp;window, int dx, int dy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_animatable_region</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>acfc0c4d8bda1eee5491c32990b47a4d3</anchor>
      <arglist>(gpointer region_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pop_animatable_region</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a6b47f9a70e8373c4e19dfd0d0a9ac387</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gdk::RGBA</type>
      <name>get_color</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>adc4c4d4138f21193d668a5da334e66e0</anchor>
      <arglist>(StateFlags state=(StateFlags) 0) const </arglist>
    </member>
    <member kind="function">
      <type>Gdk::RGBA</type>
      <name>get_background_color</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a15dfdb3bbe6322df8b6547478bbcb190</anchor>
      <arglist>(StateFlags state=(StateFlags) 0) const </arglist>
    </member>
    <member kind="function">
      <type>Gdk::RGBA</type>
      <name>get_border_color</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a7014e63f87b579a8bc9a7e0d6394e78f</anchor>
      <arglist>(StateFlags state=(StateFlags) 0) const </arglist>
    </member>
    <member kind="function">
      <type>Pango::FontDescription</type>
      <name>get_font</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>aa7152d36c584d7be8e3769fc8b865aaf</anchor>
      <arglist>(StateFlags state=(StateFlags) 0) const </arglist>
    </member>
    <member kind="function">
      <type>Border</type>
      <name>get_border</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a232a0c13bc2d8874aa35e7568d41be23</anchor>
      <arglist>(StateFlags state=(StateFlags) 0) const </arglist>
    </member>
    <member kind="function">
      <type>Border</type>
      <name>get_padding</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a04ccf18d279db9dd089eaaf85fb828cd</anchor>
      <arglist>(StateFlags state=(StateFlags) 0) const </arglist>
    </member>
    <member kind="function">
      <type>Border</type>
      <name>get_margin</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>ae9e96035f76a11fb003d47299c8e4c93</anchor>
      <arglist>(StateFlags state=(StateFlags) 0) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidate</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a36efadee679f2a7adb722a9f889da370</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_background</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a999cde3fffdc0eba68d7b7bd78844a6c</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Window &gt; &amp;window)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_check</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a8bbfb2f9d18b910bc0ca5e90f1d2805c</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;cr, double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_option</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a9d48e4cbc74649d31a1d3b214ce5f5db</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;cr, double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_arrow</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a2e15e3b10412484d89c5c4fb8c73cf15</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;cr, double angle, double x, double y, double size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_background</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a5c7dd35b1a892e8f5cabf9f31ecd27cf</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;cr, double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_frame</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a6a94ba742dd7a32b5698a1962621ea50</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;cr, double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_expander</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a8decf2586a536c880e9ac1b83b9511f2</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;cr, double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_focus</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>adfb3753a5fdf1186a59f8e0b77a8beee</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;cr, double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_layout</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>adcb7c95fa03fa148e461aa1152f9d399</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;cr, double x, double y, PangoLayout *layout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_layout</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a8e18dec03cd889ab03c2daebd2a5c97d</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;cr, double x, double y, const Glib::RefPtr&lt; Pango::Layout &gt; &amp;layout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_line</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>abe05e9f5bb0667c3710053e84dc1026d</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;cr, double x0, double y0, double x1, double y1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_slider</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>afec1778274b1ba87045552cca18f1268</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;cr, double x, double y, double width, double height, Orientation orientation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_frame_gap</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a594348d08ef157bd4ff4c0592321861c</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;cr, double x, double y, double width, double height, PositionType gap_side, double xy0_gap, double xy1_gap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_extension</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a7f38d676a0e0414858d50d32dcc86240</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;cr, double x, double y, double width, double height, PositionType gap_side)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_handle</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>aaf33e2cad9e0488d3a5f7f4431bbf28e</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;cr, double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_activity</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a9855b66288925e4b40bffd87bb9d6bd9</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;cr, double x, double y, double width, double height)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>render_icon_pixbuf</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a4a9e6b0b15a8d15bccf8fc4e5bb48905</anchor>
      <arglist>(const IconSource &amp;source, IconSize size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_icon</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a43fdc9f807a2f3ef89f524c433cf93bd</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;cr, const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;pixbuf, double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>render_insertion_cursor</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a4b69e595b1188fffe67418e6c3c9bfc6</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;cr, double x, double y, const Glib::RefPtr&lt; Pango::Layout &gt; &amp;layout, int index, Pango::Direction direction)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_changed</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a20a4ac1a44c5b49f7877f425b83c7f46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gdk::Screen &gt; &gt;</type>
      <name>property_screen</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a21e43b0425370a3123cf6d32647b6906</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::Screen &gt; &gt;</type>
      <name>property_screen</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a1913f55e492a1246ef8e8548b1a92e25</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; TextDirection &gt;</type>
      <name>property_direction</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a2390edcf692961edc27623afd2d6dc58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; TextDirection &gt;</type>
      <name>property_direction</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a9b3f6054aad662815c1b9e3d04faf625</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gdk::FrameClock &gt; &gt;</type>
      <name>property_paint_clock</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a4f9cfb286fa0f7b8f652947e2c11edcb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::FrameClock &gt; &gt;</type>
      <name>property_paint_clock</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>aeafcf3fd0eb4a26eaa2a0381b8e7e9c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; StyleContext &gt; &gt;</type>
      <name>property_parent</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a2adc6c084e3c875767dbce3948fcadbe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; StyleContext &gt; &gt;</type>
      <name>property_parent</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a7fff656fe635cfdcb777a0e988b1b5c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a15d1d01c0fc182b1b127dde88c2c11d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; StyleContext &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>ac09b1a5b154b5817412eb2c48c43bea9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_provider_for_screen</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a5832098df35804a5c69931ced28588b6</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Screen &gt; &amp;screen, const Glib::RefPtr&lt; StyleProvider &gt; &amp;provider, guint priority)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>remove_provider_for_screen</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a22082170d4fa2aab5d15132137b7004c</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Screen &gt; &amp;screen, const Glib::RefPtr&lt; StyleProvider &gt; &amp;provider)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>StyleContext</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>aa0f3abc906c94b051c09d9e69a8bab2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_changed</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>aaaa0dedd53664f386a082e12a08bba13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::StyleContext &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1StyleContext.html</anchorfile>
      <anchor>a10aa53fdf2456d8ad0ba38a792798dd8</anchor>
      <arglist>(GtkStyleContext *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::StyleProperty</name>
    <filename>classGtk_1_1StyleProperty.html</filename>
    <templarg></templarg>
    <base>Gtk::StylePropertyBase</base>
    <member kind="typedef">
      <type>T</type>
      <name>PropertyType</name>
      <anchorfile>classGtk_1_1StyleProperty.html</anchorfile>
      <anchor>ab377f5f1251b8701706a6e107dba34ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Glib::Value&lt; T &gt;</type>
      <name>ValueType</name>
      <anchorfile>classGtk_1_1StyleProperty.html</anchorfile>
      <anchor>a91fc26f0c2d794c576b421a9e93e505d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StyleProperty</name>
      <anchorfile>classGtk_1_1StyleProperty.html</anchorfile>
      <anchor>af097c07ae0ea6f657efd84b2f57da2e9</anchor>
      <arglist>(Gtk::Widget &amp;widget, const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StyleProperty</name>
      <anchorfile>classGtk_1_1StyleProperty.html</anchorfile>
      <anchor>a38385afffdbffc158a1f6aa33053f801</anchor>
      <arglist>(Gtk::Widget &amp;widget, const Glib::ustring &amp;name, const PropertyType &amp;default_value)</arglist>
    </member>
    <member kind="function">
      <type>PropertyType</type>
      <name>get_value</name>
      <anchorfile>classGtk_1_1StyleProperty.html</anchorfile>
      <anchor>a79c0cb8ba5dca7b836169c88842b4975</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator PropertyType</name>
      <anchorfile>classGtk_1_1StyleProperty.html</anchorfile>
      <anchor>ab040785d60630f17e4dcb2c8765ae72a</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::StylePropertyBase</name>
    <filename>classGtk_1_1StylePropertyBase.html</filename>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>classGtk_1_1StylePropertyBase.html</anchorfile>
      <anchor>a91a85683db2333e12242c8429c98989b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>StylePropertyBase</name>
      <anchorfile>classGtk_1_1StylePropertyBase.html</anchorfile>
      <anchor>a02e240e876f4b405506c01f8e3ecdb21</anchor>
      <arglist>(Gtk::Widget &amp;widget, GType value_type)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~StylePropertyBase</name>
      <anchorfile>classGtk_1_1StylePropertyBase.html</anchorfile>
      <anchor>af3bd39b9487d38f693e3e692e5ed3d53</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>lookup_style_property</name>
      <anchorfile>classGtk_1_1StylePropertyBase.html</anchorfile>
      <anchor>a2ce5e9639e467650416edbd841c6ab7f</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>install_style_property</name>
      <anchorfile>classGtk_1_1StylePropertyBase.html</anchorfile>
      <anchor>a8da60c4afd6d6365a1ceab5d052b418f</anchor>
      <arglist>(GParamSpec *param_spec)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const char *</type>
      <name>get_name_internal</name>
      <anchorfile>classGtk_1_1StylePropertyBase.html</anchorfile>
      <anchor>acdad149adc5ea7680975383cc251d05d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Gtk::Widget *</type>
      <name>widget_</name>
      <anchorfile>classGtk_1_1StylePropertyBase.html</anchorfile>
      <anchor>a3edc93af4c779aedf7080d256d9147f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GType</type>
      <name>value_type_</name>
      <anchorfile>classGtk_1_1StylePropertyBase.html</anchorfile>
      <anchor>aed9269ee350f3c48bccf7234cf16763b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GParamSpec *</type>
      <name>param_spec_</name>
      <anchorfile>classGtk_1_1StylePropertyBase.html</anchorfile>
      <anchor>ae14eeba2a0c4ba0bb6ee43a9cd9efae2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::StyleProvider</name>
    <filename>classGtk_1_1StyleProvider.html</filename>
    <base>Glib::Interface</base>
    <member kind="function">
      <type></type>
      <name>StyleProvider</name>
      <anchorfile>classGtk_1_1StyleProvider.html</anchorfile>
      <anchor>a7f3704db687d8c8b1e7e7745ed9948ea</anchor>
      <arglist>(StyleProvider &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>StyleProvider &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1StyleProvider.html</anchorfile>
      <anchor>a448178ad92d25ecb1b506c1a700bcb83</anchor>
      <arglist>(StyleProvider &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StyleProvider</name>
      <anchorfile>classGtk_1_1StyleProvider.html</anchorfile>
      <anchor>a0a13fbca2bc90d74eb12245f63884322</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkStyleProvider *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1StyleProvider.html</anchorfile>
      <anchor>a1ae2c6236a61cc7bfa2b94cd258891fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkStyleProvider *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1StyleProvider.html</anchorfile>
      <anchor>ac316e7cb8bd3c858e6847e4a702ffe67</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1StyleProvider.html</anchorfile>
      <anchor>abd9b29ce5ec70fed1a1da6e5466b2dc1</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1StyleProvider.html</anchorfile>
      <anchor>a73ad44cc455b0a5ed218eae979b81ec7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>StyleProvider</name>
      <anchorfile>classGtk_1_1StyleProvider.html</anchorfile>
      <anchor>ad98e18910bd29b41b058f89cdc957936</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::StyleProvider &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1StyleProvider.html</anchorfile>
      <anchor>a49a79605ce41b2ac46efc7909a73cc3a</anchor>
      <arglist>(GtkStyleProvider *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Switch</name>
    <filename>classGtk_1_1Switch.html</filename>
    <base>Gtk::Widget</base>
    <base>Gtk::Activatable</base>
    <member kind="function">
      <type></type>
      <name>Switch</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>ac81886ae609ccca73086d88f709d1fe8</anchor>
      <arglist>(Switch &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Switch &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>acfe5471ea3b8109504b47c8915db0a79</anchor>
      <arglist>(Switch &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Switch</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>ac7b5686bdb25656153a5c7941bdbde2a</anchor>
      <arglist>(const Switch &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Switch &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>ae8b3c3acffba6535694ccb8c192c46ce</anchor>
      <arglist>(const Switch &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Switch</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>a5ddac95991c005b369614f8f9541af03</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkSwitch *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>ae0f72fba97824a110a5dccada0fd8f50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkSwitch *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>a51d2f0c21e5ceda4d81690f0283f97e1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Switch</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>ae2deb5645575d81c9bd6b40f216615ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_active</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>a91c216642f12771f23ae94612951c6b3</anchor>
      <arglist>(bool is_active=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_active</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>acbbde40427ebff326f64ca4953c965c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_state</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>a37b3521c724a22bee0d6b4f02efdb61b</anchor>
      <arglist>(bool state=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_state</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>a977b1926a1cf0f943984020ffd7e8f8f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_active</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>ae5b3afdbc654ef4861a32165a7e58d25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_active</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>a022d16c230fd9d975d889dbfe99b3464</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_state</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>a777d36ebdde96229498951dafd9b6041</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_state</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>a3dbb60579f3ca4876f7e7ddb52fc9146</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, bool &gt;</type>
      <name>signal_state_set</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>a76b1a913499bcfbe4ba2e37c0d4e6cff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>afb9ae13e7a9b5955c7c86b88ac05f7f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_state_set</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>a36d364a47706f6aaabeaf4ae4ca8a100</anchor>
      <arglist>(bool state)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Switch *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Switch.html</anchorfile>
      <anchor>a1906730663824755dabb2b9d8e28c382</anchor>
      <arglist>(GtkSwitch *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Table</name>
    <filename>classGtk_1_1Table.html</filename>
    <base>Gtk::Container</base>
    <member kind="function">
      <type></type>
      <name>Table</name>
      <anchorfile>classGtk_1_1Table.html</anchorfile>
      <anchor>a3a8f4c849d275194811358919a4ded58</anchor>
      <arglist>(Table &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Table &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Table.html</anchorfile>
      <anchor>a2d27e36d6aeec928864877334a61120b</anchor>
      <arglist>(Table &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Table</name>
      <anchorfile>classGtk_1_1Table.html</anchorfile>
      <anchor>afa8ecca4891e3a8db2f39a7faa7af2dd</anchor>
      <arglist>(const Table &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Table &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Table.html</anchorfile>
      <anchor>a2fb166faa06515ab2bdbb7eeb5d4f5c5</anchor>
      <arglist>(const Table &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Table</name>
      <anchorfile>classGtk_1_1Table.html</anchorfile>
      <anchor>a30fdc40959ab25f1e9bfd92f49456672</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Table.html</anchorfile>
      <anchor>adc4b3dbe18d9cf298b8acb52b29ca1cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Table.html</anchorfile>
      <anchor>aa8e38be06124af148d38146877f80392</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Table</name>
      <anchorfile>classGtk_1_1Table.html</anchorfile>
      <anchor>a737661795265212dc75b876dd97034f8</anchor>
      <arglist>(guint n_rows=1, guint n_columns=1, bool homogeneous=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attach</name>
      <anchorfile>classGtk_1_1Table.html</anchorfile>
      <anchor>a28b6926e68337a51ba29f2b4dd69f087</anchor>
      <arglist>(Widget &amp;child, guint left_attach, guint right_attach, guint top_attach, guint bottom_attach, AttachOptions xoptions=FILL|EXPAND, AttachOptions yoptions=FILL|EXPAND, guint xpadding=0, guint ypadding=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classGtk_1_1Table.html</anchorfile>
      <anchor>a4f424987552a7ab8497eee384004b2dc</anchor>
      <arglist>(guint rows, guint columns)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_row_spacing</name>
      <anchorfile>classGtk_1_1Table.html</anchorfile>
      <anchor>aeaa6413b00c0a37f31f4c3334e906f67</anchor>
      <arglist>(guint row, guint spacing)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_row_spacing</name>
      <anchorfile>classGtk_1_1Table.html</anchorfile>
      <anchor>a43a1d11be106859eb3e6181add38777b</anchor>
      <arglist>(guint row) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_col_spacing</name>
      <anchorfile>classGtk_1_1Table.html</anchorfile>
      <anchor>af77b4b9ea80e32d1c76c0e4466425676</anchor>
      <arglist>(guint column, guint spacing)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_col_spacing</name>
      <anchorfile>classGtk_1_1Table.html</anchorfile>
      <anchor>a9dc52f72111ea2b96043ed14cbe0a6d7</anchor>
      <arglist>(guint column) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_row_spacings</name>
      <anchorfile>classGtk_1_1Table.html</anchorfile>
      <anchor>a9a65db5a52a77361ccf6dae3b30e04d7</anchor>
      <arglist>(guint spacing)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_col_spacings</name>
      <anchorfile>classGtk_1_1Table.html</anchorfile>
      <anchor>aea0cda0ce75493573df0fca34bb3e05d</anchor>
      <arglist>(guint spacing)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_spacings</name>
      <anchorfile>classGtk_1_1Table.html</anchorfile>
      <anchor>ab9f12c5410e9d93f6b1aaa23aedcd342</anchor>
      <arglist>(guint spacing)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_default_row_spacing</name>
      <anchorfile>classGtk_1_1Table.html</anchorfile>
      <anchor>a62c9dddf829da9c26b46c27d1dfab542</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_default_col_spacing</name>
      <anchorfile>classGtk_1_1Table.html</anchorfile>
      <anchor>af38e361d93a52d82d4396a8e427eafe8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_homogeneous</name>
      <anchorfile>classGtk_1_1Table.html</anchorfile>
      <anchor>a62eac0bc438bc052d247739833d0a84a</anchor>
      <arglist>(bool homogeneous=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_homogeneous</name>
      <anchorfile>classGtk_1_1Table.html</anchorfile>
      <anchor>a52ace3060aed96048d39e2120809d716</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_size</name>
      <anchorfile>classGtk_1_1Table.html</anchorfile>
      <anchor>a0847343664611db4fc8bfd75658d07b4</anchor>
      <arglist>(guint &amp;rows, guint &amp;columns) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_n_rows</name>
      <anchorfile>classGtk_1_1Table.html</anchorfile>
      <anchor>a976db556e26e07f41f0b611bd073e477</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_n_rows</name>
      <anchorfile>classGtk_1_1Table.html</anchorfile>
      <anchor>af256587c6cfbbc5d5d6bf0b372333efb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_n_columns</name>
      <anchorfile>classGtk_1_1Table.html</anchorfile>
      <anchor>a66928e6507d50d00f0ed2bb7a0972a31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_n_columns</name>
      <anchorfile>classGtk_1_1Table.html</anchorfile>
      <anchor>a82a93feb67f6bd5c51410635de5cc631</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_column_spacing</name>
      <anchorfile>classGtk_1_1Table.html</anchorfile>
      <anchor>abd91832d63a3d8111a8b7726b145b3c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_column_spacing</name>
      <anchorfile>classGtk_1_1Table.html</anchorfile>
      <anchor>a05a1a54e3addbd0d636de9c1a4536854</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; guint &gt;</type>
      <name>property_row_spacing</name>
      <anchorfile>classGtk_1_1Table.html</anchorfile>
      <anchor>a42bb570f272cd1c44a9fcf836986d259</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; guint &gt;</type>
      <name>property_row_spacing</name>
      <anchorfile>classGtk_1_1Table.html</anchorfile>
      <anchor>a177a71056b22656806bd1ef08ef016d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_homogeneous</name>
      <anchorfile>classGtk_1_1Table.html</anchorfile>
      <anchor>a9b8bca913e136d0564938402e03d9d17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_homogeneous</name>
      <anchorfile>classGtk_1_1Table.html</anchorfile>
      <anchor>a6b6e4324f3670cf51a1ff6681fab5228</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Table.html</anchorfile>
      <anchor>a96c258decb612afa8f642dacdbd21a8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Table *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Table.html</anchorfile>
      <anchor>a59d0a83c09436cb8e8b11e156dd513db</anchor>
      <arglist>(GtkTable *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TargetEntry</name>
    <filename>classGtk_1_1TargetEntry.html</filename>
    <member kind="function">
      <type></type>
      <name>TargetEntry</name>
      <anchorfile>classGtk_1_1TargetEntry.html</anchorfile>
      <anchor>a0f4338752962be550539d0fe30aa7ab1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TargetEntry</name>
      <anchorfile>classGtk_1_1TargetEntry.html</anchorfile>
      <anchor>a3c122171830cf3bc0bf12342acc59484</anchor>
      <arglist>(const Glib::ustring &amp;target, Gtk::TargetFlags flags=Gtk::TargetFlags(0), guint info=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TargetEntry</name>
      <anchorfile>classGtk_1_1TargetEntry.html</anchorfile>
      <anchor>aae3599a358e450f7ba227adc707d7e8e</anchor>
      <arglist>(const GtkTargetEntry &amp;gobject)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TargetEntry</name>
      <anchorfile>classGtk_1_1TargetEntry.html</anchorfile>
      <anchor>ae65293264ea74576b121a032ba471f91</anchor>
      <arglist>(const TargetEntry &amp;src)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TargetEntry</name>
      <anchorfile>classGtk_1_1TargetEntry.html</anchorfile>
      <anchor>a9ac1e2f96c77532a8803958fe8af3829</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>TargetEntry &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TargetEntry.html</anchorfile>
      <anchor>abc2491290d23fb3b3b2e654db3f8df3a</anchor>
      <arglist>(const TargetEntry &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_target</name>
      <anchorfile>classGtk_1_1TargetEntry.html</anchorfile>
      <anchor>a1696965e088420aca1b057d4d49eb6e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_target</name>
      <anchorfile>classGtk_1_1TargetEntry.html</anchorfile>
      <anchor>a67b1967ec5253ddaea258fb9b1956685</anchor>
      <arglist>(const Glib::ustring &amp;target)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::TargetFlags</type>
      <name>get_flags</name>
      <anchorfile>classGtk_1_1TargetEntry.html</anchorfile>
      <anchor>a198f6e7c1d057ae0b033911bd0e3319a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_flags</name>
      <anchorfile>classGtk_1_1TargetEntry.html</anchorfile>
      <anchor>a3f54b7e16bb620d64c3a75090b5ffd25</anchor>
      <arglist>(Gtk::TargetFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_info</name>
      <anchorfile>classGtk_1_1TargetEntry.html</anchorfile>
      <anchor>af21c55a445721f223ea760bac4ae3693</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_info</name>
      <anchorfile>classGtk_1_1TargetEntry.html</anchorfile>
      <anchor>aaa469778205b9ef2f82284e3028bdae2</anchor>
      <arglist>(guint info)</arglist>
    </member>
    <member kind="function">
      <type>GtkTargetEntry *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TargetEntry.html</anchorfile>
      <anchor>aabf277d0d294d5cc5e588b4f1f708414</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTargetEntry *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TargetEntry.html</anchorfile>
      <anchor>acbf855da2fc749bde77afa2929aae03b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GtkTargetEntry</type>
      <name>gobject_</name>
      <anchorfile>classGtk_1_1TargetEntry.html</anchorfile>
      <anchor>aa1510344bc5ec316c76857314d932d7f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TargetList</name>
    <filename>classGtk_1_1TargetList.html</filename>
    <member kind="function">
      <type>void</type>
      <name>reference</name>
      <anchorfile>classGtk_1_1TargetList.html</anchorfile>
      <anchor>aa9a331c1f53faaa8ff1b5007c68b911c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unreference</name>
      <anchorfile>classGtk_1_1TargetList.html</anchorfile>
      <anchor>a6ed085c18dfc6cc49c037c70cc1f8bcd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkTargetList *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TargetList.html</anchorfile>
      <anchor>aa73b3227c73fcca389aa27682399d139</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTargetList *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TargetList.html</anchorfile>
      <anchor>aa8468cabd2041c86dece0df0d7b759d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkTargetList *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1TargetList.html</anchorfile>
      <anchor>a2239f588995130ecd081e5857e8a078f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TargetList</name>
      <anchorfile>classGtk_1_1TargetList.html</anchorfile>
      <anchor>a0322680eebe06e79772a2b9205af18a5</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TargetList</name>
      <anchorfile>classGtk_1_1TargetList.html</anchorfile>
      <anchor>a045e87aec9776a7d30130a29da78d9c3</anchor>
      <arglist>(const TargetList &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>TargetList &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TargetList.html</anchorfile>
      <anchor>af642c8ee77be0f71e7808d41e1b33ca4</anchor>
      <arglist>(const TargetList &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classGtk_1_1TargetList.html</anchorfile>
      <anchor>a6755309f1543dbb08aea00e314f2d67f</anchor>
      <arglist>(const Glib::ustring &amp;target, TargetFlags flags=TargetFlags(0), guint info=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classGtk_1_1TargetList.html</anchorfile>
      <anchor>a3c4805d45590888906de2f39d92495ee</anchor>
      <arglist>(const std::vector&lt; TargetEntry &gt; &amp;targets)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_text_targets</name>
      <anchorfile>classGtk_1_1TargetList.html</anchorfile>
      <anchor>af7374c7bbaf40c47cc6b3943cc6145c4</anchor>
      <arglist>(guint info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_rich_text_targets</name>
      <anchorfile>classGtk_1_1TargetList.html</anchorfile>
      <anchor>ad782a26ce90ee86d9ee8ea2ca37b0af3</anchor>
      <arglist>(guint info, bool deserializable, const Glib::RefPtr&lt; TextBuffer &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_image_targets</name>
      <anchorfile>classGtk_1_1TargetList.html</anchorfile>
      <anchor>a0cabb74f74e01564797fb5b69b4f5ad0</anchor>
      <arglist>(guint info, bool writable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_uri_targets</name>
      <anchorfile>classGtk_1_1TargetList.html</anchorfile>
      <anchor>a87f6079851159ecbdbf921b137068221</anchor>
      <arglist>(guint info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classGtk_1_1TargetList.html</anchorfile>
      <anchor>a26afa13c6a46174a09d63a9e11dd14e6</anchor>
      <arglist>(const Glib::ustring &amp;target)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>find</name>
      <anchorfile>classGtk_1_1TargetList.html</anchorfile>
      <anchor>ab38e3bbe9a9a3fccfa93e8b215e383bf</anchor>
      <arglist>(const Glib::ustring &amp;target, guint *info) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; Gtk::TargetList &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1TargetList.html</anchorfile>
      <anchor>aa70823c64f6182a60c9f3d2b88162b03</anchor>
      <arglist>(const std::vector&lt; TargetEntry &gt; &amp;targets)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classGtk_1_1TargetList.html</anchorfile>
      <anchor>a915623711b175b61fdab7cfa68f1e50a</anchor>
      <arglist>(void *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::TargetList &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TargetList.html</anchorfile>
      <anchor>a9be47ea1bca7e60f016d5c7686061f26</anchor>
      <arglist>(GtkTargetList *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TearoffMenuItem</name>
    <filename>classGtk_1_1TearoffMenuItem.html</filename>
    <base>Gtk::MenuItem</base>
    <member kind="function">
      <type></type>
      <name>TearoffMenuItem</name>
      <anchorfile>classGtk_1_1TearoffMenuItem.html</anchorfile>
      <anchor>ad7df707e296bd5cb51f420d114b8fcb8</anchor>
      <arglist>(TearoffMenuItem &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TearoffMenuItem &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TearoffMenuItem.html</anchorfile>
      <anchor>afa632edddb669eb180b240b9df1cfb43</anchor>
      <arglist>(TearoffMenuItem &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TearoffMenuItem</name>
      <anchorfile>classGtk_1_1TearoffMenuItem.html</anchorfile>
      <anchor>acf11f7ae5dc894ab9cb6460a807d9f1b</anchor>
      <arglist>(const TearoffMenuItem &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>TearoffMenuItem &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TearoffMenuItem.html</anchorfile>
      <anchor>a176e5b3776aea7d3a199133aa24bf2e8</anchor>
      <arglist>(const TearoffMenuItem &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TearoffMenuItem</name>
      <anchorfile>classGtk_1_1TearoffMenuItem.html</anchorfile>
      <anchor>aa19f51a312b2dbe237ef18599f2bd5db</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTearoffMenuItem *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TearoffMenuItem.html</anchorfile>
      <anchor>a1a6a4a8e3edf692daf0a41d608f37e18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTearoffMenuItem *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TearoffMenuItem.html</anchorfile>
      <anchor>a5186f69334727dfefd6344e1a21aa145</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TearoffMenuItem</name>
      <anchorfile>classGtk_1_1TearoffMenuItem.html</anchorfile>
      <anchor>abe0e00badae8147cdba18c42a4a767b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TearoffMenuItem.html</anchorfile>
      <anchor>a2b8488d3da81f402909e832ab154c197</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::TearoffMenuItem *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TearoffMenuItem.html</anchorfile>
      <anchor>a7de5b977b3824793a756fbf1646a1a31</anchor>
      <arglist>(GtkTearoffMenuItem *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TextAttributes</name>
    <filename>classGtk_1_1TextAttributes.html</filename>
    <member kind="function">
      <type></type>
      <name>TextAttributes</name>
      <anchorfile>classGtk_1_1TextAttributes.html</anchorfile>
      <anchor>af8dc6475a1261c259bf7cb7dd0729cdd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextAttributes</name>
      <anchorfile>classGtk_1_1TextAttributes.html</anchorfile>
      <anchor>a9208cf122b50c345b322fc2a20118e1a</anchor>
      <arglist>(GtkTextAttributes *gobject, bool make_a_copy=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextAttributes</name>
      <anchorfile>classGtk_1_1TextAttributes.html</anchorfile>
      <anchor>aa8200ee5c46ada9f9c8d8be3216f5441</anchor>
      <arglist>(const TextAttributes &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>TextAttributes &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TextAttributes.html</anchorfile>
      <anchor>a342379283211cbdaf4a1f964485364ec</anchor>
      <arglist>(const TextAttributes &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextAttributes</name>
      <anchorfile>classGtk_1_1TextAttributes.html</anchorfile>
      <anchor>ac03ab64cf1aeafd6555c48a6a00d19f6</anchor>
      <arglist>(TextAttributes &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TextAttributes &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TextAttributes.html</anchorfile>
      <anchor>af14acbabe06058d7a2742ee435fa8f59</anchor>
      <arglist>(TextAttributes &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TextAttributes</name>
      <anchorfile>classGtk_1_1TextAttributes.html</anchorfile>
      <anchor>ac8dd576b026b6bbb13667032e4cc847d</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGtk_1_1TextAttributes.html</anchorfile>
      <anchor>a58517de286608d7db1be3996caa6ed38</anchor>
      <arglist>(TextAttributes &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GtkTextAttributes *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TextAttributes.html</anchorfile>
      <anchor>ac432fd8ee9ac5fbe294a903798413c19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTextAttributes *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TextAttributes.html</anchorfile>
      <anchor>a51268deed207b502d6d776d390df71b9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkTextAttributes *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1TextAttributes.html</anchorfile>
      <anchor>a3006e3a48d91c536eb8a03ef8534a902</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TextAttributes.html</anchorfile>
      <anchor>a69803465fbcbd222c563e06ae90aefaa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GtkTextAttributes *</type>
      <name>gobject_</name>
      <anchorfile>classGtk_1_1TextAttributes.html</anchorfile>
      <anchor>ab90f922b92b85d6a69d1587fb39847b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGtk_1_1TextAttributes.html</anchorfile>
      <anchor>aea600ba800ed8ff98969771c9611815e</anchor>
      <arglist>(TextAttributes &amp;lhs, TextAttributes &amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Gtk::TextAttributes</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TextAttributes.html</anchorfile>
      <anchor>acfa78c8c9fb7583485816205e586a16b</anchor>
      <arglist>(GtkTextAttributes *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TextBuffer</name>
    <filename>classGtk_1_1TextBuffer.html</filename>
    <base>Glib::Object</base>
    <member kind="typedef">
      <type>TextIter</type>
      <name>iterator</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>abb8a8a5abd18b84218e12a4678dcc3c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TextTag</type>
      <name>Tag</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ae218bf327872d2a5ed6e3202db2627d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TextTagTable</type>
      <name>TagTable</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a0d1ed6d2b21a7cb06d261e117a2c2672</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TextMark</type>
      <name>Mark</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ae8dd977bbf98a58d400f880ed30a946e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TextChildAnchor</type>
      <name>ChildAnchor</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>acc9fefd2e8f66b2e27feb1abca37a840</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; guint8 *, const Glib::RefPtr&lt; TextBuffer &gt; &amp;, const iterator &amp;, const iterator &amp;, gsize &amp; &gt;</type>
      <name>SlotSerialize</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a8553a3b9032f06c1b2a99b83de6304a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; bool, const Glib::RefPtr&lt; TextBuffer &gt; &amp;, iterator &amp;, const guint8 *, gsize, bool &gt;</type>
      <name>SlotDeserialize</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ae4a04aa6e20a531bccf73bcd6e76d1a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextBuffer</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ac26c56c251695e47c1b9a4b45a8e7e86</anchor>
      <arglist>(TextBuffer &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TextBuffer &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a609965e018e81b2e4e17c88cf7805ad5</anchor>
      <arglist>(TextBuffer &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TextBuffer</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a738e34dcc49cb7b321807b43e4f9e5d3</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTextBuffer *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a9250bc4defcf6599e94a37b0d3caaa1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTextBuffer *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a002e580ebeb7884bfdb8d5bc5d4122fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkTextBuffer *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a3e79c9310e23f741898f081689b07672</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_line_count</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>af69d5132c5439d356dedcbfcc7197fc3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_char_count</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ada488c738d7311ea9cedacede3b3b03c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a0c1f34a82750596b1c8c3be2f7fa3f33</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TextBuffer::TagTable &gt;</type>
      <name>get_tag_table</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a3103df31b1a0fc808997fd9da44e4734</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TextBuffer::TagTable &gt;</type>
      <name>get_tag_table</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>aa242143c1cdbeb925f47704bf08b436e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_text</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a9dc48965b1949bb54c7297e6bd1d1248</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_text</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a67c274bcdd8500d4eaf1b1d543987b0f</anchor>
      <arglist>(const char *text_begin, const char *text_end)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ac6466a773421e4d48994b65f4a1703ce</anchor>
      <arglist>(const iterator &amp;pos, const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a22492c63d1f0da2f04231d9ec4cbecc8</anchor>
      <arglist>(const iterator &amp;pos, const char *text_begin, const char *text_end)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_at_cursor</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a53360179e6441863cec6117c6f396af0</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_at_cursor</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a9302a066984dd922034bf51c668ae17c</anchor>
      <arglist>(const char *text_begin, const char *text_end)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; iterator, bool &gt;</type>
      <name>insert_interactive</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a5ae3a0c42cf66591c116dbb5ab3efd5f</anchor>
      <arglist>(const iterator &amp;pos, const Glib::ustring &amp;text, bool default_editable=true)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; iterator, bool &gt;</type>
      <name>insert_interactive</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a5dd1053539bc3c7b306b26047f5c2725</anchor>
      <arglist>(const iterator &amp;pos, const char *text_begin, const char *text_end, bool default_editable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>insert_interactive_at_cursor</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a07f6c4236a1ede7e4e5ced196b13bc76</anchor>
      <arglist>(const Glib::ustring &amp;text, bool default_editable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>insert_interactive_at_cursor</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a8c775f5341888798b1425cb6e8091060</anchor>
      <arglist>(const char *text_begin, const char *text_end, bool default_editable=true)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>aaad9d1eb6498a68ec43cdbdab9199679</anchor>
      <arglist>(const iterator &amp;pos, const iterator &amp;range_begin, const iterator &amp;range_end)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; iterator, bool &gt;</type>
      <name>insert_interactive</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>affa78900d98dd158b1f78c7977a535dd</anchor>
      <arglist>(const iterator &amp;pos, const iterator &amp;range_begin, const iterator &amp;range_end, bool default_editable=true)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert_with_tag</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a79771152944a1d16d5119e1314295c39</anchor>
      <arglist>(const iterator &amp;pos, const Glib::ustring &amp;text, const Glib::RefPtr&lt; Tag &gt; &amp;tag)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert_with_tag</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ae689b9324620f5b1daa1fac9d13c8130</anchor>
      <arglist>(const iterator &amp;pos, const char *text_begin, const char *text_end, const Glib::RefPtr&lt; Tag &gt; &amp;tag)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert_with_tag</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a134f2de521d6a00ebf2da802481cef3d</anchor>
      <arglist>(const iterator &amp;pos, const Glib::ustring &amp;text, const Glib::ustring &amp;tag_name)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert_with_tag</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a8b50becdec017a20a88c8279def83249</anchor>
      <arglist>(const iterator &amp;pos, const char *text_begin, const char *text_end, const Glib::ustring &amp;tag_name)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert_with_tags</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a7e381affba914baeb20e6be7810f78a1</anchor>
      <arglist>(const iterator &amp;pos, const Glib::ustring &amp;text, const std::vector&lt; Glib::RefPtr&lt; Tag &gt; &gt; &amp;tags)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert_with_tags</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a53724c8e095585a0b5ea75a46ceabf1f</anchor>
      <arglist>(const iterator &amp;pos, const char *text_begin, const char *text_end, const std::vector&lt; Glib::RefPtr&lt; Tag &gt; &gt; &amp;tags)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert_with_tags_by_name</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a6944809959a9b0a62a5620a2636ae9d7</anchor>
      <arglist>(const iterator &amp;pos, const Glib::ustring &amp;text, const std::vector&lt; Glib::ustring &gt; &amp;tag_names)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert_with_tags_by_name</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a3393a0e302916188385f44674c09152b</anchor>
      <arglist>(const iterator &amp;pos, const char *text_begin, const char *text_end, const std::vector&lt; Glib::ustring &gt; &amp;tag_names)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert_markup</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a2d04291c6e818b59d014ae739e0e0140</anchor>
      <arglist>(const iterator &amp;pos, const Glib::ustring &amp;markup)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert_markup</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a6a14d91eff2f1b4dd371a8baa414b3e6</anchor>
      <arglist>(const iterator &amp;pos, const char *markup_begin, const char *markup_end)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a93a0c92f1f46b3efaf86fcbcf746db77</anchor>
      <arglist>(const iterator &amp;range_begin, const iterator &amp;range_end)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; iterator, bool &gt;</type>
      <name>erase_interactive</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ab9e12682d654a53fc46ab36434047666</anchor>
      <arglist>(const iterator &amp;range_begin, const iterator &amp;range_end, bool default_editable=true)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>backspace</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a6ef8d2dcc85129cc399dca45a435ae24</anchor>
      <arglist>(const iterator &amp;iter, bool interactive=true, bool default_editable=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_text</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a6f761ec61482c4e2d280dcc76c719987</anchor>
      <arglist>(const iterator &amp;range_start, const iterator &amp;range_end, bool include_hidden_chars=true) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_text</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>afd3c4c2a218879e74ffe2e60786adb0b</anchor>
      <arglist>(bool include_hidden_chars=true) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_slice</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a24c6ea8b652e7f52a162e8dd81eb527b</anchor>
      <arglist>(const iterator &amp;range_start, const iterator &amp;range_end, bool include_hidden_chars=true) const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert_pixbuf</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a8b2b44341f6fd7d423b6c3a9afa7aa36</anchor>
      <arglist>(const iterator &amp;pos, const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;pixbuf)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert_child_anchor</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a80afdb5f6a08477a1977b88982069fdd</anchor>
      <arglist>(const iterator &amp;pos, const Glib::RefPtr&lt; ChildAnchor &gt; &amp;anchor)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; ChildAnchor &gt;</type>
      <name>create_child_anchor</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a2fee15dc2d1e21f624d1aa85ad75448c</anchor>
      <arglist>(const iterator &amp;pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_mark</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a5b40599bc4daf29b2dd923deafc05e7e</anchor>
      <arglist>(const Glib::RefPtr&lt; TextBuffer::Mark &gt; &amp;mark, const iterator &amp;where)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TextBuffer::Mark &gt;</type>
      <name>create_mark</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>aa355a0cc0a3c1d7f7f9ded9cc157feb5</anchor>
      <arglist>(const Glib::ustring &amp;mark_name, const iterator &amp;where, bool left_gravity=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Mark &gt;</type>
      <name>create_mark</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a8b823989431ff4b3f904efe07e9c374a</anchor>
      <arglist>(const iterator &amp;where, bool left_gravity=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_mark</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a82c1011da5758549e634729dcbc70839</anchor>
      <arglist>(const Glib::RefPtr&lt; Mark &gt; &amp;mark, const iterator &amp;where)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete_mark</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a1582cb666cbe6c857f6f742557e19295</anchor>
      <arglist>(const Glib::RefPtr&lt; Mark &gt; &amp;mark)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TextBuffer::Mark &gt;</type>
      <name>get_mark</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a2fcefaf023f05dd2e18ffa3de6063fd0</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TextBuffer::Mark &gt;</type>
      <name>get_mark</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a42f3ec0e6acacc18bd90a646847b3a7c</anchor>
      <arglist>(const Glib::ustring &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_mark_by_name</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ade83a7b96d0b4888de0f96cd3e0b7220</anchor>
      <arglist>(const Glib::ustring &amp;name, const iterator &amp;where)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>delete_mark_by_name</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a0ebfbbe158f0b53b14123158f6633661</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TextBuffer::Mark &gt;</type>
      <name>get_insert</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a4b92f14603f572f99daf0c86abd1b9ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TextBuffer::Mark &gt;</type>
      <name>get_selection_bound</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a59f49dbb4f753a1d523f68de91c4fe9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>place_cursor</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a1dff95f7dc9ea889a25596a87b2f8c35</anchor>
      <arglist>(const iterator &amp;where)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply_tag</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>aebb16fb72cab1929c81e3859eaf09a2f</anchor>
      <arglist>(const Glib::RefPtr&lt; Tag &gt; &amp;tag, const iterator &amp;range_start, const iterator &amp;range_end)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_tag</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>afdaa0bbb6db6ffe8ad3f356f7c1a8dec</anchor>
      <arglist>(const Glib::RefPtr&lt; Tag &gt; &amp;tag, const iterator &amp;range_start, const iterator &amp;range_end)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply_tag_by_name</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ae968e19265f5dae7e47f8dfe56206fd2</anchor>
      <arglist>(const Glib::ustring &amp;name, const iterator &amp;range_start, const iterator &amp;range_end)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_tag_by_name</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>aa4975c21e4effa68710686304c7aeafc</anchor>
      <arglist>(const Glib::ustring &amp;name, const iterator &amp;range_start, const iterator &amp;range_end)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_all_tags</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a9ff18822fb736109254b4614201946f6</anchor>
      <arglist>(const iterator &amp;range_start, const iterator &amp;range_end)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Tag &gt;</type>
      <name>create_tag</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a048bdd55d3f244e584074676ab482a2b</anchor>
      <arglist>(const Glib::ustring &amp;tag_name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Tag &gt;</type>
      <name>create_tag</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ad42f4e41a4cb2d5a824e2f0ffa78e973</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>get_iter_at_line_offset</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ab0b39b1914fd24c7f4a4f3c05d751d93</anchor>
      <arglist>(int line_number, int char_offset)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>get_iter_at_line_index</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a6ad8b4b329a6183834812ebbdc74c8cf</anchor>
      <arglist>(int line_number, int byte_index)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>get_iter_at_offset</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ae92edc6a06a9a5fae2ee99f762bb59ff</anchor>
      <arglist>(int char_offset)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>get_iter_at_line</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a77ebbbdc688b1f2d16fbbd7e048efc4f</anchor>
      <arglist>(int line_number)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a6c6fe08e46f141bffe7c2dfeb459c074</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ac4ee0ba09f7d8d316e3db8b7402344a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_bounds</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>aa57d47ab3cf08829430d90fe446f41ee</anchor>
      <arglist>(iterator &amp;range_begin, iterator &amp;range_end)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>get_iter_at_mark</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a331fadf0c7c6c470b709802fbc09984a</anchor>
      <arglist>(const Glib::RefPtr&lt; Mark &gt; &amp;mark)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>get_iter_at_child_anchor</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>aadecf4e2baa4eb964e3952896561322f</anchor>
      <arglist>(const Glib::RefPtr&lt; ChildAnchor &gt; &amp;anchor)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_modified</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a2170f20b9a330679596ef61863f6e101</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_modified</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>aca1d54bd5b4497881b11f6c313ac3112</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_has_selection</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a44414f75c6ec2f1758832e8935b169cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_selection_clipboard</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ad9cecd4c6d2360985966f32cad5688a8</anchor>
      <arglist>(const Glib::RefPtr&lt; Clipboard &gt; &amp;clipboard)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_selection_clipboard</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>aea3cb7a24ecfcbbda5d586aa2ffbba2d</anchor>
      <arglist>(const Glib::RefPtr&lt; Clipboard &gt; &amp;clipboard)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cut_clipboard</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a5fc2972c6f1ff379e313e5e34299f827</anchor>
      <arglist>(const Glib::RefPtr&lt; Clipboard &gt; &amp;clipboard, bool default_editable=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy_clipboard</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a975778a084bdeba3600ca5fb7dbec797</anchor>
      <arglist>(const Glib::RefPtr&lt; Clipboard &gt; &amp;clipboard)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>paste_clipboard</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a315769f47795001dc1a9449df4c22231</anchor>
      <arglist>(const Glib::RefPtr&lt; Clipboard &gt; &amp;clipboard, const iterator &amp;override_location, bool default_editable=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>paste_clipboard</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a45969585013f07f44f7c82543cc4aa8d</anchor>
      <arglist>(const Glib::RefPtr&lt; Clipboard &gt; &amp;clipboard, bool default_editable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_selection_bounds</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>abd74e8d32ae3be7f1267610a1053722f</anchor>
      <arglist>(iterator &amp;range_start, iterator &amp;range_end) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>erase_selection</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a371236bd4146f5520bda252d1c50d309</anchor>
      <arglist>(bool interactive=true, bool default_editable=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select_range</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a88b0a4096add7e8ea77098ffa5973a7f</anchor>
      <arglist>(const iterator &amp;ins, const iterator &amp;bound)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>begin_user_action</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>af86f1ef86eb6a35df054287eab967902</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>end_user_action</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ac8a7810f527798781c28de39e5acd952</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TargetList &gt;</type>
      <name>get_copy_target_list</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a0607eee85d5fcac46c660b08c77976a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TargetList &gt;</type>
      <name>get_paste_target_list</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a3c6cd68beb996eab5b6f63744a0f9cb4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>register_serialize_format</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a07ca9c8f8d47fa5b0a4b267c6818b51a</anchor>
      <arglist>(const Glib::ustring &amp;mime_type, const SlotSerialize &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>register_serialize_tagset</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>aa839b9811cc4c29f6ca1d72506bdd25e</anchor>
      <arglist>(const Glib::ustring &amp;tagset_name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>register_deserialize_format</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>adf471c994253164ce8be64eac16fc83d</anchor>
      <arglist>(const Glib::ustring &amp;mime_type, const SlotDeserialize &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>register_deserialize_tagset</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a96727ba3da11bfbfbfac1bb23d34f2b4</anchor>
      <arglist>(const Glib::ustring &amp;tagset_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregister_serialize_format</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a4dfa38c996b5eb11478a8b53e0ab8917</anchor>
      <arglist>(const Glib::ustring &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregister_deserialize_format</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a8b997d023e5072ed65efbc372ce38749</anchor>
      <arglist>(const Glib::ustring &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_can_create_tags</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a5b20c61b684f6924b2e97d07cddc9549</anchor>
      <arglist>(const Glib::ustring &amp;format, bool can_create_tags=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_can_create_tags</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a797303ae5468bda67b625d54fedec62b</anchor>
      <arglist>(const Glib::ustring &amp;format) const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>get_serialize_formats</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a697db63213c6096875b4d2027d9caca2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>get_deserialize_formats</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a68df893008c7a00aa9df1b1cfc854662</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>guint8 *</type>
      <name>serialize</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>aed68e9dc2613fc50aeb5fa1312648641</anchor>
      <arglist>(const Glib::RefPtr&lt; TextBuffer &gt; &amp;content_buffer, const Glib::ustring &amp;format, const iterator &amp;range_start, const iterator &amp;range_end, gsize &amp;length)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deserialize</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a00f69ab2b3e075d5376ff3e949e2bc4a</anchor>
      <arglist>(const Glib::RefPtr&lt; TextBuffer &gt; &amp;content_buffer, const Glib::ustring &amp;format, iterator &amp;iter, const guint8 *data, gsize length)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const TextBuffer::iterator &amp;, const Glib::ustring &amp;, int &gt;</type>
      <name>signal_insert</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a11b1261df9d1c8a3860781aee1e4352e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const TextBuffer::iterator &amp;, const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp; &gt;</type>
      <name>signal_insert_pixbuf</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ab7cdcc27baed745856d921f68ac29b7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const TextBuffer::iterator &amp;, const Glib::RefPtr&lt; ChildAnchor &gt; &amp; &gt;</type>
      <name>signal_insert_child_anchor</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>aa21e88d6229ec4b8f4dfb27f830c4ae1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const TextBuffer::iterator &amp;, const TextBuffer::iterator &amp; &gt;</type>
      <name>signal_erase</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a6e2fb64c46c601494818af5e0211cd20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_changed</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ac71022747d79b4f9e7dd2d0501c2d3ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_modified_changed</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a6569c3d470d1f57452287b8e1705a731</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const TextBuffer::iterator &amp;, const Glib::RefPtr&lt; TextBuffer::Mark &gt; &amp; &gt;</type>
      <name>signal_mark_set</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>acadcbca3a8312cf613cc3589fff3b48b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; TextBuffer::Mark &gt; &amp; &gt;</type>
      <name>signal_mark_deleted</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ac5162cbaef3f63d6703f80f1a2493387</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; TextBuffer::Tag &gt; &amp;, const TextBuffer::iterator &amp;, const TextBuffer::iterator &amp; &gt;</type>
      <name>signal_apply_tag</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>aa2639e03657e8d4c19088cc88f423cb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; TextBuffer::Tag &gt; &amp;, const TextBuffer::iterator &amp;, const TextBuffer::iterator &amp; &gt;</type>
      <name>signal_remove_tag</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a8f792e0332b28776d74ac2a589d72f09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_begin_user_action</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ab8a43c738938ebc8620a36cac6fa69d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_end_user_action</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a12817bed0ce315b3932a945352b411da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Gtk::Clipboard &gt; &amp; &gt;</type>
      <name>signal_paste_done</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a6607a0746e88b7213bfb50b88ebd63e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; TextBuffer::TagTable &gt; &gt;</type>
      <name>property_tag_table</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a6c907465b48f358654a24fffb8b43492</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_text</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ad84476a53d2eb737553899835e9c5e07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_text</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>aec0ca7ae2aed4cbc84fe4af9b89c5446</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_selection</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a5059356b88f85f7b813d72cf1fab3fc6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_cursor_position</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a145c03fee83b87e9802bd2eb9d4b542c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; TargetList &gt; &gt;</type>
      <name>property_copy_target_list</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a587a7be85ee099ea2d5e9d2e9a8b45b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; TargetList &gt; &gt;</type>
      <name>property_paste_target_list</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ab6c0510e5803826ddf52dce6e8a12365</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ad0a1be1b3db6e4aa4ded6559d8b8bcab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; TextBuffer &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>af25db2e069fb4c4de97de7c32bc93e8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; TextBuffer &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ac9a640942cb84ecbff7d6e166b2639fd</anchor>
      <arglist>(const Glib::RefPtr&lt; TagTable &gt; &amp;tag_table)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TextBuffer</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>aaff1f509a0cb4e93146bab120a0b4536</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TextBuffer</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a3a3b8930d89219e3164a478a6455a751</anchor>
      <arglist>(const Glib::RefPtr&lt; TagTable &gt; &amp;tag_table)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_insert</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a673d6eb5c9dbf67dec2df98b259bea37</anchor>
      <arglist>(const TextBuffer::iterator &amp;pos, const Glib::ustring &amp;text, int bytes)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_insert_pixbuf</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a1a0999b9fc4334dfab8dcafceba1d2ab</anchor>
      <arglist>(const TextBuffer::iterator &amp;pos, const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;pixbuf)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_insert_child_anchor</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a45f0f179157ad34849c78b7a5b233a51</anchor>
      <arglist>(const TextBuffer::iterator &amp;pos, const Glib::RefPtr&lt; ChildAnchor &gt; &amp;anchor)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_erase</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a4e76d60d5f9f403a55f3ee44f1cc4a09</anchor>
      <arglist>(const TextBuffer::iterator &amp;range_start, const TextBuffer::iterator &amp;range_end)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_changed</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a27f97169acd3b17994c57b4e39ff5bb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_modified_changed</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a10a5297bdc97369787e708ef45110a5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_mark_set</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ac55e8b2bfcea40d99617f3c4490b0ab5</anchor>
      <arglist>(const TextBuffer::iterator &amp;location, const Glib::RefPtr&lt; TextBuffer::Mark &gt; &amp;mark)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_mark_deleted</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ac7aa57c7e11c6bb786cd91415ac1e3c4</anchor>
      <arglist>(const Glib::RefPtr&lt; TextBuffer::Mark &gt; &amp;mark)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_apply_tag</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a2b171c4fb8875be6620c4d00e3fa7629</anchor>
      <arglist>(const Glib::RefPtr&lt; TextBuffer::Tag &gt; &amp;tag, const TextBuffer::iterator &amp;range_begin, const TextBuffer::iterator &amp;range_end)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_remove_tag</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a1ce4201cc9daea50f2602580c1e46162</anchor>
      <arglist>(const Glib::RefPtr&lt; TextBuffer::Tag &gt; &amp;tag, const TextBuffer::iterator &amp;range_begin, const TextBuffer::iterator &amp;range_end)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_begin_user_action</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a6c2958bafaa8304cce894b75b456884e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_end_user_action</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>aaf826a8af12e91e51b47629bde77e57d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_paste_done</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>ac117abe658974d3bbfe7c778ce2a39a3</anchor>
      <arglist>(const Glib::RefPtr&lt; Gtk::Clipboard &gt; &amp;clipboard)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::TextBuffer &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TextBuffer.html</anchorfile>
      <anchor>a09788574b3f8d6503daf01070b33c853</anchor>
      <arglist>(GtkTextBuffer *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TextChildAnchor</name>
    <filename>classGtk_1_1TextChildAnchor.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>TextChildAnchor</name>
      <anchorfile>classGtk_1_1TextChildAnchor.html</anchorfile>
      <anchor>a23d72a4c047e34493bb81af3c90d31de</anchor>
      <arglist>(TextChildAnchor &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TextChildAnchor &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TextChildAnchor.html</anchorfile>
      <anchor>ab863c7ccbd956cbe1fe803a883807d9c</anchor>
      <arglist>(TextChildAnchor &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TextChildAnchor</name>
      <anchorfile>classGtk_1_1TextChildAnchor.html</anchorfile>
      <anchor>a6e9a0406e70f3ae78c5817cc968d85a7</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTextChildAnchor *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TextChildAnchor.html</anchorfile>
      <anchor>aadc2040d8c54e6653ab23f33fc1b0c53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTextChildAnchor *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TextChildAnchor.html</anchorfile>
      <anchor>a85c0612bc5b696ae039675466e487a54</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkTextChildAnchor *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1TextChildAnchor.html</anchorfile>
      <anchor>a8dc39677993eb7dc4fb1684b7113b44c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Widget * &gt;</type>
      <name>get_widgets</name>
      <anchorfile>classGtk_1_1TextChildAnchor.html</anchorfile>
      <anchor>aa0c99adc2e6080fe2cca806b739b46ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const Widget * &gt;</type>
      <name>get_widgets</name>
      <anchorfile>classGtk_1_1TextChildAnchor.html</anchorfile>
      <anchor>a5f308528d824474c2df4960397b8589c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_deleted</name>
      <anchorfile>classGtk_1_1TextChildAnchor.html</anchorfile>
      <anchor>a7b50c38893bdc370397ea10574cdeb69</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TextChildAnchor.html</anchorfile>
      <anchor>a95f6044c75b325578870a774adc996a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; TextChildAnchor &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1TextChildAnchor.html</anchorfile>
      <anchor>a9d2f94bd44465a7737723dfe24663517</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TextChildAnchor</name>
      <anchorfile>classGtk_1_1TextChildAnchor.html</anchorfile>
      <anchor>ad77f3b224b969e2eaa2543598b9d4173</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::TextChildAnchor &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TextChildAnchor.html</anchorfile>
      <anchor>a1b4a6371d4ab8aac10108931c48367c6</anchor>
      <arglist>(GtkTextChildAnchor *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TextIter</name>
    <filename>classGtk_1_1TextIter.html</filename>
    <member kind="typedef">
      <type>std::bidirectional_iterator_tag</type>
      <name>iterator_category</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a3a01330bff36d513299c97cd3e877181</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>gunichar</type>
      <name>value_type</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>ae1f6efe5a5875e7198e3de43c64e2db0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>difference_type</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a1d32cb4ee3ea8790352a473954ddbbd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>value_type</type>
      <name>reference</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>aa0c83319eb101749fe43d587a0db45da</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void</type>
      <name>pointer</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a42c43f99b310aee6c53adbd6dd71fe51</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const void *</type>
      <name>BoolExpr</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>ae93cf4af973c65c4b8ba3e108a14c88f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextIter</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a33bb7d6ead20583bbaa849aeca0f1007</anchor>
      <arglist>(const TextIter &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TextIter &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a377ae545427da05f5c185590666c4de6</anchor>
      <arglist>(const TextIter &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextIter</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a77491336e90491af9101e309eed0a77b</anchor>
      <arglist>(TextIter &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TextIter &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a23af7f49b62498b96f4d7d982aa60585</anchor>
      <arglist>(TextIter &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextIter</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a311d1ed5fa8bd0d55d18b743d45bd118</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextIter</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>ac015411ec402d42fe22dfa048a97d7b2</anchor>
      <arglist>(const GtkTextIter *gobject)</arglist>
    </member>
    <member kind="function">
      <type>GtkTextIter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>ac5fe90901048c857a70fdcf6bfc83e5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTextIter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a050314ca046487d60c14a13085d0b0a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TextIter &amp;</type>
      <name>operator++</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a11ef1de054169a9ca48cca88d03ad04e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TextIter</type>
      <name>operator++</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>ae27c3a2f0663071f9319fe140f047b72</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>TextIter &amp;</type>
      <name>operator--</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>ad1fea62e0f049dac87497aadc4e32ac2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TextIter</type>
      <name>operator--</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>ae9050a524dda968db856b3e791fc833d</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>operator*</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a25bc72debbe24fa32719261d591949e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator BoolExpr</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a9957644b2d80c2de23be3b6d68d83728</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a6d5012897961552a524589378af6c17f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TextBuffer &gt;</type>
      <name>get_buffer</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>af2244ebff821e640cd163779711d96a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_offset</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a23db9e028b016cda6fd3af40fb3ef1af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_line</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>ae51ca638396eb61fd1997b6c1538f0c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_line_offset</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a93ea3d3cfcc39f69555545b4bdd38530</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_line_index</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a4a0c83b81f49e182c60e7f7c40fad8f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_visible_line_offset</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>aff8216613df48ec3ec109ef60e7dbdb2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_visible_line_index</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a726f03533f659eba9d58cdcb7e3752ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>gunichar</type>
      <name>get_char</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a63cd8afd6fb53bdedef424b42bbc66b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_slice</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>acbf2a271e33232170e1c41ccb1aa12e1</anchor>
      <arglist>(const TextIter &amp;end) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_text</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a68fceee86d4913529a918872438cff8a</anchor>
      <arglist>(const TextIter &amp;end) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_visible_slice</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a0972fc9b1892e9199c60779634c5bde5</anchor>
      <arglist>(const TextIter &amp;end) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_visible_text</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a15ec6157320b54c7b16952e2005e106b</anchor>
      <arglist>(const TextIter &amp;end) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>get_pixbuf</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>ac4813d198441c620d2afbec63be45ccc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; TextMark &gt; &gt;</type>
      <name>get_marks</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>afb004c60168b48f330f1b9aed32014d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; const TextMark &gt; &gt;</type>
      <name>get_marks</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a45a3d7d490cd56eb53c40b67ff9f0551</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TextChildAnchor &gt;</type>
      <name>get_child_anchor</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>ab8ee402bb518aeed4aeef15f29710cb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TextChildAnchor &gt;</type>
      <name>get_child_anchor</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a682ce9b6067548ab103cd3f64867b986</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; TextTag &gt; &gt;</type>
      <name>get_toggled_tags</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a4ff28815f49d892b4355a43e43acf2b7</anchor>
      <arglist>(bool toggled_on=true)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; const TextTag &gt; &gt;</type>
      <name>get_toggled_tags</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>ad5aa214575c775ee0e1ccfea9b3ecb3a</anchor>
      <arglist>(bool toggled_on=true) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>starts_tag</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>ae262052095657dded160a85ef36f96cd</anchor>
      <arglist>(const Glib::RefPtr&lt; const TextTag &gt; &amp;tag) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>starts_tag</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a0ba079ea4eb63eaa10fad8bfd8e250a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>begins_tag</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>afa90f81adb24aa2a32696aad22f78c46</anchor>
      <arglist>(const Glib::RefPtr&lt; const TextTag &gt; &amp;tag) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>begins_tag</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a7b25da844d333a260e981c102a7939c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ends_tag</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a69904722c3b9e761eae2aba31d5a88d5</anchor>
      <arglist>(const Glib::RefPtr&lt; const TextTag &gt; &amp;tag) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ends_tag</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a9cbd50e0caf2f3c4d56af8d3f619b3a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>toggles_tag</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a1b8a333956be379051b987521f383c1b</anchor>
      <arglist>(const Glib::RefPtr&lt; const TextTag &gt; &amp;tag) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>toggles_tag</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>ae9932c4003339e1f294ebd33dec309ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_tag</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a3f3c8fbd79f6f8bd50e3831ee4661a96</anchor>
      <arglist>(const Glib::RefPtr&lt; const TextTag &gt; &amp;tag) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_tag</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>ab6bc228450c06a466e28717da8e8d1b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; TextTag &gt; &gt;</type>
      <name>get_tags</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a23e113ec3fdcd148796d185b8828515c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; const TextTag &gt; &gt;</type>
      <name>get_tags</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a199dbc8d50515d0c8b5229c7833b228b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>editable</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a3d633d1507cd563706b06e7411486e07</anchor>
      <arglist>(bool default_setting=true) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>can_insert</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a88367b98344313923362b9234ed14f32</anchor>
      <arglist>(bool default_editability=true) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>starts_word</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a727ff792013d3b9d1b2c28ed4b2af514</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ends_word</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a89cf1e2a86328328fdbd63efc1f477be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>inside_word</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a63e3578d35cf55bf9ca33bfcac6cf716</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>starts_sentence</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a5e3ea3c5bcb8aa11ecaeea2be490323b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ends_sentence</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a3cfe850637d87bab19eeedce768461f9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>inside_sentence</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a29ff52b7b859a529ce8036615a7ea11b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>starts_line</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a3af99cb623ef41f2c1ec23e87a27b31a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ends_line</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>aaa5015190ea3032cc5afd1b580e58643</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_cursor_position</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a6f1cce58629dbc6058576dff992cded0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_chars_in_line</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>afecdd3d4363598c3cc5058965d0dac2b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_bytes_in_line</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a66ae8164fd98bc8552956138800fb547</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_attributes</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>ab83601605d0226595e4f36477bc666ce</anchor>
      <arglist>(TextAttributes &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>Pango::Language</type>
      <name>get_language</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>af47c3ce2b5a03bae097c878c07b5daec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_end</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a87078ad316a037bdd04a40d85145be3e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_start</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a218044fcce516c2982b2e54225619b93</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_char</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a46acea844c69273d92c63d910eca21c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_char</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>aeff64dab2ff97e06452f4ca7c030b758</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_chars</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>aadbab55d587698d0f51776faa0cc2a43</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_chars</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a4020a5193148a459dcf24bb2bc829870</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_line</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>aca8832f0168bbcf8651cff1eb632f13f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_line</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a695ab83b6fbffa39496959a4f9a5eece</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_lines</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>adb054a9ee7862010ad5564571bda2552</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_lines</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a8a9e763fe2fd18f11a4156820f39bb9b</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_word_end</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a05bba655ab512cf1569590d9206d797b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_word_start</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a8f8136c917007d6a4a7c7969221410d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_word_ends</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>aa7d74cb53546701ec0b42266ac40e2a1</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_word_starts</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a14f5b1eeec69bdd6443b75a659407dd8</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_visible_line</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a506be5cb9d7dd29522b71cddd520bda3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_visible_line</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a2d52ce38268847ed46cefca328b478cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_visible_line</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a55a295c7dead80d24470f33a67a6dd74</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_visible_lines</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a435bac2e52fac10cbd4c5175fcc6893c</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_visible_word_end</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>ac79bd3e6c8cd7ccdc45b8ed8064986e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_visible_word_start</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a9e1afad7efe043ebf9f8c8a0aa6b8034</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_visible_word_ends</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>ad9a7521c3392d07d24790702433cd1ff</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_visible_word_starts</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a432ef8da68c876335cb020e24b5880d4</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_sentence_end</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a2d1c3dc0fa3c7545e6a09aa082e4032e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_sentence_start</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a7e0855474df38a9084db2cec9171140a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_sentence_ends</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a6aef31e21147f939af5f34ef930f16bf</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_sentence_starts</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a86618c5b23bebc739057651aded7751a</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_cursor_position</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>ac43e1833c36390271f139096f2246684</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_cursor_position</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>ac8a84e76bdbf9c60b214c964a47907d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_cursor_positions</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a8b20683d7513dfb331bb0a1aeffa63c5</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_cursor_positions</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a06cd242a69337fdbd712dfa784f2d494</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_visible_cursor_position</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a647f1e0b30b3ad9470d67f8d42108d6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_visible_cursor_position</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a3ff24ef7f2c58692eb320365cd0d8001</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_visible_cursor_positions</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a770ab9cd1f2dd86d586567cb19f8d9a4</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_visible_cursor_positions</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a455e4560fbd1fa19a6f8caea4348255f</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_offset</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a00ce173ce4d3622cc36e48d5bff2374f</anchor>
      <arglist>(int char_offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_line</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>abfba7a50f3ec781d151cc5643e1b4083</anchor>
      <arglist>(int line_number)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_line_offset</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a62c90b4327191537170c796a23d06b25</anchor>
      <arglist>(int char_on_line)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_line_index</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>af63b8c2520413efdde54dd8ad5670579</anchor>
      <arglist>(int byte_on_line)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forward_to_end</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a70abfc30933f0e8dec3f014128443dc4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_to_line_end</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a31f8195cab1810e35b88122d2ebd7b90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visible_line_offset</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a7ccd69e5353e073ce841ff0e02ac6a7e</anchor>
      <arglist>(int char_on_line)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visible_line_index</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a40b3039e099a9c3d752b8a3809d1ae4d</anchor>
      <arglist>(int byte_on_line)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_to_tag_toggle</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a89b4fc66df6e0b9b8046c2f70b261629</anchor>
      <arglist>(const Glib::RefPtr&lt; TextTag &gt; &amp;tag)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_to_tag_toggle</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>ad17e2abaf014a0796ad7c668ca378d58</anchor>
      <arglist>(const Glib::RefPtr&lt; TextTag &gt; &amp;tag)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_find_char</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a12d514e9a2cb99e547426dce3653949c</anchor>
      <arglist>(const Predicate &amp;predicate, const TextIter &amp;limit)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_find_char</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a1e72a44551eb03237a0c9919cebdf371</anchor>
      <arglist>(const Predicate &amp;predicate)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_find_char</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>ad15dfc2cae642743f48d54283664ed44</anchor>
      <arglist>(const Predicate &amp;predicate, const TextIter &amp;limit)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_find_char</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a9f09749e194df4bf3c1841cc69efa7c6</anchor>
      <arglist>(const Predicate &amp;predicate)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_search</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>ae74bf1b660263296292752cb2795bea3</anchor>
      <arglist>(const Glib::ustring &amp;str, TextSearchFlags flags, TextIter &amp;match_start, TextIter &amp;match_end, const TextIter &amp;limit) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_search</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>adfa8920e9c706937136f4d2cdb75b83c</anchor>
      <arglist>(const Glib::ustring &amp;str, TextSearchFlags flags, TextIter &amp;match_start, TextIter &amp;match_end) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_search</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a0750fba2d45f6ed4a314340b2b522019</anchor>
      <arglist>(const Glib::ustring &amp;str, TextSearchFlags flags, TextIter &amp;match_start, TextIter &amp;match_end, const TextIter &amp;limit) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_search</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>aea0239e99764c15e789cfe3b0d871676</anchor>
      <arglist>(const Glib::ustring &amp;str, TextSearchFlags flags, TextIter &amp;match_start, TextIter &amp;match_end) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compare</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a179ef78b967ddcd1b2b5bc04a883785c</anchor>
      <arglist>(const TextIter &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>in_range</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>ab537dff76037393f0abec24859561f3c</anchor>
      <arglist>(const TextIter &amp;start, const TextIter &amp;end) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>order</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a4d3c25edf1efe92f5313ac740781238b</anchor>
      <arglist>(TextIter &amp;second)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>acf97ba44dd8bf53bfc4ee14d1c3c050c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GtkTextIter</type>
      <name>gobject_</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a533d80230ee6366bc575bed7369f4afb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a8703a159b88dc5e8dd8d4ea361667281</anchor>
      <arglist>(const TextIter &amp;lhs, const TextIter &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a0e373b53b974fbab36b1d45ebd206c76</anchor>
      <arglist>(const TextIter &amp;lhs, const TextIter &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a1cdd13320f231bd906520131cdc138d2</anchor>
      <arglist>(const TextIter &amp;lhs, const TextIter &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>ad50c7c8990fac0c51ac460034ff5f3c4</anchor>
      <arglist>(const TextIter &amp;lhs, const TextIter &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a76f0b1315ba7b06bbdfbdd2e029bda73</anchor>
      <arglist>(const TextIter &amp;lhs, const TextIter &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a387ff6ec0c707b3a30ea7398cdc601d2</anchor>
      <arglist>(const TextIter &amp;lhs, const TextIter &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::TextIter &amp;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a5497a6a3458131b32c6aaa0fcab3f511</anchor>
      <arglist>(GtkTextIter *object)</arglist>
    </member>
    <member kind="function">
      <type>const Gtk::TextIter &amp;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TextIter.html</anchorfile>
      <anchor>a5d77ba6925f3144ad49e36412791b7aa</anchor>
      <arglist>(const GtkTextIter *object)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TextMark</name>
    <filename>classGtk_1_1TextMark.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>TextMark</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>a67721c65e263424a8809f70a9bde5a24</anchor>
      <arglist>(TextMark &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TextMark &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>a3bbec7549c67032e3863056626c29a8b</anchor>
      <arglist>(TextMark &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TextMark</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>a5844b10acc2ea44c346d595c5d59055a</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTextMark *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>a2375cdcf56f135b5caeb1d335c078801</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTextMark *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>aab9399f7ecc8539ccf11191cc64a885b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkTextMark *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>ad69a5cb3437143cee49ce6dbb6f9d92b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visible</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>a81500d6abd3ae31baf1494476b304ed9</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_visible</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>a82ac4758d758dce5e9207f97024c7b05</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>aa00c93df844bcb94515c13e12d01ea14</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_deleted</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>aec24e44776091f4b8ae323fabdb536e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TextBuffer &gt;</type>
      <name>get_buffer</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>a2d355fbee36a734b25086ab7ff724f95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TextBuffer &gt;</type>
      <name>get_buffer</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>a829fa229e2b4fef7de10ada96ee7cf77</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_left_gravity</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>a67a222e297c03bd220024952e5ee9ca5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TextIter</type>
      <name>get_iter</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>a1ed8d8769cf46a34769fb4ec76c50371</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_name</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>ac36e3d46b2514229c410c41317dc8add</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_left_gravity</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>a60d88fa67f11b6759c2a82cb20e3e655</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>a08f949b21eb4d479e10feb2bb8575175</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; TextMark &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>a535324f93ccc7f594ec4fcb29baeb3e3</anchor>
      <arglist>(bool left_gravity=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; TextMark &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>aca937ffe910b0e20e1421e4a0497dd41</anchor>
      <arglist>(const Glib::ustring &amp;name, bool left_gravity=true)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TextMark</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>ad78023d251297a807414d9f6e675d10b</anchor>
      <arglist>(bool left_gravity=true)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TextMark</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>a938c7595b3d39c1a58ac679a9fcebc24</anchor>
      <arglist>(const Glib::ustring &amp;name, bool left_gravity=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::TextMark &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TextMark.html</anchorfile>
      <anchor>a527b171c0f845bd9410c2b7e93432519</anchor>
      <arglist>(GtkTextMark *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TextTag</name>
    <filename>classGtk_1_1TextTag.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>TextTag</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a78590f8ab954923ee45649fe11e21a82</anchor>
      <arglist>(TextTag &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TextTag &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a133234d733282817ea4568c2124d33fd</anchor>
      <arglist>(TextTag &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TextTag</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>af79fca80035597ce4439c99e79478bc8</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTextTag *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a8d297c730a7743012a0fc8106ebbd403</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTextTag *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ab66635e0f8ac367ce4ae20624b2f26ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkTextTag *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>aa48ae7626fc01440caca2ddc550af316</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_priority</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ade511cd5eba59ccf615a13ce4a322304</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_priority</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a61116353469b08325879880502781525</anchor>
      <arglist>(int priority)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>event</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a6b68847c420681eda8bd06741f77acb2</anchor>
      <arglist>(const Glib::RefPtr&lt; Glib::Object &gt; &amp;event_object, GdkEvent *gdk_event, const TextIter &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tag_changed</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>af280096c2b690aa3823bf6bf1e48e5f6</anchor>
      <arglist>(bool size_changed)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, const Glib::RefPtr&lt; Glib::Object &gt; &amp;, GdkEvent *, const TextIter &amp; &gt;</type>
      <name>signal_event</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a675af8642599a89af6378b1c3abf7fa0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_name</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a911f52ef364e49960be820b34ebebdbb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_WriteOnly&lt; Glib::ustring &gt;</type>
      <name>property_background</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a8989dc49399a8367babbd56fd53945b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_WriteOnly&lt; Glib::ustring &gt;</type>
      <name>property_foreground</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>aa54940f99d788e5eddbd6294dd06880e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::Color &gt;</type>
      <name>property_background_gdk</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a982d944961ad488d27c2231d5b9cf52c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::Color &gt;</type>
      <name>property_background_gdk</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ae023e207afc3e04a613b03e8aea09e9b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::RGBA &gt;</type>
      <name>property_background_rgba</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a880f1466e0562988c47203be8beb076a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::RGBA &gt;</type>
      <name>property_background_rgba</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a0987b14372fd7f249345aeea5f41fdab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::Color &gt;</type>
      <name>property_foreground_gdk</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a45324ec135e0167c710111311203a985</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::Color &gt;</type>
      <name>property_foreground_gdk</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>abc5ce5a5908c54c76facc6ae2142f762</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::RGBA &gt;</type>
      <name>property_foreground_rgba</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a9f5fc15ea22a2cf30129cf9248378b7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::RGBA &gt;</type>
      <name>property_foreground_rgba</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a4ae3316ff8ec735163a14a73e837480c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_font</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ab40636496865f4f7db4a14cee7392fcb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_font</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a9dc974e19c59ef6205b4cd0938ce62d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::FontDescription &gt;</type>
      <name>property_font_desc</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a5d21eb9b247d4329c87aa4d474d06e3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::FontDescription &gt;</type>
      <name>property_font_desc</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ac5c0bacdc78035ec52ce8162f6e4c0d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_family</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ae642e59ac123e5dada08f58b9f0aa58b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_family</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>aa7302451d76e9647f652bd115a21cfcf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::Style &gt;</type>
      <name>property_style</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a35f7636b28462a4515e9f91078d2460b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::Style &gt;</type>
      <name>property_style</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a7c951e3b7fe93e532fedc8078dc50128</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::Variant &gt;</type>
      <name>property_variant</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a3e9c6aea6cc9d10d5f71d22da0effa72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::Variant &gt;</type>
      <name>property_variant</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a40295445d4091c09a2f126f1251f9cb3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_weight</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a5eab7e55452cf0166a5336fb87c053a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_weight</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a9adc4230f39d584c3cab0f61f6da06e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::Stretch &gt;</type>
      <name>property_stretch</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ab3d897035a9532e7c01a8008e5e7e1c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::Stretch &gt;</type>
      <name>property_stretch</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>abe27fd92a0a8649ec9fa396a63ab1fd0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_size</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>aa22d9692df6db4450704ede0a8e0bed1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_size</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a7f5d23a187c2062be1ce28e637186458</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_size_points</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>af160417c23f0103433a0960eee2ea8a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_size_points</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a37f5959528950f837f355b8c19ba0cee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_scale</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a398452b705cfd2666e9c3d5400615a07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_scale</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>aee55c48da12a4dcc1ef2899aeb37eccb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_pixels_above_lines</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a81de1a8e2dc215ebf70e45ee727e7404</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_pixels_above_lines</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ac1ab3af98718e32e8bc853e951b79c50</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_pixels_below_lines</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a2c2016cc6a384146fa137c3b78fb0bb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_pixels_below_lines</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a8aa9f1a46640fdcb53543b8d65132575</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_pixels_inside_wrap</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>aa1f3568efe86de56578f8a70d81ce543</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_pixels_inside_wrap</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ae045a0264f6e318e98099ecbe8172d15</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_editable</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a9d830c579ae3e5234803752630c297df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_editable</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ab9815eab957b49bbf4a674f58d824f8f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; WrapMode &gt;</type>
      <name>property_wrap_mode</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a24bab75c688b836b75fc16de00a2fc78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; WrapMode &gt;</type>
      <name>property_wrap_mode</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>aafaf43f250f9f6b6c1d411db475c8eb3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Justification &gt;</type>
      <name>property_justification</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>af9de93c9290e48f9387e8d96a5f2e0f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Justification &gt;</type>
      <name>property_justification</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a766e2caa041da9a1082301120cc84d3a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; TextDirection &gt;</type>
      <name>property_direction</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ae3e992daf64af6a72de44957b1bf6fa6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; TextDirection &gt;</type>
      <name>property_direction</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a17d88116c25f2c53e6fce5e0f969db09</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_left_margin</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a3942adecabf5edf4832d3bc90ee8a2e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_left_margin</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>aec496dc4a35cfe92714ffd7fb8dab890</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_indent</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>accc19bfa983aee563949231a4cff0a15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_indent</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a74aa72086369909855d9ab89f64f057a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_strikethrough</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>afb5758d236822a1bf329c5dd7b1d5de4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_strikethrough</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a6ab871e3ade1ae85d9820057b79070c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::RGBA &gt;</type>
      <name>property_strikethrough_rgba</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>af9a04fe6a6c9bbb5b90f89450536f4f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::RGBA &gt;</type>
      <name>property_strikethrough_rgba</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a3aa0dcf25e277610f759678c247f8df8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_right_margin</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a7b03117800890953d6cb1a9811a255df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_right_margin</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a637dfeb202d389253a3df37e99d2e17d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::Underline &gt;</type>
      <name>property_underline</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a5bcd656ee974546bf7b1b11e740c8ff2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::Underline &gt;</type>
      <name>property_underline</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a045f5cce57e961c3949bb7e1fa2d28bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::RGBA &gt;</type>
      <name>property_underline_rgba</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a1e9ac4a94e20df9771df1d29a085c2fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::RGBA &gt;</type>
      <name>property_underline_rgba</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a2084c37dc2180fa3b7c12e4c0bf4483a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_rise</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a08f409d98acbb66a65c040954ca6d117</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_rise</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ad7f0c471e9574c8d9c5b61bacbc7da19</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_background_full_height</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ac4b1f1e011c7751f442211bec156c736</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_background_full_height</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>aede5c4e1d5ddda370de24e24660dd0d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_language</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a40ab3643b98d870fe377a0a82d2aa696</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_language</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>aa339a1e94cd1b113856bec07b1451cae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::TabArray &gt;</type>
      <name>property_tabs</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a2e5d1b52af39241a3a45b1016459ade6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::TabArray &gt;</type>
      <name>property_tabs</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ab7ea25cb58fe6247996afb5fab989b4c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_invisible</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a94641bb8c7ea7055d24d9794148b1a63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_invisible</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>af8b3b82d8cb49e6bdcc4ecbc64eccdd3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_WriteOnly&lt; Glib::ustring &gt;</type>
      <name>property_paragraph_background</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>abf19e4afd0e0a0f5789c7b2811af8523</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::Color &gt;</type>
      <name>property_paragraph_background_gdk</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a981c0b7d24573758b457d69a476776fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::Color &gt;</type>
      <name>property_paragraph_background_gdk</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ae8b536772ae2d6e310c9baecb233eda3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::RGBA &gt;</type>
      <name>property_paragraph_background_rgba</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>afcddc2428017cc3db711a20d01f56dcc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::RGBA &gt;</type>
      <name>property_paragraph_background_rgba</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ae7cee97b6dcbd92fad85e912c4d1d486</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_font_features</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a1e890faa17e85eacec690b954c3728a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_font_features</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a12a5d85e5c24b0be1bc809452b97613d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_accumulative_margin</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a2a01303d87af2a20f0b35ee5e1ee8c77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_accumulative_margin</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a2485649a7fdbb1a0c18ac2691f4249df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_background_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a83bbe65f2a824408c811c960935f5bf5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_background_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a8b5f72cf74af9114569521106c41a0e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_foreground_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ae79a6d076087da355541ffd228dfa37d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_foreground_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a7a3859a3db2f6dbcef54af8ae2c97d76</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_family_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a100e94fd24b729c25debcf241894c910</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_family_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>af711b17738155e66b6882c38dcdda968</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_style_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a7aace0b891d83f9144c33d120b3bd33c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_style_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>aafbcb6a0f9aaf1484fde2adde4aa8dd2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_variant_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a7ad159434f2604310e576e405fc4b359</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_variant_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>adf9988eb92a8da82827664cc749632b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_weight_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>af010d4e816d8b584a3594bd1582e9fa3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_weight_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a0747eca3c52b1e82f35e771bf3c6f91a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_stretch_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a59a4b35fc6c3b3189df9257874739f0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_stretch_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>af75481e81fcc270dd29fed24a1443ffe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_size_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a5e9507b9700c85de44769ac5d40e0218</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_size_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a783538db1e9478742c23182a29330039</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_scale_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a9a306c6981cf079976323d405d371bf0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_scale_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a7e4b7fc11891262f86a8dc0ae249e38a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_pixels_above_lines_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a364d783cff10feaa7787575d3a361048</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_pixels_above_lines_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ac38c15eeb353ef364323e49b310dc470</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_pixels_below_lines_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>aa30701b0a1b9978a7b04246069670141</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_pixels_below_lines_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a09cc865b1067eaa0f73ecd1e082b7a87</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_pixels_inside_wrap_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a53e6f2d0636bdf145debfcdd0f9dcd51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_pixels_inside_wrap_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a4df482648541a2afc2bc8ee2a1a58ebe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_editable_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ac49d658b1727dc4b971d70bcf0c98d35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_editable_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ad94f0706fd517339d11f23fdb3a5cc9d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_wrap_mode_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a55b615bd2767ec9fcf579ba2b45d5889</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_wrap_mode_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a496c60095373740d25171287cd03b43e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_justification_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a6483ae50a2ae09cd0cae6a849de73c36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_justification_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a32390998abff46beb1ae06b95237a41a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_left_margin_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ad8e4a178ec935d81e6192a2c07d47f5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_left_margin_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a23601e45d3a7b2525f019e01f668044c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_indent_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a71dbaf676fe82d09a6687a8290674b3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_indent_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a1dcf4726d536d9381f3f714da0b59255</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_strikethrough_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a0cd0ed3a8e3567b40844150c3e3e4bad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_strikethrough_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a534f61110969824d5858e3fb2f80f13b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_strikethrough_rgba_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a2673c51717e9619ce6dfa62682509138</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_strikethrough_rgba_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a8920e24d9f8a1a11487962e180454616</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_right_margin_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ac0dfe7bc398c4dbcefbac68790cdd2b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_right_margin_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a98e15b9e3d92bbba6912d636d6dbdae5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_underline_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ab23d85f9aa9d1872dec887a16bc0b105</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_underline_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ad397a226cec74b6477d53b79962858f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_underline_rgba_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a177702b6600a009e916fe8bb9e0c221c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_underline_rgba_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a83f0603c3797c50ea171bb8fa0d4c72d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_rise_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a5f1d9a0b6e6bdc5aa2e408c4ec265ecd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_rise_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a2da8bd9a4f68e0af21684e25873ba614</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_background_full_height_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a72d763a9886cad5add76232c66f6d799</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_background_full_height_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a419c387d74c4abc321eeeb4a2c26cdce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_language_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>aa0d32e1de52691b00078f2d17a6409f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_language_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>aec33154a926f1cea091c8b163583dd79</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_tabs_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a6d60d666c3bc889a3f54f61e9e6b29c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_tabs_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ac5235eaaa2071b76b6b4df6ddaabfaba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_invisible_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a4dd0126c13555af6b41f13f33ad29a3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_invisible_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a761015547840bad8886a402ca032c0fe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_paragraph_background_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a100b05dfa1d03214a32f8dc4d640b932</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_paragraph_background_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a6486d45da7322e08296d55d8443cde8b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_fallback</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a7ad900ac524503c44d498edbc75cbfc6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_fallback</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a11ac345d51fc8b1b1997966bb8295353</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_fallback_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>af4302773e8992e7cfe9c3b5084438f22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_fallback_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>affa9c20c56b5eb85f3cc05af378585f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_letter_spacing</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a66a6759b23e7399ce2d503088e1d6f3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_letter_spacing</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ac991a45c7b542a33b22741b493e7b6e0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_letter_spacing_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>af6fb2e441e09212b2845bbb46bd658a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_letter_spacing_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a009765823c2a90e2220a6736c19ccd3a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_font_features_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>aa446a785cb123f8db9c1f1f5579a9024</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_font_features_set</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a35b8616be6306db902fa636fd478a872</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a327be329b7b886216e579bec00b9c3af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; TextTag &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a77e074719b2411cc19d3d8751b7be2ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; TextTag &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a1f2f9b2f531d2cbae5f3b1a958f05ef2</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TextTag</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a0118aed9c66074ccd878d7dfde26a72f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TextTag</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ab831f58c78ce1b1e9670ce8753a64887</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_event</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>a763912a832521236482d831cd7d8fc2f</anchor>
      <arglist>(const Glib::RefPtr&lt; Glib::Object &gt; &amp;event_object, GdkEvent *gdk_event, const TextIter &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::TextTag &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TextTag.html</anchorfile>
      <anchor>ad02677388669af2ca46d9fda48d9e569</anchor>
      <arglist>(GtkTextTag *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TextTagTable</name>
    <filename>classGtk_1_1TextTagTable.html</filename>
    <base>Glib::Object</base>
    <member kind="typedef">
      <type>sigc::slot&lt; void, const Glib::RefPtr&lt; TextTag &gt; &amp; &gt;</type>
      <name>SlotForEach</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>a545d2b6d6a9c8a745dc945f89ca63733</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextTagTable</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>acff08db504fb43f80d342ca6ee6069bd</anchor>
      <arglist>(TextTagTable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TextTagTable &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>a98e64661984cf34416935715a2f3de61</anchor>
      <arglist>(TextTagTable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TextTagTable</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>a4b5c6a38ec63bc1f89e22c024d082458</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTextTagTable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>a0eadd28f140ebeda60804c6aa27725f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTextTagTable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>aa47fb0ad38f9bec5d7df75e3fb06c6ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkTextTagTable *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>a375f95847f5e365447de8b33e8cfabbe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>a1708cccb22717baea5359055770e5d38</anchor>
      <arglist>(const Glib::RefPtr&lt; TextTag &gt; &amp;tag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>a79d9830a77cc0e07172ce192667e8fc3</anchor>
      <arglist>(const Glib::RefPtr&lt; TextTag &gt; &amp;tag)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TextTag &gt;</type>
      <name>lookup</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>a58f83d7b98cf4f496a88ef63e8969d6c</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TextTag &gt;</type>
      <name>lookup</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>a21ca1f9474d6494ad3908a2bf526a2da</anchor>
      <arglist>(const Glib::ustring &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>foreach</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>abeacc4e997e9f6887529d386edaca477</anchor>
      <arglist>(const SlotForEach &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_size</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>a364ea5fbbfdb07c8876c6237ee7cf057</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; TextTag &gt; &amp;, bool &gt;</type>
      <name>signal_tag_changed</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>a54b66d838e93c0260b17868241b214a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; TextTag &gt; &amp; &gt;</type>
      <name>signal_tag_added</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>a06e33a9d10474cdee7aba6e98085cb2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; TextTag &gt; &amp; &gt;</type>
      <name>signal_tag_removed</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>ac2ad339b7dfbacf176a192f54977a157</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>a9174e17b8a29f7202358e48aef5d088c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; TextTagTable &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>a6ca88ad765e61b9a73ad34211bb0e737</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TextTagTable</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>a6b5112b9114440b7ed575b7a70f70f13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_tag_changed</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>aaf858d51aae398481755bfbbd7b78c5b</anchor>
      <arglist>(const Glib::RefPtr&lt; TextTag &gt; &amp;tag, bool size_changed)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_tag_added</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>ab4f32e1a74025d2577edcab358132fd5</anchor>
      <arglist>(const Glib::RefPtr&lt; TextTag &gt; &amp;tag)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_tag_removed</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>abfd27da67f04c1968385ef54de2784fb</anchor>
      <arglist>(const Glib::RefPtr&lt; TextTag &gt; &amp;tag)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::TextTagTable &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TextTagTable.html</anchorfile>
      <anchor>afecff5703b124b252f5d63301eba5a8c</anchor>
      <arglist>(GtkTextTagTable *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TextView</name>
    <filename>classGtk_1_1TextView.html</filename>
    <base>Gtk::Container</base>
    <base>Gtk::Scrollable</base>
    <member kind="function">
      <type></type>
      <name>TextView</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>af516817338c664ce570b8e8e65f561e3</anchor>
      <arglist>(TextView &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TextView &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a328507b2d019f1184185e4a077631798</anchor>
      <arglist>(TextView &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextView</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a6637d2aec4565b48105143ace7bda92a</anchor>
      <arglist>(const TextView &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>TextView &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a1ab94d3878732a22d135277d390b50a9</anchor>
      <arglist>(const TextView &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TextView</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a8bc54aabf29c289bf157624adf59a73d</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTextView *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>af4b8c1eaffa4bce083b16e3a798d846a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTextView *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>af8acb1da21b2b6c60069323dd87a2290</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextView</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a0add2eb74ece8495dc7292a73db7682d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TextView</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>af523eda3619878bf5bcee6e03d381346</anchor>
      <arglist>(const Glib::RefPtr&lt; TextBuffer &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_buffer</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>af37a02176da5a9bb33e6490e74b2c90b</anchor>
      <arglist>(const Glib::RefPtr&lt; TextBuffer &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TextBuffer &gt;</type>
      <name>get_buffer</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a309c03880870321b6f19c89ffe4319be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TextBuffer &gt;</type>
      <name>get_buffer</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a45e2e705a62461bd607d1ef93f2b719d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>scroll_to</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a9b23b8dbb4362c639abaa05ba9284d3b</anchor>
      <arglist>(TextBuffer::iterator &amp;iter, double within_margin=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>scroll_to</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a8412941c4da9a71a381052d6049164e4</anchor>
      <arglist>(TextBuffer::iterator &amp;iter, double within_margin, double xalign, double yalign)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scroll_to</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a5baf5175cb86631e9adbf481f0f18141</anchor>
      <arglist>(const Glib::RefPtr&lt; TextBuffer::Mark &gt; &amp;mark, double within_margin=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scroll_to</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a205933049cd72f91cb3d5bb2ca4b3228</anchor>
      <arglist>(const Glib::RefPtr&lt; TextBuffer::Mark &gt; &amp;mark, double within_margin, double xalign, double yalign)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>move_mark_onscreen</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a22bf1325be6b58c70213eb77ab2dff03</anchor>
      <arglist>(const Glib::RefPtr&lt; TextBuffer::Mark &gt; &amp;mark)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>place_cursor_onscreen</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>af6b67fe8d287f8db998edd785a2e1a7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_visible_rect</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>aa60247dca5a8e34bdad15d07d4329d57</anchor>
      <arglist>(Gdk::Rectangle &amp;visible_rect) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_cursor_visible</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ade59cd716b271f26b251b101f000be5a</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_cursor_visible</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a7807d7603ce02175a0cd3047b481c315</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset_cursor_blink</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ad2ed708d37781d9faa3f6b4ee66c308c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_cursor_locations</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ac5b6b14495b2fe6e840aa99303ad013f</anchor>
      <arglist>(const TextBuffer::iterator &amp;iter, Gdk::Rectangle &amp;strong, Gdk::Rectangle &amp;weak) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_iter_location</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a6548fb0de203277773b22f6450fbaf87</anchor>
      <arglist>(const TextBuffer::iterator &amp;iter, Gdk::Rectangle &amp;location) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_iter_at_location</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ac63d71c42e4ee7f8cd4d994351b814dd</anchor>
      <arglist>(TextBuffer::iterator &amp;iter, int x, int y) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_iter_at_position</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>aef942641871958bf002b8bb4bbf20acb</anchor>
      <arglist>(TextBuffer::iterator &amp;iter, int &amp;trailing, int x, int y) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_line_yrange</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a9cbbb7982b97d800e51798ab74efda23</anchor>
      <arglist>(const TextBuffer::iterator &amp;iter, int &amp;y, int &amp;height) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_line_at_y</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a01182e27b10192e4d366c88f8033b023</anchor>
      <arglist>(TextBuffer::iterator &amp;target_iter, int y, int &amp;line_top) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buffer_to_window_coords</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a4d9f69e56eaf4377a8a4a09d76a65de9</anchor>
      <arglist>(TextWindowType win, int buffer_x, int buffer_y, int &amp;window_x, int &amp;window_y) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>window_to_buffer_coords</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a7ba8b8bfa3175e30fecf3f9b59787273</anchor>
      <arglist>(TextWindowType win, int window_x, int window_y, int &amp;buffer_x, int &amp;buffer_y) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Window &gt;</type>
      <name>get_window</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a182dfcb90579143b2125cd25f125df6c</anchor>
      <arglist>(TextWindowType win)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Window &gt;</type>
      <name>get_window</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ad20f33b91605e803876d74b9bd7536a4</anchor>
      <arglist>(TextWindowType win) const </arglist>
    </member>
    <member kind="function">
      <type>TextWindowType</type>
      <name>get_window_type</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ab252b4317f9c85b8b2d917d9232becd6</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Window &gt; &amp;window)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_border_window_size</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a72879b1f3f3db1a5883296b1cdae3e94</anchor>
      <arglist>(TextWindowType type, int size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_border_window_size</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a19326ac939f3ddbbb9fac99634f5c6b8</anchor>
      <arglist>(TextWindowType type) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_display_line</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a44de109c094aec1320d6a3c76cd52a00</anchor>
      <arglist>(TextBuffer::iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_display_line</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a95fcb12f565550e34f43a29ffd5a23ab</anchor>
      <arglist>(TextBuffer::iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forward_display_line_end</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>acf9dce8edb9822feab10b9d41d2f9079</anchor>
      <arglist>(TextBuffer::iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backward_display_line_start</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a7aeed796b4544624024d099a4ef80cca</anchor>
      <arglist>(TextBuffer::iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>starts_display_line</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>afe203a8792d554e3a89f8a32c7ca3f35</anchor>
      <arglist>(const TextBuffer::iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>move_visually</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a9323c9a9be5ffb7384adb71813304dca</anchor>
      <arglist>(TextBuffer::iterator &amp;iter, int count)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>im_context_filter_keypress</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a296a3e8e805052ab2a6504480d3c6a32</anchor>
      <arglist>(GdkEventKey *gdk_event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset_im_context</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a2b7920c09f10e7d254aec01c952b157f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_child_at_anchor</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ab6eb1e46c4c6b158c528cb7960f9f247</anchor>
      <arglist>(Widget &amp;child, const Glib::RefPtr&lt; TextBuffer::ChildAnchor &gt; &amp;anchor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_child_in_window</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a339a489c34b1c5ecfea56ac57207789b</anchor>
      <arglist>(Widget &amp;child, TextWindowType which_window, int xpos, int ypos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_child</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a8393e9f9ee8b1744032d958dbca70c4f</anchor>
      <arglist>(Widget &amp;child, int xpos, int ypos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_wrap_mode</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a662a116b04038b2a0f084626a3d9e63a</anchor>
      <arglist>(WrapMode wrap_mode)</arglist>
    </member>
    <member kind="function">
      <type>WrapMode</type>
      <name>get_wrap_mode</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ab5207c632a1dcfd05f18ca223af56477</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_editable</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>acb7835770c4999ae2a9616332157b67e</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_editable</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a4801b2e560f0dca18e4dff751afcf241</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_pixels_above_lines</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a205630db6e1de6052d24e886962aa91e</anchor>
      <arglist>(int pixels_above_lines)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_pixels_above_lines</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a979785cf42090f744b24c8c8731620f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_pixels_below_lines</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a416ca2e2f7a052c5f0c26bb1b722b4cd</anchor>
      <arglist>(int pixels_below_lines)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_pixels_below_lines</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>adf101e00e35c6708ede51b949e509e5b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_pixels_inside_wrap</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a0bb1521550891758f46ee55ad677460f</anchor>
      <arglist>(int pixels_inside_wrap)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_pixels_inside_wrap</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a7b4c665327abfcf463b5675052333245</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_justification</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ad95ee09f587b88d11e52e650c1232a46</anchor>
      <arglist>(Justification justification)</arglist>
    </member>
    <member kind="function">
      <type>Justification</type>
      <name>get_justification</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>aa0a8e905ca383d8e8eb057e231889287</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_left_margin</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a8dd21baf36082f0e293a26149a0e3533</anchor>
      <arglist>(int left_margin)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_left_margin</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ab619f5d479a89b3342a0e73e766858f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_right_margin</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a75bc3e41db3d4112391ad621619d392b</anchor>
      <arglist>(int right_margin)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_right_margin</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ad29d460c7ffc39abb93900015b86b67c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_top_margin</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a43ecb687aadeaae0e77f2f770ba15f19</anchor>
      <arglist>(int top_margin)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_top_margin</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a931001dcc34410f8cabcf516ca015942</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_bottom_margin</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ad1df874cea9a350a3812c7d60c18d7c7</anchor>
      <arglist>(int bottom_margin)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_bottom_margin</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a3086e72c5ccea320be39cb9ec8f53823</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_indent</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a7702a6f3f110428c564ae4eee3a30dcd</anchor>
      <arglist>(int indent)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_indent</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a83b4095e36e2e38d9850c93543623cf3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tabs</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>af4cb0271b6a18e1f04f88c975b6f0547</anchor>
      <arglist>(Pango::TabArray &amp;tabs)</arglist>
    </member>
    <member kind="function">
      <type>Pango::TabArray</type>
      <name>get_tabs</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>aaeec00454a112055f3bcfee015c67839</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TextAttributes</type>
      <name>get_default_attributes</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>abf1abe6ca4bf68ec58478b9fdb9a34a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_overwrite</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ad03c80210645fb840edd03b89cd54acb</anchor>
      <arglist>(bool overwrite=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_overwrite</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ae41bf542c670b3ddff81fd391786046c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_accepts_tab</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a9e683ecc969533dbdf5efbc2452de83a</anchor>
      <arglist>(bool accepts_tab=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_accepts_tab</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a0e99542115e68d0c77cc1a6d2a6b1308</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_input_purpose</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a8696fb83ed509a0bf1803b3d5dd60560</anchor>
      <arglist>(InputPurpose purpose)</arglist>
    </member>
    <member kind="function">
      <type>InputPurpose</type>
      <name>get_input_purpose</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ad8bd8f1c54100bdf7361990e56289c7a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_input_hints</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a2b0f912bf32d993ea0553890cfa62c37</anchor>
      <arglist>(InputHints hints)</arglist>
    </member>
    <member kind="function">
      <type>InputHints</type>
      <name>get_input_hints</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a3256c31a54420d83c022def55167e37a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_monospace</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a9abd9cc4c4d8d5c6b36229f4c46c4506</anchor>
      <arglist>(bool monospace=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_monospace</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a10f3bcfde1483c8fa6817207bf24d154</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, Menu * &gt;</type>
      <name>signal_populate_popup</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>af0d9ab824d20bea9118b4ac022b996a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_set_anchor</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ab5e0fb4a8daa8e8dfefb7f8ea840a845</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::ustring &amp; &gt;</type>
      <name>signal_insert_at_cursor</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a7824e97c8bc8822033830daf243b6488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_pixels_above_lines</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>aaffdbc5f3d78ba5bc3b02a029a6d5d26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_pixels_above_lines</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ab3ab817f10c9343d585677c310e497c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_pixels_below_lines</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a78f7b312655bb6443278b23221a3aecb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_pixels_below_lines</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ada93bff94408915b6161760866174007</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_pixels_inside_wrap</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a8a7d5ecef4a9de16d524f125984e1861</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_pixels_inside_wrap</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a0dd3051f247336e39c6e0312c9ba377a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_editable</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>aa102cb3b46a15c232b597e32b7a34937</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_editable</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a24087bc50773ff2e91895821b2b5ff1c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; WrapMode &gt;</type>
      <name>property_wrap_mode</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a6fbda7d3e99fb6b7929bf9ae9ebd98d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; WrapMode &gt;</type>
      <name>property_wrap_mode</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a4af2461b0ea9e4d53a4f7de799f65511</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Justification &gt;</type>
      <name>property_justification</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ab70785b6c3ecc35d6d1e186dcbfde73e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Justification &gt;</type>
      <name>property_justification</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a8a0510d5da0f665bdfe33d7765233020</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_left_margin</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a7d561e4c4bc5e31ffd87ec436d6d8cf0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_left_margin</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ab088923ce3c5327125619d8d1a380bff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_right_margin</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ae521a55d32e9a27b271d1e3df19691e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_right_margin</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ac562db601ee153ad9a1d2a10bdf68130</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_top_margin</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a9c8bbfe9567bd49964d35061b506dcd8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_top_margin</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a6c48885ee2521a756362a08ba5eee846</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_bottom_margin</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a93a720f6b2c52947f5e358aab5196d60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_bottom_margin</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a7da909a25a8eda1bfe65fa34f20bd10c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_indent</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a5f30f5633038d206997b662c4f09e887</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_indent</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a3e86a92998bbbc512724f81dfaad9f28</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::TabArray &gt;</type>
      <name>property_tabs</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a97cb64499e7c78f2edf16eb7c8db6159</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::TabArray &gt;</type>
      <name>property_tabs</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a417376e631500914042907e2991019fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_cursor_visible</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>aee8628792cb57eda712e9acf8ffb2ca7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_cursor_visible</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ac3da0657c63dff094235c61e5d61b25d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; TextBuffer &gt; &gt;</type>
      <name>property_buffer</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ad284fa8d52787aec3af60a8d023ddaf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; TextBuffer &gt; &gt;</type>
      <name>property_buffer</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a0ffdee8fa4be2f803e10be58cce88782</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_overwrite</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a431381047fb0e17752d51c0a80bc6690</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_overwrite</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a124c724b245c3f0f556297002f8db3a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_accepts_tab</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a5ff2381773501c985043e5eb836eeaca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_accepts_tab</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a27c81dbc0ecd65bf5d53d71077476fba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_im_module</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a99369cb482dde262ead21405d9aaeb2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_im_module</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a86bba0cf6c478059ccdd0efe2de2f79f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; InputPurpose &gt;</type>
      <name>property_input_purpose</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ae2e5919a49692d90007bae720193efa1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; InputPurpose &gt;</type>
      <name>property_input_purpose</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>aa72998dbd94cfab9a2d696076d803dc3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; InputHints &gt;</type>
      <name>property_input_hints</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>ae3c16b08c8d567d05b82df268ebdd1e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; InputHints &gt;</type>
      <name>property_input_hints</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>afcfcb473d7867acbf0490ff2770d5ffd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_populate_all</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>aad5bb109c00fb945837d48012874013d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_populate_all</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a5369363634105069b5dbbe2436e605f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_monospace</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a5f12b7435219a14097b6509d0db5361f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_monospace</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a1ec138c640843c7a455fcb27a74fa98d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a9deab7bf2f2df33a9ae0b422036d05a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_populate_popup</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a58d9527fb77e3e5b549475341512c4f0</anchor>
      <arglist>(Menu *menu)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_set_anchor</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>afcb9bf4a7c17b1232748311eaa277b24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_insert_at_cursor</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a18fee8e67e2ae8ce7d74a1edde139efb</anchor>
      <arglist>(const Glib::ustring &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::TextView *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TextView.html</anchorfile>
      <anchor>a75fb83dd76e5c1cfea8e8f110f3a61bb</anchor>
      <arglist>(GtkTextView *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ToggleAction</name>
    <filename>classGtk_1_1ToggleAction.html</filename>
    <base>Gtk::Action</base>
    <member kind="function">
      <type></type>
      <name>ToggleAction</name>
      <anchorfile>classGtk_1_1ToggleAction.html</anchorfile>
      <anchor>a2e831d5ca4892b7368282cb518cc57f6</anchor>
      <arglist>(ToggleAction &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ToggleAction &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ToggleAction.html</anchorfile>
      <anchor>a7d012d21d6f79670741f9d66d7de1fdd</anchor>
      <arglist>(ToggleAction &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ToggleAction</name>
      <anchorfile>classGtk_1_1ToggleAction.html</anchorfile>
      <anchor>ab2342466714cd5e96c9df0feca6ec9e5</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkToggleAction *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ToggleAction.html</anchorfile>
      <anchor>a2c599318148571da93c9252224fd9977</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkToggleAction *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ToggleAction.html</anchorfile>
      <anchor>a11078965eab4ae63d46ae776b6a29c2e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkToggleAction *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1ToggleAction.html</anchorfile>
      <anchor>abb64516e80cb25efa3fce30bdec78e83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggled</name>
      <anchorfile>classGtk_1_1ToggleAction.html</anchorfile>
      <anchor>a2dc5245f6db31890070afd3d589ad813</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_active</name>
      <anchorfile>classGtk_1_1ToggleAction.html</anchorfile>
      <anchor>a44ae541b7dbb01f6679063a456b2b221</anchor>
      <arglist>(bool is_active=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_active</name>
      <anchorfile>classGtk_1_1ToggleAction.html</anchorfile>
      <anchor>ac7ffa4f567b73438a370046996e7268f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_draw_as_radio</name>
      <anchorfile>classGtk_1_1ToggleAction.html</anchorfile>
      <anchor>a3fd94b6647e22cec855f95977682f2d4</anchor>
      <arglist>(bool draw_as_radio=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_draw_as_radio</name>
      <anchorfile>classGtk_1_1ToggleAction.html</anchorfile>
      <anchor>a574e8a3c431fd2922b69c48efe5a3a32</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_toggled</name>
      <anchorfile>classGtk_1_1ToggleAction.html</anchorfile>
      <anchor>a351ab717e9668dfce29322f341a39a15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_draw_as_radio</name>
      <anchorfile>classGtk_1_1ToggleAction.html</anchorfile>
      <anchor>a690fa2ca7031670b924690b0dcaad51d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_draw_as_radio</name>
      <anchorfile>classGtk_1_1ToggleAction.html</anchorfile>
      <anchor>aff688098a8a3c04c572764d13984bcb4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_active</name>
      <anchorfile>classGtk_1_1ToggleAction.html</anchorfile>
      <anchor>a94f4741359aa6cb3719034f5b29a52b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_active</name>
      <anchorfile>classGtk_1_1ToggleAction.html</anchorfile>
      <anchor>a83c85ae4d9397c3cb85dbd98281c537c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ToggleAction.html</anchorfile>
      <anchor>ada00e3ea0768df393de916191080b1c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; ToggleAction &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1ToggleAction.html</anchorfile>
      <anchor>afc962ac1e26ba76a2fadf5aa5a747139</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; ToggleAction &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1ToggleAction.html</anchorfile>
      <anchor>a4be41c23fea0054923526e7868a09ffe</anchor>
      <arglist>(const Glib::ustring &amp;name, const Glib::ustring &amp;label=Glib::ustring(), const Glib::ustring &amp;tooltip=Glib::ustring(), bool is_active=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; ToggleAction &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1ToggleAction.html</anchorfile>
      <anchor>a2d4625ab6ef3185bc8c433001d18f3dc</anchor>
      <arglist>(const Glib::ustring &amp;name, const Gtk::StockID &amp;stock_id, const Glib::ustring &amp;label=Glib::ustring(), const Glib::ustring &amp;tooltip=Glib::ustring(), bool is_active=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; ToggleAction &gt;</type>
      <name>create_with_icon_name</name>
      <anchorfile>classGtk_1_1ToggleAction.html</anchorfile>
      <anchor>aa508091b9453a2e0623bc2dd6e65c7d5</anchor>
      <arglist>(const Glib::ustring &amp;name, const Glib::ustring &amp;icon_name, const Glib::ustring &amp;label, const Glib::ustring &amp;tooltip, bool is_active=false)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ToggleAction</name>
      <anchorfile>classGtk_1_1ToggleAction.html</anchorfile>
      <anchor>aba704136601544df2b496462110fb997</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ToggleAction</name>
      <anchorfile>classGtk_1_1ToggleAction.html</anchorfile>
      <anchor>ae5780ba6b9b790a0a50e9b119136d24b</anchor>
      <arglist>(const Glib::ustring &amp;name, const StockID &amp;stock_id=StockID(), const Glib::ustring &amp;label=Glib::ustring(), const Glib::ustring &amp;tooltip=Glib::ustring(), bool is_active=false)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ToggleAction</name>
      <anchorfile>classGtk_1_1ToggleAction.html</anchorfile>
      <anchor>a392818aaa88484526b71518bb75f9bbd</anchor>
      <arglist>(const Glib::ustring &amp;name, const Glib::ustring &amp;icon_name, const Glib::ustring &amp;label=Glib::ustring(), const Glib::ustring &amp;tooltip=Glib::ustring(), bool is_active=false)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_toggled</name>
      <anchorfile>classGtk_1_1ToggleAction.html</anchorfile>
      <anchor>aaf4f46fdd2c5d8c6e7bc78d0970cabe4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::ToggleAction &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ToggleAction.html</anchorfile>
      <anchor>a885e03ebc822ed31dcf54cfa37a06e05</anchor>
      <arglist>(GtkToggleAction *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ToggleButton</name>
    <filename>classGtk_1_1ToggleButton.html</filename>
    <base>Gtk::Button</base>
    <member kind="function">
      <type></type>
      <name>ToggleButton</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>a81ebb61c737d14ee998a7290aa56362b</anchor>
      <arglist>(ToggleButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ToggleButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>a33ede5042b18f8be6e6810116b14309a</anchor>
      <arglist>(ToggleButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ToggleButton</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>ab9c13a6fcb9d3396d8918475cb7f494e</anchor>
      <arglist>(const ToggleButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ToggleButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>af3d76ddb8440c88ea7024da4d7a351b5</anchor>
      <arglist>(const ToggleButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ToggleButton</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>a3d658cf83200b53aed6749a3f71073f5</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkToggleButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>aaf95f140bb908c7424ce489c8c988993</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkToggleButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>a64415628d18b8d76da14ce7109e9b6af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ToggleButton</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>a945ddca141501dc344d281981a59330f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ToggleButton</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>a119f705699e515078c92b51b1f152497</anchor>
      <arglist>(const Glib::ustring &amp;label, bool mnemonic=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ToggleButton</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>a1a3d2264b3995cb3e6e8b3cb1d95bf6a</anchor>
      <arglist>(const StockID &amp;stock_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_mode</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>af989c82e500dd819c9253131d563b543</anchor>
      <arglist>(bool draw_indicator=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_mode</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>a5ab3a6085eed8a4d5be1a1c9f5c2ad75</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_active</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>a88f56cc3b99057fdffca3e0d0b5001a2</anchor>
      <arglist>(bool is_active=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_active</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>a5bd30cc7bae298aeeed1e5772e78c9cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_inconsistent</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>a4ee24bcd23c08ed5b01b3260e5eb320a</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_inconsistent</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>a768c29f0e5947ff7546760e106507a83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggled</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>a1fcff3b2f50b5a2e78b51339660f5c3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_toggled</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>a47df906f7ae7a3e1ef7c08301999598d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_active</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>a64b11a63de3d61ac0dfa7f6c4219a280</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_active</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>a59600c0460ad7a2c4cf5e3235cc7b0b9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_inconsistent</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>aa897194d98a998d186904be486fdf55c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_inconsistent</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>abaa11963bdf964eb3a4d4b23828e2dd5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_draw_indicator</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>adf760963986c1563a3ce01ffc50a2991</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_draw_indicator</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>ac98bb4d1466b1c5e1d486adabfe65eff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>a73203936a6c270d446ff32ef365f378a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_toggled</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>a61f3c4a4eeb448e533579dc0509d363b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ToggleButton *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ToggleButton.html</anchorfile>
      <anchor>aff198f3e8571926bffa8450220573901</anchor>
      <arglist>(GtkToggleButton *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ToggleToolButton</name>
    <filename>classGtk_1_1ToggleToolButton.html</filename>
    <base>Gtk::ToolButton</base>
    <member kind="function">
      <type></type>
      <name>ToggleToolButton</name>
      <anchorfile>classGtk_1_1ToggleToolButton.html</anchorfile>
      <anchor>ac873c13d3ca33b2b2d873de38d805418</anchor>
      <arglist>(ToggleToolButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ToggleToolButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ToggleToolButton.html</anchorfile>
      <anchor>af05c1ad5aeefced65e3d45efe84e3821</anchor>
      <arglist>(ToggleToolButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ToggleToolButton</name>
      <anchorfile>classGtk_1_1ToggleToolButton.html</anchorfile>
      <anchor>ad1d858b27fff57200c7e1a0ee07404e4</anchor>
      <arglist>(const ToggleToolButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ToggleToolButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ToggleToolButton.html</anchorfile>
      <anchor>ada20da996772c602c1a43a16201f1218</anchor>
      <arglist>(const ToggleToolButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ToggleToolButton</name>
      <anchorfile>classGtk_1_1ToggleToolButton.html</anchorfile>
      <anchor>af402853015547ed15d8adb4d08bf7580</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkToggleToolButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ToggleToolButton.html</anchorfile>
      <anchor>a9826ae502d32b3f6ef07972172bc1296</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkToggleToolButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ToggleToolButton.html</anchorfile>
      <anchor>a54b7be9878cfa076d1060beffd018e51</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ToggleToolButton</name>
      <anchorfile>classGtk_1_1ToggleToolButton.html</anchorfile>
      <anchor>a0254c1286f800d5e7d7630005081e443</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ToggleToolButton</name>
      <anchorfile>classGtk_1_1ToggleToolButton.html</anchorfile>
      <anchor>a74c380a2de7ea6ed29299f233e30314b</anchor>
      <arglist>(const Gtk::StockID &amp;stock_id)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ToggleToolButton</name>
      <anchorfile>classGtk_1_1ToggleToolButton.html</anchorfile>
      <anchor>aeaedbe559ff1d257b5ed26027213da5f</anchor>
      <arglist>(const Glib::ustring &amp;label)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ToggleToolButton</name>
      <anchorfile>classGtk_1_1ToggleToolButton.html</anchorfile>
      <anchor>ae3d37f4d91093f86a24415a5a5da5570</anchor>
      <arglist>(Widget &amp;icon_widget, const Glib::ustring &amp;label=Glib::ustring())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_active</name>
      <anchorfile>classGtk_1_1ToggleToolButton.html</anchorfile>
      <anchor>ab1704b77fd0bbde1d8e6cf3818c750a8</anchor>
      <arglist>(bool is_active=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_active</name>
      <anchorfile>classGtk_1_1ToggleToolButton.html</anchorfile>
      <anchor>a06ddc9daba3a310f4ee7c9224b7e6c9f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_toggled</name>
      <anchorfile>classGtk_1_1ToggleToolButton.html</anchorfile>
      <anchor>a208bba6c66728b041eb1c868d7c51b5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_active</name>
      <anchorfile>classGtk_1_1ToggleToolButton.html</anchorfile>
      <anchor>a56a9488aa126719e9a683467a8a85ba0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_active</name>
      <anchorfile>classGtk_1_1ToggleToolButton.html</anchorfile>
      <anchor>a26d95c0c0cc357434f12e3a10f44274e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ToggleToolButton.html</anchorfile>
      <anchor>adc9534e05a3e67124bb539b399d19f88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_toggled</name>
      <anchorfile>classGtk_1_1ToggleToolButton.html</anchorfile>
      <anchor>ad4606040c0bbbb8a9353c2cff7a2f0ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ToggleToolButton *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ToggleToolButton.html</anchorfile>
      <anchor>a8db6fb242327dc215d018582e0609966</anchor>
      <arglist>(GtkToggleToolButton *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Toolbar</name>
    <filename>classGtk_1_1Toolbar.html</filename>
    <base>Gtk::Container</base>
    <base>Gtk::ToolShell</base>
    <member kind="function">
      <type></type>
      <name>Toolbar</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>a194d17860637f749856af37d5d8553c6</anchor>
      <arglist>(Toolbar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Toolbar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>a9e5e87b8268952ac6a77f3699acec070</anchor>
      <arglist>(Toolbar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Toolbar</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>abcc8c9d84e31c41f08452252592bad49</anchor>
      <arglist>(const Toolbar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Toolbar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>a99ad6e8971fc8c0be37273cd6a2a88dd</anchor>
      <arglist>(const Toolbar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Toolbar</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>aff4af0f3b7b831d1fc456f2864a2209b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkToolbar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>aa858c716dd6880213431cc4c796c697b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkToolbar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>a01d811299660e3281d89008d0e1751f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Toolbar</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>af3bde7b6685a8832c34e3ab393c169ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>a144535564a88cf4525c574a6ee37baaf</anchor>
      <arglist>(ToolItem &amp;item, int pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>a1c06790d53f210d721fafaaec4abe7e0</anchor>
      <arglist>(ToolButton &amp;item, int pos, const sigc::slot&lt; void &gt; &amp;clicked_slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>a66b7b25aeb72a940784f87a8f6594c44</anchor>
      <arglist>(ToggleToolButton &amp;item, int pos, const sigc::slot&lt; void &gt; &amp;toggled_slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>a7dd4b1895857c29157ddca705ec2b4c3</anchor>
      <arglist>(ToolItem &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>aeb5575c71ad16bc89582b4a107ee0351</anchor>
      <arglist>(ToolButton &amp;item, const sigc::slot&lt; void &gt; &amp;clicked_slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>af01fbcfbd3095187d18a8e8b1e0a754f</anchor>
      <arglist>(ToggleToolButton &amp;item, const sigc::slot&lt; void &gt; &amp;toggled_slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepend</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>abf2d6d483598038925c516e836cedd65</anchor>
      <arglist>(ToolItem &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepend</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>ab16622f1b35f231c3e01b7925997c696</anchor>
      <arglist>(ToolButton &amp;item, const sigc::slot&lt; void &gt; &amp;clicked_slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepend</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>ac88567c637e3ba873ff2c34a16220eb8</anchor>
      <arglist>(ToggleToolButton &amp;item, const sigc::slot&lt; void &gt; &amp;toggled_slot)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_item_index</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>aa3c0dffdaea7fc77682a6a8a6ccf4dc6</anchor>
      <arglist>(const ToolItem &amp;item) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_n_items</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>a29c3fd092729ea42f65ad42f5e7af86d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ToolItem *</type>
      <name>get_nth_item</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>af792a4de69bf535452007a02b8697ff9</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>const ToolItem *</type>
      <name>get_nth_item</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>a6dbc4ccb89755ae1e164b5d65761907a</anchor>
      <arglist>(int n) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_arrow</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>a1e68e38d1682896d89518c3cf39177e1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_arrow</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>a8b884595c2d858a2c93d09a19252ad8e</anchor>
      <arglist>(bool show_arrow=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_toolbar_style</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>aae033564f7c84f947f71c68b00b2dd4e</anchor>
      <arglist>(ToolbarStyle style)</arglist>
    </member>
    <member kind="function">
      <type>ToolbarStyle</type>
      <name>get_toolbar_style</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>afd65dcbc107339b7b99d762c40f0db7e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_toolbar_style</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>a6bc4acec2baad47c2efcd422d6cc2541</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_size</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>a79b129f77aeb97c28b4301d17ba3a8d1</anchor>
      <arglist>(IconSize icon_size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_icon_size</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>a276a5f9c99cba3a5a372125c31465d72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>IconSize</type>
      <name>get_icon_size</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>a1fd7e7ff48b82257b4589ac7215f136f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ReliefStyle</type>
      <name>get_relief_style</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>ac4f39746d0ffbe772762cb3018186eaa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_drop_index</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>a614455e2a7df645012e18230ba0544c8</anchor>
      <arglist>(int x, int y) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_drop_highlight_item</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>ad50cb5a127f98cb359f0210a15effdf6</anchor>
      <arglist>(ToolItem &amp;tool_item, int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_drop_highlight_item</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>aa69dbe220c91a3f516a4dde2c924af5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, Orientation &gt;</type>
      <name>signal_orientation_changed</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>ab6a11c2d042aca14706de508e7981ab2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, ToolbarStyle &gt;</type>
      <name>signal_toolbar_style_changed</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>ab6a85a74b5b2a527ccab24512931da66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, int, int, int &gt;</type>
      <name>signal_popup_context_menu</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>a07620d371c758df4fe5a4de8966fc707</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; ToolbarStyle &gt;</type>
      <name>property_toolbar_style</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>ac588108c0d82fbc63d51b261098a8420</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; ToolbarStyle &gt;</type>
      <name>property_toolbar_style</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>adafc4b71616a91c3bdcd44c356af9e1e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_arrow</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>a13b2beb76e9af9b428915a7de424680f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_arrow</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>a44862f0ed45111a1a2fcdffdc100e9bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; IconSize &gt;</type>
      <name>property_icon_size</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>af5a035406187635eef616e109e323f79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; IconSize &gt;</type>
      <name>property_icon_size</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>af4562fd36b8efd81c7e6c6d911db72fe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_icon_size_set</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>a277267df4ef5c4e3792ba6274876b711</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_icon_size_set</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>aaf6f47bc605b1df756318c36fabb1cbc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; bool &gt;</type>
      <name>child_property_expand</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>a84fcc4877dc35fa1146aa5091c2b0982</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>child_property_expand</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>a021fa034b50cb12441b8020e0a24bde2</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; bool &gt;</type>
      <name>child_property_homogeneous</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>a3bb8145374ac33501eab1a6e83f9e225</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>child_property_homogeneous</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>a90a31c731dfe92645cd4f28a4736fe8b</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>aa985fb1b1dd55466b65de05c944d8cfa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_orientation_changed</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>a8db946462d13654049d5e8942fb1266a</anchor>
      <arglist>(Orientation orientation)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_toolbar_style_changed</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>a3b922079d053d0c657c434cf5708c180</anchor>
      <arglist>(ToolbarStyle style)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_popup_context_menu</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>aa5fc50886262673d5cd0c530c7c7e428</anchor>
      <arglist>(int x, int y, int button_number)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Toolbar *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Toolbar.html</anchorfile>
      <anchor>a875ef01e5bac6aefad201f5dad8a4338</anchor>
      <arglist>(GtkToolbar *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ToolButton</name>
    <filename>classGtk_1_1ToolButton.html</filename>
    <base>Gtk::ToolItem</base>
    <member kind="function">
      <type></type>
      <name>ToolButton</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>a8db084f839442f57e4f82bed33746ec2</anchor>
      <arglist>(ToolButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ToolButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>a211b3c8492979c42d1e205f12682b893</anchor>
      <arglist>(ToolButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ToolButton</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>a92bdece9fc9f5c5dbf9d43a215ff1595</anchor>
      <arglist>(const ToolButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ToolButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>a5aef9bee82673498ad669f6826e9c8d7</anchor>
      <arglist>(const ToolButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ToolButton</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>af91eed08a0110eb2b8fc6e4daf5e30e7</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkToolButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>a451fe61a9536f6eb5e55e70ba79eaeea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkToolButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>a4a54eeeeeff0a72d2d3b1cc6db6e7350</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ToolButton</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>ac8fb76bfd4b8e3bed4776919426be413</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ToolButton</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>a29d91617340b3443377b3fc370b66c36</anchor>
      <arglist>(const Gtk::StockID &amp;stock_id)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ToolButton</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>a9038380ec0968afa70bbd524530306cb</anchor>
      <arglist>(const Glib::ustring &amp;label)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ToolButton</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>af1ccb8b60b863d457eabc9906b6d7088</anchor>
      <arglist>(Widget &amp;icon_widget, const Glib::ustring &amp;label=Glib::ustring())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_label</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>a9efe83b5048f641fdd35921e72ccb2f5</anchor>
      <arglist>(const Glib::ustring &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_label</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>aeb79cc4191f6a5b4ea834be51364246f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_underline</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>a149c499f50a89eb0554af47e7fe9a97d</anchor>
      <arglist>(bool use_underline=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_use_underline</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>a2d99a8bf8876840fe4047aa81ca735d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_stock_id</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>a3b236df95154efee1396035b623fa28e</anchor>
      <arglist>(const Gtk::StockID &amp;stock_id)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_stock_id</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>ad7577160d891c56b1469d79c8af765e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_name</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>a3c3b6b2fd0a64f9cf219bab69f12d4f9</anchor>
      <arglist>(const Glib::ustring &amp;icon_name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_icon_name</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>afc2a23990123a89c12d2268a9975a13f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_widget</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>ab809b19b75cee54a2fc4b904f9a591e1</anchor>
      <arglist>(Widget &amp;icon_widget)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_icon_widget</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>ae3750678c98bab7a24eaa3c5928aea6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_icon_widget</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>a1cb89d34809c740a57f26c5b54881b9f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_label_widget</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>aaadad39193ddfe3f23524ae889c8b9ad</anchor>
      <arglist>(Widget &amp;label_widget)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_label_widget</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>a9f23282892f0030fb5751c81a454a185</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_label_widget</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>ad7de10f30377391e0f680bc51dabca7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_clicked</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>a4a43631a0e16d8a9fb406f0e0570ba0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_label</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>ab116fecafdb4f14d83dab61c695c3a7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_label</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>a16e945303cf6de35c3d22dc38fb2eef2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_use_underline</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>ac15800fa134986791dc5dd4f90155e31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_use_underline</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>aa4eb25a5cc64c1e7be4bf7768d725d4b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gtk::Widget * &gt;</type>
      <name>property_label_widget</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>a5a7f044fc8a45fbb6410d6ef87729aa4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gtk::Widget * &gt;</type>
      <name>property_label_widget</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>a6e60d1016f68758acdb7f8d482fd9138</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_stock_id</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>ac87a004f08bbc0ad6ce5ce171ab40139</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_stock_id</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>af33801d147917f7cf9e0d2c197a5efae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_icon_name</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>a045c0f190109e336e4d435be073d629f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_icon_name</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>af77b720784abc042f1bb58470a301525</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gtk::Widget &gt;</type>
      <name>property_icon_widget</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>a0bed4e7b865107cf4fb8969b641f1ee2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gtk::Widget &gt;</type>
      <name>property_icon_widget</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>a49a6eadf76a8843ae35bc15f69b5a921</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>ae3d02d1609844f45d3539f45a40fb05a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_clicked</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>a1a56d0f2dd67d8651b03d7c9d3b1c40b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ToolButton *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ToolButton.html</anchorfile>
      <anchor>a5b2cedbe514fc9cefa5d8e325c1b2287</anchor>
      <arglist>(GtkToolButton *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ToolItem</name>
    <filename>classGtk_1_1ToolItem.html</filename>
    <base>Gtk::Bin</base>
    <base>Gtk::Activatable</base>
    <member kind="function">
      <type></type>
      <name>ToolItem</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>aca912911e308132f537199517acfa4b4</anchor>
      <arglist>(ToolItem &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ToolItem &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>a5982730269b3398e0c3c3d5a55a40e76</anchor>
      <arglist>(ToolItem &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ToolItem</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>aa94b6a7844eaa187d3fae388f5ca7204</anchor>
      <arglist>(const ToolItem &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ToolItem &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>a8f1aa33987c233b71c0e44682ba07deb</anchor>
      <arglist>(const ToolItem &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ToolItem</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>aa37acbf31350100c27ecb1799d904f68</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkToolItem *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>a14a91aa75fdf0d7377288f407f80ef79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkToolItem *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>a956e41fdb82ef7abc0651f26c57274dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ToolItem</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>a197bc704bab7cc60043e856b845933e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_homogeneous</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>a64552ea9654a10a45a053a45a8593659</anchor>
      <arglist>(bool homogeneous=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_homogeneous</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>a3474dfca18c387a696d3aed67d4dee41</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_expand</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>a1c18c67797b1e635b0f8b7e55b2fdcea</anchor>
      <arglist>(bool expand=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_expand</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>a1b5420fc59bf6de6ddefa4421333e864</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tooltip_text</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>a2f4067d5070b6395a8c6be040fc67364</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tooltip_markup</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>ac62a32a9d9a9bf16c4fc4dd1e1c11bbc</anchor>
      <arglist>(const Glib::ustring &amp;markup)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_use_drag_window</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>ada08f867c3bb0abd2f8041925782b9cc</anchor>
      <arglist>(bool use_drag_window=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_use_drag_window</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>a063869544cafa42dccda6ec12bea0822</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visible_horizontal</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>af98afa328d870e51fe18ac58b3cc0416</anchor>
      <arglist>(bool visible_horizontal=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_visible_horizontal</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>aa33ade1019d97ec2807c144b0adb9163</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visible_vertical</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>a95438159f6778816285bc27f8737997b</anchor>
      <arglist>(bool visible_vertical=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_visible_vertical</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>ab8d57594558f512628b743dff078dc64</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_is_important</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>a80059e7b18235d6f5902cc54200f97fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_is_important</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>aa33895835f121fdf68fd02726a626ecf</anchor>
      <arglist>(bool is_important=true)</arglist>
    </member>
    <member kind="function">
      <type>Pango::EllipsizeMode</type>
      <name>get_ellipsize_mode</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>aa459581202bfee9ea8ac455c568bc9dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>IconSize</type>
      <name>get_icon_size</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>af03a6b54175746767ac062d068c6ad69</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Orientation</type>
      <name>get_orientation</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>a338a13d2e01741a387f73acc574374fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ToolbarStyle</type>
      <name>get_toolbar_style</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>aad8d48a73951ab57115590780d4b9166</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ReliefStyle</type>
      <name>get_relief_style</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>a2d9cbef00e7ca525fed4db305724f855</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>get_text_alignment</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>a4495a9a9cffd5c3d1660d98e7ba70795</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Orientation</type>
      <name>get_text_orientation</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>ad1208ab0b4d8f38e5ffcec7f6bb6868a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; SizeGroup &gt;</type>
      <name>get_text_size_group</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>a33b179081b803586878d33f792b9bdd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const SizeGroup &gt;</type>
      <name>get_text_size_group</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>abfb26bf9750b7b0a6cd83918bb1844d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>retrieve_proxy_menu_item</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>a5486d9d0bd8a4cbb4345aed9a99a50bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>retrieve_proxy_menu_item</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>a2a9dc77a2b96b8d6d41d81d0ff2e2fab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_proxy_menu_item</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>a6477f6a307d97bf1435c6c1bb718131c</anchor>
      <arglist>(const Glib::ustring &amp;menu_item_id)</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_proxy_menu_item</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>a4a80b496ccdaac3f30bc75e36b8b3c3a</anchor>
      <arglist>(const Glib::ustring &amp;menu_item_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_proxy_menu_item</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>a722227699766190dd162d8db5eedf817</anchor>
      <arglist>(const Glib::ustring &amp;menu_item_id, Widget &amp;menu_item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_proxy_menu_item</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>a89f680c2fd67eef87d7cf007e257dd33</anchor>
      <arglist>(const Glib::ustring &amp;menu_item_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuild_menu</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>a47a4077527ad4fa5d3da33ca60892800</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toolbar_reconfigured</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>ac16b7aa4a3d06c7ed013e35fdb5f0866</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool &gt;</type>
      <name>signal_create_menu_proxy</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>ab2f9913e7621495e89213d09b0296d58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_toolbar_reconfigured</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>a0484c841ba287352c6495299e1181ae4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_visible_horizontal</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>a1d35f9392037f4a38c6cea2667ac9d36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_visible_horizontal</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>a600b7619e1687dc7a86d1caa71b64713</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_visible_vertical</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>ad5a578cb6b7d3e970a3c32108f4798fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_visible_vertical</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>ad60339462d432466325ec02941940b66</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_is_important</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>afb751041f6083ba79c813e8d0ececa52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_is_important</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>ae2c52b3506930151dbeb08f3f2c7a360</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>aee1fd5c6d3f5ae412d2c2eed1ff31240</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_create_menu_proxy</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>a7f555869e1f43639d57ca601249ffbc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_toolbar_reconfigured</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>a3ec8af910b70da65f34fc3705909315a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ToolItem *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ToolItem.html</anchorfile>
      <anchor>a79a5fe8b7767157c60483c23507ec66f</anchor>
      <arglist>(GtkToolItem *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ToolItemGroup</name>
    <filename>classGtk_1_1ToolItemGroup.html</filename>
    <base>Gtk::Container</base>
    <base>Gtk::ToolShell</base>
    <member kind="function">
      <type></type>
      <name>ToolItemGroup</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>a267014670b24ba21cd6157c5ca4bf2ac</anchor>
      <arglist>(ToolItemGroup &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ToolItemGroup &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>a75a1d8d4a223ee8f46b038b210bf8fc8</anchor>
      <arglist>(ToolItemGroup &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ToolItemGroup</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>a8b53df98c117c0489cae6130ce9add2a</anchor>
      <arglist>(const ToolItemGroup &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ToolItemGroup &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>ac363346edf1ba3a52f81e405d30c0412</anchor>
      <arglist>(const ToolItemGroup &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ToolItemGroup</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>a1424dbf75b269f3658774fbe2379b96a</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkToolItemGroup *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>adc59f3915df433794375abd99b27c44d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkToolItemGroup *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>ae5bb466c43ca60911b219fd479723467</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ToolItemGroup</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>a6563711e3ba6b52b1dd3ce85c7073608</anchor>
      <arglist>(const Glib::ustring &amp;label=Glib::ustring())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_label</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>a9440b0c663784932e4c2574db9b27b0d</anchor>
      <arglist>(const Glib::ustring &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_label_widget</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>a0dfe4500014d93288339905889d3a45c</anchor>
      <arglist>(Widget &amp;label_widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_collapsed</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>afe39d8bc5c9c517e61c5619ae4be961e</anchor>
      <arglist>(bool collapsed=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_ellipsize</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>a9e99aacf094de59155e3f827286b83f7</anchor>
      <arglist>(Pango::EllipsizeMode ellipsize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_header_relief</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>a369cd712e086dc68ec63836e0198777d</anchor>
      <arglist>(ReliefStyle style)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_label</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>afd1024332f61723827c85ea6715fe9d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_label_widget</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>a33e6d58d950bf4967630102e8a5e7c95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_label_widget</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>a9dc7ee98adfe11b533dbcd42e0d94267</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_collapsed</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>a6c92d1a71eaf46acc5c2065d53d17c7c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Pango::EllipsizeMode</type>
      <name>get_ellipsize</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>a0bdf236eef6a4f6b1c15a6d60a1d60fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ReliefStyle</type>
      <name>get_header_relief</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>a45963a51ae4952d55fa946dc959a696e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>ae79f818f504f43c7987b57ac61fdc094</anchor>
      <arglist>(ToolItem &amp;item, int position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>ad4a35db8d8c3ef995ea44a51128daca6</anchor>
      <arglist>(ToolItem &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_item_position</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>a92c36a38b0b78a2ddbc8552876a14f37</anchor>
      <arglist>(ToolItem &amp;item, int position)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_item_position</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>a835bfe5b92e7dead5acf3bcc8084cfed</anchor>
      <arglist>(const ToolItem &amp;item) const </arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_n_items</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>ab2442e45955b7d5054741a6e2137f0a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ToolItem *</type>
      <name>get_nth_item</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>a51fc8fe4bbb788089885fe55788759be</anchor>
      <arglist>(guint index)</arglist>
    </member>
    <member kind="function">
      <type>const ToolItem *</type>
      <name>get_nth_item</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>ac0e158110f5fca3dec76120b0d298702</anchor>
      <arglist>(guint index) const </arglist>
    </member>
    <member kind="function">
      <type>ToolItem *</type>
      <name>get_drop_item</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>a09d95a27c02245bc7265d05b5d9552d4</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>ToolItem *</type>
      <name>get_drop_item</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>a9fef1a5b7d523061ce84a2d938379250</anchor>
      <arglist>(int x, int y) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_label</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>af2a843df9adbf177bb74d2aa63b03d09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_label</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>ae7dcbebeef16af6dadc2b6fab94bf338</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gtk::Widget * &gt;</type>
      <name>property_label_widget</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>ad238035dc8ea1948fd2042fdaf3f9cb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gtk::Widget * &gt;</type>
      <name>property_label_widget</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>a7fff5abc753fc4db9a74e8d79519df0c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_collapsed</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>a3129de49f0765d0f5ace0c5f8e55731c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_collapsed</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>a86a2b2ce4fb7d677fdf74f6fede0c38f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Pango::EllipsizeMode &gt;</type>
      <name>property_ellipsize</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>a1a05aa0839a26eff972790100583c386</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Pango::EllipsizeMode &gt;</type>
      <name>property_ellipsize</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>aa06f152019a07e5b94e2170c87480a62</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; ReliefStyle &gt;</type>
      <name>property_header_relief</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>a8b82822ce7fab4fefdf1bdbf24908ec4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; ReliefStyle &gt;</type>
      <name>property_header_relief</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>a042cec1b78d029324d36cd38437bfff8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; bool &gt;</type>
      <name>child_property_homogeneous</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>adc67aa0d1e22290116f65406ea441ef7</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>child_property_homogeneous</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>a827618575760ade7b1c5407e65bdd723</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; bool &gt;</type>
      <name>child_property_expand</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>abadbb0b8815e526fda791d01e26503b8</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>child_property_expand</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>a2c6ab87b65b6e5e85fc5d0f07a036ab5</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; bool &gt;</type>
      <name>child_property_fill</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>a6efc0233adc4dea260678ee512b61b86</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>child_property_fill</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>a666d53ec194cafebea567fcdccb70d9f</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; bool &gt;</type>
      <name>child_property_new_row</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>a99ba846e887892ad175d33582576e80e</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>child_property_new_row</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>adf626a1171e8a9647d97df7b7c8742b5</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; int &gt;</type>
      <name>child_property_position</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>aeed55091900f099a0dea9e6afeb2ad8a</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>child_property_position</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>a09168e372bcc57a572eacbe5124f728b</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>a171ba9cf64578c560add3145b47078de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ToolItemGroup *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ToolItemGroup.html</anchorfile>
      <anchor>a3a7a6943c1d5b4cc7c287e815d91d5b0</anchor>
      <arglist>(GtkToolItemGroup *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ToolPalette</name>
    <filename>classGtk_1_1ToolPalette.html</filename>
    <base>Gtk::Container</base>
    <base>Gtk::Orientable</base>
    <base>Gtk::Scrollable</base>
    <member kind="function">
      <type></type>
      <name>ToolPalette</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>a64d394dd058b366a89106a3952835736</anchor>
      <arglist>(ToolPalette &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ToolPalette &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>a04f44ab8653107a66f15dabceb56c752</anchor>
      <arglist>(ToolPalette &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ToolPalette</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>a36ef8188ad0157d6c69b7f98e665eb03</anchor>
      <arglist>(const ToolPalette &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ToolPalette &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>a2ed163099266ef1fde94e6cf5629b3f2</anchor>
      <arglist>(const ToolPalette &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ToolPalette</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>a923d5149dd26a958c33ccaf3ba58772e</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkToolPalette *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>a91e81467b7ae18f9f13e2cf80bd437b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkToolPalette *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>a2dcd227b3f91f500d6493e56039a91ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ToolPalette</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>a922a1220e83ed1384379cb6e157c0256</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_group_position</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>a7130773f4606f21d24faf1e437b73497</anchor>
      <arglist>(ToolItemGroup &amp;group, int position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_exclusive</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>a20df2092e3fd87e9dbbfa4ce5e486510</anchor>
      <arglist>(ToolItemGroup &amp;group, bool exclusive)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_expand</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>adac15809d6dbe8a47fbc66247799ea3b</anchor>
      <arglist>(ToolItemGroup &amp;group, bool expand=true)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_group_position</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>ae36d15e93b9805f39589918f10a497a3</anchor>
      <arglist>(ToolItemGroup &amp;group) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_exclusive</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>a0e351298352b63718d318f0394cf1834</anchor>
      <arglist>(ToolItemGroup &amp;group) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_expand</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>a732e93e0dcb1a4194b0d19436e1923a2</anchor>
      <arglist>(ToolItemGroup &amp;group) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_size</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>aa372f5937de26a883f792e037c43bd7a</anchor>
      <arglist>(IconSize icon_size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_icon_size</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>a8a67490718f99b659e3e9eaf70d1e61a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_style</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>a5aef60cab3015778fdf9737ff1b03955</anchor>
      <arglist>(ToolbarStyle style)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_style</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>aa6ede31e7cfb0c53b2826084daf48ca8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>IconSize</type>
      <name>get_icon_size</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>af51cf0e36381eb4cff88a942f1259466</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ToolbarStyle</type>
      <name>get_style</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>a0ba2dc8982f1310af2711e74efcaca69</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ToolItem *</type>
      <name>get_drop_item</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>ad20a30de416a16bc16e660340132f386</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>const ToolItem *</type>
      <name>get_drop_item</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>af9ab8bf85ffc306bcb01c709078a5723</anchor>
      <arglist>(int x, int y) const </arglist>
    </member>
    <member kind="function">
      <type>ToolItemGroup *</type>
      <name>get_drop_group</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>a57192793dbc92377811eb16610f6a58b</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>const ToolItemGroup *</type>
      <name>get_drop_group</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>ac894af2d7982b8eac6c82f9e6cf489df</anchor>
      <arglist>(int x, int y) const </arglist>
    </member>
    <member kind="function">
      <type>ToolItem *</type>
      <name>get_drag_item</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>a7fcb32d5dfada9aca2872eacc3ec466e</anchor>
      <arglist>(const SelectionData &amp;selection)</arglist>
    </member>
    <member kind="function">
      <type>const ToolItem *</type>
      <name>get_drag_item</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>af6b4fe4f47c58d010e78d8d74acc57a9</anchor>
      <arglist>(const SelectionData &amp;selection) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_drag_source</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>a44648f20696e219c5acc1a67bd66a99d</anchor>
      <arglist>(ToolPaletteDragTargets targets=TOOL_PALETTE_DRAG_ITEMS)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_drag_dest</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>a91ebd8aa5368c80bdbec0937aa982fb8</anchor>
      <arglist>(Gtk::Widget &amp;widget, DestDefaults flags=DEST_DEFAULT_ALL, ToolPaletteDragTargets targets=TOOL_PALETTE_DRAG_ITEMS, Gdk::DragAction actions=Gdk::ACTION_COPY)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; IconSize &gt;</type>
      <name>property_icon_size</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>a25ce39e147abd61531ecd53f85ace154</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; IconSize &gt;</type>
      <name>property_icon_size</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>a03d173684187b87b59b5d00527cc5391</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_icon_size_set</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>a32d88985e949054dfdd72a9b5d299f50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_icon_size_set</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>a30c5218fa8fc21e3ea2af5ab882206e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; ToolbarStyle &gt;</type>
      <name>property_toolbar_style</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>abadf30660be2c03477812fc3274e21d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; ToolbarStyle &gt;</type>
      <name>property_toolbar_style</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>af55ae79fdbba53ec85b4b0cfad18e2d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; bool &gt;</type>
      <name>child_property_exclusive</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>a1f5614729d17c9d52441f4790de82db4</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>child_property_exclusive</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>abad56c68ca50329e62d69f53c7ac35ad</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy&lt; bool &gt;</type>
      <name>child_property_expand</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>a1aad195dc9af5f79e596c8fc2265ed00</anchor>
      <arglist>(Gtk::Widget &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ChildPropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>child_property_expand</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>a1fa43082eda6f8603d4160165c946747</anchor>
      <arglist>(const Gtk::Widget &amp;child) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>a17769223698cf8cc1afbc79a199994af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TargetEntry</type>
      <name>get_drag_target_item</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>ad27174f02df4361afa4994ba87196d3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TargetEntry</type>
      <name>get_drag_target_group</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>a106bf0bc3c4b1a5969be41738ee72052</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::ToolPalette *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ToolPalette.html</anchorfile>
      <anchor>a9345a58462bb2c4afae4df40671b0ad8</anchor>
      <arglist>(GtkToolPalette *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::ToolShell</name>
    <filename>classGtk_1_1ToolShell.html</filename>
    <base>Glib::Interface</base>
    <member kind="function">
      <type></type>
      <name>ToolShell</name>
      <anchorfile>classGtk_1_1ToolShell.html</anchorfile>
      <anchor>a912b7418ad2e5664f638ef62018ff3a2</anchor>
      <arglist>(ToolShell &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ToolShell &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1ToolShell.html</anchorfile>
      <anchor>af2a5ae5a72ce4899c51a6e24bb0fb47f</anchor>
      <arglist>(ToolShell &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ToolShell</name>
      <anchorfile>classGtk_1_1ToolShell.html</anchorfile>
      <anchor>a83b474b7efdc244d6b7341bc7ed4fc03</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkToolShell *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ToolShell.html</anchorfile>
      <anchor>a432a23b6b0e289ea4e3db9772875f59c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkToolShell *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1ToolShell.html</anchorfile>
      <anchor>aff620249af0e34854a21ed75bce27f2a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>IconSize</type>
      <name>get_icon_size</name>
      <anchorfile>classGtk_1_1ToolShell.html</anchorfile>
      <anchor>a74957611a0503e08205480477406e674</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Orientation</type>
      <name>get_orientation</name>
      <anchorfile>classGtk_1_1ToolShell.html</anchorfile>
      <anchor>ab1053b5af5799c5b30ee8c5eb517c2c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ToolbarStyle</type>
      <name>get_style</name>
      <anchorfile>classGtk_1_1ToolShell.html</anchorfile>
      <anchor>ab5583fd8cb12d8b03b4752835a0203d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ReliefStyle</type>
      <name>get_relief_style</name>
      <anchorfile>classGtk_1_1ToolShell.html</anchorfile>
      <anchor>a332e56e2b3c0221e339c02ca27d11e31</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuild_menu</name>
      <anchorfile>classGtk_1_1ToolShell.html</anchorfile>
      <anchor>a07f2d024678da3f7ea1b43949b1b1cb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Orientation</type>
      <name>get_text_orientation</name>
      <anchorfile>classGtk_1_1ToolShell.html</anchorfile>
      <anchor>acf49be7d8a0bbbcffbb668c27a288167</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>get_text_alignment</name>
      <anchorfile>classGtk_1_1ToolShell.html</anchorfile>
      <anchor>ab9baa93607da296fbc5b8d6ff2e9e1ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Pango::EllipsizeMode</type>
      <name>get_ellipsize_mode</name>
      <anchorfile>classGtk_1_1ToolShell.html</anchorfile>
      <anchor>a1b7495c48b268f9bf8aba6aa517a1a55</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; SizeGroup &gt;</type>
      <name>get_text_size_group</name>
      <anchorfile>classGtk_1_1ToolShell.html</anchorfile>
      <anchor>aaf5b7ba1a1bba8617241ddc6fdc325ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const SizeGroup &gt;</type>
      <name>get_text_size_group</name>
      <anchorfile>classGtk_1_1ToolShell.html</anchorfile>
      <anchor>a71dd8167ca207961352d572ee04ef22f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1ToolShell.html</anchorfile>
      <anchor>aba83323bef9d5ada06eef3e54f9eeaec</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1ToolShell.html</anchorfile>
      <anchor>ae23d4cb11b52f96ca1feeccef1508238</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ToolShell</name>
      <anchorfile>classGtk_1_1ToolShell.html</anchorfile>
      <anchor>aa5f6d04b3a0036da34a56199292b2451</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IconSize</type>
      <name>get_icon_size_vfunc</name>
      <anchorfile>classGtk_1_1ToolShell.html</anchorfile>
      <anchor>ad6e048accc29fd7d57378bfb0518fd97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Orientation</type>
      <name>get_orientation_vfunc</name>
      <anchorfile>classGtk_1_1ToolShell.html</anchorfile>
      <anchor>aa22316a604b81b64d64ac89dc3c064ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ToolbarStyle</type>
      <name>get_style_vfunc</name>
      <anchorfile>classGtk_1_1ToolShell.html</anchorfile>
      <anchor>a4f6de040dfa0f4decd727e634a40d329</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ReliefStyle</type>
      <name>get_relief_style_vfunc</name>
      <anchorfile>classGtk_1_1ToolShell.html</anchorfile>
      <anchor>a1ade18cc8d5599c3f03d85765cdc37d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rebuild_menu_vfunc</name>
      <anchorfile>classGtk_1_1ToolShell.html</anchorfile>
      <anchor>ab7bc31b1a87cace668d8e0eee6381c2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::ToolShell &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1ToolShell.html</anchorfile>
      <anchor>afcda05e86998bdfb9e03e394e75afe49</anchor>
      <arglist>(GtkToolShell *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Tooltip</name>
    <filename>classGtk_1_1Tooltip.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>Tooltip</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>aa481ad792965135092c12e1312408ce8</anchor>
      <arglist>(Tooltip &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Tooltip &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>afcae9a3923e68db3ec6e66ecbb541f56</anchor>
      <arglist>(Tooltip &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Tooltip</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>aba17340ea9fc094afdf05b33019ec921</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTooltip *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>a6fd1e9cfe3aefe37b56217036eb7a9b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTooltip *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>a19c11e2c7fcdd35c7a06adea5655a9c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkTooltip *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>a83a2d5479fc5dbd10b73fe2dc4c0cecd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_markup</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>a49e0b6727492955b588399809eba8943</anchor>
      <arglist>(const Glib::ustring &amp;markup)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_markup</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>ad86b297cbbb539a2c274c5a0af9ab73f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_text</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>a050b7ea7894290257eb0e8dd0ccddf95</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_text</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>a7b147eb8a23478ff52fbb41c97783e54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>a6d6492b6438f3f49887bed5548c7daae</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;pixbuf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>a349ed2bfb3bdabb4c53ad5e0bf1675b1</anchor>
      <arglist>(const Glib::RefPtr&lt; Gio::Icon &gt; &amp;gicon, IconSize size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_from_stock</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>a15c00ef935818dbd5b4dc3beffaba03e</anchor>
      <arglist>(const StockID &amp;stock_id, IconSize size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_from_icon_name</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>aba2d21de6600dd047836143aaf09b67b</anchor>
      <arglist>(const Glib::ustring &amp;icon_name, IconSize size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_icon</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>a155467ddaec3fbbebb8dcf95f72484e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_custom</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>a46d40fa085a79d98c8220cb5690528e3</anchor>
      <arglist>(Widget &amp;custom_widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_custom</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>adb2713433a636b85604be415a803c674</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tip_area</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>a197701484426a19f1dee98411e3d3878</anchor>
      <arglist>(const Gdk::Rectangle &amp;rect)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>a851cb28fda97592c333e17e07007bb26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>trigger_tooltip_query</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>a9e1aac92a4ecf20d602941be5f4c4ac8</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Display &gt; &amp;display)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::Tooltip &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Tooltip.html</anchorfile>
      <anchor>a7bf26ebe7007a80738146ccee0f3a0c6</anchor>
      <arglist>(GtkTooltip *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeDragDest</name>
    <filename>classGtk_1_1TreeDragDest.html</filename>
    <base>Glib::Interface</base>
    <member kind="function">
      <type></type>
      <name>TreeDragDest</name>
      <anchorfile>classGtk_1_1TreeDragDest.html</anchorfile>
      <anchor>ac0d7e9992898ab7a1ea229b09078ae06</anchor>
      <arglist>(TreeDragDest &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TreeDragDest &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeDragDest.html</anchorfile>
      <anchor>ae7a009b9d21aa331666ea279980970dc</anchor>
      <arglist>(TreeDragDest &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TreeDragDest</name>
      <anchorfile>classGtk_1_1TreeDragDest.html</anchorfile>
      <anchor>ae4ea6bc1ec7b44c6687d4bd876e04fc7</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTreeDragDest *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeDragDest.html</anchorfile>
      <anchor>a32d7775ca642898c25273907634a28b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTreeDragDest *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeDragDest.html</anchorfile>
      <anchor>ad1b553d8d973304da419ffcafa679482</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>drag_data_received</name>
      <anchorfile>classGtk_1_1TreeDragDest.html</anchorfile>
      <anchor>a561dd59cd23e2e42b8fa685b63f0a13c</anchor>
      <arglist>(const TreeModel::Path &amp;dest, const SelectionData &amp;selection_data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>row_drop_possible</name>
      <anchorfile>classGtk_1_1TreeDragDest.html</anchorfile>
      <anchor>a6ef01c700d5110b919cc37a16043b547</anchor>
      <arglist>(const TreeModel::Path &amp;dest_path, const SelectionData &amp;selection_data) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1TreeDragDest.html</anchorfile>
      <anchor>a259ed68ae21862fb34555400d7e87d87</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TreeDragDest.html</anchorfile>
      <anchor>a126dfd3aadde251b92c808cc347f0313</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TreeDragDest</name>
      <anchorfile>classGtk_1_1TreeDragDest.html</anchorfile>
      <anchor>a65fd338b5296a8cd016581c7d97337fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>drag_data_received_vfunc</name>
      <anchorfile>classGtk_1_1TreeDragDest.html</anchorfile>
      <anchor>a61b2d071896c38c9b79b457f1a140ba9</anchor>
      <arglist>(const TreeModel::Path &amp;dest, const SelectionData &amp;selection_data)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>row_drop_possible_vfunc</name>
      <anchorfile>classGtk_1_1TreeDragDest.html</anchorfile>
      <anchor>abed0836794706ec681ea1a1f1b297175</anchor>
      <arglist>(const TreeModel::Path &amp;dest, const SelectionData &amp;selection_data) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::TreeDragDest &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TreeDragDest.html</anchorfile>
      <anchor>a4e29c4220bb45f3521c0f4d2b34e6dec</anchor>
      <arglist>(GtkTreeDragDest *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeDragSource</name>
    <filename>classGtk_1_1TreeDragSource.html</filename>
    <base>Glib::Interface</base>
    <member kind="function">
      <type></type>
      <name>TreeDragSource</name>
      <anchorfile>classGtk_1_1TreeDragSource.html</anchorfile>
      <anchor>a7f3908639d42a1a1bf08707d6d69c78e</anchor>
      <arglist>(TreeDragSource &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TreeDragSource &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeDragSource.html</anchorfile>
      <anchor>ab21e8c299e1b082aea04b27e635323f4</anchor>
      <arglist>(TreeDragSource &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TreeDragSource</name>
      <anchorfile>classGtk_1_1TreeDragSource.html</anchorfile>
      <anchor>ac77570efae10439a6d219f00515be681</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTreeDragSource *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeDragSource.html</anchorfile>
      <anchor>a7e32effaee58d75b30a8c2c2c69320be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTreeDragSource *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeDragSource.html</anchorfile>
      <anchor>a5241622c40f47a7e4df5168de9b5ea41</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>row_draggable</name>
      <anchorfile>classGtk_1_1TreeDragSource.html</anchorfile>
      <anchor>abe13358cc36fdadda320e7b0b06d751d</anchor>
      <arglist>(const TreeModel::Path &amp;path) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>drag_data_get</name>
      <anchorfile>classGtk_1_1TreeDragSource.html</anchorfile>
      <anchor>ab14bbca3f8d82eff7f1d83923274371d</anchor>
      <arglist>(const TreeModel::Path &amp;path, SelectionData &amp;selection_data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>drag_data_delete</name>
      <anchorfile>classGtk_1_1TreeDragSource.html</anchorfile>
      <anchor>a71bcc9882e954d3b1ca1c7b636143657</anchor>
      <arglist>(const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1TreeDragSource.html</anchorfile>
      <anchor>a4e0a8df1dbbb370748f9bffdc6623482</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TreeDragSource.html</anchorfile>
      <anchor>a99e7ca9c6c9d5342f1aad33ff0444539</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TreeDragSource</name>
      <anchorfile>classGtk_1_1TreeDragSource.html</anchorfile>
      <anchor>a549eebfb2f1a160252d8c5820a0beb22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>row_draggable_vfunc</name>
      <anchorfile>classGtk_1_1TreeDragSource.html</anchorfile>
      <anchor>af2790a3d849cdbb88dc4875fbaf11065</anchor>
      <arglist>(const TreeModel::Path &amp;path) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>drag_data_get_vfunc</name>
      <anchorfile>classGtk_1_1TreeDragSource.html</anchorfile>
      <anchor>a3fa298d39dd760a792e46532456fd2c2</anchor>
      <arglist>(const TreeModel::Path &amp;path, SelectionData &amp;selection_data) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>drag_data_delete_vfunc</name>
      <anchorfile>classGtk_1_1TreeDragSource.html</anchorfile>
      <anchor>a34849cb405c5a97999f749a59c08cda3</anchor>
      <arglist>(const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::TreeDragSource &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TreeDragSource.html</anchorfile>
      <anchor>a2a6695148d1b0af9b11607363df4eec3</anchor>
      <arglist>(GtkTreeDragSource *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeIter</name>
    <filename>classGtk_1_1TreeIter.html</filename>
    <base>Gtk::TreeIterBase</base>
    <member kind="typedef">
      <type>std::bidirectional_iterator_tag</type>
      <name>iterator_category</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>ad48e11234a1ef30a56fbf64d944232e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Gtk::TreeRow</type>
      <name>value_type</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>ad6d804b4744a31a96083edd31639b82b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>difference_type</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>ab55da0493213816959f624a0d3747771</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const Gtk::TreeRow &amp;</type>
      <name>reference</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>a5011b05221c38181c734b44fa8c0d83f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const Gtk::TreeRow *</type>
      <name>pointer</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>a5ca69865eaeb38e6c56539964411307b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const void *</type>
      <name>BoolExpr</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>a18bdf86cfc172d21a7584f18835a55bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeIter</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>a5f419a854ffb2ddefa224b5afd70657d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TreeIter &amp;</type>
      <name>operator++</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>a41602c61e46dd41587f4b56db46d325e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TreeIter</type>
      <name>operator++</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>a46e9bcc4291a436b8b70992c45762372</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>TreeIter &amp;</type>
      <name>operator--</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>afed3b959fa29d90b57e417b88392e335</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TreeIter</type>
      <name>operator--</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>ab1070ff322a770f443ddf625d0ee0391</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator*</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>a8719cade1c5047b221f6cefa738547c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>operator-&gt;</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>a1daa2dd6654698e001ef8ff8b784b885</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equal</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>a644adfe72d43e87d451e3be9b9c36648</anchor>
      <arglist>(const TreeIter &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator BoolExpr</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>a2fef381e0bef5f000e6120c627259b1f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>a937201ba3ea794fc6442d5069967a214</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_stamp</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>ab0c7c66a642182e48c087fd02562b73f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_stamp</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>af30ad8f5e3754851f52ade6aa0714476</anchor>
      <arglist>(int stamp)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>a27ec6dbc88cf8ed080ebf397226f25ad</anchor>
      <arglist>(const TreeIter &amp;lhs, const TreeIter &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classGtk_1_1TreeIter.html</anchorfile>
      <anchor>a8b0a2d89e01de99226fce73c9034d2c7</anchor>
      <arglist>(const TreeIter &amp;lhs, const TreeIter &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeIterBase</name>
    <filename>classGtk_1_1TreeIterBase.html</filename>
    <member kind="function">
      <type></type>
      <name>TreeIterBase</name>
      <anchorfile>classGtk_1_1TreeIterBase.html</anchorfile>
      <anchor>a0a94a983836379121747823df61d622a</anchor>
      <arglist>(const TreeIterBase &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TreeIterBase &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeIterBase.html</anchorfile>
      <anchor>a7059a6680529da8a430aa835b32e3a07</anchor>
      <arglist>(const TreeIterBase &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeIterBase</name>
      <anchorfile>classGtk_1_1TreeIterBase.html</anchorfile>
      <anchor>a6eb65bfb8cc5a95bab1fa7ca635c0068</anchor>
      <arglist>(TreeIterBase &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TreeIterBase &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeIterBase.html</anchorfile>
      <anchor>a2bd07600f35ab51994050a8c8a912413</anchor>
      <arglist>(TreeIterBase &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeIterBase</name>
      <anchorfile>classGtk_1_1TreeIterBase.html</anchorfile>
      <anchor>a0904577c8f2602dc7a5508068f0acfbd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeIterBase</name>
      <anchorfile>classGtk_1_1TreeIterBase.html</anchorfile>
      <anchor>a10a9ab4a23c43d1252a4383ac1096c53</anchor>
      <arglist>(const GtkTreeIter *gobject)</arglist>
    </member>
    <member kind="function">
      <type>GtkTreeIter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeIterBase.html</anchorfile>
      <anchor>a1479600863c422429b606e26885fc5ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTreeIter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeIterBase.html</anchorfile>
      <anchor>a0a9ac6f632e297568fa81c67966fb737</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TreeIterBase.html</anchorfile>
      <anchor>a0d7ca80b3cc79576e0b43ef373f6064a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GtkTreeIter</type>
      <name>gobject_</name>
      <anchorfile>classGtk_1_1TreeIterBase.html</anchorfile>
      <anchor>a825f19ad20572560796c87c58a2d1cf0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeModel</name>
    <filename>classGtk_1_1TreeModel.html</filename>
    <base>Glib::Interface</base>
    <member kind="typedef">
      <type>TreeModelColumnRecord</type>
      <name>ColumnRecord</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a58f10daabaa507b4c2473c9d1b6fa584</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TreeNodeChildren</type>
      <name>Children</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>ad04e0f7d1bb271fceeef487a19b97703</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Children::iterator</type>
      <name>iterator</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a754e74cd833ff30e729f9b8d7daf4d8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Children::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>ab25e01638bef26f1e93617e36b212292</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Children::reverse_iterator</type>
      <name>reverse_iterator</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a2d898ba817a56f34dd877887e38e4640</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Children::const_reverse_iterator</type>
      <name>const_reverse_iterator</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a516b42e786cc2c3ef239e5fa46c43886</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TreeRow</type>
      <name>Row</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a297c9db68905e82fe7c3fac57f6c4de8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TreePath</type>
      <name>Path</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a06a713fecde31f2f1a7baeb0e3e2fea5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TreeRowReference</type>
      <name>RowReference</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a518281b14bcc32f9d0ef4ca0584a1a30</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; bool, const TreeModel::iterator &amp; &gt;</type>
      <name>SlotForeachIter</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a9db469cffdaa5e2d38b6a8427acd12c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; bool, const TreeModel::Path &amp; &gt;</type>
      <name>SlotForeachPath</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a254bbb5d47f64423580c055031467f98</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; bool, const TreeModel::Path &amp;, const TreeModel::iterator &amp; &gt;</type>
      <name>SlotForeachPathAndIter</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a83d0f66e0e21509699104401899ac394</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeModel</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>ac43d6be71926e7951e6fd623a3cc0929</anchor>
      <arglist>(TreeModel &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TreeModel &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a1236a9b09c8a363d83a626e9e80185e5</anchor>
      <arglist>(TreeModel &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TreeModel</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a22a0d6b66ec08f25ccd1567dbb1dae3b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTreeModel *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a190c8fd4588b844696e36e5c12966b4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTreeModel *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>ae6a7c63aca59b5904beef977753558c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>get_iter</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>aebaa795e4920ddc0ec5e39c9f4fbc660</anchor>
      <arglist>(const Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>get_iter</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a7697e287ce17c6f2e900c5762f7ba77a</anchor>
      <arglist>(const Glib::ustring &amp;path_string)</arglist>
    </member>
    <member kind="function">
      <type>Children</type>
      <name>children</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a62142e8a5beffb04a2b643d7f62c890f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Children</type>
      <name>children</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a4c867cde63dbb443e1735eb8b82f85a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>foreach_iter</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>ab65a437945c182eb2b033336bb493bee</anchor>
      <arglist>(const SlotForeachIter &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>foreach_path</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>ab3879b2da7542137d136515acc2d79fa</anchor>
      <arglist>(const SlotForeachPath &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>foreach</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a11fbc9b39c01210e525e7b6cdf91f66f</anchor>
      <arglist>(const SlotForeachPathAndIter &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>TreeModelFlags</type>
      <name>get_flags</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>af4b5de9c0bd5a79ef06fcda4fc415ef8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_n_columns</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>ac0696920f0dbcdd7677198175459743c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GType</type>
      <name>get_column_type</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>abde62f1a364d44440b2d17960ef764e6</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>TreeModel::Path</type>
      <name>get_path</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a090a3d092d3b9876c6965d8bf79ba780</anchor>
      <arglist>(const iterator &amp;iter) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>row_changed</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a8f06ebb80f930bb780eab62aac748df2</anchor>
      <arglist>(const Path &amp;path, const iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>row_inserted</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a30f829882ee631c1b83fa980a00f9778</anchor>
      <arglist>(const Path &amp;path, const iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>row_has_child_toggled</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a892cb6aa9235fb362fc0cd245c09d862</anchor>
      <arglist>(const Path &amp;path, const iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>row_deleted</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>ae8896f29424c2609fde93a873ac54b28</anchor>
      <arglist>(const Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rows_reordered</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>aee6de378aba195dcb2c6da7d9eecbfd6</anchor>
      <arglist>(const Path &amp;path, const iterator &amp;iter, const std::vector&lt; int &gt; &amp;new_order)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rows_reordered</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a4f141d63273cbac50bf84d0cf8d65948</anchor>
      <arglist>(const Path &amp;path, const std::vector&lt; int &gt; &amp;new_order)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rows_reordered</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a90ed223eefc7087e7a18d63ea21c3839</anchor>
      <arglist>(const Path &amp;path, const iterator &amp;iter, int *new_order)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_string</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>aafe5344f4012d8bf13194bd63c01cef1</anchor>
      <arglist>(const iterator &amp;iter) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const TreeModel::Path &amp;, const TreeModel::iterator &amp; &gt;</type>
      <name>signal_row_changed</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a68bcb8a4563a498b504a4e5f0fb2a731</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const TreeModel::Path &amp;, const TreeModel::iterator &amp; &gt;</type>
      <name>signal_row_inserted</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a6542a817e0f329ab2b62238331db3d6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const TreeModel::Path &amp;, const TreeModel::iterator &amp; &gt;</type>
      <name>signal_row_has_child_toggled</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>abe50982f216d36c344424711caf984cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const TreeModel::Path &amp; &gt;</type>
      <name>signal_row_deleted</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a3528812724561bcb61fdf4d5c0b387dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const TreeModel::Path &amp;, const TreeModel::iterator &amp;, int * &gt;</type>
      <name>signal_rows_reordered</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a5f625ff2c5991a9a3e7e23cf281536ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>aed810cc59d8176fac21c9559e03d4c51</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a8795c37c6a281af3488135207e1c9661</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TreeModel</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a32fe9767f9ad56c546635e143645cd5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual TreeModelFlags</type>
      <name>get_flags_vfunc</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a92ab54c2bac694b7065c617db17ef717</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>get_n_columns_vfunc</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a110c6a9e23e3332e46efdfc1d544026b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual GType</type>
      <name>get_column_type_vfunc</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>ab59203d0ac1d7084ea3a69ae59120686</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>iter_next_vfunc</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>af371b624eec90b865eae30b07cdbe20b</anchor>
      <arglist>(const iterator &amp;iter, iterator &amp;iter_next) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>get_iter_vfunc</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a2476e133c67544c3ac1e466497150382</anchor>
      <arglist>(const Path &amp;path, iterator &amp;iter) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>iter_children_vfunc</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a08a44f8c4a4cc069a6bb063911195c5d</anchor>
      <arglist>(const iterator &amp;parent, iterator &amp;iter) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>iter_parent_vfunc</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>acb0ce509e06b9a64b8b619cbf68d1269</anchor>
      <arglist>(const iterator &amp;child, iterator &amp;iter) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>iter_nth_child_vfunc</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a9425e899db0b07486220fb885de984db</anchor>
      <arglist>(const iterator &amp;parent, int n, iterator &amp;iter) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>iter_nth_root_child_vfunc</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>ad707d3063b4ef72a1fe59646fc42a7a4</anchor>
      <arglist>(int n, iterator &amp;iter) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>iter_has_child_vfunc</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a20a37892a5c4aa8b2ef975f8f24d8f35</anchor>
      <arglist>(const iterator &amp;iter) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>iter_n_children_vfunc</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a61991c22a9ae0c46423a1504ad2f5e96</anchor>
      <arglist>(const iterator &amp;iter) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>iter_n_root_children_vfunc</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a4a4465b80fd34b51d7c67b731773804d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>ref_node_vfunc</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a8a07671ff491460f94902dc2f4576c78</anchor>
      <arglist>(const iterator &amp;iter) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>unref_node_vfunc</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>ab19d09af11054d80f8ab9f19f239cb30</anchor>
      <arglist>(const iterator &amp;iter) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual TreeModel::Path</type>
      <name>get_path_vfunc</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a05875688ebf31e276835722f911a7612</anchor>
      <arglist>(const iterator &amp;iter) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>get_value_vfunc</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a67ad9adb1572fbf73afcb02386634f1b</anchor>
      <arglist>(const iterator &amp;iter, int column, Glib::ValueBase &amp;value) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>set_value_impl</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a26cf070eadb8e242bcf2b57f7e6d7d9e</anchor>
      <arglist>(const iterator &amp;row, int column, const Glib::ValueBase &amp;value)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>get_value_impl</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a78055c29e3375a53c85c6c0283ac782b</anchor>
      <arglist>(const iterator &amp;row, int column, Glib::ValueBase &amp;value) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_row_changed</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a245ce3fcf75411a8800b05213e652754</anchor>
      <arglist>(const TreeModel::Path &amp;path, const TreeModel::iterator &amp;iter)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_row_inserted</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a23134167e0e61f22e24d387eabc54890</anchor>
      <arglist>(const TreeModel::Path &amp;path, const TreeModel::iterator &amp;iter)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_row_has_child_toggled</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>abddf86f9cce30999456fe9aade3431e7</anchor>
      <arglist>(const TreeModel::Path &amp;path, const TreeModel::iterator &amp;iter)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_row_deleted</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a438d4fd8dc0228c6b57ea7a031422cf8</anchor>
      <arglist>(const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_rows_reordered</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>ac5e459f6370dafe528d928c99f0086c8</anchor>
      <arglist>(const TreeModel::Path &amp;path, const TreeModel::iterator &amp;iter, int *new_order)</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Gtk::TreeModelFilter</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a2d29b43d317146b7c021516ca1d1627c</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Gtk::TreeModelSort</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>abb98f16ab9b02fed117ba8c6749c5a0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Gtk::TreeRow</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>afedc3e0ddd939699f1dddcbc2e0ce08a</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Gtk::TreeIter</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>aa266a0cad3758229e7c5b11fb97aca02</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::TreeModel &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TreeModel.html</anchorfile>
      <anchor>a510776c39d65f700937cf14a2f6bad73</anchor>
      <arglist>(GtkTreeModel *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeModelColumn</name>
    <filename>classGtk_1_1TreeModelColumn.html</filename>
    <templarg>T</templarg>
    <base>Gtk::TreeModelColumnBase</base>
    <member kind="typedef">
      <type>T</type>
      <name>ElementType</name>
      <anchorfile>classGtk_1_1TreeModelColumn.html</anchorfile>
      <anchor>a548b32f98d1fb957559ebc4c709b8b3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Glib::Value&lt; T &gt;</type>
      <name>ValueType</name>
      <anchorfile>classGtk_1_1TreeModelColumn.html</anchorfile>
      <anchor>a769fbaa0f9fd6a4c921ebb61720ed294</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeModelColumn</name>
      <anchorfile>classGtk_1_1TreeModelColumn.html</anchorfile>
      <anchor>a52cf4894a268461a6bb4b26f913874e5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeModelColumnBase</name>
    <filename>classGtk_1_1TreeModelColumnBase.html</filename>
    <member kind="function">
      <type>GType</type>
      <name>type</name>
      <anchorfile>classGtk_1_1TreeModelColumnBase.html</anchorfile>
      <anchor>a2d15a295c3597e2940216e57bc1d4af3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>index</name>
      <anchorfile>classGtk_1_1TreeModelColumnBase.html</anchorfile>
      <anchor>af1425d4f3edac24409582dd271cfec15</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TreeModelColumnBase</name>
      <anchorfile>classGtk_1_1TreeModelColumnBase.html</anchorfile>
      <anchor>a761854a755c2bc705c062db4951e98ab</anchor>
      <arglist>(GType g_type)</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Gtk::TreeModelColumnRecord</name>
      <anchorfile>classGtk_1_1TreeModelColumnBase.html</anchorfile>
      <anchor>ac76999a1598577a8ebfad075754eb704</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classGtk_1_1TreeModelColumnBase.html</anchorfile>
      <anchor>a1f4af6a0e47968de278abd74b3518a7e</anchor>
      <arglist>(const TreeModelColumnBase &amp;lhs, const TreeModelColumnBase &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classGtk_1_1TreeModelColumnBase.html</anchorfile>
      <anchor>ae1aad7c9eb64bcfd9931659e24cc6336</anchor>
      <arglist>(const TreeModelColumnBase &amp;lhs, const TreeModelColumnBase &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeModelColumnRecord</name>
    <filename>classGtk_1_1TreeModelColumnRecord.html</filename>
    <member kind="function">
      <type></type>
      <name>TreeModelColumnRecord</name>
      <anchorfile>classGtk_1_1TreeModelColumnRecord.html</anchorfile>
      <anchor>af0c1c552400694ad0d7e5695f8868d78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TreeModelColumnRecord</name>
      <anchorfile>classGtk_1_1TreeModelColumnRecord.html</anchorfile>
      <anchor>af0397b1c80d141d7ede270da3e733698</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classGtk_1_1TreeModelColumnRecord.html</anchorfile>
      <anchor>a7084fc10fa1abf0d7317558b8462559f</anchor>
      <arglist>(TreeModelColumnBase &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>size</name>
      <anchorfile>classGtk_1_1TreeModelColumnRecord.html</anchorfile>
      <anchor>a024f6f44405b1f1c61a7e85d41dafe7d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const GType *</type>
      <name>types</name>
      <anchorfile>classGtk_1_1TreeModelColumnRecord.html</anchorfile>
      <anchor>af56c98a2bce96003a281b4cd831f1139</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeModelFilter</name>
    <filename>classGtk_1_1TreeModelFilter.html</filename>
    <base>Glib::Object</base>
    <base>Gtk::TreeModel</base>
    <member kind="typedef">
      <type>sigc::slot&lt; bool, const TreeModel::const_iterator &amp; &gt;</type>
      <name>SlotVisible</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>ae703c124ed55cc476bda9714455bd76f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; void, const Gtk::TreeModel::iterator &amp;, Glib::ValueBase &amp;, int &gt;</type>
      <name>SlotModify</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a86ea3bc241259334a87207b01ad508b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeModelFilter</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a48a196155ea1b878e160ee0f6f8a9f59</anchor>
      <arglist>(TreeModelFilter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TreeModelFilter &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a7a1768fe5b9f3c5c8fbec15d5e8d06ef</anchor>
      <arglist>(TreeModelFilter &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TreeModelFilter</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a05058d16603e843e67a13b2b3d6296b2</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTreeModelFilter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a8b2569b6b90a043b8c78e01e97bd6d55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTreeModelFilter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a534aa3244b78967356421b70e703320f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkTreeModelFilter *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a55f6b786af57385b6e792934ef0077ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visible_func</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>ad4d4273a355ad702b86718e714356e47</anchor>
      <arglist>(const SlotVisible &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_modify_func</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a260411bc2461225c0ee80fa3d07e9727</anchor>
      <arglist>(const TreeModelColumnRecord &amp;columns, const SlotModify &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visible_column</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a78f4cc1a7d58261716ac51619316a45e</anchor>
      <arglist>(const TreeModelColumnBase &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visible_column</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a4a9b8e778e54a0e384b883daf2268340</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a841f5c3d099a9ef542352dc3ad2248e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a0902b8ed69b03efe25ad435e09101240</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>convert_child_iter_to_iter</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a1dfd71e0b35937d70cf7615c982cb09d</anchor>
      <arglist>(const iterator &amp;child_iter) const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>convert_iter_to_child_iter</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>ac96c6c5d4cbe473b0cf507a9dc77a361</anchor>
      <arglist>(const iterator &amp;filter_iter) const </arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>convert_child_path_to_path</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>af5f71bebaca37e385f20b3c00b215fab</anchor>
      <arglist>(const Path &amp;child_path) const </arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>convert_path_to_child_path</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a256a0b479e096e9d1cf1e8a7b9961dfb</anchor>
      <arglist>(const Path &amp;filter_path) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refilter</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a00565675a42f714a76e9340894e29126</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_cache</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a19c5a6d665017908ae5723d1d2dfa10d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; TreeModel &gt; &gt;</type>
      <name>property_child_model</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a3574ae1412c9eace1c9279355149df3d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; TreeModel::Path &gt;</type>
      <name>property_virtual_root</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>aa2ff0741287e5b996848eb1271222f29</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>addfee05911c0ecaf7c1d4a789002b416</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; TreeModelFilter &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>ac4d7aded7af332e2865fcce8b56b2503</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;child_model)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; TreeModelFilter &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a1cb4ac25f615fadc6282aea067c6572d</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;child_model, const TreeModel::Path &amp;virtual_root)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TreeModelFilter</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a08ba79783d7c61fb112473eb915ce7dc</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;child_model)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TreeModelFilter</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>a42b4477837155ba56bbb416f2cf3515e</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;child_model, const TreeModel::Path &amp;virtual_root)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set_value_impl</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>ac9cd6f92d84d7a853ab7d3f7165911f9</anchor>
      <arglist>(const iterator &amp;row, int column, const Glib::ValueBase &amp;value) override</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::TreeModelFilter &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TreeModelFilter.html</anchorfile>
      <anchor>ad7f5385f08664253c28d58655565e815</anchor>
      <arglist>(GtkTreeModelFilter *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeModelSort</name>
    <filename>classGtk_1_1TreeModelSort.html</filename>
    <base>Glib::Object</base>
    <base>Gtk::TreeModel</base>
    <base>Gtk::TreeSortable</base>
    <member kind="function">
      <type></type>
      <name>TreeModelSort</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>a086ba10306a45af88f8fcb397c1105f5</anchor>
      <arglist>(TreeModelSort &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TreeModelSort &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>a4429467760dba40abeb430ab5ee02ad6</anchor>
      <arglist>(TreeModelSort &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TreeModelSort</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>ada4a9bdd1af5a40c84baf53ad19a482b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTreeModelSort *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>a29ab164c823754b5a6c9a8a9dcb8d393</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTreeModelSort *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>a46201ea3130b92a85b2cf8d839f59659</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkTreeModelSort *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>a1702cc8e424b716604f282dab2bd00da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>a461d21594a22ee599da259723696d2f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>a908baf50265d85dedf1c0dd075bfdfc8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>convert_child_path_to_path</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>ac60f6b4459fe01569b07898354df2ae6</anchor>
      <arglist>(const Path &amp;child_path) const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>convert_child_iter_to_iter</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>a7548e9e7e93d39e0cd25bfd8a6cc4cd2</anchor>
      <arglist>(const iterator &amp;child_iter) const </arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>convert_path_to_child_path</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>aef6eb67a15f93d03de184389048cb8bd</anchor>
      <arglist>(const Path &amp;sorted_path) const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>convert_iter_to_child_iter</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>a81aff697f035af5000c08f47cb7dfd38</anchor>
      <arglist>(const iterator &amp;sorted_iter) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset_default_sort_func</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>acbfdf9cf2b2a9fa020ef1c0baddf2b67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_cache</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>a485b2b2193d6a5eba854380b66c5ae37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>iter_is_valid</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>a39cd337bbff15cec06a4f115bddc2355</anchor>
      <arglist>(const iterator &amp;iter) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; TreeModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>a822b499f978f6633b3244fa6b151494c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>a0d514721ff90d8ab2e986f0e119bac35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; TreeModelSort &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>a935e3e841454ca8f5356a89939c78b39</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TreeModelSort</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>a0ea72bb50b9191a2d5f96aace894c034</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set_value_impl</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>a36b29f080bed91fec8cc2cca188d3097</anchor>
      <arglist>(const iterator &amp;row, int column, const Glib::ValueBase &amp;value) override</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::TreeModelSort &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TreeModelSort.html</anchorfile>
      <anchor>aa305e93baaa6d6067930b3e9381e841a</anchor>
      <arglist>(GtkTreeModelSort *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeNodeChildren</name>
    <filename>classGtk_1_1TreeNodeChildren.html</filename>
    <base>Gtk::TreeIter</base>
    <member kind="typedef">
      <type>Gtk::TreeRow</type>
      <name>value_type</name>
      <anchorfile>classGtk_1_1TreeNodeChildren.html</anchorfile>
      <anchor>a67c2eca3018e0121026bee8610c09171</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>size_type</name>
      <anchorfile>classGtk_1_1TreeNodeChildren.html</anchorfile>
      <anchor>aa96404017f7ce62944cbc85ea521f682</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>difference_type</name>
      <anchorfile>classGtk_1_1TreeNodeChildren.html</anchorfile>
      <anchor>af369358b71331b358b7c86b0cf7f6703</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Gtk::TreeIter</type>
      <name>iterator</name>
      <anchorfile>classGtk_1_1TreeNodeChildren.html</anchorfile>
      <anchor>ad327867180db4997bb42159112a47f24</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Gtk::TreeIter</type>
      <name>const_iterator</name>
      <anchorfile>classGtk_1_1TreeNodeChildren.html</anchorfile>
      <anchor>a28d8776c1eb0a4b4bb830e886fc0c5e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::reverse_iterator&lt; iterator &gt;</type>
      <name>reverse_iterator</name>
      <anchorfile>classGtk_1_1TreeNodeChildren.html</anchorfile>
      <anchor>a1b11dc8d1e456f72c67a4011e410176c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::reverse_iterator&lt; const_iterator &gt;</type>
      <name>const_reverse_iterator</name>
      <anchorfile>classGtk_1_1TreeNodeChildren.html</anchorfile>
      <anchor>ae3a940e41ed2256f2d7c811c65e5e6d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const void *</type>
      <name>BoolExpr</name>
      <anchorfile>classGtk_1_1TreeNodeChildren.html</anchorfile>
      <anchor>a053136b1d9d4e5b0f15b01efe3fd28ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classGtk_1_1TreeNodeChildren.html</anchorfile>
      <anchor>a94f769a6d10e19ce8e165d8de5a5cda9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classGtk_1_1TreeNodeChildren.html</anchorfile>
      <anchor>a0e8ef9d3bca7982b6c705ba006b21c2b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classGtk_1_1TreeNodeChildren.html</anchorfile>
      <anchor>a08fbd2d34dda49e8d8d95e2e1f67067b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classGtk_1_1TreeNodeChildren.html</anchorfile>
      <anchor>afd2fa14ad865eb7595473d47d399c457</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classGtk_1_1TreeNodeChildren.html</anchorfile>
      <anchor>aecec1299897faa30611b5c70c572864c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classGtk_1_1TreeNodeChildren.html</anchorfile>
      <anchor>a9f574f9ff514cdfd2c87365990264712</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classGtk_1_1TreeNodeChildren.html</anchorfile>
      <anchor>a173e6650556a3ef22858be18a381aabf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classGtk_1_1TreeNodeChildren.html</anchorfile>
      <anchor>a31bdb53ee4fef34491fc6d89e526b104</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>operator[]</name>
      <anchorfile>classGtk_1_1TreeNodeChildren.html</anchorfile>
      <anchor>aad3325504ef31d21ec3326d24f25d5b9</anchor>
      <arglist>(size_type index) const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classGtk_1_1TreeNodeChildren.html</anchorfile>
      <anchor>a6a357d22835f92368002b1a9a8cfa00e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classGtk_1_1TreeNodeChildren.html</anchorfile>
      <anchor>a00e819126d023abf920d5103d4bc44c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator BoolExpr</name>
      <anchorfile>classGtk_1_1TreeNodeChildren.html</anchorfile>
      <anchor>a517990316cb1453f33a06adadf9265da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classGtk_1_1TreeNodeChildren.html</anchorfile>
      <anchor>acd5ff0fa0208b643ab79976f7ac7c1fa</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreePath</name>
    <filename>classGtk_1_1TreePath.html</filename>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>size_type</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a99cbbd70d52aa10ea74981c2fa6d021b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>difference_type</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a8641ab32a5596000f307ae3608d887ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>value_type</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>ae7cdee9d9ad3e55c7353ceb63a8f8e26</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int &amp;</type>
      <name>reference</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a8ba6cc97dc395efc853f6a517b53252b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const int &amp;</type>
      <name>const_reference</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a978a88a4b11b340f82d92e307877da5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int *</type>
      <name>iterator</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a4429ec3b888a7469705c5cbe117febb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const int *</type>
      <name>const_iterator</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>af681c0578f407544efa3a863af98dfa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::reverse_iterator&lt; iterator &gt;</type>
      <name>reverse_iterator</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>af785d04631b9c0c9bbbdaf0a7985f63a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::reverse_iterator&lt; const_iterator &gt;</type>
      <name>const_reverse_iterator</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>adb63aa886bebee7d8c4dd8c24588e018</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const void *</type>
      <name>BoolExpr</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a09c7bab20a27d2b4925ed4eed7ee5655</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreePath</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>aab727e2aedceef53b09999b0784b4f29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreePath</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a856ca3b96fa118735c6a7df07cf56035</anchor>
      <arglist>(const TreePath &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>TreePath &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a8114b0d1e52e9b2b2fcaa770fc9a3c3c</anchor>
      <arglist>(const TreePath &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreePath</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a705c4d2367c8d642e866b7298ef26c94</anchor>
      <arglist>(TreePath &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TreePath &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a045f0e42bead57442a960e7bcee55dd1</anchor>
      <arglist>(TreePath &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TreePath</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a03eac54c54a46e35e9a714643aa828c3</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>aa0d9a96b63ee2e42071ba37a267a025e</anchor>
      <arglist>(TreePath &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GtkTreePath *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a6b395e3a715bea86fb3570b6ca1c12bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTreePath *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>aa93452c99b4a3f653bd9db0a0d87db7a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkTreePath *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a90907cb3ec2e64504d5f1281a4c751d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreePath</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a2767575c4dc4924a499c23241ae88a1d</anchor>
      <arglist>(GtkTreePath *gobject, bool make_a_copy=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreePath</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>aa91b5da376e8b3284d84f744b09df6ef</anchor>
      <arglist>(size_type n, value_type value=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreePath</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>abed03e843e12b7b64db39fae5b26cc30</anchor>
      <arglist>(const Glib::ustring &amp;path)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreePath</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a34aa9b8bcd7706c3f7202f68caca36d8</anchor>
      <arglist>(const TreeModel::iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreePath</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>aaf8dc0c1f3f888681e3a39dae20b7861</anchor>
      <arglist>(In pbegin, In pend)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>af244289459d3a0af1bb574eed84b0d3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TreePath &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a0553bca2f5bc31343ef02d38183f878f</anchor>
      <arglist>(const TreeModel::iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator BoolExpr</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a112e0af279739ff36f3204c6d021a8b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>ae186513966918ea3e30a34c07d82fff6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a50fcad8eed42667ad56318ccf8b9bea2</anchor>
      <arglist>(In pbegin, In pend)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>adf8edbca65a75eb85a2f5ee487b0e6a9</anchor>
      <arglist>(In pbegin, In pend)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a347cad71a31af29ed6fb775485ef4892</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_front</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a9fd4b8c6de711debeb9645fdb25ba836</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a178982ca5a3c9d97492e475a30e76562</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>af976135bc7cf81478ae90533e917d67d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator[]</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>ac15f76e56ff5bda112eda0e3ea20f47b</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>operator[]</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a6a4c4017ad44a3a15ed59de3fcac5d46</anchor>
      <arglist>(size_type i) const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a5e704ac7b9473507e8c282c2c3901226</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a68aa895c43cea0c67d0165769faf3bf2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a5c95190bd962811b9074c80129ebf294</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a549a2387cfd790f352bbcfd2b92f6f60</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a19a4ae51bd965d01deec8739a5937e8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>ab75ed31fcaeaaf397c6b5448b980f1d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>abf761ee966580b9a8dfc8a21fd34ba3e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a0721aa8cbdadca7fe404fdd56da6026a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>front</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a88e6600f57d7f4f0d557ba40124ab90d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>front</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>ae3d39e44c6a255b951bf43ff72bb759f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>back</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>aeb126017b89d14116bddc42a332f902c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>back</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>aa91faa49367a1fd4ee0d7272fa09b0b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>next</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>ae770411bfac9b957e69152012599eecc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>prev</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>adedbfeb13aa226f52862197f92217dbb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>up</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a33117cfbe4c36cb36c7b526fbd4a28c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>down</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>adf27662d00fe313974e63566eaffa04d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_ancestor</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a39b28a92a821f414fcc5d965257dc756</anchor>
      <arglist>(const TreePath &amp;descendant) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_descendant</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a21caa3ec9131c67be6f4c50410f9abb6</anchor>
      <arglist>(const TreePath &amp;ancestor) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>to_string</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>ab3790695ac39f542235b0313dd711f3a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_in_selection_data</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>adfc614835d6d32dbbb30984c070fe49e</anchor>
      <arglist>(SelectionData &amp;selection_data, const Glib::RefPtr&lt; const TreeModel &gt; &amp;model) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>aea5817b3fea755f256e947b8693e3cc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>get_from_selection_data</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a1b4aa9ff0849b0be7ab04030a01f84ba</anchor>
      <arglist>(const SelectionData &amp;selection_data, Glib::RefPtr&lt; TreeModel &gt; &amp;model, TreePath &amp;path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>get_from_selection_data</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a4d3bcc90e94917722759f161eac79257</anchor>
      <arglist>(const SelectionData &amp;selection_data, TreePath &amp;path)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GtkTreePath *</type>
      <name>gobject_</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>af5885a402d809357dd6f4a54ff02448b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>ab3245f7b3c2e377776d1402e46317716</anchor>
      <arglist>(const TreePath &amp;lhs, const TreePath &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a25a7ab4ccfa3e9c0fc38f7cf9c8ae87c</anchor>
      <arglist>(const TreePath &amp;lhs, const TreePath &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a8e4d1ae1d86990e825b3337a450e2b43</anchor>
      <arglist>(const TreePath &amp;lhs, const TreePath &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a8fc7a593e8f7af6d239b93abceefaa64</anchor>
      <arglist>(const TreePath &amp;lhs, const TreePath &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>aea27279a029d5e26d99b0914f115d5fe</anchor>
      <arglist>(const TreePath &amp;lhs, const TreePath &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a683125d78e4c286c8d42030062dae6ee</anchor>
      <arglist>(const TreePath &amp;lhs, const TreePath &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a7a92f5ce349b4de53fefad8859908283</anchor>
      <arglist>(TreePath &amp;lhs, TreePath &amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Gtk::TreePath</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TreePath.html</anchorfile>
      <anchor>a386743cf4644e0479bb91c3589fd9e07</anchor>
      <arglist>(GtkTreePath *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeRow</name>
    <filename>classGtk_1_1TreeRow.html</filename>
    <base>Gtk::TreeIter</base>
    <member kind="typedef">
      <type>const void *</type>
      <name>BoolExpr</name>
      <anchorfile>classGtk_1_1TreeRow.html</anchorfile>
      <anchor>a5a38a7fa20f2e69eef053e8a811e582a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>TreeValueProxy&lt; ColumnType &gt;</type>
      <name>operator[]</name>
      <anchorfile>classGtk_1_1TreeRow.html</anchorfile>
      <anchor>aaf9be9abd2a264e1a562f0e745ad4721</anchor>
      <arglist>(const TreeModelColumn&lt; ColumnType &gt; &amp;column) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_value</name>
      <anchorfile>classGtk_1_1TreeRow.html</anchorfile>
      <anchor>a79e62bd6eb9dc803aada1d5f7b6ed915</anchor>
      <arglist>(const TreeModelColumn&lt; ColumnType &gt; &amp;column, const ColumnType &amp;data) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_value</name>
      <anchorfile>classGtk_1_1TreeRow.html</anchorfile>
      <anchor>a2184f58e1571a75976b8273af9ba910e</anchor>
      <arglist>(int column, const ColumnType &amp;data) const </arglist>
    </member>
    <member kind="function">
      <type>ColumnType</type>
      <name>get_value</name>
      <anchorfile>classGtk_1_1TreeRow.html</anchorfile>
      <anchor>a9e0d32ec1cfef924fc6012093d222785</anchor>
      <arglist>(const TreeModelColumn&lt; ColumnType &gt; &amp;column) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_value</name>
      <anchorfile>classGtk_1_1TreeRow.html</anchorfile>
      <anchor>a2e0a925de843c616f86297450992f9da</anchor>
      <arglist>(int column, ColumnType &amp;data) const </arglist>
    </member>
    <member kind="function">
      <type>const TreeNodeChildren &amp;</type>
      <name>children</name>
      <anchorfile>classGtk_1_1TreeRow.html</anchorfile>
      <anchor>a334dc0b2d96c219e24de467d3fcbd091</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TreeIter</type>
      <name>parent</name>
      <anchorfile>classGtk_1_1TreeRow.html</anchorfile>
      <anchor>a9d55079617fc05a849af189b657e7679</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator BoolExpr</name>
      <anchorfile>classGtk_1_1TreeRow.html</anchorfile>
      <anchor>a26862b4b1de30557583eb4011aeb14f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classGtk_1_1TreeRow.html</anchorfile>
      <anchor>a256d9c1def321f1968c2f01299781e14</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkTreeIter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeRow.html</anchorfile>
      <anchor>a70f407de60552e0270ed73471ad07cd1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTreeIter *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeRow.html</anchorfile>
      <anchor>aabd78b5aa80816c10b49d51f797ce7b7</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeRowReference</name>
    <filename>classGtk_1_1TreeRowReference.html</filename>
    <member kind="typedef">
      <type>const void *</type>
      <name>BoolExpr</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>aadd20f3b7236d854b12db9e0f6f1c7bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeRowReference</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>aa09ed6c7c3501d7673f6e86ee3096415</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeRowReference</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a91b5f8e5d0776aa2565401617260e39e</anchor>
      <arglist>(GtkTreeRowReference *gobject, bool make_a_copy=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeRowReference</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a3224ca7fd54e6e5a9e630e2cda31ff86</anchor>
      <arglist>(const TreeRowReference &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>TreeRowReference &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a249005f09fc7cbcddd87b5e7cf7a9f98</anchor>
      <arglist>(const TreeRowReference &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeRowReference</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a3b5087414df8c538e34601ed58b3e9c7</anchor>
      <arglist>(TreeRowReference &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TreeRowReference &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a5172cd38b070a5f17ac5eb4331de2932</anchor>
      <arglist>(TreeRowReference &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TreeRowReference</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a0a2149db55cd96c6cac04f0549185359</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a7b2f86aa5ebbedb78f708b8f7ec4c2a4</anchor>
      <arglist>(TreeRowReference &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GtkTreeRowReference *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a4f60ce036b536cbdc6faf49b99da9faf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTreeRowReference *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a040c0dd3c56e6f17f249b6288d2ef6cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkTreeRowReference *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a801b93e7644adca07941e0b3fca9ec85</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeRowReference</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a1c0fa99f2f5935dbac520cf7d4141db5</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;model, const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator BoolExpr</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>af5bbd6ef9e32e5ae6bcd1ca75d5d54b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a89afd4f4643a6e59c641ccaa75765681</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TreeModel::Path</type>
      <name>get_path</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a42a60c4224e8c657af0385b83dcb8fb4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>ace90dbff8f664ebdbc0f1f62062fa309</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a28929c4298c15e0d68e19f9c8d18ab52</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a15d80b096f9f851eda8370504a400352</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a475f0278dc45a93a78a154045e1e0a2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GtkTreeRowReference *</type>
      <name>gobject_</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a21520d3a503787e10fb7106f18bb8a87</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a40298c36e4c2485147f711c156c432b2</anchor>
      <arglist>(TreeRowReference &amp;lhs, TreeRowReference &amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Gtk::TreeRowReference</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TreeRowReference.html</anchorfile>
      <anchor>a78ffb37dc9b85f6f5ff78a4d97a067b3</anchor>
      <arglist>(GtkTreeRowReference *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeSelection</name>
    <filename>classGtk_1_1TreeSelection.html</filename>
    <base>Glib::Object</base>
    <member kind="typedef">
      <type>sigc::slot&lt; bool, const Glib::RefPtr&lt; TreeModel &gt; &amp;, const TreeModel::Path &amp;, bool &gt;</type>
      <name>SlotSelect</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a2262e022dc13c1918af1127f42a158b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; void, const TreeModel::iterator &amp; &gt;</type>
      <name>SlotForeachIter</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a0157e2ca1c2fa319a93913c782a7b640</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; void, const TreeModel::Path &amp; &gt;</type>
      <name>SlotForeachPath</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>aab1d3454d5216f1574cb53bf54205f74</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; void, const TreeModel::Path &amp;, const TreeModel::iterator &amp; &gt;</type>
      <name>SlotForeachPathAndIter</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a31c44b43f5acd501a0a411c04bdf4706</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeSelection</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a77d721c278e2c42ad21f224053a4c101</anchor>
      <arglist>(TreeSelection &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TreeSelection &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a5162b56bfdbd88a165ffaacf93667cc8</anchor>
      <arglist>(TreeSelection &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TreeSelection</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a83dad855f51b76071f56f95d58e32327</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTreeSelection *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>aa272d22e2a8cf68ef941bb898e6ae7a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTreeSelection *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>afbfe1d2a5920a31ad730124c0ed2ffbe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkTreeSelection *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>aa691fc7df426d2f19612cc82c512596d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_mode</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a8c77e2bc04394554fe272c90aec1b064</anchor>
      <arglist>(SelectionMode type)</arglist>
    </member>
    <member kind="function">
      <type>SelectionMode</type>
      <name>get_mode</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>ab83925a34c53e387e2813f2dc6a08587</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_select_function</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a7c408b8e2b45b4a65a2a9ad66d9602cf</anchor>
      <arglist>(const SlotSelect &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>TreeView *</type>
      <name>get_tree_view</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a5564087ad3cb1979d546d905e9364294</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TreeView *</type>
      <name>get_tree_view</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a0eb46be8a024f92607b1f12b581e16c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>ae6e6474b69278a024ce2f50cc81f3bac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a32d988aaf33b721a41f264255f8f2ee3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TreeModel::iterator</type>
      <name>get_selected</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>af949a1a078bc5c2272e25e0c2987a81f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TreeModel::iterator</type>
      <name>get_selected</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a6c38032e5eb2a7b4a089fb74552c7910</anchor>
      <arglist>(Glib::RefPtr&lt; TreeModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; TreeModel::Path &gt;</type>
      <name>get_selected_rows</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a601c30abb10d1a8f21b1688b594b5682</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; TreeModel::Path &gt;</type>
      <name>get_selected_rows</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a45adf98479215cd6965996b4986fce85</anchor>
      <arglist>(Glib::RefPtr&lt; TreeModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count_selected_rows</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>abd81154bc8b483b8110bf67bf25a0022</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selected_foreach_iter</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a632c93a952e9597059647af3f7fd7f26</anchor>
      <arglist>(const SlotForeachIter &amp;slot) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selected_foreach_path</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>ad2b0b0926ada175f4d363ecba50810f0</anchor>
      <arglist>(const SlotForeachPath &amp;slot) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selected_foreach</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>ae954b4f6786bbc3c06daaf4ac348bfc8</anchor>
      <arglist>(const SlotForeachPathAndIter &amp;slot) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>abe2e36ac9f950b47e6290ce84af939ae</anchor>
      <arglist>(const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a70c91065737a3ff94fee94e1ed7b83ae</anchor>
      <arglist>(const TreeModel::iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a0e5b782c5a0af7ae4f257d5af932038f</anchor>
      <arglist>(const TreeModel::Row &amp;row)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a22b9264d8c0b06d3678dd022a6994a61</anchor>
      <arglist>(const TreeModel::Path &amp;start_path, const TreeModel::Path &amp;end_path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unselect</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a77e91cb1efd4cfcc05832aa97bc92a4c</anchor>
      <arglist>(const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unselect</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a5ef57ea9bc6f15126ba43f8da4199b46</anchor>
      <arglist>(const TreeModel::Path &amp;start_path, const TreeModel::Path &amp;end_path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unselect</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a5aa28ea9eea8f0b8a02a28a4d4472a08</anchor>
      <arglist>(const TreeModel::iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_selected</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>ab5241ae9e120dcd3c680cec28d0f34f6</anchor>
      <arglist>(const TreeModel::Path &amp;path) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_selected</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a48d8c7d8dfab291eefc72dbc207ddbc3</anchor>
      <arglist>(const TreeModel::iterator &amp;iter) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select_all</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a2cb8620473e74aec20511c3f655e3e1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unselect_all</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>aeac5766a4626733996641ed2583a09e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; SelectionMode &gt;</type>
      <name>property_mode</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>afb0431905473fbf7252e422108877270</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; SelectionMode &gt;</type>
      <name>property_mode</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>af47dfd7a917c3ccde7e951e7a2155f7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_changed</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a55b5e2644f006dd3b37cf737e65150c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a373c44490f8dda233fd36bea5d573eb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_changed</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a1c0c20b2c05f751112e8fa0a8da93844</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::TreeSelection &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TreeSelection.html</anchorfile>
      <anchor>a3005841d69e579cf3a75e7a4699d4fa6</anchor>
      <arglist>(GtkTreeSelection *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeSortable</name>
    <filename>classGtk_1_1TreeSortable.html</filename>
    <base>Glib::Interface</base>
    <member kind="enumvalue">
      <name>DEFAULT_SORT_COLUMN_ID</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a4a8438774fb78456b1f3cddb8115d939a1f2659275b72f896314ec041cd75f1eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULT_UNSORTED_COLUMN_ID</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a4a8438774fb78456b1f3cddb8115d939a829bad43a1d6ce9e9bb97ab9523b03ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; int, const Gtk::TreeModel::iterator &amp;, const Gtk::TreeModel::iterator &amp; &gt;</type>
      <name>SlotCompare</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>abc46c35265edce84cfb5ba8e807a0921</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULT_SORT_COLUMN_ID</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a4a8438774fb78456b1f3cddb8115d939a1f2659275b72f896314ec041cd75f1eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULT_UNSORTED_COLUMN_ID</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a4a8438774fb78456b1f3cddb8115d939a829bad43a1d6ce9e9bb97ab9523b03ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeSortable</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a66d6091c6d54b785e61224316adb17b4</anchor>
      <arglist>(TreeSortable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TreeSortable &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>ad3490dc1aab25a823e8d18bb4b5b6653</anchor>
      <arglist>(TreeSortable &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TreeSortable</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>ad3a67d1369cbea009dfa511f058e677f</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTreeSortable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a7c49843a1adf9e7bb1b7b54705bd301d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTreeSortable *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>af2342a4e67cb1b936cc8cd64a25b0118</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_sort_column_id</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>ac5ac45039b7e1f4698976d123ff22ed2</anchor>
      <arglist>(int &amp;sort_column_id, SortType &amp;order) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sort_column</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>ad4a0c6be13062c64599be8ed73c1e64e</anchor>
      <arglist>(const TreeModelColumnBase &amp;sort_column_id, SortType order)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sort_column</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a01ce9fab2e47887558611a2654f44a7a</anchor>
      <arglist>(int sort_column_id, SortType order)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sort_func</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a3a6454bd0a285324c71edb73e403cb1c</anchor>
      <arglist>(const TreeModelColumnBase &amp;sort_column, const SlotCompare &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sort_func</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a0dfc1039a36ed6bb5a6ad3adda030ad6</anchor>
      <arglist>(int sort_column_id, const SlotCompare &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_default_sort_func</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>aa831da01a9e3b7c0dbf3b84be934bf4b</anchor>
      <arglist>(const SlotCompare &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_default_sort_func</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>ac05f7caf5413c4b618a6f605de504363</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_default_sort_func</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a05b460f3284eb8e61efe6df81c11f628</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sort_column_changed</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a17cecb3ed2dae413faefab957f1dac8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_sort_column_changed</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a7303dbac51c3ea60cffa8368ac57a760</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_interface</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>aaa176c5533e23672cd608418244657e2</anchor>
      <arglist>(GType gtype_implementer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a25dc0e7a2defcc8dbdda0eb47d1af93b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TreeSortable</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a887a1d33c62b270d14caba5c4c3f1dfc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>get_sort_column_id_vfunc</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a68a2e0fa2fedb2dfc901d48dc7d3fc84</anchor>
      <arglist>(int *sort_column_id, SortType *order) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>set_sort_column_id_vfunc</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a4f056e4b69e93516ef76ca73ecdc7cf6</anchor>
      <arglist>(int sort_column_id, SortType order)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>set_sort_func_vfunc</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a6633115a0b052b654abf5508d103808c</anchor>
      <arglist>(int sort_column_id, GtkTreeIterCompareFunc func, void *data, GDestroyNotify destroy)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>set_default_sort_func_vfunc</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>aecb9baf38a85890e90b0daacfac560da</anchor>
      <arglist>(GtkTreeIterCompareFunc func, void *data, GDestroyNotify destroy)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>has_default_sort_func_vfunc</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a46e15163d13e59e7c2bf9464b0440921</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>sort_column_changed_vfunc</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>ab9423c8e0a1350aa1f263d16f3bd90a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_sort_column_changed</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a6959841c149dd99e9140fb3756fb8e9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::TreeSortable &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TreeSortable.html</anchorfile>
      <anchor>a276286ba7fdf96acb1af36b5c58095b6</anchor>
      <arglist>(GtkTreeSortable *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeStore</name>
    <filename>classGtk_1_1TreeStore.html</filename>
    <base>Glib::Object</base>
    <base>Gtk::TreeModel</base>
    <base>Gtk::TreeSortable</base>
    <base>Gtk::TreeDragSource</base>
    <base>Gtk::TreeDragDest</base>
    <base>Gtk::Buildable</base>
    <member kind="function">
      <type></type>
      <name>TreeStore</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>a5eb67fdb471f07d59a6cd6a48085e2c4</anchor>
      <arglist>(TreeStore &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TreeStore &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>ad8880647ebf322d4987c362f2318e99e</anchor>
      <arglist>(TreeStore &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TreeStore</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>a6f463a83e04cf03b98a069fef4f3da49</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTreeStore *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>a1f6405d80c3b1e4a9672a69f6c13f6f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTreeStore *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>adecedf7e9f77e9aa8e7eb44990fd8a74</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkTreeStore *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>a03c99380578b846392bee1d7b6b49e52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_column_types</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>ae403175617926a3156d91c661e0170d4</anchor>
      <arglist>(const TreeModelColumnRecord &amp;columns)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>aaf27501bd1c7f533feea94a8fa97be63</anchor>
      <arglist>(const iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>ad4545e4d3e813f53eb0387ed3fe2db2e</anchor>
      <arglist>(const iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert_after</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>aafba6cb5bfad42f83b1edf6975d29aad</anchor>
      <arglist>(const iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>prepend</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>a66db1d0c1b1230e6e2be8f3774b8a570</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>prepend</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>ad287ec923f9649320ce455693c920e96</anchor>
      <arglist>(const TreeNodeChildren &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>append</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>a3568029b9a2faf8a919aa5fd44661c37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>append</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>a5be56047f3d4066874b26166b1882c86</anchor>
      <arglist>(const TreeNodeChildren &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>iter_swap</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>ac43cf2594d06cfe44eb8d84fbc250c1e</anchor>
      <arglist>(const iterator &amp;a, const iterator &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>af1db9129be2cc296e701aa40aff7499c</anchor>
      <arglist>(const iterator &amp;source, const iterator &amp;destination)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reorder</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>ace66b6b6b216116d8a7bf18df27a02a1</anchor>
      <arglist>(const TreeNodeChildren &amp;node, const std::vector&lt; int &gt; &amp;new_order)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>a59860756eec8e5a63c0103dd947db87c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_ancestor</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>aeee48c56b6298cd0a39b4a52d63449ba</anchor>
      <arglist>(const iterator &amp;iter, const iterator &amp;descendant) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iter_depth</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>ae9c345c47ad60b249e851cf839732564</anchor>
      <arglist>(const iterator &amp;iter) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>iter_is_valid</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>a1daf0f3011c00246dc3ca0d32c824d31</anchor>
      <arglist>(const iterator &amp;iter) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>a89149c8b9d94283bf3c13b4b079d52be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; TreeStore &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>a65fc563bfbef2f1a31028cd33ff228c0</anchor>
      <arglist>(const TreeModelColumnRecord &amp;columns)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TreeStore</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>a9dd7365f0848d5a353e27a71c5727d72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TreeStore</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>a01c88818f7b270651e9b22adaa929149</anchor>
      <arglist>(const TreeModelColumnRecord &amp;columns)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set_value_impl</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>a919486b88afdef48f0c6cea35910b29f</anchor>
      <arglist>(const iterator &amp;row, int column, const Glib::ValueBase &amp;value) override</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::TreeStore &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TreeStore.html</anchorfile>
      <anchor>a9d0f6eb130cef2f7fcaceacbf28d4510</anchor>
      <arglist>(GtkTreeStore *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeValueProxy</name>
    <filename>classGtk_1_1TreeValueProxy.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>TreeValueProxy&lt; ColumnType &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeValueProxy.html</anchorfile>
      <anchor>a0831bccd3eab22c3fe6966b5ad4b2916</anchor>
      <arglist>(const ColumnType &amp;data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ColumnType</name>
      <anchorfile>classGtk_1_1TreeValueProxy.html</anchorfile>
      <anchor>af19d55fbb7ca4d74062e35d607eeaa19</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeView</name>
    <filename>classGtk_1_1TreeView.html</filename>
    <base>Gtk::Container</base>
    <base>Gtk::Scrollable</base>
    <member kind="typedef">
      <type>TreeViewColumn</type>
      <name>Column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ac1ae0dc1852b7204ea27bc504cd5c21b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TreeSelection</type>
      <name>Selection</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ac8c004cc10cc48e6e4ce8ccfe0e49279</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TreeViewColumn::SlotCellData</type>
      <name>SlotCellData</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ace2d675945ddf4e24b96306eb4734865</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TreeViewColumn::SlotTreeCellData</type>
      <name>SlotTreeCellData</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a17c07f84eebef3a853c5db76d04535e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; bool, TreeView *, TreeViewColumn *, TreeViewColumn *, TreeViewColumn * &gt;</type>
      <name>SlotColumnDrop</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a211fcaf07c5222e455df4ce74b25e112</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; void, TreeView *, const TreeModel::Path &amp; &gt;</type>
      <name>SlotMapping</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a6fd2688d9139d78394eb43134a166726</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; bool, const Glib::RefPtr&lt; TreeModel &gt; &amp;, int, const Glib::ustring &amp;, const TreeModel::iterator &amp; &gt;</type>
      <name>SlotSearchEqual</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a76460e93d12d75476ff4ed868b7feb89</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; void, Gtk::Widget * &gt;</type>
      <name>SlotSearchPosition</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a3b22513062f0570b853bb8abe9acf2f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; bool, const Glib::RefPtr&lt; TreeModel &gt; &amp;, const TreeModel::iterator &amp; &gt;</type>
      <name>SlotRowSeparator</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a23b8b22dc7f071ce1eff27059116f696</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeView</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>affab4e7fd54f18901619f9175c0fc174</anchor>
      <arglist>(TreeView &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TreeView &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a84405f04833cea631cc37165e29f167b</anchor>
      <arglist>(TreeView &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeView</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>adc1f7166b69888c7d1f462da16b3cc80</anchor>
      <arglist>(const TreeView &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>TreeView &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a19699c2946d80878fc6b31180c2997a2</anchor>
      <arglist>(const TreeView &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TreeView</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>af403f11a60a956114a70658e3ffb8fc7</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTreeView *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a9d4e434d05a47c062e5f3545971d614c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTreeView *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a513770665fc9dde0b5034cf79264e4ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeView</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a619a049b5922e4a6ac6b5b03d3476afb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeView</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>acde03b3fd2aca47f3c7d86fdcf9796b1</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>adb30108f2d714c353ea7966fdc804b4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TreeModel &gt;</type>
      <name>get_model</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a01989cc44c27f2eb96752c71f43be516</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_model</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a35e73786232a17c338b68223ef05b3c3</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_model</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ad9152392a2f15b784a576fd490525e70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TreeSelection &gt;</type>
      <name>get_selection</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ae953e086ee80dbcd34e49dc55a600dcb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TreeSelection &gt;</type>
      <name>get_selection</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a5b3a482d9dc3c46be72c3657b44d5349</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_headers_visible</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a98e067d8570bb861a843177ff39bbd29</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_headers_visible</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a8855c0dacb27dc606786c9c4185d5c75</anchor>
      <arglist>(bool headers_visible=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>columns_autosize</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ad4e88bb160718cd6a1116b48fc011f88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_headers_clickable</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a21f3b06779b5c7a9396637d523ff5abb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_headers_clickable</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ae1ee5574177dc8a1ed8a1cd88f964edf</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_rules_hint</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>afc95decfb73c43e44e2fbf1e87818dcf</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_rules_hint</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a45a4ef1018146972f0dd5a3d25f559bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_activate_on_single_click</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a93b41ba7d4f9424bf11ecef742abbe1e</anchor>
      <arglist>(bool single=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_activate_on_single_click</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>af0590d2915d7537e6df6d6ac9b57519d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>append_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a16f55997427768789b625fab842f5a2d</anchor>
      <arglist>(TreeViewColumn &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>append_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>aefe3902c11a056a6f0630eced66613eb</anchor>
      <arglist>(const Glib::ustring &amp;title, const TreeModelColumn&lt; ColumnType &gt; &amp;model_column)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>append_column_numeric</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a8affe8dc5cf35c8c4df0c8ec666661d8</anchor>
      <arglist>(const Glib::ustring &amp;title, const TreeModelColumn&lt; ColumnType &gt; &amp;model_column, const Glib::ustring &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>append_column_editable</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a2b7e3001fa1bb1aa415da76be91dc65f</anchor>
      <arglist>(const Glib::ustring &amp;title, const TreeModelColumn&lt; ColumnType &gt; &amp;model_column)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>append_column_numeric_editable</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>aaf5d988afc408de1dcc73cfee8162438</anchor>
      <arglist>(const Glib::ustring &amp;title, const TreeModelColumn&lt; ColumnType &gt; &amp;model_column, const Glib::ustring &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>append_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>aed6655124671376ffb2942c4c1eb19e9</anchor>
      <arglist>(const Glib::ustring &amp;title, CellRenderer &amp;cell)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>remove_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a9d6db60f93f343e342227531d11c1291</anchor>
      <arglist>(TreeViewColumn &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_all_columns</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a943f9af227dc499ba99ba7672c347b4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>insert_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a3bbc443759e8893cd74c04eebbe82367</anchor>
      <arglist>(TreeViewColumn &amp;column, int position)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>insert_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>aadd86e03ba6bce629d52ea662d9cc971</anchor>
      <arglist>(const Glib::ustring &amp;title, CellRenderer &amp;cell, int position)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>insert_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a4d47420b699edf3a19b586c54c76eb29</anchor>
      <arglist>(const Glib::ustring &amp;title, const TreeModelColumn&lt; ColumnType &gt; &amp;model_column, int position)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>insert_column_editable</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a2ccb61b787f54b286c618a38e9b2037c</anchor>
      <arglist>(const Glib::ustring &amp;title, const TreeModelColumn&lt; ColumnType &gt; &amp;model_column, int position)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>insert_column_with_data_func</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a595dcc0b503a7c1004c296b82c51ac54</anchor>
      <arglist>(int position, const Glib::ustring &amp;title, CellRenderer &amp;cell, const SlotTreeCellData &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_n_columns</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>acd8a9cf862f3f9ed1d44e8e8ba910cd3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TreeViewColumn *</type>
      <name>get_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a513e50ad0acdd817d1a443f1eaa3debe</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>const TreeViewColumn *</type>
      <name>get_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a4193530d984f9f35c57379bb1cd497db</anchor>
      <arglist>(int n) const </arglist>
    </member>
    <member kind="function">
      <type>CellRenderer *</type>
      <name>get_column_cell_renderer</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>abaf17be0f50dc0a2153dd8a7a68b7b70</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>const CellRenderer *</type>
      <name>get_column_cell_renderer</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a6e69811268a4f60c784643916f83e2c6</anchor>
      <arglist>(int n) const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; TreeViewColumn * &gt;</type>
      <name>get_columns</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a2daf3e523102679d48d6b3613396f330</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const TreeViewColumn * &gt;</type>
      <name>get_columns</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ae057ef48a42670b915cf60ade1b3d35e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_column_after</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a94e48d038fd9b57af5bf0c9840dfe308</anchor>
      <arglist>(TreeViewColumn &amp;column, TreeViewColumn &amp;base_column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move_column_to_start</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a840f30c8535f799ba92615e5400f6cf6</anchor>
      <arglist>(TreeViewColumn &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_expander_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a7e948adaeeafd9884ba5ca7d639f9ea7</anchor>
      <arglist>(TreeViewColumn &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset_expander_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>aecc955177507d991eab00b3192ed31b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TreeViewColumn *</type>
      <name>get_expander_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a87cb76623a39b0d945e58dfc35bd2dd3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TreeViewColumn *</type>
      <name>get_expander_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a1a00cf3a24d02c80a5081c3a988db135</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_column_drag_function</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a2bc13513932ca39941a61a86d2405e89</anchor>
      <arglist>(const SlotColumnDrop &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_column_drag_function</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a9109bff0e235846580f196a2e3e3860d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scroll_to_point</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a9fa8beb708934f5bc7fbc4693c5138c9</anchor>
      <arglist>(int tree_x, int tree_y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scroll_to_cell</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a68fe4741ceacbd8854997c24213fdc5a</anchor>
      <arglist>(const TreeModel::Path &amp;path, TreeViewColumn &amp;column, float row_align, float col_align)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scroll_to_cell</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a9f7c82b4307dfcf1602c89a32c42bb5e</anchor>
      <arglist>(const TreeModel::Path &amp;path, TreeViewColumn &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scroll_to_row</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ac7394be5aade86355daf4dd26fe1a28f</anchor>
      <arglist>(const TreeModel::Path &amp;path, float row_align)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scroll_to_row</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>adb5a753b9df63646066ff5e3954572c4</anchor>
      <arglist>(const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scroll_to_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a1a5fabbe3baff74410cdb1e81850e2b1</anchor>
      <arglist>(TreeViewColumn &amp;column, float col_align)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scroll_to_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a1537a5b521ecbad4aaec88f656b0e6ee</anchor>
      <arglist>(TreeViewColumn &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>row_activated</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ae4515399f85519e5cd57d5cf3d3246c9</anchor>
      <arglist>(const TreeModel::Path &amp;path, TreeViewColumn &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expand_all</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ad14f254ed59dcba03f58a6510d6b21b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>collapse_all</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a8bdd55104bf33d5c1c831eaca15c4691</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expand_to_path</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a4f47352dc7ba22537fda1dd045bac2f2</anchor>
      <arglist>(const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>expand_row</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a2e606e1a46b925cb2326878fde8cc7fb</anchor>
      <arglist>(const TreeModel::Path &amp;path, bool open_all)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>collapse_row</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a7f85229910cc81f470bab553a5286492</anchor>
      <arglist>(const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>map_expanded_rows</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a7dbbfd4bdb2b1b811641ca9f82abebcf</anchor>
      <arglist>(const SlotMapping &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>row_expanded</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>af87ac5c0383f9d1173312a0b55137500</anchor>
      <arglist>(const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_reorderable</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a00cd814945792b43eec7a40e0c361822</anchor>
      <arglist>(bool reorderable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_reorderable</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>adb7fc819f7bf2021f03bda1d5b257077</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_cursor</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>aeace1596d745a904c79b6d1b437da778</anchor>
      <arglist>(const TreeModel::Path &amp;path, TreeViewColumn &amp;focus_column, bool start_editing=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_cursor</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a03b12d46cbb8f88ad77cd3f7d1acfe43</anchor>
      <arglist>(const TreeModel::Path &amp;path, TreeViewColumn &amp;focus_column, CellRenderer &amp;focus_cell, bool start_editing=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_cursor</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a6ff1173a3122d2b2b3380b0f48096623</anchor>
      <arglist>(const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_cursor</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a6358effaf53f54535098f8c4a710405f</anchor>
      <arglist>(TreeModel::Path &amp;path, TreeViewColumn *&amp;focus_column)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Window &gt;</type>
      <name>get_bin_window</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a5c04bb47218082d0fc809c24b1fc8f9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Window &gt;</type>
      <name>get_bin_window</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a14d5a72966f04d18ceacce0c6fcbb3e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_path_at_pos</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a7d88cb80094a833a880be82bf0bed4a5</anchor>
      <arglist>(int x, int y, TreeModel::Path &amp;path, TreeViewColumn *&amp;column, int &amp;cell_x, int &amp;cell_y) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_path_at_pos</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a94cf5210f8018030994cefe7aa1042e6</anchor>
      <arglist>(int x, int y, TreeModel::Path &amp;path) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_cell_area</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ae4b55d294e557dddf6ac77e03696d495</anchor>
      <arglist>(const TreeModel::Path &amp;path, TreeViewColumn &amp;column, Gdk::Rectangle &amp;rect) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_background_area</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a6b3ab288a618de1cf75022d706d6b567</anchor>
      <arglist>(const TreeModel::Path &amp;path, TreeViewColumn &amp;column, Gdk::Rectangle &amp;rect) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_visible_rect</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a07416d3d4f875f1dc2dd7ae7d1efe730</anchor>
      <arglist>(Gdk::Rectangle &amp;visible_rect) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_visible_range</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a9794f60a17400938b9c46f444505b804</anchor>
      <arglist>(TreeModel::Path &amp;start_path, TreeModel::Path &amp;end_path) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_blank_at_pos</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a86faaf92d9986d14f375c60068fa71c3</anchor>
      <arglist>(int x, int y, TreePath &amp;path, TreeViewColumn *&amp;column, int &amp;cell_x, int &amp;cell_y) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_blank_at_pos</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>aaed8ba209c9b18651fc51bc18fc82176</anchor>
      <arglist>(int x, int y) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable_model_drag_source</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>aed48cc45b793e49d1a583501f68286cf</anchor>
      <arglist>(const std::vector&lt; TargetEntry &gt; &amp;targets, Gdk::ModifierType start_button_mask=Gdk::MODIFIER_MASK, Gdk::DragAction actions=Gdk::ACTION_COPY|Gdk::ACTION_MOVE)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable_model_drag_source</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a2d42378808e91763f0a1121531bb05ab</anchor>
      <arglist>(Gdk::ModifierType start_button_mask=Gdk::MODIFIER_MASK, Gdk::DragAction actions=Gdk::ACTION_COPY|Gdk::ACTION_MOVE)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable_model_drag_dest</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ab387061fe2c66f11f2df726e8a4a01a7</anchor>
      <arglist>(const std::vector&lt; TargetEntry &gt; &amp;targets, Gdk::DragAction actions=Gdk::ACTION_COPY|Gdk::ACTION_MOVE)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable_model_drag_dest</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a4a2f337f4effcdb70a42c8a4e1f71198</anchor>
      <arglist>(Gdk::DragAction actions=Gdk::ACTION_COPY|Gdk::ACTION_MOVE)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_rows_drag_source</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a85f88dd1a84d132181df22caed35d38d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_rows_drag_dest</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>afca9a5db99fc77d07aad5c4ac00ef2bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_drag_dest_row</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>accbcc7799bbf4cb3387cdfd20aa82467</anchor>
      <arglist>(const TreeModel::Path &amp;path, TreeViewDropPosition pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_drag_dest_row</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a0e321a02735d56e03a42cf0f424fe7c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_drag_dest_row</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a1ba97ac0cb4758b0abc07ab6f231b55b</anchor>
      <arglist>(TreeModel::Path &amp;path, TreeViewDropPosition &amp;pos) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_dest_row_at_pos</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a2b526d239750a6f97ed15b3e5c0cc1de</anchor>
      <arglist>(int drag_x, int drag_y, TreeModel::Path &amp;path, TreeViewDropPosition &amp;pos) const </arglist>
    </member>
    <member kind="function">
      <type>Cairo::RefPtr&lt; Cairo::Surface &gt;</type>
      <name>create_row_drag_icon</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ac3bc09ff70451afea8c2d40607f056f3</anchor>
      <arglist>(const TreeModel::Path &amp;path) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_enable_search</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a63e68b7d085da11dffaacbe2693547da</anchor>
      <arglist>(bool enable_search=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_enable_search</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>afd7924c660c4ffd3692c7921597c5ffd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_search_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>afd417000d7de9a513872fef6cbf22d6f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_search_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a561e31b2f5fceb35c441c6daec8a3689</anchor>
      <arglist>(const TreeModelColumnBase &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_search_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a4cae680d7bd26d2a953e3b447ea5bab6</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_search_equal_func</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a68a6c99becef724d20d8e671b3ddb93f</anchor>
      <arglist>(const SlotSearchEqual &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>Entry *</type>
      <name>get_search_entry</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a874761fc26b7a75b74dcba02dd040758</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Entry *</type>
      <name>get_search_entry</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a5a72e51f2dcbc5c337f60436c14ff578</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_search_entry</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a1800993ac99f8bcac0d0607903f1bb89</anchor>
      <arglist>(Entry &amp;entry)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_search_position_func</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a2d6b14c07f6f698f87648bda809f9bf9</anchor>
      <arglist>(const SlotSearchPosition &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convert_widget_to_tree_coords</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a823ca16851c70fa0961494bb8180e4c0</anchor>
      <arglist>(int wx, int wy, int &amp;tx, int &amp;ty) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convert_tree_to_widget_coords</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a7d3a55b05c17561496aebc9ecdedb87d</anchor>
      <arglist>(int tx, int ty, int &amp;wx, int &amp;wy) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convert_widget_to_bin_window_coords</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a1c8d110d9cbe7933770f152c385259d0</anchor>
      <arglist>(int wx, int wy, int &amp;bx, int &amp;by) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convert_bin_window_to_widget_coords</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a1e7462d353367cb46e071278ae438233</anchor>
      <arglist>(int bx, int by, int &amp;wx, int &amp;wy) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convert_tree_to_bin_window_coords</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a3123ad203a2b3e2a962182fdc650a8e3</anchor>
      <arglist>(int tx, int ty, int &amp;bx, int &amp;by) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convert_bin_window_to_tree_coords</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a194781732ff18db8602b0421581311e4</anchor>
      <arglist>(int bx, int by, int &amp;tx, int &amp;ty) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_fixed_height_mode</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ad766f587003dc152e1722cd3be0cedc6</anchor>
      <arglist>(bool enable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_fixed_height_mode</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a1c540f1590f2567e387b57d33e2296db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_hover_selection</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ac2aa7aaff2cb5f1838aa30ddd224e09e</anchor>
      <arglist>(bool hover=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_hover_selection</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a8d5309a26cf709fbf15dd6ab6b432df3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_hover_expand</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>af25d3860f977d1d2f4464d85bfa909f5</anchor>
      <arglist>(bool expand=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_hover_expand</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>af61c2d88dc1bd12a65cb18c7cdc3e872</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_rubber_banding</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a9389a98f6068e09e33fec8e7a98219ab</anchor>
      <arglist>(bool enable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_rubber_banding</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ab5ad2260cce10da6949a70718af2d6ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_rubber_banding_active</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a8fcdbd370cb64d820178a633224ebdc7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_row_separator_func</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a581220f42bad6f492f42cc8f701df7ab</anchor>
      <arglist>(const SlotRowSeparator &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_row_separator_func</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>abf6114cc95556bf80bee79331778fad7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_grid_lines</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a9f6601372b4b0d271669efac7c16ecf9</anchor>
      <arglist>(TreeViewGridLines grid_lines)</arglist>
    </member>
    <member kind="function">
      <type>TreeViewGridLines</type>
      <name>get_grid_lines</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a4eb6e5549cea0052803a46dabd23a846</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_enable_tree_lines</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a30fadfc81883f9be2f4611639fa9daaf</anchor>
      <arglist>(bool enable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_enable_tree_lines</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ade348efe7177a3abcfa18d9fbc69c7ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_show_expanders</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ab40c5a76db3ab21abe205b190119db63</anchor>
      <arglist>(bool enabled=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_show_expanders</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a0b54af85d18aa3027f455cf7139fd7bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_level_indentation</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>abe9d65c485e9fb0bba61081a0ae6882a</anchor>
      <arglist>(int indentation)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_level_indentation</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a08fa293773b29d1a385afed624194569</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tooltip_row</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ae3d42c3596c90dc9b51a0039788412c9</anchor>
      <arglist>(const Glib::RefPtr&lt; Tooltip &gt; &amp;tooltip, const TreePath &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tooltip_cell</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ae7cc8fde03c481de81fc9d13e34bff98</anchor>
      <arglist>(const Glib::RefPtr&lt; Tooltip &gt; &amp;tooltip, const TreeModel::Path *path, TreeViewColumn *column, CellRenderer *cell)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_tooltip_context_path</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a40ff48869be6c6e2901abd2f2e91da70</anchor>
      <arglist>(int &amp;x, int &amp;y, bool keyboard_tip, TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_tooltip_context_iter</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ab674794cb09a32e4dbb76e8500954c52</anchor>
      <arglist>(int &amp;x, int &amp;y, bool keyboard_tip, Gtk::TreeModel::iterator &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tooltip_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a5437add5fba2cef1972c5139375581a0</anchor>
      <arglist>(int column)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_tooltip_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a06a08674f7a0edb29039b3fd020f5339</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const TreeModel::Path &amp;, TreeViewColumn * &gt;</type>
      <name>signal_row_activated</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a7532dec4c3fa9194a6aee7c1da7f5fec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, const TreeModel::iterator &amp;, const TreeModel::Path &amp; &gt;</type>
      <name>signal_test_expand_row</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a8ef7d140c3dc71aeafe5d1af86e46520</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, const TreeModel::iterator &amp;, const TreeModel::Path &amp; &gt;</type>
      <name>signal_test_collapse_row</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a645833923716fb62748c4b5aa2920057</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const TreeModel::iterator &amp;, const TreeModel::Path &amp; &gt;</type>
      <name>signal_row_expanded</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>af555f8cf99b49eb5420befc886ffb5fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const TreeModel::iterator &amp;, const TreeModel::Path &amp; &gt;</type>
      <name>signal_row_collapsed</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a751ad49b0185374b28b2d3f9e3454c63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_cursor_changed</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ae15e80522a18e5f25f9bd580b7f4d746</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_columns_changed</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>aa82ab0ef6f7d41515155b3fccb9f35cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; TreeModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a2d9304632294176a863ecbc205a6ba5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; TreeModel &gt; &gt;</type>
      <name>property_model</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a7a2ecc357c0555e7c192ebfe5a8c814b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_headers_visible</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a3f448df281af58e75ad9a8b8a7a25b44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_headers_visible</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a352e248d15c0de0449d8262002f3957e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_headers_clickable</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a1656c8439bca612c81547896dcfff36c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_headers_clickable</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>aef9edb76a0ae4d1b34e43e76c0fd7046</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; TreeViewColumn * &gt;</type>
      <name>property_expander_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ad0716d42e3bb2b6d37732146b82e55a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; TreeViewColumn * &gt;</type>
      <name>property_expander_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a8863a0db78456b8e8d9b6f8b8ea4e453</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_reorderable</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>acd0b225e23b79c0e80cdd91e2682ae94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_reorderable</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a81f0cad701372340df748cf97ae61599</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_rules_hint</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ab51ce84db649d0f426019bf722e88b74</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_rules_hint</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a08e44b42ab140a6b02e8b6570bab5585</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_enable_search</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>af171693f3dde49ac8744e28edaa54749</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_enable_search</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a7ae137b8c28648e33b143b507b85c437</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_search_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a5e405a65369cc1066632957c6d1bf8f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_search_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a65b281c94bf30130cf9f6995fdb38d25</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_fixed_height_mode</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a34f7eadfc054386d5f1eb0d987deb6f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_fixed_height_mode</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a3606a5672d8ede05fa53433b88e52d3b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_hover_selection</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a92b860f7b1cb652e764f1317a9525c77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_hover_selection</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a0d315a19f00d19afbec0525d52d9a116</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_hover_expand</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a3c99461bed41647dcb3af4152d842080</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_hover_expand</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a87d89aa300e288e0dc06ad357a65a7ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_show_expanders</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>aee479bfb88c51c74ce99a6c55fd0f971</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_show_expanders</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a5268c093b4cc515f2bfc26ae7ea4c255</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_level_indentation</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a90c34be49bcc81f5056af5f0cf5d9746</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_level_indentation</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>af991ed1ff949f66dc45a5fb926b79050</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_rubber_banding</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a89d507b2f5284889458b97c0e68d219c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_rubber_banding</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a9f96e5ba702f672fa62ca1981fc665a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_enable_grid_lines</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a1449d1ccb240711d935ac1f36bbff6ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_enable_grid_lines</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>aab5aae6a8e8a77eb254aad52dfafed0b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_enable_tree_lines</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a437c4fbcc2889579086a4e56d1aba0a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_enable_tree_lines</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ab49533244487f890086254e27e3a3e25</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_tooltip_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ab7368320f1c73af4ccf95039e1715528</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_tooltip_column</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a211237e8231cad806aea8d513a7e21ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_activate_on_single_click</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a1e262a57c8fb498c3aa8c98d1e5cccb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_activate_on_single_click</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a94e19144a783bba9407a92a2201f1dbb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ac7f583d1c2c27b4468436655581dcd80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_row_activated</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ad5c30db814a347b66e714de65a441992</anchor>
      <arglist>(const TreeModel::Path &amp;path, TreeViewColumn *column)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_test_expand_row</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a9bbd19abc20bdd8900525c596fb375f0</anchor>
      <arglist>(const TreeModel::iterator &amp;iter, const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_test_collapse_row</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ad83760688872584bc375a75a2726c19f</anchor>
      <arglist>(const TreeModel::iterator &amp;iter, const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_row_expanded</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>ae41aaa840a4b9bf6659ab04a7b18bc32</anchor>
      <arglist>(const TreeModel::iterator &amp;iter, const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_row_collapsed</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>af383449fecb9368b63aeef329ad90045</anchor>
      <arglist>(const TreeModel::iterator &amp;iter, const TreeModel::Path &amp;path)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_cursor_changed</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>add859ea4e7f0f936c02cf3ec076433a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_columns_changed</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>a7180161d1efc82c0e3ab620b725f9e83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::TreeView *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TreeView.html</anchorfile>
      <anchor>af8a59e70cb0191ea34f2fa5c6ea4a4cb</anchor>
      <arglist>(GtkTreeView *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::TreeViewColumn</name>
    <filename>classGtk_1_1TreeViewColumn.html</filename>
    <base>Gtk::Object</base>
    <base>Gtk::CellLayout</base>
    <member kind="typedef">
      <type>TreeViewColumn</type>
      <name>Column</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ad1e1bc110814964ffedf91d582df7841</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; void, CellRenderer *, const Gtk::TreeModel::iterator &amp; &gt;</type>
      <name>SlotCellData</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a5f5b39cdb46dc52083a7d7c019ef9c60</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; void, CellRenderer *, const Gtk::TreeModel::iterator &amp; &gt;</type>
      <name>SlotTreeCellData</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ac20a869e7339cf1a2b679d9d16e3f8f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeViewColumn</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a484e2f12124bc8157468f2b8dc9676b4</anchor>
      <arglist>(TreeViewColumn &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TreeViewColumn &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a71abe821c0bc75f34e9bf3888ed699c7</anchor>
      <arglist>(TreeViewColumn &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeViewColumn</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a3bfc70e4ab90875700427792adbf1c8a</anchor>
      <arglist>(const TreeViewColumn &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>TreeViewColumn &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a9c688cd276192daf6eb5b5887ea0f077</anchor>
      <arglist>(const TreeViewColumn &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TreeViewColumn</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>accfeb0a7b00d1f3d3c766f608709124b</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkTreeViewColumn *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ac804e8eb2f72a6ecbe16dcca897dea31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkTreeViewColumn *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ab2b2d16fb152ba0b6fa7c7c9b4db65f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeViewColumn</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ab627a2b3657ccb48ec02408215d7bfd9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeViewColumn</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a7da330db8b204b2be756e481dfdccaf1</anchor>
      <arglist>(const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeViewColumn</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a27200068bb270d0257cef27379b58824</anchor>
      <arglist>(const Glib::ustring &amp;title, CellRenderer &amp;cell)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeViewColumn</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a6bb49f4d90bdf2130e4d3beb543a69aa</anchor>
      <arglist>(const Glib::ustring &amp;title, const TreeModelColumn&lt; T_ModelColumnType &gt; &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack_start</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a2c81ffa48329816fb17bcf099eee34c5</anchor>
      <arglist>(CellRenderer &amp;cell, bool expand=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack_end</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ab80da3d0ba64635a911f577204aed2e0</anchor>
      <arglist>(CellRenderer &amp;cell, bool expand=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack_start</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>abde42debcf458225c9a39a8300593fb5</anchor>
      <arglist>(const TreeModelColumn&lt; T_ModelColumnType &gt; &amp;column, bool expand=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack_end</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a50fb2055a275f85e12b7181a63d0d5c2</anchor>
      <arglist>(const TreeModelColumn&lt; T_ModelColumnType &gt; &amp;column, bool expand=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a5b7f3b08f423ecacbcce5e90fe0d792e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_attribute</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a0b5316f066b31d2e3a610d4b8129f9a3</anchor>
      <arglist>(CellRenderer &amp;cell_renderer, const Glib::ustring &amp;attribute, int column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_attribute</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a813d0f18364cd0136b52ee105b6c6f5a</anchor>
      <arglist>(const Glib::PropertyProxy_Base &amp;property, const TreeModelColumnBase &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_attribute</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a813e2f2a9d0288443242e14feceaa17f</anchor>
      <arglist>(Gtk::CellRenderer &amp;cell, const Glib::ustring &amp;property_name, const TreeModelColumnBase &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_renderer</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a01a7e68ad60768652000ecbaa4f6379f</anchor>
      <arglist>(Gtk::CellRenderer &amp;renderer, const TreeModelColumnBase &amp;column)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_cell_data_func</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a3469e1adf42e5932ea123ec33e4ce4e1</anchor>
      <arglist>(CellRenderer &amp;cell_renderer, const SlotTreeCellData &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_cell_data_func</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a786d24b7f62d795b43eb481ced3ec6fa</anchor>
      <arglist>(CellRenderer &amp;cell_renderer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear_attributes</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a8d0c15f078e9f9bfe8593549fbf458f7</anchor>
      <arglist>(CellRenderer &amp;cell_renderer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_spacing</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a59db1623a03d2b7acdf8cf56904972c8</anchor>
      <arglist>(int spacing)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_spacing</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ae35bc5e8614f942ba2c4db5154909f82</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visible</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>aaa4c52e2c07511f06cd08556c3293e03</anchor>
      <arglist>(bool visible=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_visible</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a2f91e310da5ae40f4acec19421c061e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_resizable</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ac16b622dad072f0a1a88e13d11be94aa</anchor>
      <arglist>(bool resizable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_resizable</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a93cf324fee9054f7997d60b7b3ae3619</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sizing</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a8ca8b2ab3d86603f6356030c57935056</anchor>
      <arglist>(TreeViewColumnSizing type)</arglist>
    </member>
    <member kind="function">
      <type>TreeViewColumnSizing</type>
      <name>get_sizing</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>acb636cb4b7d2524a88f5744c4571704c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_x_offset</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a4a54c96f5c1dcbc4b308f1c33542197b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_width</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a45cd44684308b95ce8dd60c08a0f5ad2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_fixed_width</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>abbfa23e77d8474d46e7407d9210aa683</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_fixed_width</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>afeced55175cf96a4710f716117a911d2</anchor>
      <arglist>(int fixed_width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_min_width</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ac54f81aca72ac86e3f9988c33e0a51af</anchor>
      <arglist>(int min_width)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_min_width</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>aca41d58400527c408545c686c43ff47b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_max_width</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>aeb659dc59bb266f1e76f8974f7cfd1a5</anchor>
      <arglist>(int max_width)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_max_width</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a35ed4e2e6890a65ee6cffdf0515f0961</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clicked</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>adb843565131485fef9321876f487e3c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_title</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a3e2c867d3915f316b047417ac8623c3e</anchor>
      <arglist>(const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_title</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a6dbc0c23865b3deacb94b12eb3fff460</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_expand</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a1de1f0cbd818083b9077b101250389c5</anchor>
      <arglist>(bool expand=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_expand</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>aa8ffd45210c61ddf29326fd71cc37008</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_clickable</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a1e188579281b5019f835135b49e14024</anchor>
      <arglist>(bool clickable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_clickable</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ae7880cff9732bf078ce2fcd12baebec5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_widget</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a3b8c4e3b7e8b579090440c50843efd26</anchor>
      <arglist>(Gtk::Widget &amp;widget)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_widget</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a6ed1b2d4b8d9e39c449e3ace4b04a70f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_widget</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a16bf173c69d623a1400668012e25811a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_alignment</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a096f59776acabff6676f9b381b4ed031</anchor>
      <arglist>(float xalign)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_alignment</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a9ca5033a064958a347a3d086e866919e</anchor>
      <arglist>(Align xalign)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>get_alignment</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ac078a991a89a6fe2757eb23805c2dfb6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_reorderable</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a207af512ee62a4eb4fca4b2ccfc81b0f</anchor>
      <arglist>(bool reorderable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_reorderable</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a560b04f294e83af3bffb0ddf46ddf7e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sort_column</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a50cb85207ecfada55432fcefcb46274c</anchor>
      <arglist>(const TreeModelColumnBase &amp;sort_column_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sort_column</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a6617c7101c0f507d6ba9f634bf7e44dd</anchor>
      <arglist>(int sort_column_id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_sort_column_id</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a79f52f8334a36dc8250c3ff33c920a5f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sort_indicator</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a48aaef37d207078a348479d1b51afaf2</anchor>
      <arglist>(bool setting)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_sort_indicator</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>aa497a8632f6072cd376adc3aaa7307b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sort_order</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a33712ea76bd6ccf7ad560e301ed87e66</anchor>
      <arglist>(SortType order)</arglist>
    </member>
    <member kind="function">
      <type>SortType</type>
      <name>get_sort_order</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a8208103cb10cfe5e5261d3beb23ee736</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cell_set_cell_data</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ab8529cfeb79bac1673ce008c67b8f324</anchor>
      <arglist>(const Glib::RefPtr&lt; TreeModel &gt; &amp;tree_model, const TreeModel::iterator &amp;iter, bool is_expander, bool is_expanded)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cell_get_size</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a435256bc252152b513bdc123c79175fd</anchor>
      <arglist>(const Gdk::Rectangle &amp;cell_area, int &amp;x_offset, int &amp;y_offset, int &amp;width, int &amp;height) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>cell_is_visible</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ad653283345537ab652d8ac15e8e51ffc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>focus_cell</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a028300531a4aa3e9ac40941f75e94c71</anchor>
      <arglist>(CellRenderer &amp;cell)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_cell_position</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a44459321a54f2dabd88601e7eb15096c</anchor>
      <arglist>(const CellRenderer &amp;cell_renderer, int &amp;start_pos, int &amp;width) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>queue_resize</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a0a739239b847d3ca7107f0087d9d63c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TreeView *</type>
      <name>get_tree_view</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ac44090bb91b945a2b07ba336248ff421</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TreeView *</type>
      <name>get_tree_view</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a88f650a4bc128e51b01b3bca9ae2f715</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Button *</type>
      <name>get_button</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>aef5b5ccf85f3cad0d255fca3667a35e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Button *</type>
      <name>get_button</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a64718574c03600ed070a955d829e7be1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_clicked</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a9b9281a35b4175645a6eb7d62fde784a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_visible</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a3965176724ca762ee77baff095ecbc1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_visible</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a3a6697c0c0a8a1f3603ab9bf99a0cc7a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_resizable</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ab217515b5e746159c909f33f53c7a0d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_resizable</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>aeca836b93e7f58f9bbee3e2b2db58d5e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_x_offset</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a390d1ad242d47cbcc3ce3aadadda2fed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_width</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a80d012f1243c99cac375d9c076dffd63</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_spacing</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a990f839509479733fc2536b5f73e5e6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_spacing</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a4324026d416ee15f29e6293ed9e3daff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; TreeViewColumnSizing &gt;</type>
      <name>property_sizing</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a1975bbe9c723d0f12ad728de9019cf29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; TreeViewColumnSizing &gt;</type>
      <name>property_sizing</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>aecf8faf9341f907aee29630fa336c7d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_fixed_width</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a820cff41547847dbd99633e9ee1ef551</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_fixed_width</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a536a95d975030bea7c236007c0449bee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_min_width</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a570daa8709a55f6e27b42d50be077e85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_min_width</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ad3a1db8eb7a10d1f20a147f8a9496865</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_max_width</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a5bd2ff0b5be4452c79891bcc8a01a326</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_max_width</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a3901df890a72392db865f72006b08a84</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ae859bedc04ac4d9fd045c2447cda15bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ab1c8b8eb3840d170dde9ec89073e1de2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_expand</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ab6c56e64ad9a82c35b245b5ff872e086</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_expand</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ae0586bed26771af36ff8ccd6772838fe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_clickable</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ad0a270edcb136eec55ab19137c543f4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_clickable</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>aaca1531021c7584b2f9806d12864dc6f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_widget</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>abf170c5375f9a252d9b6f6ec60cc7cef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_widget</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a4af306937591902e8ba0c2db373a2d69</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; float &gt;</type>
      <name>property_alignment</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a12c8c3d5572dc6ec3384138da2042dbb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; float &gt;</type>
      <name>property_alignment</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a171987f74a3f003193305ce66572286d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_reorderable</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a1592e0d794cccecc36658e0ca6cbcb0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_reorderable</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ab4fd380377cfc2607df14c9c16fbcafc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_sort_indicator</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a172bff2bc9c168746e8ecfe02a99d5db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_sort_indicator</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ab47185d6c009ba90ec4e910440fec139</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; SortType &gt;</type>
      <name>property_sort_order</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>abc9286e851431c9710457888b6b7d23f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; SortType &gt;</type>
      <name>property_sort_order</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a36b3d33f3e4f088623a8dd21d19bf2c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_sort_column_id</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a62a031d2ebd9ba4deaf237e6a46cff6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_sort_column_id</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a712b3cca998e44567b4385a392acff9b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; CellArea &gt; &gt;</type>
      <name>property_cell_area</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a941f39aef2b31306b1d6cfbdd3fa5ced</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>ae23482bc714d8621bebc476a9b5604e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_clicked</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a090ee68a197b91439b00dcedade9c92b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::TreeViewColumn *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1TreeViewColumn.html</anchorfile>
      <anchor>a7e8589858ba753112bbc89e9a9e5457f</anchor>
      <arglist>(GtkTreeViewColumn *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::UIManager</name>
    <filename>classGtk_1_1UIManager.html</filename>
    <base>Glib::Object</base>
    <member kind="typedef">
      <type>guint</type>
      <name>ui_merge_id</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>a0682fad15edb0f4418487e555aa6805d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UIManager</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>a0c179d9c5dd4c92ff97bc8e2fc754c29</anchor>
      <arglist>(UIManager &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>UIManager &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>a82919aa332dec19931d2d7957305f892</anchor>
      <arglist>(UIManager &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~UIManager</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>ad5d07f1674971ac708d2ba0d2ee7eb47</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkUIManager *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>adcbc82741d92ed865d1d63eddabb7d99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkUIManager *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>aae9a90e30c01a024da550dddd9d86363</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkUIManager *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>a49c2a2f2d2b9c7db91cfce222c6d9139</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_add_tearoffs</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>aaaa2dd331a1a300e21e8b61b1e9f6c46</anchor>
      <arglist>(bool add_tearoffs=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_add_tearoffs</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>a199dfed5c1bdae63887ee2bed7c559fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_action_group</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>a50cc8ee94cb48ddef6516883a0dd9047</anchor>
      <arglist>(const Glib::RefPtr&lt; ActionGroup &gt; &amp;action_group, int pos=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_action_group</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>a13551c32d6aa054c8c6771086727c576</anchor>
      <arglist>(const Glib::RefPtr&lt; ActionGroup &gt; &amp;action_group)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; ActionGroup &gt; &gt;</type>
      <name>get_action_groups</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>a7d5de1fa1cbdde4cbe430986179ca22e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; const ActionGroup &gt; &gt;</type>
      <name>get_action_groups</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>ae9d722f58f874fdb26c1ea45c6a26255</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; AccelGroup &gt;</type>
      <name>get_accel_group</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>a56f55fb4e8428dbc65c49cf1229775c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const AccelGroup &gt;</type>
      <name>get_accel_group</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>a42211d42cb736b8f2b5b0d0d20f85e05</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_widget</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>a93357a4791e1740610fadb0ba088cbf3</anchor>
      <arglist>(const Glib::ustring &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_widget</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>a38de43f04c160b1ddf238da0f0309cc0</anchor>
      <arglist>(const Glib::ustring &amp;path) const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Widget * &gt;</type>
      <name>get_toplevels</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>a424793cd49450b57151f723c7dec0f2c</anchor>
      <arglist>(UIManagerItemType types)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const Widget * &gt;</type>
      <name>get_toplevels</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>ab979c4ec7e180b52a76a57654e3cce06</anchor>
      <arglist>(UIManagerItemType types) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Action &gt;</type>
      <name>get_action</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>a5486fde7529fd2f6e0cfbea2780e5d32</anchor>
      <arglist>(const Glib::ustring &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Action &gt;</type>
      <name>get_action</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>ab4b3f27d94dc1363ec10915cffa7f3a7</anchor>
      <arglist>(const Glib::ustring &amp;path) const </arglist>
    </member>
    <member kind="function">
      <type>ui_merge_id</type>
      <name>add_ui_from_string</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>a403582b15c37408abaa868692d6a7abd</anchor>
      <arglist>(const Glib::ustring &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>ui_merge_id</type>
      <name>add_ui_from_file</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>ad1377c506a357a7587d5e2bb5377881c</anchor>
      <arglist>(const Glib::ustring &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>ui_merge_id</type>
      <name>add_ui_from_resource</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>a88e864c009fa1b5714581eb5240467f2</anchor>
      <arglist>(const Glib::ustring &amp;resource_path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_ui</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>a0a23ac89ab23915b675446cc1c10db1f</anchor>
      <arglist>(ui_merge_id merge_id, const Glib::ustring &amp;path, const Glib::ustring &amp;name, const Glib::ustring &amp;action, UIManagerItemType type=Gtk::UI_MANAGER_AUTO, bool top=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_ui_separator</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>a19b05ae50b353b39b60f467008c0c827</anchor>
      <arglist>(ui_merge_id merge_id, const Glib::ustring &amp;path, const Glib::ustring &amp;name=&quot;&quot;, UIManagerItemType type=Gtk::UI_MANAGER_AUTO, bool top=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_ui</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>a0611594aa9d4df6febe90dbb9fe2fd21</anchor>
      <arglist>(ui_merge_id merge_id)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_ui</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>ad85b3e2cb26b4535d71a57ac81f61918</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ensure_update</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>aa3a3f4e8bdd7488eab875e9bbfd2ae15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ui_merge_id</type>
      <name>new_merge_id</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>ac5cb767d3ba718492972e7f9c5f02fb7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, Widget * &gt;</type>
      <name>signal_add_widget</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>a8b5c35b3e077f105052666355c23aca5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_actions_changed</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>aa25a4b2fad95be8a152129d3c6faaa17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Action &gt; &amp;, Widget * &gt;</type>
      <name>signal_connect_proxy</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>a53950595693ecfab278f3d5ffe4df858</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Action &gt; &amp;, Widget * &gt;</type>
      <name>signal_disconnect_proxy</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>a05b167be57bebe36befefc0d03f46b7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Action &gt; &amp; &gt;</type>
      <name>signal_pre_activate</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>ae608db91d79a1c4c3b509e0dd4abe4cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Action &gt; &amp; &gt;</type>
      <name>signal_post_activate</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>a34b098a50886afba061679deb8b5aae8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_add_tearoffs</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>ad36c1ac37c896cfce7bfb08bf2a14539</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_add_tearoffs</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>a4c1e1e58789a108219fca90a5ed2d3d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_ui</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>a85ccccb103579fbb9b043646f2029639</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>a410cb5886beeda62e3f84f93a6da0d7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; UIManager &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>af2a1f8d72acc2070660cf6d37dfb37a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>UIManager</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>a2e1be63e14b8cd4b5b0dbb1e74757b3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_add_widget</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>a543fc31062484f6f230320f3d6f939e8</anchor>
      <arglist>(Widget *widget)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_actions_changed</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>a79662f2d8e965519097b791f2af96ce3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_connect_proxy</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>a5617db6f97cbd77d235240041db4ab08</anchor>
      <arglist>(const Glib::RefPtr&lt; Action &gt; &amp;action, Widget *widget)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_disconnect_proxy</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>a64cabb8e2a90c9614c568412a5ae154c</anchor>
      <arglist>(const Glib::RefPtr&lt; Action &gt; &amp;action, Widget *widget)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_pre_activate</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>a48dd17b71bcb8ad5daf3a0a1caa196c3</anchor>
      <arglist>(const Glib::RefPtr&lt; Action &gt; &amp;action)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_post_activate</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>ab8a2b8feba70abb516db62db007863a7</anchor>
      <arglist>(const Glib::RefPtr&lt; Action &gt; &amp;action)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::UIManager &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1UIManager.html</anchorfile>
      <anchor>ad36176bdb92cd8f85fc7c0fcd5868e9a</anchor>
      <arglist>(GtkUIManager *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::VBox</name>
    <filename>classGtk_1_1VBox.html</filename>
    <base>Gtk::Box</base>
    <member kind="function">
      <type></type>
      <name>VBox</name>
      <anchorfile>classGtk_1_1VBox.html</anchorfile>
      <anchor>a126fe530812c2a356af6198f1ad918f3</anchor>
      <arglist>(VBox &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>VBox &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1VBox.html</anchorfile>
      <anchor>ad5e46379866d1aedac365d38ccac8d73</anchor>
      <arglist>(VBox &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VBox</name>
      <anchorfile>classGtk_1_1VBox.html</anchorfile>
      <anchor>a6fef376d7aaa536f262f2a936289af63</anchor>
      <arglist>(const VBox &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>VBox &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1VBox.html</anchorfile>
      <anchor>a71e753443d1250ae7acf7ba2088829f7</anchor>
      <arglist>(const VBox &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~VBox</name>
      <anchorfile>classGtk_1_1VBox.html</anchorfile>
      <anchor>a17b0c6389c26afe9b1001148da9e4b83</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkVBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1VBox.html</anchorfile>
      <anchor>a4e6ed5a59c876487524d4c0af1162f31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkVBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1VBox.html</anchorfile>
      <anchor>a47b85a73422574c1dbb83b35fd00dec5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VBox</name>
      <anchorfile>classGtk_1_1VBox.html</anchorfile>
      <anchor>a302b1fd71c189c1fb566f31245ba2b96</anchor>
      <arglist>(bool homogeneous=false, int spacing=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1VBox.html</anchorfile>
      <anchor>aa41aee9c0c52b11bb2a52f13ff428c8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::VBox *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1VBox.html</anchorfile>
      <anchor>aa6a2ee929763f78f6a1ae9ae85bc2f00</anchor>
      <arglist>(GtkVBox *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::VButtonBox</name>
    <filename>classGtk_1_1VButtonBox.html</filename>
    <base>Gtk::ButtonBox</base>
    <member kind="function">
      <type></type>
      <name>VButtonBox</name>
      <anchorfile>classGtk_1_1VButtonBox.html</anchorfile>
      <anchor>ad404b0f61e9edd798015131917578803</anchor>
      <arglist>(VButtonBox &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>VButtonBox &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1VButtonBox.html</anchorfile>
      <anchor>aa26c54df64cb0ef63897b71e160eed7f</anchor>
      <arglist>(VButtonBox &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VButtonBox</name>
      <anchorfile>classGtk_1_1VButtonBox.html</anchorfile>
      <anchor>adf0ecf8a5c6e8a2a9c14f70202d863f8</anchor>
      <arglist>(const VButtonBox &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>VButtonBox &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1VButtonBox.html</anchorfile>
      <anchor>ada8b4f382eb92071664ca481609e38d4</anchor>
      <arglist>(const VButtonBox &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~VButtonBox</name>
      <anchorfile>classGtk_1_1VButtonBox.html</anchorfile>
      <anchor>a8972ae3acf6302074044fedfea9751f0</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkVButtonBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1VButtonBox.html</anchorfile>
      <anchor>af06694e6a130b2a182b2fbb40679d629</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkVButtonBox *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1VButtonBox.html</anchorfile>
      <anchor>a63151553dc28bf42a5bc9e73d4f13f35</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VButtonBox</name>
      <anchorfile>classGtk_1_1VButtonBox.html</anchorfile>
      <anchor>a2caeea3b97499e5290f4bbdf57414f7e</anchor>
      <arglist>(ButtonBoxStyle layout=BUTTONBOX_EDGE, int spacing=BUTTONBOX_DEFAULT_SPACING)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1VButtonBox.html</anchorfile>
      <anchor>ade15a383b9e193e370d85088c43fbe24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::VButtonBox *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1VButtonBox.html</anchorfile>
      <anchor>a20d7efec56d904aa3af751e8626ec73b</anchor>
      <arglist>(GtkVButtonBox *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Viewport</name>
    <filename>classGtk_1_1Viewport.html</filename>
    <base>Gtk::Bin</base>
    <base>Gtk::Scrollable</base>
    <member kind="function">
      <type></type>
      <name>Viewport</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>a7a82f7e40c18fc06324a6d17a48b0364</anchor>
      <arglist>(Viewport &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Viewport &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>abff785c32b28e165a97d5c90f9b4bb09</anchor>
      <arglist>(Viewport &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Viewport</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>a4dc40ef207ed8a36a2f64cc8a690456e</anchor>
      <arglist>(const Viewport &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Viewport &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>a4cf28c54e9225cd139b3ff580d82bf56</anchor>
      <arglist>(const Viewport &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Viewport</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>a993d3d1a6736807d0929007ef946e7eb</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkViewport *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>adc421299119cc0f0b21de0abcdbb3bed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkViewport *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>a1072c057da9c87b78acd12557d9d7434</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Viewport</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>a4fc3640768d0dcebed9b404ceef2110e</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;hadjustment, const Glib::RefPtr&lt; Adjustment &gt; &amp;vadjustment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_shadow_type</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>ac6e84f9ae4e4784475606c1a14cc89ac</anchor>
      <arglist>(ShadowType type)</arglist>
    </member>
    <member kind="function">
      <type>ShadowType</type>
      <name>get_shadow_type</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>aa7e6dbf5ca54f5880a182c72c68b3f55</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Window &gt;</type>
      <name>get_bin_window</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>a9272232ec0911631bef4267a1535c798</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Window &gt;</type>
      <name>get_bin_window</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>a7a90d19385cd8fa4007e04c37d59a781</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Window &gt;</type>
      <name>get_view_window</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>aed7a1259b048e65bf81db7d1af1d49b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Window &gt;</type>
      <name>get_view_window</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>a299c59953f6e5cb408d0480b94dd3a4b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; ShadowType &gt;</type>
      <name>property_shadow_type</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>a6bb975de80ef109578adeed2dcdf0a67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; ShadowType &gt;</type>
      <name>property_shadow_type</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>a681e9e30165f453498d8b853a1f40681</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>a5334adda1f180998c26a01733674dfe2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Viewport *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Viewport.html</anchorfile>
      <anchor>a81a6a13f8762482a586c48b7da75ff4c</anchor>
      <arglist>(GtkViewport *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::VolumeButton</name>
    <filename>classGtk_1_1VolumeButton.html</filename>
    <base>Gtk::ScaleButton</base>
    <member kind="function">
      <type></type>
      <name>VolumeButton</name>
      <anchorfile>classGtk_1_1VolumeButton.html</anchorfile>
      <anchor>a3fa8edff5d5f42bc85938fd421bf8343</anchor>
      <arglist>(VolumeButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>VolumeButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1VolumeButton.html</anchorfile>
      <anchor>a8b5cc8fc45e5a30cd4c8e701b1b1fdaa</anchor>
      <arglist>(VolumeButton &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VolumeButton</name>
      <anchorfile>classGtk_1_1VolumeButton.html</anchorfile>
      <anchor>aebed984515639a9e6fd4567d128f3bdf</anchor>
      <arglist>(const VolumeButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>VolumeButton &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1VolumeButton.html</anchorfile>
      <anchor>a846cea4da569cb6d5be74c9015d45f23</anchor>
      <arglist>(const VolumeButton &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~VolumeButton</name>
      <anchorfile>classGtk_1_1VolumeButton.html</anchorfile>
      <anchor>a27eb984c88ffec1aff36f7993b6d3a95</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkVolumeButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1VolumeButton.html</anchorfile>
      <anchor>a0da9674c76e5abe87e070c6d987b9605</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkVolumeButton *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1VolumeButton.html</anchorfile>
      <anchor>a12441bec52e8998b606048336f073212</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VolumeButton</name>
      <anchorfile>classGtk_1_1VolumeButton.html</anchorfile>
      <anchor>a74cdfed7575a0bde30c20693c5e3d11f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1VolumeButton.html</anchorfile>
      <anchor>adf671d0b16bf5ae2519d5abda7983532</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::VolumeButton *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1VolumeButton.html</anchorfile>
      <anchor>a459e24db3e9b15d5f8d261dd8296f365</anchor>
      <arglist>(GtkVolumeButton *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::VPaned</name>
    <filename>classGtk_1_1VPaned.html</filename>
    <base>Gtk::Paned</base>
    <member kind="function">
      <type></type>
      <name>VPaned</name>
      <anchorfile>classGtk_1_1VPaned.html</anchorfile>
      <anchor>aed7c59e24d78d62a2f9923605e70c8c1</anchor>
      <arglist>(VPaned &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>VPaned &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1VPaned.html</anchorfile>
      <anchor>ad1f7f68df243308c31d1eed69a4166d2</anchor>
      <arglist>(VPaned &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VPaned</name>
      <anchorfile>classGtk_1_1VPaned.html</anchorfile>
      <anchor>ac051feecf1c0c6c8215c85eba39d214e</anchor>
      <arglist>(const VPaned &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>VPaned &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1VPaned.html</anchorfile>
      <anchor>a7af0d64159c9901f6bd043047794cf7f</anchor>
      <arglist>(const VPaned &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~VPaned</name>
      <anchorfile>classGtk_1_1VPaned.html</anchorfile>
      <anchor>adb5fbf2025f676825c4c88278283a85e</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkVPaned *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1VPaned.html</anchorfile>
      <anchor>aae1e0ea682dfc4a999c6f7ded2318436</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkVPaned *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1VPaned.html</anchorfile>
      <anchor>a23fe0e920352349bcdefe4d9e7f7185f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VPaned</name>
      <anchorfile>classGtk_1_1VPaned.html</anchorfile>
      <anchor>a439f1631cc98675c9fe263fb6dc0a60e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1VPaned.html</anchorfile>
      <anchor>a6b5cc9aa5e5bba91637a7df095558565</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::VPaned *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1VPaned.html</anchorfile>
      <anchor>ac7efa6c230870e6ab16a93a5c3e05c20</anchor>
      <arglist>(GtkVPaned *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::VScale</name>
    <filename>classGtk_1_1VScale.html</filename>
    <base>Gtk::Scale</base>
    <member kind="function">
      <type></type>
      <name>VScale</name>
      <anchorfile>classGtk_1_1VScale.html</anchorfile>
      <anchor>a975da4530cc4271d2de93ddbe9a4dbd9</anchor>
      <arglist>(VScale &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>VScale &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1VScale.html</anchorfile>
      <anchor>aff1e9154b42b0c3d2cc530f3e73e86ef</anchor>
      <arglist>(VScale &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VScale</name>
      <anchorfile>classGtk_1_1VScale.html</anchorfile>
      <anchor>aa6589e49b4be9c9f8833ab38e3222e22</anchor>
      <arglist>(const VScale &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>VScale &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1VScale.html</anchorfile>
      <anchor>aac9c0a0b49dc20209bd5e72af0b4142f</anchor>
      <arglist>(const VScale &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~VScale</name>
      <anchorfile>classGtk_1_1VScale.html</anchorfile>
      <anchor>a851d8d6ae51f14a57647f98e3d19e4c8</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkVScale *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1VScale.html</anchorfile>
      <anchor>a902a9a6fa87f96142c06b272e8b84513</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkVScale *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1VScale.html</anchorfile>
      <anchor>ac6e6ee0b573d46e6d0510ce5d6a3fe59</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VScale</name>
      <anchorfile>classGtk_1_1VScale.html</anchorfile>
      <anchor>ad05c1549985f117d75069e7388795f20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VScale</name>
      <anchorfile>classGtk_1_1VScale.html</anchorfile>
      <anchor>ac946e05400a51884ac032980aeb9bc65</anchor>
      <arglist>(double min, double max, double step)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VScale</name>
      <anchorfile>classGtk_1_1VScale.html</anchorfile>
      <anchor>a85bb869467dd3863b3951e4ac80d1950</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;adjustment)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1VScale.html</anchorfile>
      <anchor>a5d099f05b089c6e7bb25666f11b3ae00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::VScale *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1VScale.html</anchorfile>
      <anchor>a7a757752654c7e70a34d2a04d713a8a7</anchor>
      <arglist>(GtkVScale *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::VScrollbar</name>
    <filename>classGtk_1_1VScrollbar.html</filename>
    <base>Gtk::Scrollbar</base>
    <member kind="function">
      <type></type>
      <name>VScrollbar</name>
      <anchorfile>classGtk_1_1VScrollbar.html</anchorfile>
      <anchor>acf84896afba78ef854b06b7e41f1ce44</anchor>
      <arglist>(VScrollbar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>VScrollbar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1VScrollbar.html</anchorfile>
      <anchor>aa70539b87d0cfbe9830913a8a01bd4c7</anchor>
      <arglist>(VScrollbar &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VScrollbar</name>
      <anchorfile>classGtk_1_1VScrollbar.html</anchorfile>
      <anchor>a11afcdae11f7262d4dcacb08c3ecbe8b</anchor>
      <arglist>(const VScrollbar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>VScrollbar &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1VScrollbar.html</anchorfile>
      <anchor>a7e7c30f03e7c54f4169b23f45f30f283</anchor>
      <arglist>(const VScrollbar &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~VScrollbar</name>
      <anchorfile>classGtk_1_1VScrollbar.html</anchorfile>
      <anchor>aa317b9b42360a76268b17d4512ed15af</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkVScrollbar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1VScrollbar.html</anchorfile>
      <anchor>a5681ed8b45d6e71c97fee8563fafc403</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkVScrollbar *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1VScrollbar.html</anchorfile>
      <anchor>a2e550157a3a2dc18478b2e6f1a74270c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VScrollbar</name>
      <anchorfile>classGtk_1_1VScrollbar.html</anchorfile>
      <anchor>af070beff294c7744ffd37c78bf9436fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VScrollbar</name>
      <anchorfile>classGtk_1_1VScrollbar.html</anchorfile>
      <anchor>adbe720ce916bd95e67a80803009dc0ed</anchor>
      <arglist>(const Glib::RefPtr&lt; Adjustment &gt; &amp;gtkadjustment)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1VScrollbar.html</anchorfile>
      <anchor>a39cc5c8d2045fa076021217808f3925b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::VScrollbar *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1VScrollbar.html</anchorfile>
      <anchor>a0f1b37eda60a2acca1d14b3161660ec2</anchor>
      <arglist>(GtkVScrollbar *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::VSeparator</name>
    <filename>classGtk_1_1VSeparator.html</filename>
    <base>Gtk::Separator</base>
    <member kind="function">
      <type></type>
      <name>VSeparator</name>
      <anchorfile>classGtk_1_1VSeparator.html</anchorfile>
      <anchor>a53c8ed5803ac577156feb1a7b9405b0a</anchor>
      <arglist>(VSeparator &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>VSeparator &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1VSeparator.html</anchorfile>
      <anchor>a3364eb2aa72b57739d7d51ab81654f0a</anchor>
      <arglist>(VSeparator &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VSeparator</name>
      <anchorfile>classGtk_1_1VSeparator.html</anchorfile>
      <anchor>ad56696a842440bbd46547906ea5dddac</anchor>
      <arglist>(const VSeparator &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>VSeparator &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1VSeparator.html</anchorfile>
      <anchor>ab159643cff20faaf3ac19a15131bf5ad</anchor>
      <arglist>(const VSeparator &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~VSeparator</name>
      <anchorfile>classGtk_1_1VSeparator.html</anchorfile>
      <anchor>a93467d7c8d5dc20cb3df48cc403ccd73</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkVSeparator *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1VSeparator.html</anchorfile>
      <anchor>acaade3a4b79b0257e9152dc07e9acc55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkVSeparator *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1VSeparator.html</anchorfile>
      <anchor>ad029d6a541944965dc6720546501dea9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VSeparator</name>
      <anchorfile>classGtk_1_1VSeparator.html</anchorfile>
      <anchor>aab3098f71df58534fa5bced7206c87af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1VSeparator.html</anchorfile>
      <anchor>a76635b154ace9632799bf75abe6c67b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::VSeparator *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1VSeparator.html</anchorfile>
      <anchor>aba24653300d0641f844b8a537dd1b0a6</anchor>
      <arglist>(GtkVSeparator *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Widget</name>
    <filename>classGtk_1_1Widget.html</filename>
    <base>Gtk::Object</base>
    <base>Gtk::Buildable</base>
    <base>Atk::Implementor</base>
    <member kind="typedef">
      <type>sigc::slot&lt; bool(const Glib::RefPtr&lt; Gdk::FrameClock &gt; &amp;)&gt;</type>
      <name>SlotTick</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a4676a4befa8e2c179a35eb56de02309c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Widget</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad42f2194a32543281b910bdb98b37c28</anchor>
      <arglist>(Widget &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Widget &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a44af4ab8483330a6c2bc75822482ed2e</anchor>
      <arglist>(Widget &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Widget</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a6fe83eda31d20211754f8c53f4fa507f</anchor>
      <arglist>(const Widget &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Widget &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aea59a3f6e194f1e96be948d84be00a22</anchor>
      <arglist>(const Widget &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Widget</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a41f83c884ff1a7e532d41405d4cc41ee</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkWidget *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a6667a82920375b2ebde07bc1ffdc3641</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkWidget *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad998178529a53b80f3de96d10b1deffd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>show</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aa791d86a0bb3658e378e81d731dd0121</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>show_now</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a921b49004ee48c9681d892e038741e29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hide</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a285c1775842292ae4bc6d074aa892c61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>show_all</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a4fab2509c3afe1952a408494561295c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>queue_draw</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a63912f0924724c78298882b7c85139b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>queue_draw_area</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a8c32356962bb2dc596b9bcf1684e4eac</anchor>
      <arglist>(int x, int y, int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>queue_draw_region</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a1fd91b6735d36830b4c93d6be32ba2d2</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; const ::Cairo::Region &gt; &amp;region)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>queue_resize</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>af3f9465454a376549b12a5eeee1277c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>queue_allocate</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a8c4fef597e398649d66e44d9edea5726</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>size_allocate</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a13a1a6d8e6ec7297fb0629b86ce8d069</anchor>
      <arglist>(const Allocation &amp;allocation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>size_allocate</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ae34a70af1134ec5b5f2e1ee24ed455b8</anchor>
      <arglist>(const Allocation &amp;allocation, int baseline)</arglist>
    </member>
    <member kind="function">
      <type>SizeRequestMode</type>
      <name>get_request_mode</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a82dcef499c9d738df2be25cc25a90763</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_preferred_width</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a091d85cbfaeb5a9be146a9cfd1eeb49a</anchor>
      <arglist>(int &amp;minimum_width, int &amp;natural_width) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_preferred_height_for_width</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a8de843ff727867a65ffb1fd73c422893</anchor>
      <arglist>(int width, int &amp;minimum_height, int &amp;natural_height) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_preferred_height_for_width</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ac3209c622c5c3f28377c2d1267a0f8f1</anchor>
      <arglist>(int width, int &amp;minimum_height, int &amp;natural_height, int &amp;minimum_baseline, int &amp;natural_baseline) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_preferred_height</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a877e5e5caf5d73f0489c4ab06fe47ac4</anchor>
      <arglist>(int &amp;minimum_height, int &amp;natural_height) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_preferred_width_for_height</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a649f997a99001237b5799eedd075ef98</anchor>
      <arglist>(int height, int &amp;minimum_width, int &amp;natural_width) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_preferred_size</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a8f22b44be5538ddac58584081738a8e8</anchor>
      <arglist>(Requisition &amp;minimum_size, Requisition &amp;natural_size) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_accelerator</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a55ae2e3c3a3bd14db2b86657969e610c</anchor>
      <arglist>(const Glib::ustring &amp;accel_signal, const Glib::RefPtr&lt; AccelGroup &gt; &amp;accel_group, guint accel_key, Gdk::ModifierType accel_mods, AccelFlags accel_flags)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove_accelerator</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a2131441d8654ca69a8122139fbb3e772</anchor>
      <arglist>(const Glib::RefPtr&lt; AccelGroup &gt; &amp;accel_group, guint accel_key, Gdk::ModifierType accel_mods)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_accel_path</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a9c3436836536202a92a2d7597d828f05</anchor>
      <arglist>(const Glib::ustring &amp;accel_path, const Glib::RefPtr&lt; AccelGroup &gt; &amp;accel_group)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>mnemonic_activate</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ace91dc69ed75652af1c00e0a8ef94f92</anchor>
      <arglist>(bool group_cycling)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a8aa887fa3bc8a3da83f57d93fd71a682</anchor>
      <arglist>(GdkEvent *gdk_event)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>send_expose</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad77798f8534c980b0b04d1142d93ee0a</anchor>
      <arglist>(GdkEvent *gdk_event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send_focus_change</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a02250506a22f22d3652fa85f456638eb</anchor>
      <arglist>(GdkEvent *gdk_event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>activate</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>adc42f15b07b367e41ac690edc2c96693</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reparent</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a662a78a1b0f2b1572b139ce09d5489cb</anchor>
      <arglist>(Widget &amp;new_parent)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>intersect</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>acb010d9cbff38078be998d617e61c0fb</anchor>
      <arglist>(const Gdk::Rectangle &amp;area) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>intersect</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>acca2ca3696d71e84d72f3a86334c741b</anchor>
      <arglist>(const Gdk::Rectangle &amp;area, Gdk::Rectangle &amp;intersection) const </arglist>
    </member>
    <member kind="function">
      <type>::Cairo::RefPtr&lt; ::Cairo::Region &gt;</type>
      <name>region_intersect</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aa3d9ad9e66be9ae5a64e174355e16fda</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Region &gt; &amp;region) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeze_child_notify</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a66c192d5c2c2c8c0dc11a1503d6213f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>child_notify</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a70d846e0fce800623118eeb5a2d983d9</anchor>
      <arglist>(const Glib::ustring &amp;child_property)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>thaw_child_notify</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a564b1684aadf618762fbc762af96c1d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_can_focus</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a50a016e05181fb474516723240a87134</anchor>
      <arglist>(bool can_focus=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_can_focus</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ac80afe09d6d0c5d5c30376b1cddb0626</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_focus</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a895663325ac65b9860e57fc60a509384</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_focus</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ae2544c9249c647b425d11ea28808adb1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_visible_focus</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aed95aab2644942a9d8d7d24e8a06b871</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>grab_focus</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a4c376dd31e5b4d616d8f914338fea8b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_focus_on_click</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a13ab8e601567c8eee0abf6119ba3abed</anchor>
      <arglist>(bool focus_on_click=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_focus_on_click</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a9e7b3bf47030e6f7d41b058481e83439</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_can_default</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a07ad78bd76f3b2a25844d5e55816e609</anchor>
      <arglist>(bool can_default=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_can_default</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a97ede3d3eb0f9b53328723e5226bb782</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_default</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a80b5819c1a27cc7c942281c6a1a90e8f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>grab_default</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a873be7db035102a20dbd9823ee874be1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_receives_default</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a781389940fbd7baa528eee5ed6108ac5</anchor>
      <arglist>(bool receives_default=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_receives_default</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad09b518cc7b76165a320aeff983e9a52</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_grab</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a0eb25d2165758a990289bceeaa33a03e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>device_is_shadowed</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a01b88877a9feae19ebefcf08fa4af9ad</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gdk::Device &gt; &amp;device)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_modal_grab</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aac16e0fc4bc802b9d894ddf693875c90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_modal_grab</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a86671ee3065b1616f730ea35d8daa750</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_name</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a12b052fca2ace42902e0448862fbf189</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_name</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a6437f815a667fd6501f7460abaf8acc6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_name</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a5a1aa918ace7dc441fc7b0fef61b14f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_state</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a0be5a1d06a0d2d7c989773646c03d669</anchor>
      <arglist>(StateType state)</arglist>
    </member>
    <member kind="function">
      <type>StateType</type>
      <name>get_state</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aed3fdc4ba967c1a43ba8fefb0d25c3f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_state_flags</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a382fb9fd8f1fd35bf30a4eaf0d087890</anchor>
      <arglist>(StateFlags flags, bool clear=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_state_flags</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aadacdc1ea1627e0027b7e3dc6a19cf7e</anchor>
      <arglist>(StateFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>StateFlags</type>
      <name>get_state_flags</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>af85f38b8a20f3a4efc2ef71ddcf85f58</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_sensitive</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a3192b5f7f4c15876169b913eb9d1075e</anchor>
      <arglist>(bool sensitive=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_sensitive</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a9a8ffa25c5857334efa3eb080d344319</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_sensitive</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>afbb93061db93c091829e675631f2b163</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_visible</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a6765c4e8acc59ca6909a0a0681be0e8c</anchor>
      <arglist>(bool visible=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_visible</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a05cf5ead0c7f843d85ddb1e5979451c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_visible</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a4c9d61aa7062c3010dd7473ef60d4fa9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_has_window</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a00d5da71916c20935fa7b9d856b248c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_is_toplevel</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a9ea9d9a257901824dd85a4d51e41f0fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_is_drawable</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a6c1552e8bd7411105e10fa05fe564f20</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_realized</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>af441f226c8ac8d79342a16e876f325cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_mapped</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aad0070bc022f96186689521822a9879f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_app_paintable</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a5af27658e6942a6e072a00ee67c7761f</anchor>
      <arglist>(bool app_paintable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_app_paintable</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a380c083f89e9ab5eb95620bbdce451e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_double_buffered</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a1dc2aaa692529dd8ba499b22fd1f7a5c</anchor>
      <arglist>(bool double_buffered=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_double_buffered</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a1fbca57e4114c28f41c2d775168eab73</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_redraw_on_allocate</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a1738a41d31952a70f4e8830a2e5d973a</anchor>
      <arglist>(bool redraw_on_allocate=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_child_visible</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad79d21f9306daae9f7448ab7143f21c3</anchor>
      <arglist>(bool visible=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_child_visible</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a601d20bf7ebe1579096de04a88c81c25</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Window &gt;</type>
      <name>get_window</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a403777253417c5c7653aac9e932de76b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Window &gt;</type>
      <name>get_window</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad43539ccb0fa01406b263b08e5bf94c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register_window</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a4b3c54d8a167e6901e558d5d6dd812e2</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Window &gt; &amp;window)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregister_window</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a6026018067a203e986b88b84e0638bb6</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Window &gt; &amp;window)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_allocated_width</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad2c4a71d574be083a15e800d9dd02e2b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_allocated_height</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a29628aeb1606add96c4ef7aaa6f1cfe1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_allocated_baseline</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a567fc5873846b2004b5f1f75c57fe73b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_allocated_size</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a806873fd7bd53fb4babd2eebd1be25e4</anchor>
      <arglist>(Allocation &amp;allocation, int &amp;baseline) const </arglist>
    </member>
    <member kind="function">
      <type>Allocation</type>
      <name>get_allocation</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a67a286b9da91a83ee6016b479dad2341</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_allocation</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a3a373b58ed5a05fd28d6dadd70d8f39b</anchor>
      <arglist>(const Allocation &amp;allocation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_clip</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a75ab278168730303eed645f138aaec40</anchor>
      <arglist>(const Allocation &amp;clip)</arglist>
    </member>
    <member kind="function">
      <type>Allocation</type>
      <name>get_clip</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>afe13164483d059f5216d85b74a8a020a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Container *</type>
      <name>get_parent</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>afee23a4fd82defaead8736b5b4a88e56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Container *</type>
      <name>get_parent</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a6c785b5287739a735b8506d4a534b183</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Window &gt;</type>
      <name>get_parent_window</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a5b29c47b3f21eb29d2cb6a9ea6a0cd6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Window &gt;</type>
      <name>get_parent_window</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>acf88fd21d53e92e7cafe884221d953e1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_parent_window</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a992c56dd7203b869c3923d08a9460136</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gdk::Window &gt; &amp;parent_window)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>child_focus</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a8c564b6823adf744d14e258e661f453c</anchor>
      <arglist>(DirectionType direction)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>keynav_failed</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a270f00bc2bca5e0084e31d0d3cdb4e17</anchor>
      <arglist>(DirectionType direction)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>error_bell</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aea95a517808ca7eb63830e4bf13854dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_size_request</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a5e95431f630a226b0b7297e4815ee945</anchor>
      <arglist>(int width=-1, int height=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_size_request</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a4586cd687f2ad4995b4cefb629951c26</anchor>
      <arglist>(int &amp;width, int &amp;height) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_events</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>adeb38a3d5988a0e31055bbd2edb2e954</anchor>
      <arglist>(Gdk::EventMask events)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_events</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a1af589cb1d8764be5abf5579ffb69bec</anchor>
      <arglist>(Gdk::EventMask events)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_device_events</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ab518e465fbfa62c0d530bcc25739f9f6</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gdk::Device &gt; &amp;device, Gdk::EventMask events)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_device_events</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>af672d9c2128faf6a661968fc82468bdc</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gdk::Device &gt; &amp;device, Gdk::EventMask events)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_opacity</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a8ace1feccc2a5719e3589484a33854f9</anchor>
      <arglist>(double opacity)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_opacity</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a077b3d30068eb952bfbe5a5b4a120510</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_device_enabled</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a047d22af9f41e1222d1367523f899df2</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Device &gt; &amp;device, bool enabled=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_device_enabled</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a0052b257c976e31e8a243bae737cc921</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gdk::Device &gt; &amp;device) const </arglist>
    </member>
    <member kind="function">
      <type>Container *</type>
      <name>get_toplevel</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ab91722dd77223c450b8dfaa45af59c1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Container *</type>
      <name>get_toplevel</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ac92a0dc8751c828406ca8755f013b75c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_ancestor</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad65bedf64acfd0401abbe489312fba8e</anchor>
      <arglist>(GType widget_type)</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_ancestor</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a8c57b3e35a7c6ccb03b90e194df04ff6</anchor>
      <arglist>(GType widget_type) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Visual &gt;</type>
      <name>get_visual</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>af3dd4ac0105f1e1d1343aa6a9394766e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Screen &gt;</type>
      <name>get_screen</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a4bf25ceaa259bbe86fac0c9f54202c68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Screen &gt;</type>
      <name>get_screen</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a05ec9ee6b8d359cf572ad2d788e3ad87</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_screen</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a90ccf19a00df33ff1e8360a0567a2f3c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_scale_factor</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a9c1a7702b26f43606d934933edc8b562</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a2f5880e2f1df5ff12295cf97c83de097</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Display &gt;</type>
      <name>get_display</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a53ecb2d278c16481bce8ff7eac4569ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Window &gt;</type>
      <name>get_root_window</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a01f8d1943ef5f80c2aab914bcad1ce82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Window &gt;</type>
      <name>get_root_window</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ae4d24fd21120a63447982b4d064be9e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Settings &gt;</type>
      <name>get_settings</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aa2f8ed32453af89b2c322ac466b30c2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Clipboard &gt;</type>
      <name>get_clipboard</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>abd2136ea04f43c92a5714ae31855b3da</anchor>
      <arglist>(const Glib::ustring &amp;selection)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Clipboard &gt;</type>
      <name>get_clipboard</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a0aed0f0898e00f872c71f7e5bcd5b93f</anchor>
      <arglist>(const Glib::ustring &amp;selection) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_hexpand</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>adb3dae8b61e316c2a04c743f9b3ff501</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_hexpand</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a72f772d5f51c14dda2c93d1d50ded5d1</anchor>
      <arglist>(bool expand=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_hexpand_set</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a72ecd029a0548cd5c01f09f9232b71b6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_hexpand_set</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a70f23009ef939c36a2738d882a03d350</anchor>
      <arglist>(bool set=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_vexpand</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a1f104b74f6a12636332310c5ebd2516f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_vexpand</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a3c909282edd09194bc6b6e97c945ad20</anchor>
      <arglist>(bool expand=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_vexpand_set</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad21bc24f252fd2c9e9ea06c9bf04fa9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_vexpand_set</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a2fd22709b68f6a245f187aa806d2df8d</anchor>
      <arglist>(bool set=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>queue_compute_expand</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a372ec49fbfa07e8caf10fc2719012554</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>compute_expand</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a3fc821867514e126c02648dd83ae4dd9</anchor>
      <arglist>(Orientation orientation)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_support_multidevice</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a9bf2cf1727698bdb93abbba6d69b8b95</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_support_multidevice</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a2edbdf49d8e9c2b163bdcb66cd378377</anchor>
      <arglist>(bool support_multidevice=true)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Atk::Object &gt;</type>
      <name>get_accessible</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a41680bef5588272785a7ab6dc11f7e4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Atk::Object &gt;</type>
      <name>get_accessible</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a5fc1559ead59f432c0fe3fd5868d6d45</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Align</type>
      <name>get_halign</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a6dd25a08d960b22522bed928df28e538</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_halign</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a28d7dc64da6012005994f9ae41727af5</anchor>
      <arglist>(Align align)</arglist>
    </member>
    <member kind="function">
      <type>Align</type>
      <name>get_valign</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a3c5069e25cf4345f060fd6e4e657002f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Align</type>
      <name>get_valign_with_baseline</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>af110c1eb4471da3d19188acc82657438</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_valign</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a3f560f05b359942d70c5c207655da07a</anchor>
      <arglist>(Align align)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_margin_left</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a842f184c4c0a99569b2b1b0b25db12ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_margin_left</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a424c8d5b28e40cc679ee95a5e04ff6a3</anchor>
      <arglist>(int margin)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_margin_right</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ac9e58b824148641fea1fa41bfe257efb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_margin_right</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a01cf2d4883a8442aa9dcbe4554b3332b</anchor>
      <arglist>(int margin)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_margin_start</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ae4739d9c02e3f1f91266e743b9b45c51</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_margin_start</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>acb4165dfb9b9483955b78aa81f79ff2a</anchor>
      <arglist>(int margin)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_margin_end</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a27f64d12bcd0b02799b0471ac5803b55</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_margin_end</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a4d37d16a0e0c333bb1383a0882c28113</anchor>
      <arglist>(int margin)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_margin_top</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ac482430988eaf1f0227b76fd82f59d89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_margin_top</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a048393c3adfbf1caac68d4094b0209a4</anchor>
      <arglist>(int margin)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_margin_bottom</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a8b27d76593ddfc2911d9bbf07edeffe9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_margin_bottom</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>af75837e800efac8690336d0416c2f855</anchor>
      <arglist>(int margin)</arglist>
    </member>
    <member kind="function">
      <type>Gdk::EventMask</type>
      <name>get_events</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ac3e3c9eedbad77c05631d77c37f8e565</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Gdk::EventMask</type>
      <name>get_device_events</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ab5b13a3e3cda9d2d4de33241aa629eac</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gdk::Device &gt; &amp;device) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_pointer</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a9f27636d0f3d3be136e890ac198c50c2</anchor>
      <arglist>(int &amp;x, int &amp;y) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_ancestor</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a6b55364bdd098a93fa453b26a0a31029</anchor>
      <arglist>(Widget &amp;ancestor) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>translate_coordinates</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a77d2324d831bd055195c4219280882d7</anchor>
      <arglist>(Widget &amp;dest_widget, int src_x, int src_y, int &amp;dest_x, int &amp;dest_y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>override_color</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a5dc804f3893dc4d7435fa0634be5839c</anchor>
      <arglist>(const Gdk::RGBA &amp;color, StateFlags state=STATE_FLAG_NORMAL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_color</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a34c82bf2c191f7d0fa229ea3d38c3fb4</anchor>
      <arglist>(StateFlags state=STATE_FLAG_NORMAL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>override_background_color</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a0cfc9b5936ae1f122df527b432d3255f</anchor>
      <arglist>(const Gdk::RGBA &amp;color, StateFlags state=STATE_FLAG_NORMAL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_background_color</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a715d6b0a2202c84ab792c3f3442d49cc</anchor>
      <arglist>(StateFlags state=STATE_FLAG_NORMAL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>override_font</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>abebbcb37aa062683ca2593f0555b31ae</anchor>
      <arglist>(const Pango::FontDescription &amp;font_desc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_font</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a60c88c894c806af1a20dffca36cd3744</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>override_symbolic_color</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a182ed21ae90e12c29afaa335e9c05f2b</anchor>
      <arglist>(const Glib::ustring &amp;name, const Gdk::RGBA &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_symbolic_color</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a614b4598c98a3f8f8eb24f0db3c6732a</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>override_cursor</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aa76a3b30d1c37f2f76e2deb9ed625344</anchor>
      <arglist>(const Gdk::RGBA &amp;cursor, const Gdk::RGBA &amp;secondary_cursor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_cursor</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a205aa815e511439e7a50cc951ce8f4a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset_style</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a84e694bef183661bc982ec227ca365b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_style_property</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a0ad16857eb6827256f57697fcfbfaf7f</anchor>
      <arglist>(const Glib::ustring &amp;the_property_name, PropertyType &amp;value) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pango::Context &gt;</type>
      <name>create_pango_context</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a037efd7a9033e4b66a17cbf3f6948256</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pango::Context &gt;</type>
      <name>get_pango_context</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a0be06b45418ec17f992eb3acf89cd0b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_font_options</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a94d037eb3d00f52f78f0e203785b4bc1</anchor>
      <arglist>(const ::Cairo::FontOptions &amp;options)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_font_options</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a68415ea2d32de46707ebd1b3ca891acc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>::Cairo::FontOptions</type>
      <name>get_font_options</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a99200ba7596d796c81fb2fab7b1ca857</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pango::Layout &gt;</type>
      <name>create_pango_layout</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a3324f1e83d4c9a66262d32c4ba4a8051</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>render_icon_pixbuf</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a28bbbd0c1717e58343df56f7f422b106</anchor>
      <arglist>(const StockID &amp;stock_id, IconSize size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_composite_name</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>abcb7583891b4e1f0b7bbcab6756555f5</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_composite_name</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ac7e37f1af28e877f78cd8cee25152284</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_composite_name</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ae35a43f2ae2ef249f4cfae2ae7b69e95</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_direction</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a99ce7eb311e0c9fbc4470c845555b93d</anchor>
      <arglist>(TextDirection dir)</arglist>
    </member>
    <member kind="function">
      <type>TextDirection</type>
      <name>get_direction</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a2c3e18773a8388a98005cc95f59eb086</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shape_combine_region</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a707dc13f2a15b63d650b23d58f940d15</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; const ::Cairo::Region &gt; &amp;region)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>input_shape_combine_region</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>adaf8eac284f3e61ad0dd715fda460993</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; const ::Cairo::Region &gt; &amp;region)</arglist>
    </member>
    <member kind="function">
      <type>WidgetPath</type>
      <name>get_path</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ae6516cb8f433920314f7e3f853875535</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Widget * &gt;</type>
      <name>list_mnemonic_labels</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a6176f1a652b1aae54aacbdba1e09d79e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const Widget * &gt;</type>
      <name>list_mnemonic_labels</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a2e445adb6ed5b560dcb2ae62f3434ebd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_mnemonic_label</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>adccc7e5666cb846546d0fa74e4a9a6a5</anchor>
      <arglist>(Widget &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_mnemonic_label</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aae9b5c7d8815bfb16114a2796a4513b0</anchor>
      <arglist>(Widget &amp;label)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drag_get_data</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aeeff7bdf20b304d8ccaaa1a6a2472254</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::DragContext &gt; &amp;context, const Glib::ustring &amp;target, guint32 time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drag_highlight</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>af24201179782fc264d958a7e94e001ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drag_unhighlight</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a403e43f2911548d18a78b0ad85e0e6be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drag_dest_set</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aeec9a624508bddd1bcc81f16f7812bb4</anchor>
      <arglist>(DestDefaults flags=DestDefaults(0), Gdk::DragAction actions=Gdk::DragAction(0))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drag_dest_set</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a2af864af180367a9cbd8effec88d8fcf</anchor>
      <arglist>(const std::vector&lt; TargetEntry &gt; &amp;targets, DestDefaults flags=DEST_DEFAULT_ALL, Gdk::DragAction actions=Gdk::ACTION_COPY)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drag_dest_set_proxy</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a1a200a050a00fa3d67b93e2ae0458e2b</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Window &gt; &amp;proxy_window, Gdk::DragProtocol protocol, bool use_coordinates)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drag_dest_unset</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a0940c95059601a152db59a2fc99a2ed3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>drag_dest_find_target</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a36805dcb16af63671f1762828929ab28</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::DragContext &gt; &amp;context, const Glib::RefPtr&lt; TargetList &gt; &amp;target_list) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>drag_dest_find_target</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a26b0ba34603ae17d75de92fbe95e1ede</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::DragContext &gt; &amp;context) const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; TargetList &gt;</type>
      <name>drag_dest_get_target_list</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a07c1ed53631714a9135f6db9370ff6f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const TargetList &gt;</type>
      <name>drag_dest_get_target_list</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aa09841e7ea39628ca8760746a5f55647</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drag_dest_set_target_list</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a86dd2a470bf21f2e1226c08e77602b28</anchor>
      <arglist>(const Glib::RefPtr&lt; TargetList &gt; &amp;target_list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drag_dest_add_text_targets</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad669a63737649c8415ad0ea24d7a952e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drag_dest_add_image_targets</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a19c4e7cff79edb7270f51b760ff3e1b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drag_dest_add_uri_targets</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a138185c3fdd994c0dbc94acafc14326f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drag_source_set</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a1eb1566863ad81acace912f2e78f3d26</anchor>
      <arglist>(const std::vector&lt; TargetEntry &gt; &amp;targets, Gdk::ModifierType start_button_mask=Gdk::MODIFIER_MASK, Gdk::DragAction actions=Gdk::ACTION_COPY)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drag_source_unset</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a9c156edd6b54cb87d39cbbcec70716a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drag_source_set_icon</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a92fabd755df343050f9421a83d0d602d</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;pixbuf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drag_source_set_icon</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a2c03f929c0f9b47122079df302216665</anchor>
      <arglist>(const StockID &amp;stock_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drag_source_set_icon</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a870e910048a22a53f1b1a84e2d488fea</anchor>
      <arglist>(const Glib::ustring &amp;icon_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drag_source_add_text_targets</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a729e302832707babc3639484b45b3fdb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drag_source_add_uri_targets</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad9d9afa611a4fbc2a77929dd0d6c84e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drag_source_add_image_targets</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a92896486d11b3f429000fa5cc8edf571</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::DragContext &gt;</type>
      <name>drag_begin</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a00cc8218a0cf625df006cfe13867de05</anchor>
      <arglist>(const Glib::RefPtr&lt; TargetList &gt; &amp;targets, Gdk::DragAction actions, int button, GdkEvent *gdk_event)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::DragContext &gt;</type>
      <name>drag_begin</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a737c0877d4fa452cdb24dbdef7f232ae</anchor>
      <arglist>(const Glib::RefPtr&lt; TargetList &gt; &amp;targets, Gdk::DragAction actions, int button, GdkEvent *gdk_event, int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>drag_check_threshold</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a64de61261ff9d14d7973d3a6833fb163</anchor>
      <arglist>(int start_x, int start_y, int current_x, int current_y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drag_set_as_icon</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a70d8a9ddb89c4de96621bac0a735a1d8</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::DragContext &gt; &amp;context, int hot_x, int hot_y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>queue_resize_no_redraw</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aa6b83d447bd58b0a99d4a3f0206a1fa7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::FrameClock &gt;</type>
      <name>get_frame_clock</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a8f01d63d2855c83c169735bef273fd09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::FrameClock &gt;</type>
      <name>get_frame_clock</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>acb74f4d7b047a9b1791bc1b354933e89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_no_show_all</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ab03e846ecbf4d9f17e22e7896b288dcd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_no_show_all</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a806bd24b81722743c330d0c8fa5bf647</anchor>
      <arglist>(bool no_show_all=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_parent</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a21b9e9e7fb43ed9ab0ed9e7adeec6b4e</anchor>
      <arglist>(Widget &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unparent</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aa17c76495e4c597626cfd2f5f1e71ea3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>map</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>af83da02607776d8b4c3b177cfe305b6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unmap</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a8da9feaacdb1fb6cc2e867416767f9c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw_insertion_cursor</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aa51fd78029289d41c81856f16b499342</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;cr, const Gdk::Rectangle &amp;location, bool is_primary, TextDirection direction, bool draw_arrow=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tooltip_window</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>af4195154d63bd1551af0b66d47ba669e</anchor>
      <arglist>(Window &amp;custom_window)</arglist>
    </member>
    <member kind="function">
      <type>Window *</type>
      <name>get_tooltip_window</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a9d52bbba472b9c74dfa22cb1f60981ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trigger_tooltip_query</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a0edaf9428acc1059fbce774474f4a583</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tooltip_text</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a42b509c9f13cee28f3c3cd25192b78ae</anchor>
      <arglist>(const Glib::ustring &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_tooltip_text</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a6959fa6a9bf136bf8d4c151d3a470cd8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_tooltip_markup</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a91d2ed29e299f06fdf18c1d6620667fe</anchor>
      <arglist>(const Glib::ustring &amp;markup)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_tooltip_markup</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>afd3cc5f9edf7205d885f8074007b7f75</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_tooltip</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a9acdb4ae0461ce87cacd553a3de7608d</anchor>
      <arglist>(bool has_tooltip=TRUE)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_has_tooltip</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>afc499e7b1bfb1df675090f0dfd5ddf3d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_width</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aa0d3811915ad49a076b094ec1396779f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_height</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aa4f70eb9a258bcec56d69f9177e5a43a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_composited</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a06ee94eb3c601b3a400a9a1ceef97d01</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>in_destruction</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a6e9c0e26f9edb3f8b74c1569588ef196</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; StyleContext &gt;</type>
      <name>get_style_context</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>af76fdca337696a969d0c6080ac5995e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::StyleContext &gt;</type>
      <name>get_style_context</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a63f85a48ddbd5fc95a7475dd7a9b0afd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Gdk::ModifierType</type>
      <name>get_modifier_mask</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a57a063e8410506f5af4620a7cbec2c7d</anchor>
      <arglist>(Gdk::ModifierIntent intent)</arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>add_tick_callback</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a0087dc87b7dfa41988affa55d3fbf834</anchor>
      <arglist>(const SlotTick &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_tick_callback</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>afdb8dcd2fc4bb0c90fb23ab0f408a3d9</anchor>
      <arglist>(guint id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_action_group</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a2117aba96d706c03c45bdba3f944c457</anchor>
      <arglist>(const Glib::ustring &amp;name, const Glib::RefPtr&lt; Gio::ActionGroup &gt; &amp;group)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_action_group</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a717543a7b9da082a38a3a3206f63f879</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::ActionGroup &gt;</type>
      <name>get_action_group</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a2a9c8e8d0d8dc6b3e6e453f5ce98c7a1</anchor>
      <arglist>(const Glib::ustring &amp;prefix)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gio::ActionGroup &gt;</type>
      <name>get_action_group</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a72834ceec139e7bcf71a740f6b883c4d</anchor>
      <arglist>(const Glib::ustring &amp;prefix) const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>list_action_prefixes</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a3f990969e7e68c9170e4ba6a0e4d74d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_font_map</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a4c3639d88f69b17db1cfaf7c1421b031</anchor>
      <arglist>(const Glib::RefPtr&lt; Pango::FontMap &gt; &amp;font_map)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Pango::FontMap &gt;</type>
      <name>get_font_map</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a2a24e26884171b00df361f74b6261a2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Pango::FontMap &gt;</type>
      <name>get_font_map</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aeec609c9414b646691fde8f51f7f7a3c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_show</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a834f693986a2b7b73594e724d16a68a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_hide</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a7c558781f5e2845b6fc8430b6e2b49bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_map</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a8f8f80663cabf46c8c376595bfeaa49e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_unmap</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a1f6824bc1524f2586fe066db649fda92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_realize</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>af97cf8416f96814aefb8cb1e88dfbf38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_unrealize</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>af1d51a8e925529fee1cd4404e054d5d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, Allocation &amp; &gt;</type>
      <name>signal_size_allocate</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a623e391260b8d3391438eb178fc7c861</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, Gtk::StateType &gt;</type>
      <name>signal_state_changed</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a4c45808dc5ee8ca603bebad95579fbeb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, Gtk::StateFlags &gt;</type>
      <name>signal_state_flags_changed</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>af13257ab00916c569fc84b95c7db8b77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, Widget * &gt;</type>
      <name>signal_parent_changed</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aa65b86271026cb4028a5cbcc977c4ceb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, Widget * &gt;</type>
      <name>signal_hierarchy_changed</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a00c199d0eabf7ef2d0bdb86aa4ce0516</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_style_updated</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a23039dc8b0596039741cef47756b4ad4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, TextDirection &gt;</type>
      <name>signal_direction_changed</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a1fcd6bd1817e836168577463f6e6fb7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, bool &gt;</type>
      <name>signal_grab_notify</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>af3d816c5d7ff828375711ac532f2e1a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, GParamSpec * &gt;</type>
      <name>signal_child_notify</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a2584896d844005c0ec19a10273a88473</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxyDetailedAnyType&lt; void, GParamSpec * &gt;</type>
      <name>signal_child_notify</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a296c9147647b4bb82ed6c1a2f5368219</anchor>
      <arglist>(const Glib::ustring &amp;child_property_name)</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, bool &gt;</type>
      <name>signal_mnemonic_activate</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a41eb8c621d88acad7afb18746a1663f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_grab_focus</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a0d4b1f239083bf747d67704fd25563e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, DirectionType &gt;</type>
      <name>signal_focus</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a26966a9fc3698a60e1bf19acd9781bf0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, GdkEvent * &gt;</type>
      <name>signal_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ae929903418f67370c54720f6d2b12259</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, GdkEvent * &gt;</type>
      <name>signal_event_after</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a3e92590cdcfa3e62681e0be6fae334a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, GdkEventButton * &gt;</type>
      <name>signal_button_press_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a8e661bba77abc2fd0fbd81ad7b450cd8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, GdkEventButton * &gt;</type>
      <name>signal_button_release_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a5cb7b096668d911e894051183fe5fc8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, GdkEventScroll * &gt;</type>
      <name>signal_scroll_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a9a3ec8dd94c30d084c6b557fbf32f240</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, GdkEventMotion * &gt;</type>
      <name>signal_motion_notify_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a46e819f54ebc992b9abb4edef6dcb4b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, GdkEventAny * &gt;</type>
      <name>signal_delete_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a3986616c9bc5ed3bb3bcc450ec80d54c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp; &gt;</type>
      <name>signal_draw</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ab0a7d34fe7ae7a83fdb1e1ddd223e8f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, GdkEventKey * &gt;</type>
      <name>signal_key_press_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a4b64421cad754fbd49ae17cbfe4814d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, GdkEventKey * &gt;</type>
      <name>signal_key_release_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a77ed7c92e1f8d93a225d59770f810f15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, GdkEventCrossing * &gt;</type>
      <name>signal_enter_notify_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a2b6498c40a5bf7288a32e60a28f8e82b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, GdkEventCrossing * &gt;</type>
      <name>signal_leave_notify_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a65146e71fa6a7607d0ec546b25c4bc37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, GdkEventConfigure * &gt;</type>
      <name>signal_configure_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a62cc55f24729244391085a357a34535f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, GdkEventFocus * &gt;</type>
      <name>signal_focus_in_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a17289c13fceb88e55967d3452e488b3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, GdkEventFocus * &gt;</type>
      <name>signal_focus_out_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a2839983fc66ced17183d318288713bc0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, GdkEventAny * &gt;</type>
      <name>signal_map_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aea8475d6ceb7fe9646af8ff32b291c59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, GdkEventAny * &gt;</type>
      <name>signal_unmap_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a2297b32ad646cb15f4369e2d8da366e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, GdkEventProperty * &gt;</type>
      <name>signal_property_notify_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>afabffe99bb07d943d607616067396df5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, GdkEventSelection * &gt;</type>
      <name>signal_selection_clear_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a2068bc5a9ca63a14e6aaca5cfc33bdf1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, GdkEventSelection * &gt;</type>
      <name>signal_selection_request_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a1e92c81c13f6e2a27a282bbe77e74d35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, GdkEventSelection * &gt;</type>
      <name>signal_selection_notify_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a845e5c60be94e163aef079c1d46e570d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, GdkEventProximity * &gt;</type>
      <name>signal_proximity_in_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ac55d6c116e223884077b2fcf954fda76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, GdkEventProximity * &gt;</type>
      <name>signal_proximity_out_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>af78d794ccc1b115193b9654b548d5731</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, GdkEventVisibility * &gt;</type>
      <name>signal_visibility_notify_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a10099738635bb4679da853e1c39ae270</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, GdkEventWindowState * &gt;</type>
      <name>signal_window_state_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a916c1ac13ef5b2bea57276c982803800</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, SelectionData &amp;, guint, guint &gt;</type>
      <name>signal_selection_get</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a59cfc6117b73e7027a8415e11d5c1180</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const SelectionData &amp;, guint &gt;</type>
      <name>signal_selection_received</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a62c73a964b52a17b68861ea09a48b8a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Gdk::DragContext &gt; &amp; &gt;</type>
      <name>signal_drag_begin</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a2397f2ec240e87bd928c5727790b3128</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Gdk::DragContext &gt; &amp; &gt;</type>
      <name>signal_drag_end</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a3f440be428b0f89813df1fc42bb7b218</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Gdk::DragContext &gt; &amp;, SelectionData &amp;, guint, guint &gt;</type>
      <name>signal_drag_data_get</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a36812c942bfea5a18fc6f59b17d911fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Gdk::DragContext &gt; &amp; &gt;</type>
      <name>signal_drag_data_delete</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>adc260796d7163f06d21e939a97140950</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, const Glib::RefPtr&lt; Gdk::DragContext &gt; &amp;, DragResult &gt;</type>
      <name>signal_drag_failed</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a16b92c28b12d7648cd6cb04f0d82ac57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Gdk::DragContext &gt; &amp;, guint &gt;</type>
      <name>signal_drag_leave</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad6f8fc0dd0948c15bc2c42215328e8a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, const Glib::RefPtr&lt; Gdk::DragContext &gt; &amp;, int, int, guint &gt;</type>
      <name>signal_drag_motion</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>af4090d0508727ceb6c0f604470f84e07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, const Glib::RefPtr&lt; Gdk::DragContext &gt; &amp;, int, int, guint &gt;</type>
      <name>signal_drag_drop</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a1736c2f534581749b3c5f2714db0d28e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Gdk::DragContext &gt; &amp;, int, int, const SelectionData &amp;, guint, guint &gt;</type>
      <name>signal_drag_data_received</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aa9874ac0ca5550679a0322d2c5b5fba2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, const Glib::RefPtr&lt; Gdk::Screen &gt; &amp; &gt;</type>
      <name>signal_screen_changed</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>af6dec49906dcdba00c175b8a97f33c39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_composited_changed</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a990ff9be472bedd616e9eb08b474830b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool &gt;</type>
      <name>signal_popup_menu</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a8cc2a2953fc39d2fddf6054e692dfa59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, int, int, bool, const Glib::RefPtr&lt; Tooltip &gt; &amp; &gt;</type>
      <name>signal_query_tooltip</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a7c249b4b92e6245e89ccb663b6e0a61a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, GdkEventGrabBroken * &gt;</type>
      <name>signal_grab_broken_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a51c381999bdcd17f36c33e7eb1141ad3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, GdkEventExpose * &gt;</type>
      <name>signal_damage_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a21291b6179b2e36f776b7242d1f84759</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; bool, GdkEventTouch * &gt;</type>
      <name>signal_touch_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a1febfee907ed8665711d654de83e3fc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_name</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad7c9d43fb67475854b0f9dfd66568461</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_name</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aa1e42b8057c653e4fdc28afd1eeb4ff4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Container * &gt;</type>
      <name>property_parent</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ab91220c8cb22c3ad8ca4aab16a4bf5c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Container * &gt;</type>
      <name>property_parent</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a432c7f625b5a8163dafde31e6d2bdebd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_width_request</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>af91d49dbe6949bc1f5df339b9c157961</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_width_request</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a333516c1e4f09221acb718fe2dfc9aac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_height_request</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ab636b799e2764f1433c32cb060ea2bd0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_height_request</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a52cf66a9afa5c7c587d2c72afb6e0032</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_visible</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a87ee8369a28efc37d93fd6761953fbb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_visible</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a76ab442e20e81e192ab665e44f41c1a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_sensitive</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a13a9f189e5426df483fffc69bdb8e700</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_sensitive</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>adfa0d3c44b0fd11593fcaedd3f8ffc4d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_app_paintable</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a00516516314676e2b3b4a5f29a70cbe8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_app_paintable</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>adf567af13d2f0a062aba22f8a483c87b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_can_focus</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a91f08feacaa2ffc24309c3038e327d2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_can_focus</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a1410b2966f816952b646d0f564fc8e6b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_has_focus</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a99f5bca5ef3e24af8198573c2fee5039</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_focus</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a5026f738b414bb69c6fbd5d6a86e8feb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_is_focus</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a7c1a5a4dea09f75b61b9c4470c2eeb88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_is_focus</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aa517d415b2025b7fdb1056e915103234</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_focus_on_click</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>afbaa5ac29749307f74b1878d1e5d31f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_focus_on_click</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aedbc81a18b09a627a42c8f568f19a556</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_can_default</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a0c2f62c35c9b1e60777d7595bd7dbb8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_can_default</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a4ccdf15370f7b2cfa9658dd56e335eee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_has_default</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a8c7737d34aa024a9f177247d191ff7c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_default</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ab3d9d07e9dea9e65e14d1388bf193476</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_receives_default</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad03daf624166216c76d905e6a8069f2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_receives_default</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a32709e2e1a760831d7223922313f0a09</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_composite_child</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a256b0986d0fc187beafea3ce8e990c8e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Style &gt; &gt;</type>
      <name>property_style</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a1c509fffdb5fd65b3ebd2cabae84c973</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Style &gt; &gt;</type>
      <name>property_style</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a4e3ced3831b4bf6326884657cfdb4b57</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::EventMask &gt;</type>
      <name>property_events</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a5893d35d56fa28daead786673d18b22e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::EventMask &gt;</type>
      <name>property_events</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ae0c944d0e6b00745a2f8e94bcd2676e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_has_tooltip</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a4254fa8ac2d0facdba6a6fb5eaa98f61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_tooltip</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a0cf52a133690c47b0501fad3b324da38</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_tooltip_markup</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a3c2ef3f5c61e340dda3e7d0f3bb1cbed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_tooltip_markup</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a4f21e5a81186921ed528774c792a8114</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_tooltip_text</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ac4843993dd5b1796e5d1d5848a6d3479</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_tooltip_text</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ac1399bc7ef8357af039f71fd599fa788</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::Window &gt; &gt;</type>
      <name>property_window</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a0124c4aa98c3e0e1a1d93458dc03671c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_no_show_all</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a89344169f366f7d57ba20b25532f68e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_no_show_all</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a7b3bbd19155543c52ab8ca952013372b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_double_buffered</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aaab62dc6432f238b89f0931e3a2c6663</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_double_buffered</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aa5861f962e11145bbacf74255e4daf58</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Align &gt;</type>
      <name>property_halign</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a9085c5664d80f427e2f56a7f52363b97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Align &gt;</type>
      <name>property_halign</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a60913b4e1246867f2080e9327da0682d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Align &gt;</type>
      <name>property_valign</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a55656b493e0ac1b4e0dba7b8275f197e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Align &gt;</type>
      <name>property_valign</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a8f288e1e322c4f274fdcc2d625970474</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_margin_left</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a64e3082cbf24468513b56ebe9a1e59be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_margin_left</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a894958611b46bcc2b398c04a819cc0f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_margin_right</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>abf64b82fcce0d7de5cb217f8239c6f5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_margin_right</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>af431bf8f92d0982b6df490bb68111b66</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_margin_start</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a1353123f8353bef3b684228e175d5331</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_margin_start</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>abc595b7f576558ed2ae4c08416a2b029</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_margin_end</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a1120530835ae48ed232f611f5a06340b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_margin_end</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a787cea439f6f106c2c2e3d750c2397b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_margin_top</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a3a701f19234ea5142b984c20f4b440c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_margin_top</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a7480aab75dcfda9144b45bec56942d69</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_margin_bottom</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad649764caef9446a76052a488473c357</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_margin_bottom</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>af18705ad6ae808637ff3909d8548a1c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_margin</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad0bf1a8c4dbeb95891d8cc8b25859315</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_margin</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a46979fe48dbf5d990a803c9e9a8a977f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_hexpand</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aa458d2a4ea9e0f80a11b27b318d81d00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_hexpand</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aaa644849a8b758a8e47c409b900da560</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_hexpand_set</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a75e3e0a893ca7b8c69ea00c53e048588</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_hexpand_set</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a88072ac46552001d536d41f9f3c92d3f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_vexpand</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aab1ec3d0d09ee07f84c71bdec2d9a90a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_vexpand</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a7bf4f35669dd7ecd0d76cba93956ea31</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_vexpand_set</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a169ec0b3f37ef0693ee86598fafd6966</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_vexpand_set</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a1587002b82a248c8e81f9d3803f66437</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_expand</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>afedf6ba81393df44cd8dcfe5804732d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_expand</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a0a3a44abaabd665b33be85b4f0f3828f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_opacity</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>acc414f484344556e8021b565ef08aa28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_opacity</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a58797cdd03d9e8304647dc1b445603f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_scale_factor</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>af81d819863de17037a1fee4eee42d286</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad91910c92e40117947da6ca81883cad0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Widget *</type>
      <name>get_current_modal_grab</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a6a94290259b2249247e3ab179698e852</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>push_composite_child</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad8ea7235a3cfc49d990e2ba66b1bc796</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>pop_composite_child</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>afa13de9a530c9dd69154691cd00cbefe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>set_default_direction</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a2cdb11d295e816d6dd63e65865457882</anchor>
      <arglist>(TextDirection dir)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TextDirection</type>
      <name>get_default_direction</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a8380cc46ee85e6abda417dfb94831fa5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Widget *</type>
      <name>drag_get_source_widget</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a98fc442b8bfb06510ea4c5fcfd4c62cd</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::DragContext &gt; &amp;context)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_show</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a81ec450f7c382fbeb54f7531b5ccde39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_hide</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a8a48e5ec59bf4908dc0d0c6a3ea18737</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_map</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a54244d26703ffe722487f19cee9f4645</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_unmap</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a4c56f089b6a5bbe1c5352a9e76756c68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_realize</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aded36450a809b452e7d402f2d541ad81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_unrealize</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>abd7eaefa77cd3a98c0e313778954821a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_size_allocate</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aaf76f0a77dc2ce107657e2a6a09aa91e</anchor>
      <arglist>(Allocation &amp;allocation)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_state_changed</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad7479b33afda487f78b2ea14d2f3d1d3</anchor>
      <arglist>(Gtk::StateType previous_state)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_parent_changed</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a914584f6efc22f332826724729f53f4a</anchor>
      <arglist>(Widget *previous_parent)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_hierarchy_changed</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad15a2a52e3ce3463920d60c3030ec82f</anchor>
      <arglist>(Widget *previous_toplevel)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_style_updated</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>afbcd2bd82a0b361cce45c9d6d7bf66f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_direction_changed</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a7920fce59a82de96582dcfa862d44eb8</anchor>
      <arglist>(TextDirection direction)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_grab_notify</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>abc81b49d9391c59b05040352a50afde7</anchor>
      <arglist>(bool was_grabbed)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_child_notify</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a21e5364d2b295a680bff407e42a612e9</anchor>
      <arglist>(GParamSpec *pspec)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_mnemonic_activate</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a82e1eda392e833127565b6e25b570d60</anchor>
      <arglist>(bool group_cycling)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_grab_focus</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a05b919b7f4537e0a2dd57b4a7c05677b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_focus</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a715ef6d0485433a3a3971d6f24c053f2</anchor>
      <arglist>(DirectionType direction)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a7697fa829dc749a19347d27f9c7f5c66</anchor>
      <arglist>(GdkEvent *gdk_event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_button_press_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aec1808dcd01da7b8ed06d508d02c6eb3</anchor>
      <arglist>(GdkEventButton *button_event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_button_release_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ab6180811935793bbfcfed4c1a23b65e0</anchor>
      <arglist>(GdkEventButton *release_event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_scroll_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a64966b287c3e5ad7da156310068cf724</anchor>
      <arglist>(GdkEventScroll *scroll_event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_motion_notify_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a607acc8b086c9355850d6f91b34f01c7</anchor>
      <arglist>(GdkEventMotion *motion_event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_delete_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a6cd2cd5a9a8bb952bbfb4e1ae17ededd</anchor>
      <arglist>(GdkEventAny *any_event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_draw</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>abc9e82a0cb0d78f6044f02305a90b6d5</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;cr)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_key_press_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a65d0475d77084b1c123752fa9bcf704d</anchor>
      <arglist>(GdkEventKey *key_event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_key_release_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ac9fd631f0ea4dedb29cbe4cebcb7330a</anchor>
      <arglist>(GdkEventKey *key_event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_enter_notify_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a49b6eab6ffac1a210d8ba3f9f602dc57</anchor>
      <arglist>(GdkEventCrossing *crossing_event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_leave_notify_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ab43c2c8d4b97c4fe845bd5fd6f8fd485</anchor>
      <arglist>(GdkEventCrossing *crossing_event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_configure_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aa2eaff6b75c778d998973218af4ada60</anchor>
      <arglist>(GdkEventConfigure *configure_event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_focus_in_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a50d37dd4f2a8357df24e6030bf15a376</anchor>
      <arglist>(GdkEventFocus *focus_event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_focus_out_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ab21a74b0c3147f5cc3b85721f22b1ac4</anchor>
      <arglist>(GdkEventFocus *gdk_event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_map_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a92ab6f57782698996090cfb951393532</anchor>
      <arglist>(GdkEventAny *any_event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_unmap_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a42051402bf27c2c52581223f1da51c18</anchor>
      <arglist>(GdkEventAny *any_event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_property_notify_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a27ee0800ef6d03fe598db92bf9e8e049</anchor>
      <arglist>(GdkEventProperty *property_event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_selection_clear_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>acc62c2bd50cec3d47c7a21893c8cfed1</anchor>
      <arglist>(GdkEventSelection *selection_event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_selection_request_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>acaeaf0c2deec0e7b3a48cccaa1748b7a</anchor>
      <arglist>(GdkEventSelection *selection_event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_selection_notify_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ae6ce6c9df0c02360d6415428f130605b</anchor>
      <arglist>(GdkEventSelection *selection_event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_proximity_in_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a592a2276b5b8d63d5855d204a694dcfa</anchor>
      <arglist>(GdkEventProximity *proximity_event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_proximity_out_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a09c72a72267700373d56e0a678c6c5b7</anchor>
      <arglist>(GdkEventProximity *proximity_event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_visibility_notify_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aeefc6eb204b024a1785a75b6659ec96c</anchor>
      <arglist>(GdkEventVisibility *visibility_event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_window_state_event</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad74c825c509bb04d1fa171266a72c420</anchor>
      <arglist>(GdkEventWindowState *window_state_event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_selection_get</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a093d16bdb3af67e50ad388028ad39877</anchor>
      <arglist>(SelectionData &amp;selection_data, guint info, guint time)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_selection_received</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a5f779463e0b6cb0c296c8fe1906a9cb1</anchor>
      <arglist>(const SelectionData &amp;selection_data, guint time)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_drag_begin</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a1f0f4c703429e7d9cc53c984c3cce8ea</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::DragContext &gt; &amp;context)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_drag_end</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>af2686d05ccbf4604d66c2ef4f8135896</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::DragContext &gt; &amp;context)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_drag_data_get</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ab669a88054d72d7ba5d46f0995d67a88</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::DragContext &gt; &amp;context, SelectionData &amp;selection_data, guint info, guint time)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_drag_data_delete</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aea1d89dfeae08d6dacb4a4d4ba625afc</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::DragContext &gt; &amp;context)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_drag_leave</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a0df223bdbee63bda89eb53830e08245e</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::DragContext &gt; &amp;context, guint time)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_drag_motion</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a9c762bbe39ff96b631293e2d748d39d6</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::DragContext &gt; &amp;context, int x, int y, guint time)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>on_drag_drop</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a0bf7fc81cf1f9c9d8f74a830246f988b</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::DragContext &gt; &amp;context, int x, int y, guint time)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_drag_data_received</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a3db5aeb195f3bc3d59f123c624a99cd3</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::DragContext &gt; &amp;context, int x, int y, const SelectionData &amp;selection_data, guint info, guint time)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_screen_changed</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>abf2193e450620fde4457b2c062fc63cb</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Screen &gt; &amp;previous_screen)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>dispatch_child_properties_changed_vfunc</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a4a9274d8a9e41788781a849987d09d26</anchor>
      <arglist>(guint p1, GParamSpec **p2)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>show_all_vfunc</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a5f8e8c191ec90f857ac3fae5616b6257</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Glib::RefPtr&lt; Atk::Object &gt;</type>
      <name>get_accessible_vfunc</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ae17892755c40b589b356e6ce8e0c5e86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual SizeRequestMode</type>
      <name>get_request_mode_vfunc</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ab4685abd6dcfc4a447f7cd6834746c33</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>get_preferred_width_vfunc</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a5c949fc2ad0fa28e928806f1cb66a212</anchor>
      <arglist>(int &amp;minimum_width, int &amp;natural_width) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>get_preferred_height_for_width_vfunc</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a4cfad047ccdce7a07bd918913d359e65</anchor>
      <arglist>(int width, int &amp;minimum_height, int &amp;natural_height) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>get_preferred_height_vfunc</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a4666c909cb78d9ff1d978070987c07a7</anchor>
      <arglist>(int &amp;minimum_height, int &amp;natural_height) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>get_preferred_width_for_height_vfunc</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>aa105f5766336135b560955ca9f3def0e</anchor>
      <arglist>(int height, int &amp;minimum_width, int &amp;natural_width) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Widget</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a00a53168b1f374abe4289950136056dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>realize</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a3331962a5e38bf2bb107ecc3c8c24f39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unrealize</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a57f8ffcd77d8daf86534710a04f25454</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>draw</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a683c9ee15ff8be2d1e9b28511c09056c</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;cr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set_mapped</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a17296ea11bb985e129879c5e774b7c9f</anchor>
      <arglist>(bool mapped=true)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set_realized</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a48746e48a18cf080893dd4027f1bed63</anchor>
      <arglist>(bool realized=true)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set_has_window</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a677fab317c52d44447da142db6d57f36</anchor>
      <arglist>(bool has_window=true)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>set_window</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a705fefa64db669e1d4abd89e039a7efa</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Window &gt; &amp;window)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>transform_cairo_context_to_window</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a56b3fa798a968529272f13906ec344bd</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;cr, const Glib::RefPtr&lt; const Gdk::Window &gt; &amp;window)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Requisition</type>
      <name>get_requisition</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a0038511463d4f7e2433ae78d015fd9b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>get_style_property_value</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a39df2302b6674eee8f296db1999b80e2</anchor>
      <arglist>(const Glib::ustring &amp;the_property_name, Glib::ValueBase &amp;value) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>realize_if_needed</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a63f7f40764edd8b668dff6431eb92387</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static bool</type>
      <name>should_draw_window</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>ad885abc4c4c178af9ba81c836f1e9e8e</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; const ::Cairo::Context &gt; &amp;cr, const Glib::RefPtr&lt; const Gdk::Window &gt; &amp;window)</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Main</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a992c638551243aa0ee7b50d84f4fdf54</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Gtk::Widget *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Widget.html</anchorfile>
      <anchor>a0372036e64e26d6847c9e121dad1ae95</anchor>
      <arglist>(GtkWidget *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::WidgetPath</name>
    <filename>classGtk_1_1WidgetPath.html</filename>
    <member kind="function">
      <type></type>
      <name>WidgetPath</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>a531f2c45d75acb958a684c6545fadf82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WidgetPath</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>ac2e1cc254e5a7a14caed974ded988d98</anchor>
      <arglist>(GtkWidgetPath *gobject, bool make_a_copy=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WidgetPath</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>aefd0b39d26a47b35fe8dbe764ab2df55</anchor>
      <arglist>(const WidgetPath &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>WidgetPath &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>a4ebd133f453a015d667990b7a680d88d</anchor>
      <arglist>(const WidgetPath &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WidgetPath</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>ae5ee8211dbb6f0cfe4dbac5218b14eff</anchor>
      <arglist>(WidgetPath &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>WidgetPath &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>af6f15d47abd7b81dbf959490ea1e70f8</anchor>
      <arglist>(WidgetPath &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WidgetPath</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>ac8bd55028982d36f4535c0e7c5cfe33f</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>a132f09fa21b6e4c87eb5d201c619afda</anchor>
      <arglist>(WidgetPath &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>GtkWidgetPath *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>a2229a68580c6326398e3ab95b093bddf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkWidgetPath *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>a703da25dd33396ca2aee8f67a20aed73</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkWidgetPath *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>a64d66720041b90967cd05b8305b425e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>to_string</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>ac0c4120f25e66f734b6602a4fed740b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>path_length</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>a59ae4b34491dde08a087306c015e18d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>path_append_type</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>a5e3927b1d791acec78951c318ace9b17</anchor>
      <arglist>(GType type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepend_type</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>aa849751e1bd9555e207f4d17fb3b7741</anchor>
      <arglist>(GType type)</arglist>
    </member>
    <member kind="function">
      <type>GType</type>
      <name>iter_get_object_type</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>acfaa71e4f7204c5559cacb39f12d7b62</anchor>
      <arglist>(int pos) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>iter_set_object_type</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>a2a4ff74d8a178615ed64b23e2174cd3d</anchor>
      <arglist>(int pos, GType type)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>iter_get_name</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>a7af3311d8daa0671a2b02eae6fff2287</anchor>
      <arglist>(int pos) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>iter_set_name</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>a14b761d20bd0fc58f9eb70b3775808dd</anchor>
      <arglist>(int pos, const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>iter_has_name</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>a72106a244d9b6ee2785ea09c61f51086</anchor>
      <arglist>(int pos, const Glib::ustring &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>WidgetPath</type>
      <name>iter_get_siblings</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>a740f73a2b820691d990b9aa83f003688</anchor>
      <arglist>(int pos=-1) const </arglist>
    </member>
    <member kind="function">
      <type>guint</type>
      <name>get_sibling_index</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>a05bcea2c966b109c108eece3596f488a</anchor>
      <arglist>(int pos=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>iter_add_class</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>a0f7b0d0fa753acc248d2b6a2ab3bf5ad</anchor>
      <arglist>(int pos, const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>iter_remove_class</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>a5618dd94676d540077eee442f517221b</anchor>
      <arglist>(int pos, const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>iter_clear_classes</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>a6a594aabcb566f2ea78dec9ff7cad015</anchor>
      <arglist>(int pos=-1)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>iter_list_classes</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>a9f4a0f89313bb49e01f75c3f3180c059</anchor>
      <arglist>(int pos=-1) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>iter_has_class</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>ad6e27e36e3274dcb60395d5cbb74cdd9</anchor>
      <arglist>(int pos, const Glib::ustring &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>iter_add_region</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>a82b91ebdc804f5476a40b1845c950a11</anchor>
      <arglist>(int pos, const Glib::ustring &amp;name, RegionFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>iter_remove_region</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>a10bafdf4bd2661c6695e7a037c46d59e</anchor>
      <arglist>(int pos, const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>iter_clear_regions</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>a217073af2f3649a0d69c879495fa80ce</anchor>
      <arglist>(int pos=-1)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::ustring &gt;</type>
      <name>iter_list_regions</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>a77c3dc812152aa429ae36b5dd2b8a4e2</anchor>
      <arglist>(int pos=-1) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>iter_has_region</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>a46d10efe5f0ba68feb9acfb64cf696de</anchor>
      <arglist>(int pos, const Glib::ustring &amp;name, RegionFlags &amp;flags) const </arglist>
    </member>
    <member kind="function">
      <type>GType</type>
      <name>get_object_type</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>ae90c4ccd8e7013e1ca8b0c5cd2cec358</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_type</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>a920dc85e2697d8964fa6b638ede4150d</anchor>
      <arglist>(GType type) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_parent</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>abcce6201c869597479a8b4b74841528f</anchor>
      <arglist>(GType type) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>a282dd24a969fa0208299bef49d33a9bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GtkWidgetPath *</type>
      <name>gobject_</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>a2e628ea16a1bef345662c88cd4328825</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>a99fa9d070537044f16d47bbe41e3735f</anchor>
      <arglist>(WidgetPath &amp;lhs, WidgetPath &amp;rhs) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Gtk::WidgetPath</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1WidgetPath.html</anchorfile>
      <anchor>a5ccaea948ac808b644b99cdcfa5280e9</anchor>
      <arglist>(GtkWidgetPath *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::Window</name>
    <filename>classGtk_1_1Window.html</filename>
    <base>Gtk::Bin</base>
    <member kind="function">
      <type></type>
      <name>Window</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a627b0fe6008fbb3eef2064506acc0cb9</anchor>
      <arglist>(Window &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Window &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a6095541adf7642aad1c2aa2f8556b56a</anchor>
      <arglist>(Window &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Window</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a10d31bd6eb8c667e346ef6e4b732eae2</anchor>
      <arglist>(const Window &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Window &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a878207f0af2481fcaf77ec92884cbdd5</anchor>
      <arglist>(const Window &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Window</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>aaee8e40efcfdd01140e6d965c122cb89</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkWindow *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a467102527550b51eb4036390caeedb5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkWindow *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>afe314a1e65505be026688060dc98ad3a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Window</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>aa3273081166e86df1850738a17ecdb09</anchor>
      <arglist>(WindowType type=WINDOW_TOPLEVEL)</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; WindowType &gt;</type>
      <name>property_type</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ab9cdc2523019726b09d820d9592d859a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a5e2f6d0cb6222820b76e66ea3ffc9d2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_title</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a0f9533eef8c793e72df15f97d9a01b6c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_WriteOnly&lt; Glib::ustring &gt;</type>
      <name>property_startup_id</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ae475322dcbef74f5e6c6b110c95df951</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_resizable</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>aff0e464d74986442844442b6e4d3457d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_resizable</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a322035ace7ae2664f4bf0d31741840a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_modal</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>af0b2dadb08e50d80aa6ddabba7c87194</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_modal</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a1885c856bd379d4752c274853127e54d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; WindowPosition &gt;</type>
      <name>property_window_position</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a94ee36871572c82c3cd9c46e0b4fb735</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; WindowPosition &gt;</type>
      <name>property_window_position</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a9623d6475b7556945877a240f3b8cff8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_default_width</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a5ff52412ac909b78d61534670ccbaf83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_default_width</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ac755ae54409172b3ee34b8454647a56f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; int &gt;</type>
      <name>property_default_height</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a316a5b09a17727844dafd176db341ee0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; int &gt;</type>
      <name>property_default_height</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a4f2f47a6c544818da89fbc149c21091c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_destroy_with_parent</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ad2441478aabc311118d0bbb7247e96cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_destroy_with_parent</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>afaad843d2a00c9772125626ba5513c9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_hide_titlebar_when_maximized</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a411b860d772ed405442c3cb0338f205c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_hide_titlebar_when_maximized</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a0437742ebe8ed27dfa91cc5904695551</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gdk::Pixbuf &gt; &gt;</type>
      <name>property_icon</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a6f815ca5a742d06b5f636d2db481774c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::Pixbuf &gt; &gt;</type>
      <name>property_icon</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a27b6b9ec07d45a7901f59ecb41df3549</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_mnemonics_visible</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a10ca629f2b9835f8b060727e5f8c217a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_mnemonics_visible</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ad4657287025b18d3dbe68be2a69c34c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_icon_name</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a61b485e2dfcfd60a129c258ab1a78820</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_icon_name</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a2acea03c44c7780255f2f364e3d4a8da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Gdk::Screen &gt; &gt;</type>
      <name>property_screen</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a02775b4be90428c53359834fbc1d6d6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Gdk::Screen &gt; &gt;</type>
      <name>property_screen</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a46d4ec8b50289a45c488e856177c9126</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_is_active</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a180c39b4df322786aeb19cfb3fed03c3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_toplevel_focus</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a5c94024a3804f7db63095fceae06c352</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; GdkWindowTypeHint &gt;</type>
      <name>property_type_hint</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>abe5ff8be0ba9f36b3f4ec223abfb159a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; GdkWindowTypeHint &gt;</type>
      <name>property_type_hint</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>adffd6d7dc6a689be7bb19a030e7433ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_skip_taskbar_hint</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a7d287695f11f4d799bbfe0880e072eef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_skip_taskbar_hint</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ac769938b37a8d07a65ee7357a51c9634</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_skip_pager_hint</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a5508330bacabc91f9998b7ac3a4330fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_skip_pager_hint</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a4bd5f8b67bc56ca12bb96e4729b31ba3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::ustring &gt;</type>
      <name>property_role</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a2c0a56242e0dbe8838b519f5046d1709</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::ustring &gt;</type>
      <name>property_role</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>aba1252b76120a76ab321a4a9e71a83ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_decorated</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a72e77120d08be8eaa56e6e62bf15a318</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_decorated</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a33662ef7416395bf5d87284206c64438</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Gdk::Gravity &gt;</type>
      <name>property_gravity</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ac82f2a69edb1708bfd776df7d69d8272</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Gdk::Gravity &gt;</type>
      <name>property_gravity</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a7ed9fca2d6e4c811b0c48c073d163bbd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Window * &gt;</type>
      <name>property_transient_for</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a47a1c6980a498888612d6cf60445cb2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Window * &gt;</type>
      <name>property_transient_for</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ac0acaffdddbe5941ac5661e551ef5b3b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; double &gt;</type>
      <name>property_opacity</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a23830cf899967c6bc42933410a8556f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; double &gt;</type>
      <name>property_opacity</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>adf27a44ecc5687df5e6083ba2511de98</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_has_resize_grip</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a95e4f12a1131705253c084a2be612e06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_has_resize_grip</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a16dabd29e431877775c095894d02870c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_resize_grip_visible</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a76f5278d1fa6cca3fee1f34618340e93</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_urgency_hint</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ae5a26cc9f2c4eb79f84cc0289fea8e99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_urgency_hint</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a99dd2fad04c6953dcc0a24196c622f2d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_accept_focus</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>afbbfb9c240f9a124cd28e5b69f41b3f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_accept_focus</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a1f25cd02ae126874409a4910ebe8d459</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_focus_on_map</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>adfc55532fd732782aedfe59ed653e87b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_focus_on_map</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a9caa021260c6e0306629de3249aa9f57</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_deletable</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ae103a1bd1fb5196aea4f613bce33ee05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_deletable</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>acdb07fd2f4afab4483fb752368e5795e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Glib::RefPtr&lt; Application &gt; &gt;</type>
      <name>property_application</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a06c9420500a84e397d02da685cda2ceb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Glib::RefPtr&lt; Application &gt; &gt;</type>
      <name>property_application</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a3e5cd4d10f82a52ac43e2b6f085106d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; bool &gt;</type>
      <name>property_focus_visible</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>abf979f349b92d563adccdfca7dc904d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_focus_visible</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a1bef31b48258486776ec6850c10b5d7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy&lt; Widget * &gt;</type>
      <name>property_attached_to</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a9afbd54644f3d57a04dc8568091b487b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; Widget * &gt;</type>
      <name>property_attached_to</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>adad42ac07b6650e91b1fccde018a5e5b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::PropertyProxy_ReadOnly&lt; bool &gt;</type>
      <name>property_is_maximized</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>acb1b8473e3b59fda92e30aa25d43e07e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void, Widget * &gt;</type>
      <name>signal_set_focus</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a86312ebdff9e22fa5aad6a7f8fe17396</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::SignalProxy&lt; void &gt;</type>
      <name>signal_keys_changed</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a3420b4a6089b3840b83812554865a79f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_title</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a10c072ee6b41d5eea0002d986aa03c07</anchor>
      <arglist>(const Glib::ustring &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_title</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>aaf6a808dccae2fc202e2a3cb2d57210d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_wmclass</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ac6a7119c34bcfc31fdc27a8061a6f8f1</anchor>
      <arglist>(const Glib::ustring &amp;wmclass_name, const Glib::ustring &amp;wmclass_class)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_role</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a0bc20c48120eb7ea4fc5e6170da050db</anchor>
      <arglist>(const Glib::ustring &amp;role)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_startup_id</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a1855687f10a461d0cc04ad4072446e57</anchor>
      <arglist>(const Glib::ustring &amp;startup_id)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_role</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a68ab33adf52b35794667839954a6460e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_accel_group</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ad15a4530150d8464ee06bb2218e582e9</anchor>
      <arglist>(const Glib::RefPtr&lt; AccelGroup &gt; &amp;accel_group)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_accel_group</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>afe7b9acac2c46e63948aa0bdf719dce2</anchor>
      <arglist>(const Glib::RefPtr&lt; AccelGroup &gt; &amp;accel_group)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_position</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ace2f64d36b5c1574073fc7c6e03df7a3</anchor>
      <arglist>(WindowPosition position)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>activate_focus</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>aae55e31e4dc2925ae813c31aeddfcbe4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_focus</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a8589880384bc7cd7b39c5bcfa6d2932a</anchor>
      <arglist>(Gtk::Widget &amp;focus)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_focus</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a8dbaf6fd2f692b1dda1e9eb2d7fb9edf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_focus</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a1997d080c805ba2e2e6821781992c54b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_focus</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a7e697a9060ae5994631f5e00762304cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_default</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a8a5fcf84b5222de8d4dea390b79969de</anchor>
      <arglist>(Gtk::Widget &amp;default_widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_default</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ad17e8ca434b1284ee2778daaddc3f5b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_default_widget</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a54716169b2741a2c205ea17e26c81df0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_default_widget</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a868d8f604966553024740e9438688238</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>activate_default</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a1ddd9d6b107a250a921140159bd90cb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_transient_for</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a4dc2db7c44546300a7843314cfa21bc8</anchor>
      <arglist>(Window &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_transient_for</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a8765c60eaa06575d86d877cd5ba75d6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Window *</type>
      <name>get_transient_for</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a3188cb795d9ad419d69cf24f55d1381b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Window *</type>
      <name>get_transient_for</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a0ccef655a1467db95eeb3c5257135f5b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_attached_to</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ace31412786b8b451a02c66d29655f521</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_attached_to</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a02434310c14b18e7a580143f92a1c189</anchor>
      <arglist>(Widget &amp;attach_widget)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_attached_to</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a837e427f1877ae4f0fe235f2fe05924d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_attached_to</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a06f574a79c0ad2d259f219bf81bf686d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_opacity</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a54af1fe27d57afc59744862a9ef922f1</anchor>
      <arglist>(double opacity)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_opacity</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a228fc868afdf6c88b0dfbe03be29723e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_type_hint</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a61321cd59c3630d1b9f0c07781a6029b</anchor>
      <arglist>(Gdk::WindowTypeHint hint)</arglist>
    </member>
    <member kind="function">
      <type>Gdk::WindowTypeHint</type>
      <name>get_type_hint</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a177088eca35e1f270543941c6855b680</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_skip_taskbar_hint</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a0b88348a3d7c69b8930a0e2e11a63a88</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_skip_taskbar_hint</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ad291d4cf458b10577015f8a0efae2811</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_skip_pager_hint</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a4cdea59994940ba8edc41f17e31f31a9</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_skip_pager_hint</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ae6cfb5d9e6cbefd5de869c4b777e314e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_urgency_hint</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>afd7971d45db2936c2102faaa57e55279</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_urgency_hint</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>aa90d7ada4335bf2f35461696ef2297d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_accept_focus</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a9fc2a01d8aa1ab126060d9f363b5d8c5</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_accept_focus</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a43e546a1678f86f0b4165eb9a9076775</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_focus_on_map</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a3a2c87ab12bb354d4ac0262748fb6aea</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_focus_on_map</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a2dc043bb88d969715793415e84cd6a04</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_destroy_with_parent</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a0cde210bd450e6dfcf59f9104e66860c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_hide_titlebar_when_maximized</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>aeee6e95b8c2e1bf61223b221996e8368</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_hide_titlebar_when_maximized</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a6e21feb408c2a5bf7f81c7abc160d563</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_mnemonics_visible</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a44cd7531e6d69b94e742e6a5da953d4e</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_mnemonics_visible</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ad4116f9a6c86303e793869e91977ea19</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_focus_visible</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a559fa61ecf491f25ade5687fe356d80e</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_focus_visible</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a37a07abab13294da0b2e6d2a86335153</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_resizable</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a1ec816449fe941e5fe330bfa509eeb7f</anchor>
      <arglist>(bool resizable=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_resizable</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a08da78e575d5da70a28b33e5bdfef8f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_gravity</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a0ba6f596398c8685fa5535c77c2c9184</anchor>
      <arglist>(Gdk::Gravity gravity)</arglist>
    </member>
    <member kind="function">
      <type>Gdk::Gravity</type>
      <name>get_gravity</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a6d7031408bc8d6b18d6d30bd0b1c69e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_geometry_hints</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a4564d6044ee0c89e02244559b6b5f916</anchor>
      <arglist>(Widget &amp;geometry_widget, const Gdk::Geometry &amp;geometry, Gdk::WindowHints geom_mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_screen</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a8019e1426461d32385bfea734b5e63a8</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Screen &gt; &amp;screen)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Screen &gt;</type>
      <name>get_screen</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a46de90efae27ecd474f3c7855ace3d3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Screen &gt;</type>
      <name>get_screen</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ad538e5c73635b06327ef18d3225f6e80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_active</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ab600a6ef991f8369d9da572af38868d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_toplevel_focus</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a079f76b89ca268e1a21de55432276f1d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_decorated</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a67adb1d8051a38e0e5272f141bb8778c</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_decorated</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>aa20c5dafc990ba10d8cce9d152848ce9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_deletable</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a986276f116d90d61f00bb50d2f87d69c</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_deletable</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a49477f0c880d7fd0190505858d8e08bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; Gdk::Pixbuf &gt; &gt;</type>
      <name>get_icon_list</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a956c04bd590e88adc9e8ad722e8e5e90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; const Gdk::Pixbuf &gt; &gt;</type>
      <name>get_icon_list</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>aec42adfccc5737161b74f2ccdb2a6207</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_list</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a8b314ec823de4b27fb0f51bbf1cdb113</anchor>
      <arglist>(const std::vector&lt; Glib::RefPtr&lt; Gdk::Pixbuf &gt; &gt; &amp;list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>af8da32d981bcf1992d3d2361a9aec894</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;icon)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_icon_name</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a80a7d07b5d126a17206a770d134c76c0</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set_icon_from_file</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a2cde5d111ad787f58e9d3908f0bf8bbd</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gdk::Pixbuf &gt;</type>
      <name>get_icon</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a807394d193c3605b8922cae7385fdc06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Gdk::Pixbuf &gt;</type>
      <name>get_icon</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a68c50f90a51b2b7dc09538afa18da1cb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_icon_name</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>afac8ae8360168fbc9466947aa985d7ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_modal</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a1f70b3c35e8c477ab3c1f9503a37a6a1</anchor>
      <arglist>(bool modal=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_modal</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a856066475ff362ddadca9559afc33728</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_mnemonic</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a47a63388df150583cf1cef2970ecb93d</anchor>
      <arglist>(guint keyval, Widget &amp;target)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_mnemonic</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a8a4a99151b257228f68f6fc643653b52</anchor>
      <arglist>(guint keyval, Widget &amp;target)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>mnemonic_activate</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>abfee73f9bcceba54007644b2f9d49fa5</anchor>
      <arglist>(guint keyval, Gdk::ModifierType modifier)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_mnemonic_modifier</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>aa9e48f426c507de6ef00efabf25ab9b3</anchor>
      <arglist>(Gdk::ModifierType modifier)</arglist>
    </member>
    <member kind="function">
      <type>Gdk::ModifierType</type>
      <name>get_mnemonic_modifier</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ab6ebf5365ba765657aa69d6f14a42406</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>present</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a7d848c59fc1a42f4a296461515c0476e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>present</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a0724ad6e36d55fd1182e2481fb52cd04</anchor>
      <arglist>(guint32 timestamp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>iconify</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a4fc7d8adb9059f51d4b9216b755e30e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deiconify</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>afd764f06b99906f6730f36ea45ad23e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stick</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>aaadaf48bd2ce3def9eb69e5347a415aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unstick</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ae2b53147692cf07b5738e0a76c27f50f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>maximize</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a23f2755248ee7aaa39802ccb37bba618</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unmaximize</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a78bca41d0915b84f285187f3bfcd1e9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fullscreen</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a2343d2ece18fc8cf4db9e9de4764f386</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unfullscreen</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>aa426c8fca5b776d5266da732293f6dab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fullscreen_on_monitor</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a88e72d484d4709cd8f5fc875162fb2a5</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Screen &gt; &amp;screen, int monitor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a790c193a42c27eb90850b5b6da695f0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>begin_resize_drag</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a2528d53c9ff2eb309216e2ce02e486d4</anchor>
      <arglist>(Gdk::WindowEdge edge, int button, int root_x, int root_y, guint32 timestamp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>begin_move_drag</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>aad83e3e6690a6f2a1869edd38b82b02c</anchor>
      <arglist>(int button, int root_x, int root_y, guint32 timestamp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_default_size</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ac7bddf34f109fd2ed006ff95f1ae881c</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_default_size</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a055c345c2d2c0c5814d3792d912aeed7</anchor>
      <arglist>(int &amp;width, int &amp;height) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ad6d1fc27730d7f26402a1924c3495787</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_size</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a34c05f04c75ef2acc745b585259632a2</anchor>
      <arglist>(int &amp;width, int &amp;height) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>aabece927b3c31478f0d22a437d340b62</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get_position</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ad3a063730ccbf0e4fa26f89e220f55e4</anchor>
      <arglist>(int &amp;root_x, int &amp;root_y) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parse_geometry</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ad6b20c1940fefe7da528171a34ecd416</anchor>
      <arglist>(const Glib::ustring &amp;geometry)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_default_geometry</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ac920c187dd4a8fa54f6dfe954a8ee78e</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize_to_geometry</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>aef736e2eff5c3698048908e187a3f244</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; WindowGroup &gt;</type>
      <name>get_group</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a620c3988fd31c158bd03222db7a8d804</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const WindowGroup &gt;</type>
      <name>get_group</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a042da43137619606cb8639b22c3f5c43</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_group</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a64680851e08835d0bea71b7712f205fe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WindowType</type>
      <name>get_window_type</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a4acaad013ade234eb2b83d636f14a998</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reshow_with_initial_size</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a7acae2440f5436966dab4b023318a37a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Application &gt;</type>
      <name>get_application</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a1b44ab681a19ee818626be73147b2aaf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; const Application &gt;</type>
      <name>get_application</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a0114cd1579b315a672d8a364a2f24043</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_application</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a6eadd0aa1c88ac7e1ca196089ed0cd02</anchor>
      <arglist>(const Glib::RefPtr&lt; Application &gt; &amp;application)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unset_application</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>aa04eaebe21e5a912869fd4546b97cb18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_resize_grip</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a44325e77d4d195a3b1f9cd7ceffb1a18</anchor>
      <arglist>(bool value=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_has_resize_grip</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>aac229394eb52e80c63afd51fbba0c4f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_resize_grip_is_visible</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>aa11f9e0f815ac079a3a30ac20d53c2ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_resize_grip_area</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ab290e60c8628abdb1d95fa954cef75bd</anchor>
      <arglist>(Gdk::Rectangle &amp;rect) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_keep_above</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a1233d35c8c1108ed4446c4b0c8d97e35</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_keep_below</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ad671b4dcca5e8e659b9126e0deed74f2</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_titlebar</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a9da2ecd7b7b48542da86c685fc370f90</anchor>
      <arglist>(Widget &amp;titlebar)</arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_titlebar</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a1654994963f8226f5f4ccb4b979a0765</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_titlebar</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>aa7190fc694181257a049ed22706267d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_maximized</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a3ec52813697d86a9431de9621c796c9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>show_uri</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>af82f685f0a44f1495de8a277bc425847</anchor>
      <arglist>(const Glib::ustring &amp;uri, guint32 timestamp)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; AccelGroup &gt;</type>
      <name>get_accel_group</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a30de41223b51216f573305b03c6e20ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Glib::RefPtr&lt; AccelGroup &gt; &gt;</type>
      <name>get_accel_groups</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a2d783c6f1cf28f0c584af1e840f9b309</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>raise</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ad61a5ddefd7b84f178460635c6448ef8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_manage</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a385db8609a06d67c4bb442a07381456e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>abb1622b7a525d0602419d661fc646d71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>set_default_icon_list</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a3057394489ab004a02bf84a6fc534c4e</anchor>
      <arglist>(const std::vector&lt; Glib::RefPtr&lt; Gdk::Pixbuf &gt; &gt; &amp;list)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; Glib::RefPtr&lt; Gdk::Pixbuf &gt; &gt;</type>
      <name>get_default_icon_list</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ad8faadd88b8baa7b70bb40f51b274af0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>set_default_icon</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a355e4704d6b2f24de627f182946f8782</anchor>
      <arglist>(const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;icon)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>set_default_icon_name</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a533d03e9b92d8ccd142ab3a44005cae4</anchor>
      <arglist>(const Glib::ustring &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>set_default_icon_from_file</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ada7d63162e412693d80a397096f46b0f</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>set_auto_startup_notification</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a17d7fbb99c147938b2f8af87cd1187f8</anchor>
      <arglist>(bool setting=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; Window * &gt;</type>
      <name>list_toplevels</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>aeec6764040fc8c627f1dcf41594bbbe0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>on_set_focus</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>af47d9ef9fb72173016def01ecb60715c</anchor>
      <arglist>(Widget *focus)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>destroy_</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>a230fe9d4577dc165d139f4d7463367ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Gtk::Window *</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1Window.html</anchorfile>
      <anchor>ae450767a1f7f277ee50a0acb197f3e08</anchor>
      <arglist>(GtkWindow *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Gtk::WindowGroup</name>
    <filename>classGtk_1_1WindowGroup.html</filename>
    <base>Glib::Object</base>
    <member kind="function">
      <type></type>
      <name>WindowGroup</name>
      <anchorfile>classGtk_1_1WindowGroup.html</anchorfile>
      <anchor>a7f6a2c3792d94ea2ddbdf0e9270da961</anchor>
      <arglist>(WindowGroup &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type>WindowGroup &amp;</type>
      <name>operator=</name>
      <anchorfile>classGtk_1_1WindowGroup.html</anchorfile>
      <anchor>a93af3a3f415fc943eb4ff4ec4146fd68</anchor>
      <arglist>(WindowGroup &amp;&amp;src) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WindowGroup</name>
      <anchorfile>classGtk_1_1WindowGroup.html</anchorfile>
      <anchor>a6875a863a7ed18bd936a6a41e769d44d</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>GtkWindowGroup *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1WindowGroup.html</anchorfile>
      <anchor>aef213723ca60da18c416fc87d084bcf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GtkWindowGroup *</type>
      <name>gobj</name>
      <anchorfile>classGtk_1_1WindowGroup.html</anchorfile>
      <anchor>ae26943c347688b9ad4ad19997c5853d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GtkWindowGroup *</type>
      <name>gobj_copy</name>
      <anchorfile>classGtk_1_1WindowGroup.html</anchorfile>
      <anchor>a6f5c2c7c0b9572471a27267e1d539998</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_window</name>
      <anchorfile>classGtk_1_1WindowGroup.html</anchorfile>
      <anchor>af09398387f8b18913715d28f8e9ae2d9</anchor>
      <arglist>(Window &amp;window)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove_window</name>
      <anchorfile>classGtk_1_1WindowGroup.html</anchorfile>
      <anchor>a9650c8c68d5b1967236d15b0a35c7c1d</anchor>
      <arglist>(Window &amp;window)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Window * &gt;</type>
      <name>list_windows</name>
      <anchorfile>classGtk_1_1WindowGroup.html</anchorfile>
      <anchor>aa96e373fc556f7faa94af2f4f9aa3d60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const Window * &gt;</type>
      <name>list_windows</name>
      <anchorfile>classGtk_1_1WindowGroup.html</anchorfile>
      <anchor>a1316d800d28d6c2533079a1dfc826e0a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_current_grab</name>
      <anchorfile>classGtk_1_1WindowGroup.html</anchorfile>
      <anchor>a8b0ebaab4f6af8884fd2042a1de7aca1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_current_grab</name>
      <anchorfile>classGtk_1_1WindowGroup.html</anchorfile>
      <anchor>ab77444fb3f5122318e6add357ad945b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Widget *</type>
      <name>get_current_grab</name>
      <anchorfile>classGtk_1_1WindowGroup.html</anchorfile>
      <anchor>aad2c5397947535c6fae3b113b77fb175</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gdk::Device &gt; &amp;device)</arglist>
    </member>
    <member kind="function">
      <type>const Widget *</type>
      <name>get_current_grab</name>
      <anchorfile>classGtk_1_1WindowGroup.html</anchorfile>
      <anchor>a46282a662162658cd22ddbb6965a3845</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gdk::Device &gt; &amp;device) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GType</type>
      <name>get_type</name>
      <anchorfile>classGtk_1_1WindowGroup.html</anchorfile>
      <anchor>a6c8a57e2ad473b1cba1cbb9b0c18a436</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Glib::RefPtr&lt; WindowGroup &gt;</type>
      <name>create</name>
      <anchorfile>classGtk_1_1WindowGroup.html</anchorfile>
      <anchor>a06e7ed1c9e3460b5890ab34eb12699a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WindowGroup</name>
      <anchorfile>classGtk_1_1WindowGroup.html</anchorfile>
      <anchor>a58f33bf8908cd978b321d30ae95f5961</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gtk::WindowGroup &gt;</type>
      <name>wrap</name>
      <anchorfile>classGtk_1_1WindowGroup.html</anchorfile>
      <anchor>aa92672f8fb518c64976abb0deb17bd0e</anchor>
      <arglist>(GtkWindowGroup *object, bool take_copy=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TreeModelColumn&lt; ColumnType &gt;</name>
    <filename>classGtk_1_1TreeModelColumn.html</filename>
    <base>Gtk::TreeModelColumnBase</base>
    <member kind="typedef">
      <type>ColumnType</type>
      <name>ElementType</name>
      <anchorfile>classGtk_1_1TreeModelColumn.html</anchorfile>
      <anchor>a548b32f98d1fb957559ebc4c709b8b3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Glib::Value&lt; ColumnType &gt;</type>
      <name>ValueType</name>
      <anchorfile>classGtk_1_1TreeModelColumn.html</anchorfile>
      <anchor>a769fbaa0f9fd6a4c921ebb61720ed294</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeModelColumn</name>
      <anchorfile>classGtk_1_1TreeModelColumn.html</anchorfile>
      <anchor>a52cf4894a268461a6bb4b26f913874e5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TreeModelColumn&lt; Glib::ustring &gt;</name>
    <filename>classGtk_1_1TreeModelColumn.html</filename>
    <base>Gtk::TreeModelColumnBase</base>
    <member kind="typedef">
      <type>Glib::ustring</type>
      <name>ElementType</name>
      <anchorfile>classGtk_1_1TreeModelColumn.html</anchorfile>
      <anchor>a548b32f98d1fb957559ebc4c709b8b3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Glib::Value&lt; Glib::ustring &gt;</type>
      <name>ValueType</name>
      <anchorfile>classGtk_1_1TreeModelColumn.html</anchorfile>
      <anchor>a769fbaa0f9fd6a4c921ebb61720ed294</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeModelColumn</name>
      <anchorfile>classGtk_1_1TreeModelColumn.html</anchorfile>
      <anchor>a52cf4894a268461a6bb4b26f913874e5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Gdk</name>
    <filename>namespaceGdk.html</filename>
    <namespace>Gdk::Cairo</namespace>
    <class kind="class">Gdk::AppLaunchContext</class>
    <class kind="class">Gdk::Color</class>
    <class kind="class">Gdk::Cursor</class>
    <class kind="class">Gdk::Device</class>
    <class kind="class">Gdk::DeviceManager</class>
    <class kind="class">Gdk::Display</class>
    <class kind="class">Gdk::DisplayManager</class>
    <class kind="class">Gdk::DragContext</class>
    <class kind="class">Gdk::DrawingContext</class>
    <class kind="class">Gdk::Event</class>
    <class kind="class">Gdk::FrameClock</class>
    <class kind="class">Gdk::FrameTimings</class>
    <class kind="class">Gdk::GLContext</class>
    <class kind="class">Gdk::GLError</class>
    <class kind="class">Gdk::Monitor</class>
    <class kind="class">Gdk::Pixbuf</class>
    <class kind="class">Gdk::PixbufAnimation</class>
    <class kind="class">Gdk::PixbufAnimationIter</class>
    <class kind="class">Gdk::PixbufError</class>
    <class kind="class">Gdk::PixbufFormat</class>
    <class kind="class">Gdk::PixbufLoader</class>
    <class kind="class">Gdk::Point</class>
    <class kind="class">Gdk::Rectangle</class>
    <class kind="class">Gdk::RGBA</class>
    <class kind="class">Gdk::Screen</class>
    <class kind="class">Gdk::Seat</class>
    <class kind="class">Gdk::TimeCoord</class>
    <class kind="class">Gdk::Visual</class>
    <class kind="class">Gdk::Window</class>
    <member kind="typedef">
      <type>GdkGeometry</type>
      <name>Geometry</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>af6948e754cab4e79c6430fb94e438d83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CursorType</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>X_CURSOR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea6fa92ec58239953d60bdafa4440c4c9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARROW</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eafa80675ddfaa466f8505e408ccb63d3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASED_ARROW_DOWN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea853968556be34116e69fdf2a18be009d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASED_ARROW_UP</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea84f375ae6d0befbe22531d0ff9c1018f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOAT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea10aa4d61cddb935e43f2b62dea096abd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOGOSITY</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea7a8cfa3c930399e49ef68cbb505cabee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOTTOM_LEFT_CORNER</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea9845fa73563379e98fb860acb69d9bab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOTTOM_RIGHT_CORNER</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea1d59f312b332fc435d01430eef8cfe82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOTTOM_SIDE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eaa08c61108ea69fa33038512e09090f0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOTTOM_TEE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea7bf312e752ee63ab98855c3fd11d6d09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOX_SPIRAL</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eaa4be816fc4c51b075542ab679c5635e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CENTER_PTR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea25d5817adf38c3775304dc791923bf40</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CIRCLE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea919eedbd4b6032a18dcfe58469274897</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eacfb49837cdeb6ae097fed0013e19b8b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COFFEE_MUG</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea2e2b788febfbd005d85e31451f2db694</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CROSS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea1336ffba0f880de737d4b0b66e0cc790</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CROSS_REVERSE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea33df5cbc877f7626925ff3f83fa188ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CROSSHAIR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea64d1788b6f158b910ca6bf0d10b6f4d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIAMOND_CROSS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea57aad6d7561d3df3a5808c9941f3bcb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eafe3e14a1385d46d3bc9601fcf25e3865</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOTBOX</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea4a07db0088f69dd51a6dfb09100c39b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOUBLE_ARROW</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea32f0679becbfb4ca4420d682d208199f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAFT_LARGE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eac73d7ef164539ad8c7112a36d9c9cb4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAFT_SMALL</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea915f971089b278a11751462849d0369f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAPED_BOX</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea265583771a2dbf9a07afc2cccad6b9ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXCHANGE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea2c9242717dd50c2a3986e112b3daea9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLEUR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eae3df3cf31063091d8c3df3617551c09f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GOBBLER</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea96b7765e4be855d01fc53f865f492758</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GUMBY</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eaeadc35e17cebabad68dd03a1aa1c8246</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HAND1</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea2918586c97533976d12d596d76bcf13f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HAND2</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eaf47f82fb9ff8bb6182e97ebf505bf7ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HEART</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea4d562ad508eb45b028956890401af604</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea8b3c2e5a6f30535dcdf2ff80ecc8b760</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IRON_CROSS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea9fe53c445720f4b59ffa550178efcb45</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LEFT_PTR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea4c4058065f448d8db3097ebd603e6dd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LEFT_SIDE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eaa58d00c4db5d41f5025a1cb2f872a306</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LEFT_TEE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea8dcf1b14a6a1d9566ba881bcddb4f2f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LEFTBUTTON</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eafe466feb39a43e1194505bd55014028f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LL_ANGLE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea3317959e58134bca3a77631bc09a398a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LR_ANGLE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea96fba2ec581cee199383311d2e926267</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea801cf05c6ff852f2c15cef3fd37d22fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIDDLEBUTTON</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea7c7d5821889ffe7b61953b53e7276468</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOUSE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea6fba7535aba49ab48c51be2e665c675c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PENCIL</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eaedb1afde7a750d3390a5bd3da15b2300</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIRATE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea6db11315bae5d349703719a45cddc1d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLUS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea3bd2d8516a0462a97acf7d609a8873b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUESTION_ARROW</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea22e9fc1c24ae3cfb13cadfa8c7f97fd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIGHT_PTR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea94f74e3755163dd4d7fb54dcf066ee89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIGHT_SIDE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eaf842ef0c00f9347734372990186c72e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIGHT_TEE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea1c40c4a0ca0037337606839acff10c1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIGHTBUTTON</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eacdfd06a6685dc4bef8aba55e659812a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RTL_LOGO</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea8f7faf7562c2ed6ebbf1cf498a1738f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAILBOAT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ead23d0cf07f8596298363b3e26acbc983</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SB_DOWN_ARROW</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea3108a6368b46076ca67ebc73f15592fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SB_H_DOUBLE_ARROW</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea832b8b72e1b1d1a717ee94be7a30c2c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SB_LEFT_ARROW</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eab68e40845f3a949fb53d1f35da8d7120</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SB_RIGHT_ARROW</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea9acdb6f0b80d2ed2b123ec6c3e60f031</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SB_UP_ARROW</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eaeae7cbabc774139e4aa4ce918eb049fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SB_V_DOUBLE_ARROW</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea5276b8a613d30f4bc75695ad35579156</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHUTTLE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea3d8ca6165a7b15487722b5fbe58cd239</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIZING</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eae7bdb2e0a780e539fedaa58913098584</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIDER</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea006c8e9981c9d5a8e9018b32eab6e14d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPRAYCAN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea003e498a4691e19e7433247a6e3d1419</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STAR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eac688146209b8d0ea47dbe5249913281e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TARGET</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea91eacbbaa6acac501f26da03e9852b23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TCROSS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ead4b6ca0b13e5ff1e8ff3a896d6ffca63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOP_LEFT_ARROW</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ead952bfb8fafa53183bdd1c4e19bffaf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOP_LEFT_CORNER</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea4b94e8f6ca4013c5f323c646b8fd316f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOP_RIGHT_CORNER</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea53288ace5f6f666ca9151a5a5016c793</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOP_SIDE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea32a819d0ccec7e8f703f0ba1b6931fe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOP_TEE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea133377a08a06ca5d51936963967ac14b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TREK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eafc8d59729dafa37a4c49a012f8667ccf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UL_ANGLE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea7db9da19da7b00b58fc5a863548bfb91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UMBRELLA</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea28d2a68ee5a23e958ead1e4a1f425f5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UR_ANGLE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea3b6e3b9b9202708c37fcf6130b91c112</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WATCH</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eadcb2e8f2760d1fca172a3eed7fcddd5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XTERM</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ead2979cf7358c8e22531a4a1fb8ba9ce8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LAST_CURSOR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea4d9c4df54a6b02424839ff1431f64c8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BLANK_CURSOR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ead3dfdad5291e00296ad9f66a9fdaa6b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CURSOR_IS_PIXMAP</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eaef221fca527f208a86b5e513016f3368</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EventMask</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPOSURE_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a02a37a692d3a22d23f108c7297e0e6d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POINTER_MOTION_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a342a902ef77f57d9334736f07a990076</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POINTER_MOTION_HINT_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61aac240ec38a5218d7573c67a09ab56281</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON_MOTION_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61af82369107be08234417f52b315199c3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON1_MOTION_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61abd7d7ab818464618a95b17fdaf74e58b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON2_MOTION_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a1a64ce75d34a53bf84e089f789015802</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON3_MOTION_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a2e18117d8362ae1aae06773cd18c3456</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON_PRESS_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61aab36cae32198c2fb44bfebb004ed1c54</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON_RELEASE_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a81d121e955040cd1452e57baff866f65</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_PRESS_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a8dfd519611828515fd7adda9e80b7870</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_RELEASE_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a9fd8a541519e432d8113974a78a9767b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENTER_NOTIFY_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a69b89d7a1ee1e3a7531eb42624108acd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LEAVE_NOTIFY_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a19978462f2718ee23be991ad2a07ef0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOCUS_CHANGE_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61acd8526a9652b8a69f9e6c372d6d41b1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRUCTURE_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a37bade8ec9af20c5b97d14b2af1494e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPERTY_CHANGE_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a4236c2b04d056b39a38356cc0ff94653</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VISIBILITY_NOTIFY_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a7361d5fc719d092eefdc2b3ff2e01791</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROXIMITY_IN_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a8c5fa92a00e0e2b271d98077500f05cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROXIMITY_OUT_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a511ba7e8e2505e66e6eb535c1ee78c0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBSTRUCTURE_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a494fd18922109a3bfaabcd0acf3c0ddf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a6a585b20af90d75babadd620d502aba1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOUCH_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a59781f091546b30f95efa63a937681f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMOOTH_SCROLL_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61adfcb909ba01d5a3459485ff52bda3026</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOUCHPAD_GESTURE_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a9a4a25b9294e3d2e3248f15151bc2fb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TABLET_PAD_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61aa5e486be88756876d681269de7fa37a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALL_EVENTS_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a2eee3081581eff983bc8046d42a24938</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>InputMode</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaf6d613ed046401b6386ba8f7bfb273c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODE_DISABLED</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaf6d613ed046401b6386ba8f7bfb273c0a634dcb7e7a4a770ca68f15387cb20f8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODE_SCREEN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaf6d613ed046401b6386ba8f7bfb273c0a69903e10407d553fecd43603e1c2dae9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODE_WINDOW</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaf6d613ed046401b6386ba8f7bfb273c0addb39f6a3e9632ee9a9b612898822492</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>InputSource</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaa2b575499ce34e8b79386b2db0c3c95c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOURCE_MOUSE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa2b575499ce34e8b79386b2db0c3c95ca264f66b78469c63fc199ea13e716cfac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOURCE_PEN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa2b575499ce34e8b79386b2db0c3c95cafdb576e0253585fbb904708ce390eeb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOURCE_ERASER</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa2b575499ce34e8b79386b2db0c3c95ca771bbf8795defc0d0df331917f73df42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOURCE_CURSOR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa2b575499ce34e8b79386b2db0c3c95caabfefa7e6fc1e771379d2bea96b08884</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOURCE_KEYBOARD</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa2b575499ce34e8b79386b2db0c3c95ca99ba24638846730c6c82bfd902b6a70d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOURCE_TOUCHSCREEN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa2b575499ce34e8b79386b2db0c3c95ca19078c10a5b51c03718e7c009e5e9f7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOURCE_TOUCHPAD</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa2b575499ce34e8b79386b2db0c3c95ca5ed7e3e2369132246dcb8a2398ddff34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOURCE_TRACKPOINT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa2b575499ce34e8b79386b2db0c3c95cab2bbb6be6aa961971fc43b4401dda500</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOURCE_TABLET_PAD</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa2b575499ce34e8b79386b2db0c3c95ca1bc647b50d764c66b2545ddbf98fc3b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DeviceType</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>af1e2cfdc40b5dbbd362c17de2431e60f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEVICE_TYPE_MASTER</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>af1e2cfdc40b5dbbd362c17de2431e60fa742b11a286bbbb3b5a87b0de29ee0050</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEVICE_TYPE_SLAVE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>af1e2cfdc40b5dbbd362c17de2431e60fa3dccf77ee1936f889085308e06e81cdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEVICE_TYPE_FLOATING</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>af1e2cfdc40b5dbbd362c17de2431e60faf6841666690eb3d2a06e45a030870120</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GrabOwnership</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga6768e1b30c4bb0ffd848823157937454</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OWNERSHIP_NONE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga6768e1b30c4bb0ffd848823157937454ab164b5f9cf5a71e0e873d41a711a512b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OWNERSHIP_WINDOW</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga6768e1b30c4bb0ffd848823157937454a490a3088e730abb1fc7d6a8d32477fed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OWNERSHIP_APPLICATION</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga6768e1b30c4bb0ffd848823157937454adcf8c28e45320371feba0adb6aa01502</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GrabStatus</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gab3918cc69c861b97779ac08dfa48610f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAB_SUCCESS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gab3918cc69c861b97779ac08dfa48610fabd6ebda01b2ed297c760ca9f1e0d4e0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAB_ALREADY_GRABBED</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gab3918cc69c861b97779ac08dfa48610fa77dd4bcc31ff98fa6fd47d7f05fb036f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAB_INVALID_TIME</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gab3918cc69c861b97779ac08dfa48610faf90f2aeede6dfc0875e82d2e4ff72004</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAB_NOT_VIEWABLE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gab3918cc69c861b97779ac08dfa48610faedf626e98a9832d10cacea1309b558cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAB_FROZEN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gab3918cc69c861b97779ac08dfa48610faeed917b13325c56918488f80e463c445</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAB_FAILED</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gab3918cc69c861b97779ac08dfa48610fad8c5e3051b4fda3899e2ea049e7208a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DragAction</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga0a9506293be3b3dfe00ecdb83e764ca6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ACTION_DEFAULT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0a9506293be3b3dfe00ecdb83e764ca6a5e94c0f9d2b03988bc03650517807f64</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ACTION_COPY</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0a9506293be3b3dfe00ecdb83e764ca6a433271fbf84b33241dc9d3d59e769cc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ACTION_MOVE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0a9506293be3b3dfe00ecdb83e764ca6ae0f044c9fa91c63e4460bffc0beb5e8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ACTION_LINK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0a9506293be3b3dfe00ecdb83e764ca6a7add88020dc035e20383a002a9bd5e1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ACTION_PRIVATE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0a9506293be3b3dfe00ecdb83e764ca6adcbdee40d2b412f6a5e02b281c0b5756</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ACTION_ASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0a9506293be3b3dfe00ecdb83e764ca6acd74eb3666f1d4dcc9a1f14e939daf3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DragProtocol</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga55102c640e0ecc1378ac73c1065d452d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_PROTO_NONE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga55102c640e0ecc1378ac73c1065d452da120c1fa6d6db01708efe13ac415cce3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_PROTO_MOTIF</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga55102c640e0ecc1378ac73c1065d452da25e53824ab7d50e4f8b12e6f2dc16c2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_PROTO_XDND</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga55102c640e0ecc1378ac73c1065d452da4b3fc88d81361b69cf45b17eae64ffbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_PROTO_ROOTWIN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga55102c640e0ecc1378ac73c1065d452da5ab53dc60ac51e3aec70d4efef371fc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_PROTO_WIN32_DROPFILES</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga55102c640e0ecc1378ac73c1065d452daa0bb8441f401057522c55e81ef447bc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_PROTO_OLE2</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga55102c640e0ecc1378ac73c1065d452da23df70e6fb2e38abb0bfca1f48faf188</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_PROTO_LOCAL</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga55102c640e0ecc1378ac73c1065d452da00c510f845b25109dab8ebe7a144b95f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_PROTO_WAYLAND</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga55102c640e0ecc1378ac73c1065d452da6bd3960d3a5531bbfe17b8d4b77756f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EventType</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOTHING</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a93a35982e45a0885d26f3ff11176ef3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELETE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8aeacf99323af1733f374a6fc35032dbb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DESTROY</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a2084cf30c131694f17b05745e5aaa6b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPOSE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a3dd25df95f91ac55fa9c28e87199d0a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOTION_NOTIFY</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8ada045f625aa299e3204f522ba03926db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON_PRESS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8ac1c4f4a6bbc55015e5054a2a9239dd30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOUBLE_BUTTON_PRESS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8aaa728c78a90dccc7b9f89526cf989460</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRIPLE_BUTTON_PRESS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a3c6d81adc405f35095921e1643c602a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON_RELEASE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8ab6dff5fd49532ec5119f10c1fb92ebd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_PRESS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8aa589ad7fcc480049c83658f1477a1695</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_RELEASE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8ae102720557bf8822f1acb7a52ba647af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENTER_NOTIFY</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a80421188d15c6656e743ad2e98c75cfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LEAVE_NOTIFY</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a085004882f1c9e85dca94a34638f3d14</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOCUS_CHANGE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8af5164db52c7c779b82385e2be74a25c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONFIGURE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8ac2b1e2a5828d7b7c1d4a816bd4d90c43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAP</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a96a2c458b882dbb4b0658b9e87125377</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNMAP</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a1ebfdf9ba23db37695f3e95f9130567a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPERTY_NOTIFY</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a9beddeeeae5ea5ad6ccf73a084fa5c4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SELECTION_CLEAR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a071d268ce5d90c4591cad19b22ebdb5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SELECTION_REQUEST</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a537a0cf8a20b137009d3c5f1825042e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SELECTION_NOTIFY</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a33e879b2da249052b2049612b61dd239</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROXIMITY_IN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a918eb6d23a6034ae9fdf542fb2d14599</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROXIMITY_OUT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8aa0fc264bc93d2be2ff83ca906cc431ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_ENTER</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a396b4b58b2307a7cae4c530e4a5ff349</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_LEAVE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a8773ca2531f07be79bb2e84f39b824c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_MOTION</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8ad012ce4edc8d0f0acb64faf0cd73c193</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_STATUS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a12337b3eff9e88c2af1324ad9e30d615</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DROP_START</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a314486eca7b9b69197d7b5485c66fd99</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DROP_FINISHED</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a86c79709ecd8d91c133bcf2b4123f7b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLIENT_EVENT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a9fc5f6c1b9c2b3a414c4d559b53f8d0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VISIBILITY_NOTIFY</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a958d9485237f3b336bf47bc13510c2f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a2580c3d8072a2ee0ed6bebab88acf505</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8aee23113999a1e3cd78f09c1d2528ef68</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SETTING</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8adece6bd1d0dd3d2ffdfa1cd1cda00cf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OWNER_CHANGE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8ad121dc5f8e9ce8c15123c9301cb59144</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAB_BROKEN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8aa9f6a21ad32aaab4240d59bd50cc57bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DAMAGE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a1642694dbc85cf8826d6afb3b7031ae5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOUCH_BEGIN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a37f53fbdd3e1b2084aef099c9c0e3951</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOUCH_UPDATE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a5d73e513e55b908dd315ae75ee84e98a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOUCH_END</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8aeb923e0a3eadf03c288c3d4065bd4a44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOUCH_CANCEL</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8abb33745ef24abe8d9646ebc96a3662f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOUCHPAD_SWIPE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8ad72e7b593991246267334ca61029b90d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOUCHPAD_PINCH</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8adde55bb46a603b65aaee6bf4baa5c1d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_BUTTON_PRESS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a36e99aeb703d761ae40c425b9f99636f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_BUTTON_RELEASE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a2221f97004078b0ee1a183dd93624109</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_RING</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a96190bc65398b04835305feb8c5efcde</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_STRIP</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8af4050935f9d547d8797294e87c3143eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_GROUP_MODE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8ad295dbb16b79d01cc8e6ce34e3f98175</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_LAST</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a55716dd05d0ebfa28c4acec5858300c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AxisUse</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaa3ef1fe9ccf3e0e884578dba5a63feb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_IGNORE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa3ef1fe9ccf3e0e884578dba5a63feb7af595da9b6404510451469d472ec2c815</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_X</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa3ef1fe9ccf3e0e884578dba5a63feb7a77d06dae28d3d0094ba2fb5381aff503</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_Y</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa3ef1fe9ccf3e0e884578dba5a63feb7a7edd734b22b2d1276bd535f03c0caa5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_PRESSURE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa3ef1fe9ccf3e0e884578dba5a63feb7aa982e89b61c77b51db9f599440ef02be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_XTILT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa3ef1fe9ccf3e0e884578dba5a63feb7a98a7535175be29c55c974a4aac061233</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_YTILT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa3ef1fe9ccf3e0e884578dba5a63feb7a28453c82432d3eb5afd60a3c0a0caf8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_WHEEL</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa3ef1fe9ccf3e0e884578dba5a63feb7ad310415f50219b1af147c0c045eae2ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_DISTANCE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa3ef1fe9ccf3e0e884578dba5a63feb7a00587510da032535c009867e77869713</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_ROTATION</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa3ef1fe9ccf3e0e884578dba5a63feb7ab3db40bacafe6b1cbe756e48754c3198</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_SLIDER</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa3ef1fe9ccf3e0e884578dba5a63feb7ab47c4bbbe6e206856da1710a6962ec37</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_LAST</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa3ef1fe9ccf3e0e884578dba5a63feb7a9d1a2bd0df534f0d4701614e5ffa89cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AxisFlags</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga1d57fbdd69ea913588b3fec3a438cd13</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_FLAG_X</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1d57fbdd69ea913588b3fec3a438cd13a6693d852421ece72b68c6c66dd6790c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_FLAG_Y</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1d57fbdd69ea913588b3fec3a438cd13aae24e55628d37357d6a21c688a44441a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_FLAG_PRESSURE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1d57fbdd69ea913588b3fec3a438cd13a34a0e028383435413c26847504bec3a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_FLAG_XTILT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1d57fbdd69ea913588b3fec3a438cd13aa8f6a0783f38101378c9914d3abf9afe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_FLAG_YTILT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1d57fbdd69ea913588b3fec3a438cd13a2f0b801375e7b4ed07f668c88428aa2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_FLAG_WHEEL</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1d57fbdd69ea913588b3fec3a438cd13a7622ebd0e2d4efde1ab4885a880b788d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_FLAG_DISTANCE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1d57fbdd69ea913588b3fec3a438cd13a0762accfe7ca49a5d585eb259ef326bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_FLAG_ROTATION</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1d57fbdd69ea913588b3fec3a438cd13a7498ee6510e2f20c3971112b08974f69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_FLAG_SLIDER</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1d57fbdd69ea913588b3fec3a438cd13a6d3bd1168ca31e7f4ea87788d089b31c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FrameClockPhase</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga29d3f1406e1cad2e2f4176fd3e01c4c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FRAME_CLOCK_PHASE_NONE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga29d3f1406e1cad2e2f4176fd3e01c4c2af39caf3fc212a5d9d9e1d9b2e36786a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FRAME_CLOCK_PHASE_FLUSH_EVENTS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga29d3f1406e1cad2e2f4176fd3e01c4c2a6f23cf63c97c71d47148423cb57d56dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FRAME_CLOCK_PHASE_BEFORE_PAINT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga29d3f1406e1cad2e2f4176fd3e01c4c2a6080c9890f48f036936e2057a2bc5085</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FRAME_CLOCK_PHASE_UPDATE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga29d3f1406e1cad2e2f4176fd3e01c4c2a8901342101b68d1416f3aea8b1b9e6da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FRAME_CLOCK_PHASE_LAYOUT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga29d3f1406e1cad2e2f4176fd3e01c4c2a1afb4a02d929da3d87070a4c2c12ce8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FRAME_CLOCK_PHASE_PAINT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga29d3f1406e1cad2e2f4176fd3e01c4c2a72c84e3af399f3f3d07b629df43c7b7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FRAME_CLOCK_PHASE_RESUME_EVENTS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga29d3f1406e1cad2e2f4176fd3e01c4c2ad4a72eecd27e3ce02968da58e90bee63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FRAME_CLOCK_PHASE_AFTER_PAINT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga29d3f1406e1cad2e2f4176fd3e01c4c2a73d2d831acd17b576cdd8b7b5d49353c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SubpixelLayout</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga78ece0189217fd9faec8f631fd201aaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBPIXEL_LAYOUT_UNKNOWN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga78ece0189217fd9faec8f631fd201aaaa8059b7bf8dc973ff2c34d930231c675c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBPIXEL_LAYOUT_NONE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga78ece0189217fd9faec8f631fd201aaaa89abfa58187e2d4b4e83be8d53a7b84c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBPIXEL_LAYOUT_HORIZONTAL_RGB</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga78ece0189217fd9faec8f631fd201aaaabce4f53fb70f9bef162822e2e064ecb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBPIXEL_LAYOUT_HORIZONTAL_BGR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga78ece0189217fd9faec8f631fd201aaaa04775679a7d9d4f9873af8a5684a1da1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBPIXEL_LAYOUT_VERTICAL_RGB</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga78ece0189217fd9faec8f631fd201aaaa31f0ce45457ba68551dedb02a9ed082d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBPIXEL_LAYOUT_VERTICAL_BGR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga78ece0189217fd9faec8f631fd201aaaa1d9e5e9020aa04dad6b29a2d82bcab62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Colorspace</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga866d716154abb7f5be26bd36b3017d3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLORSPACE_RGB</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga866d716154abb7f5be26bd36b3017d3fac1b17e0eab25d354ed8b7af0c9145b2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>InterpType</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga709a35a3eb48c0b819041e3414715fac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTERP_NEAREST</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga709a35a3eb48c0b819041e3414715facaa75a2321f8f1457aa426a6ab0c0a0a90</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTERP_TILES</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga709a35a3eb48c0b819041e3414715faca3044cafffe2f1b6afcdee9551c1f10d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTERP_BILINEAR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga709a35a3eb48c0b819041e3414715facaf5cb778e1de880033206f6e37fc62b53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTERP_HYPER</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga709a35a3eb48c0b819041e3414715faca19e921abef9f5c73a84e4fc4135d7ef7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PixbufAlphaMode</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga9c246a3d798a37b03d87e1b44865e940</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIXBUF_ALPHA_BILEVEL</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c246a3d798a37b03d87e1b44865e940a0ead8206e877b43b694ca604242fb1cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIXBUF_ALPHA_FULL</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c246a3d798a37b03d87e1b44865e940a79ff66f3dc80747d0b5a0efd9cc6989e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PixbufRotation</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga2587434fd0a409f88feba9e5311e6240</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIXBUF_ROTATE_NONE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga2587434fd0a409f88feba9e5311e6240ae555bb689178e0ce3fe6eda90162904c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIXBUF_ROTATE_COUNTERCLOCKWISE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga2587434fd0a409f88feba9e5311e6240a26531e198732e7087025dfb743aa97f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIXBUF_ROTATE_UPSIDEDOWN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga2587434fd0a409f88feba9e5311e6240a9fd78a0e98cf78b859fa736bb12f7d1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIXBUF_ROTATE_CLOCKWISE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga2587434fd0a409f88feba9e5311e6240a628792f0d777e7f958408489e2f75aaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SeatCapabilities</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga127986abb070fe4b2a5ba08493cec789</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEAT_CAPABILITY_NONE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga127986abb070fe4b2a5ba08493cec789a45eaf58a7790b4ba36163aa716067baa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEAT_CAPABILITY_POINTER</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga127986abb070fe4b2a5ba08493cec789a895885859ea9ecc05e8593b344f29bf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEAT_CAPABILITY_TOUCH</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga127986abb070fe4b2a5ba08493cec789a6993aa2aa616f9d603daa68b37849bbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEAT_CAPABILITY_TABLET_STYLUS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga127986abb070fe4b2a5ba08493cec789a3d944b0dbbabde0f0a150e0584d30c62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEAT_CAPABILITY_KEYBOARD</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga127986abb070fe4b2a5ba08493cec789a836710608b2e74ec287d5cc79f8c5ec8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEAT_CAPABILITY_ALL_POINTING</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga127986abb070fe4b2a5ba08493cec789aa77fc5c11fa2608159d3cf5d085d74f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEAT_CAPABILITY_ALL</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga127986abb070fe4b2a5ba08493cec789aea2f2f59ec24f7d75486cfc56c14bbc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ByteOrder</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga23c7243f15304c7a86cf6a20118a7c85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LSB_FIRST</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga23c7243f15304c7a86cf6a20118a7c85a09a4282a993017402243f63eb1f07298</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSB_FIRST</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga23c7243f15304c7a86cf6a20118a7c85a3f325a2fe586702e15a335a03d888ad6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ModifierType</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHIFT_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97ab830940004787adb1286da4d9beb39dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOCK_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97a53588955c27b5c2953c37dd813308a0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONTROL_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97ac5a0ad798032e8b909e97b332fa403db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOD1_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97aa5826c8c840c570ba9b4828095cfe769</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOD2_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97adeaf38ffeb91ed46f018f78f6f5a3df6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOD3_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97a287674fa8691edefad2af9eef6135aef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOD4_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97ad75197928b62e7e615c5bd3395572411</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOD5_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97ab3ce98b1c73b01270e8ae5adcb0eebfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON1_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97a7554a2834db735e5cb44ee2c80d00ba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON2_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97a65ecd49edf9402db05e719446099b6e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON3_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97ac780dd58eee5ea940343f33307a931d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON4_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97a51eb3c909fb55a37ab12b77b3f3f85e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON5_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97a6e1d3baf3df1900a3f3811bfa2a8c50d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_RESERVED_13_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97a824f05736c732e6368be69cdb3bc7afe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_RESERVED_14_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97adb3f9da79253e99bb8e9258a65e8e1ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_RESERVED_15_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97a07c43a9b3b6578c3fd322b641c37e930</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_RESERVED_16_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97abfb12740b3f51df205e7fa2668d1e262</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_RESERVED_17_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97a87e13158b56be279709439f35bc40158</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_RESERVED_18_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97a99a3959a8d9dca4afc0d02d3618a804b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_RESERVED_19_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97afcc7c99ad866812647da7f426285536f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_RESERVED_20_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97a50822e80565e70cdbf4c73800c420bee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_RESERVED_21_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97a27d35deea64c4d7f28c5b1db46d01a0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_RESERVED_22_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97a839a0b97870ad8cc3cfb45b85459d8be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_RESERVED_23_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97a8d62f83beb3213e6f37e9eaba8b3de9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_RESERVED_24_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97ad0cb8d5fb87206cc88b16a4a3a5acea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_RESERVED_25_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97aa9998a20ed5787c9d93bdcfaa67b9791</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUPER_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97a3a98399c90bf0f84da04716f7a7a60d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HYPER_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97ae75da94c4831dcc13a3f1cad2cdf09d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>META_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97aa94e66485b11ee78fbc855b88efbcb1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_RESERVED_29_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97a772445708fae6d0039b5d8eee9a6a551</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RELEASE_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97a1d52eb9545a6a6e1c4d3d44fb07fa9aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97aab6a702f9936b54d1c08a1fbea5bf229</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ModifierIntent</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gacd3d3ec93fb7c6a28c26a61f5215b02a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_INTENT_PRIMARY_ACCELERATOR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gacd3d3ec93fb7c6a28c26a61f5215b02aa74b505e53725867b8e14233595ed2387</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_INTENT_CONTEXT_MENU</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gacd3d3ec93fb7c6a28c26a61f5215b02aa4e2e1d17ac7ec420e4b6267874e470a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_INTENT_EXTEND_SELECTION</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gacd3d3ec93fb7c6a28c26a61f5215b02aa5b3aa4f36d3a9fbe21eec574e9b81be6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_INTENT_MODIFY_SELECTION</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gacd3d3ec93fb7c6a28c26a61f5215b02aabea8ee8656a4744cf37062c1e3c95a30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_INTENT_NO_TEXT_INPUT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gacd3d3ec93fb7c6a28c26a61f5215b02aad21e3db5ab67f386aba20454c8856229</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_INTENT_SHIFT_GROUP</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gacd3d3ec93fb7c6a28c26a61f5215b02aa3a9242d7693b317c6dd1be5caa53c50c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_INTENT_DEFAULT_MOD_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gacd3d3ec93fb7c6a28c26a61f5215b02aa67ca0bbd78f2e355bbc88b44e5d575c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Status</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga33ce42e67ed9e5a8e467297d78a1d912</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OK</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gga33ce42e67ed9e5a8e467297d78a1d912a7ae3c9ca661532bb84a2c537c5618557</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ERROR</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gga33ce42e67ed9e5a8e467297d78a1d912a89f66ceaa2ad486eeeb2a17397c012e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ERROR_PARAM</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gga33ce42e67ed9e5a8e467297d78a1d912aa533b88ba847cf8816364162afc8080c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ERROR_FILE</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gga33ce42e67ed9e5a8e467297d78a1d912aa564853d5e4620f0870249b1c73cac78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ERROR_MEM</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gga33ce42e67ed9e5a8e467297d78a1d912ac824fafb9c236ceb3efb4e727a9b61df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VisualType</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaf51d8a92358be17e8bdcbe2a229d1620</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VISUAL_STATIC_GRAY</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaf51d8a92358be17e8bdcbe2a229d1620a3ffd4f05ff969aa4badc570e3569a255</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VISUAL_GRAYSCALE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaf51d8a92358be17e8bdcbe2a229d1620acdc759a7cfc4bda8b6f3191930e7bbe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VISUAL_STATIC_COLOR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaf51d8a92358be17e8bdcbe2a229d1620ab24af7f41fda4741188010ab328abf1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VISUAL_PSEUDO_COLOR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaf51d8a92358be17e8bdcbe2a229d1620aaa3c7364919dbcaea7da720ddcf59cc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VISUAL_TRUE_COLOR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaf51d8a92358be17e8bdcbe2a229d1620ac1a605a7885367d79610d868f10a3cd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VISUAL_DIRECT_COLOR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaf51d8a92358be17e8bdcbe2a229d1620a3ea45f6c3e94cda531b08706dc45de07</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WindowState</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE_WITHDRAWN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950a308b02b6fbd3352316139bb65fb4b240</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE_ICONIFIED</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950adbec3a8ee53400731e0760cd8e6d1a20</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE_MAXIMIZED</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950a70d1794e4551f8318f24f9594cda0571</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE_STICKY</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950a893d7ca40e0374a52e6d20087a5a511e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE_FULLSCREEN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950aea37fd15e3ca35de27026dfc1ce9b329</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE_ABOVE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950a202b9d6649ef8cc3f9303a9ff2b76e67</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE_BELOW</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950a25b2ac79049bd36d6f22d64d5eaf94d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE_FOCUSED</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950a724ecabfd4a24e106bd967f6d438b2f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE_TILED</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950ad8facd08531f58171f6354ebc88e3d1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE_TOP_TILED</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950aac65996d37f2e9366c96867083672c4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE_TOP_RESIZABLE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950a0939169b37230b03f85001e31a1cac94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE_RIGHT_TILED</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950ad1f992eb5231ce0b0858e9760b459cba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE_RIGHT_RESIZABLE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950a2f340ed21d239a3e3c844c8bac784022</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE_BOTTOM_TILED</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950a886e21d92556085167c72d1f7f23d451</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE_BOTTOM_RESIZABLE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950a83aa6a984500ba82ae702d07b6005eb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE_LEFT_TILED</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950a64146fe088650b3674995ad2d9ef7666</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE_LEFT_RESIZABLE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950a7de28c7b83448d4c5006ce55143af90e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WindowType</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga2b9f4daf18d16a75d9bfe279f5340c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_ROOT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga2b9f4daf18d16a75d9bfe279f5340c02a982f217422a4b0de72d45875c2d45024</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TOPLEVEL</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga2b9f4daf18d16a75d9bfe279f5340c02ac93a6caf2f8bbbd2a8c693787729240c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_CHILD</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga2b9f4daf18d16a75d9bfe279f5340c02aa64b0fbfe14b77da93e27d3faf3d7d80</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TEMP</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga2b9f4daf18d16a75d9bfe279f5340c02a941fbfd9feac8050fd4fdcb1c5e77901</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_FOREIGN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga2b9f4daf18d16a75d9bfe279f5340c02afc319bd8bcf7f84f7dab92f7bb25ce52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_OFFSCREEN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga2b9f4daf18d16a75d9bfe279f5340c02aa7108bb182629dfacc7fbcae50409cc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_SUBSURFACE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga2b9f4daf18d16a75d9bfe279f5340c02ac18b806b49cab5ae5b69d0d70cea60dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WindowAttributesType</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaab9ec1938d766d84d3e4c8caeb21815a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WA_TITLE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaab9ec1938d766d84d3e4c8caeb21815aa09f8b4ad35f61f771a119b5c625ca5bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WA_X</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaab9ec1938d766d84d3e4c8caeb21815aacd1c3069dc481438382c31c51249b509</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WA_Y</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaab9ec1938d766d84d3e4c8caeb21815aab7fd7ba69a4fbca7084733b26213a8b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WA_CURSOR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaab9ec1938d766d84d3e4c8caeb21815aa6e256cacf30a1be318c8dc3f82a810b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WA_VISUAL</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaab9ec1938d766d84d3e4c8caeb21815aae0ff633d25b81674723a7afbb2c719bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WA_WMCLASS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaab9ec1938d766d84d3e4c8caeb21815aa4dcb65543bf80a0042c702f70e7bf7f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WA_NOREDIR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaab9ec1938d766d84d3e4c8caeb21815aabec00d523922e1c93e4f39758b2b6dbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WA_TYPE_HINT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaab9ec1938d766d84d3e4c8caeb21815aae3ba3855d95f1ced0945804bae5630d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WindowHints</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga7dd31e80216f3452a1e080bd22fcfd9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HINT_POS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga7dd31e80216f3452a1e080bd22fcfd9caf7a047235b6c2889ccff6bdfe631d7c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HINT_MIN_SIZE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga7dd31e80216f3452a1e080bd22fcfd9ca6f1b2d2721554168c23fbf5511c5d7fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HINT_MAX_SIZE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga7dd31e80216f3452a1e080bd22fcfd9ca9caa6d8be32dc1145d6b2fbdb72d21db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HINT_BASE_SIZE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga7dd31e80216f3452a1e080bd22fcfd9ca6570ba85f1847ed61331e70cd3121c71</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HINT_ASPECT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga7dd31e80216f3452a1e080bd22fcfd9cafeddb62aeda58d2d00bd5d59db24f7b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HINT_RESIZE_INC</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga7dd31e80216f3452a1e080bd22fcfd9ca88856b53da11ef29b36700247aba9576</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HINT_WIN_GRAVITY</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga7dd31e80216f3452a1e080bd22fcfd9caf32fa6210e26185d08a70f2ebb8ba0b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HINT_USER_POS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga7dd31e80216f3452a1e080bd22fcfd9ca78fcabc7726f7bdbb167a4747535bf43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HINT_USER_SIZE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga7dd31e80216f3452a1e080bd22fcfd9ca1b13094505c12a3f032ed14dac1ab64e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WindowTypeHint</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga1f75a8db0f289997ac16bba0891776c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_HINT_NORMAL</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1f75a8db0f289997ac16bba0891776c9afba659fdfa4f16ce95f98ed7253ce173</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_HINT_DIALOG</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1f75a8db0f289997ac16bba0891776c9a24feba55ecafeb3e4fbad87206ff3172</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_HINT_MENU</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1f75a8db0f289997ac16bba0891776c9ae0a386cca9f5a49b481fe3458028ad18</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_HINT_TOOLBAR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1f75a8db0f289997ac16bba0891776c9a641b121e45a472b7ed2f2a545899972a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_HINT_SPLASHSCREEN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1f75a8db0f289997ac16bba0891776c9a2d3c2f40e87e3f1c995f853422399ca1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_HINT_UTILITY</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1f75a8db0f289997ac16bba0891776c9ab618fa30d004a7be3f6d05960e64cbff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_HINT_DOCK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1f75a8db0f289997ac16bba0891776c9ae5931e0360036660db2cc9bb5a3df623</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_HINT_DESKTOP</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1f75a8db0f289997ac16bba0891776c9acf26278b8e568dabfa0b518024c6cf82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_HINT_DROPDOWN_MENU</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1f75a8db0f289997ac16bba0891776c9aff869af8a39182da158225889c60b0b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_HINT_POPUP_MENU</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1f75a8db0f289997ac16bba0891776c9a0aa73c7c03e938ce8513d18403e944ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_HINT_TOOLTIP</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1f75a8db0f289997ac16bba0891776c9a8d530049fda61e183f484e9aafff0429</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_HINT_NOTIFICATION</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1f75a8db0f289997ac16bba0891776c9af78c75ed1b8a8193acaae3b66dd40a47</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_HINT_COMBO</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1f75a8db0f289997ac16bba0891776c9ad288bbba09bc7e461f3e42c27f2288b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_HINT_DND</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1f75a8db0f289997ac16bba0891776c9ac4c2dc4c00914437e36bd93b900a00e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WMDecoration</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga1164863f498802821810010d1f3202a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECOR_ALL</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1164863f498802821810010d1f3202a4ad579be44d380d629b62efd70909481bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECOR_BORDER</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1164863f498802821810010d1f3202a4a9d95c8dabd0830889355de516f5155be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECOR_RESIZEH</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1164863f498802821810010d1f3202a4a16c2d6224c8635227877266c514ca7a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECOR_TITLE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1164863f498802821810010d1f3202a4a9a69c9a110600bb4ec5449c6aeef7ca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECOR_MENU</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1164863f498802821810010d1f3202a4ab092bedb64e07e1ce6da8e6e4783792f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECOR_MINIMIZE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1164863f498802821810010d1f3202a4aa30de848d6afe6676ad726dc31033ff8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECOR_MAXIMIZE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1164863f498802821810010d1f3202a4ad2189f0e4c199f81283577721c654d18</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WMFunction</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gae86c2fc4eac7ecb9c6c9dd841b1ba6af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FUNC_ALL</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gae86c2fc4eac7ecb9c6c9dd841b1ba6afaecfc490889029a4064cb147be8fdec36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FUNC_RESIZE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gae86c2fc4eac7ecb9c6c9dd841b1ba6afa3d0c3109745ca74248f0cbaf5b277015</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FUNC_MOVE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gae86c2fc4eac7ecb9c6c9dd841b1ba6afa0f3357e7e8db6adc9bc8a004db5b117d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FUNC_MINIMIZE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gae86c2fc4eac7ecb9c6c9dd841b1ba6afa2f20fb33acf40248abaf9f7f823e886b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FUNC_MAXIMIZE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gae86c2fc4eac7ecb9c6c9dd841b1ba6afa2b9a0a9da6e1f8e1f4a00a0640121ffc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FUNC_CLOSE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gae86c2fc4eac7ecb9c6c9dd841b1ba6afae371360dffe89e316a2080bd6e290bce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WindowEdge</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gae31896bd6d904848c07ef7f929063c0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_EDGE_NORTH_WEST</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gae31896bd6d904848c07ef7f929063c0ca39482daa0a2e7baeafb2da7d8fefd03b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_EDGE_NORTH</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gae31896bd6d904848c07ef7f929063c0ca5b3359e2690e207f3122a2ce59d04091</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_EDGE_NORTH_EAST</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gae31896bd6d904848c07ef7f929063c0cad99cfdac335ea99c8a216373e76d23c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_EDGE_WEST</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gae31896bd6d904848c07ef7f929063c0ca22e739a42e39b0bd9d2f176e18fc67b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_EDGE_EAST</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gae31896bd6d904848c07ef7f929063c0ca0d7860957a774d5304cb71d59c6bfc46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_EDGE_SOUTH_WEST</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gae31896bd6d904848c07ef7f929063c0ca9b3cc32f10726c4c51284be0cf7bd4b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_EDGE_SOUTH</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gae31896bd6d904848c07ef7f929063c0ca9e6ea2750092b2ea32b0b85745636c52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_EDGE_SOUTH_EAST</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gae31896bd6d904848c07ef7f929063c0cade850572e9f1bd40e00c1c0ad4951824</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Gravity</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>a1bb9235871d434d3c55411d8261b075e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAVITY_NORTH_WEST</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>a1bb9235871d434d3c55411d8261b075ea26cf5e2af42c574cc28279f9848c97f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAVITY_NORTH</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>a1bb9235871d434d3c55411d8261b075eac0d1d9483b409a84a753f85ac7f234f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAVITY_NORTH_EAST</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>a1bb9235871d434d3c55411d8261b075eaa97097dc95f35294d12260eec3613f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAVITY_WEST</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>a1bb9235871d434d3c55411d8261b075ea023d1c3f7793821113f3f9055c25d338</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAVITY_CENTER</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>a1bb9235871d434d3c55411d8261b075eaea2048a2f6eeb71a8c5252c68ad754e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAVITY_EAST</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>a1bb9235871d434d3c55411d8261b075ea1edfb8519b227057c721a3191d5dbd54</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAVITY_SOUTH_WEST</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>a1bb9235871d434d3c55411d8261b075eae9da923ddb44374c8694ebb8f570a06a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAVITY_SOUTH</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>a1bb9235871d434d3c55411d8261b075eaf27a9a06b251f7d01f0fd7f26a0f325a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAVITY_SOUTH_EAST</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>a1bb9235871d434d3c55411d8261b075ea24dc4edc839dbc158b591a6d123509b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAVITY_STATIC</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>a1bb9235871d434d3c55411d8261b075eaa2bbc484b932584573ff7548a2565ed4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AnchorHints</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga5d54454df602915a5e1fb06202b8a940</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ANCHOR_FLIP_X</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga5d54454df602915a5e1fb06202b8a940a7bc69ce0108081b0f0f33e0103f0d4c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ANCHOR_FLIP_Y</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga5d54454df602915a5e1fb06202b8a940aeb6b4dabb2f1850cde44a7ef16ce7256</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ANCHOR_SLIDE_X</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga5d54454df602915a5e1fb06202b8a940ae9d282a4dc560829a66eb1380838e4fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ANCHOR_SLIDE_Y</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga5d54454df602915a5e1fb06202b8a940a213661599f23d6547e83e3dcdb9d1167</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ANCHOR_RESIZE_X</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga5d54454df602915a5e1fb06202b8a940a514bd9a0f10ed250740ad8da51d71022</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ANCHOR_RESIZE_Y</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga5d54454df602915a5e1fb06202b8a940a85ee58ae40aff5b7846ca24477370bf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ANCHOR_FLIP</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga5d54454df602915a5e1fb06202b8a940a5c537388eafe77b8de9775103a829daa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ANCHOR_SLIDE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga5d54454df602915a5e1fb06202b8a940a9c233db96478cdc499e382a361d13cf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ANCHOR_RESIZE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga5d54454df602915a5e1fb06202b8a940a3e1ded1d4743ac9b3fa14b84bacf51ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FullscreenMode</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gab6878e8f24bf48a74f62573e4f252847</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FULLSCREEN_ON_CURRENT_MONITOR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gab6878e8f24bf48a74f62573e4f252847ab480177f4f11026b104402904afa0fd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FULLSCREEN_ON_ALL_MONITORS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gab6878e8f24bf48a74f62573e4f252847a9363747a1dafe6961c1ce8c29f9a6ce0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>screen_width</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>aa222d06df4c7ac9d8c7ec177aad1248e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>screen_height</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>a63d92d88cd3f196a40c124a6a2ab471c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>screen_width_mm</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>a8a1b076fef1e1f74938d938d7053e38e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>screen_height_mm</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>a44347a57f141648b57e75f08adbfb0e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>a9cbb33605a791894ae7486c53faf962b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventMask</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gac703a5b48fc77e29d3e78d805c31ff50</anchor>
      <arglist>(EventMask lhs, EventMask rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventMask</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga1b15235305492ed76f7ecdd400aaacd7</anchor>
      <arglist>(EventMask lhs, EventMask rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventMask</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga159399a6133fbcccaabc6f1969daea58</anchor>
      <arglist>(EventMask lhs, EventMask rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventMask</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga19a23026ba33fc076ac249d97587ec2a</anchor>
      <arglist>(EventMask flags)</arglist>
    </member>
    <member kind="function">
      <type>EventMask &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gafe1f9b78e7f8c6d6fc4d24c413899247</anchor>
      <arglist>(EventMask &amp;lhs, EventMask rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventMask &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga5968cef5c4bf27c67001befa472260d7</anchor>
      <arglist>(EventMask &amp;lhs, EventMask rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventMask &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaf9061d2958fffa2bd76c3d11667474e0</anchor>
      <arglist>(EventMask &amp;lhs, EventMask rhs)</arglist>
    </member>
    <member kind="function">
      <type>DragAction</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaf3255f44d3f9fccc900f8264b01ca632</anchor>
      <arglist>(DragAction lhs, DragAction rhs)</arglist>
    </member>
    <member kind="function">
      <type>DragAction</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga9c856185b733dd03866f1b8cd0d3d7f9</anchor>
      <arglist>(DragAction lhs, DragAction rhs)</arglist>
    </member>
    <member kind="function">
      <type>DragAction</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gae19f3b208343da290137dc38d9a32993</anchor>
      <arglist>(DragAction lhs, DragAction rhs)</arglist>
    </member>
    <member kind="function">
      <type>DragAction</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaa94621e5a8456f3db149323d793feeca</anchor>
      <arglist>(DragAction flags)</arglist>
    </member>
    <member kind="function">
      <type>DragAction &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga9d8233eb045b3578dc0ee65b71aa4894</anchor>
      <arglist>(DragAction &amp;lhs, DragAction rhs)</arglist>
    </member>
    <member kind="function">
      <type>DragAction &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gadc215548f83bedbace310af27f3b4f9f</anchor>
      <arglist>(DragAction &amp;lhs, DragAction rhs)</arglist>
    </member>
    <member kind="function">
      <type>DragAction &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gab1540afa3db90f4b5786796dbb4fc811</anchor>
      <arglist>(DragAction &amp;lhs, DragAction rhs)</arglist>
    </member>
    <member kind="function">
      <type>AxisFlags</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga3cbd30b32e1a100503398960f4779dee</anchor>
      <arglist>(AxisFlags lhs, AxisFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AxisFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gae29cee1278e0927f29e5f13f2afcc648</anchor>
      <arglist>(AxisFlags lhs, AxisFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AxisFlags</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga63b86bb3648a3c6eaf3f80bc7c8c53d4</anchor>
      <arglist>(AxisFlags lhs, AxisFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AxisFlags</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gac26bd9e081e5bbdddf758cd63abf6131</anchor>
      <arglist>(AxisFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>AxisFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga9e7ad1d8a3aec3c19fbf39e06af12a9a</anchor>
      <arglist>(AxisFlags &amp;lhs, AxisFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AxisFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga29e9f438ed6380cbd8582d3f243faa7e</anchor>
      <arglist>(AxisFlags &amp;lhs, AxisFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AxisFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga1daa317ebc41b3a6d9bed57ac14ced59</anchor>
      <arglist>(AxisFlags &amp;lhs, AxisFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FrameClockPhase</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaf8d2be6debb82cb133459bbfbce2dc6c</anchor>
      <arglist>(FrameClockPhase lhs, FrameClockPhase rhs)</arglist>
    </member>
    <member kind="function">
      <type>FrameClockPhase</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga5e8503a388161900559b294254754dcc</anchor>
      <arglist>(FrameClockPhase lhs, FrameClockPhase rhs)</arglist>
    </member>
    <member kind="function">
      <type>FrameClockPhase</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gac1c7dda6e8b75c95bc86b66215b980b3</anchor>
      <arglist>(FrameClockPhase lhs, FrameClockPhase rhs)</arglist>
    </member>
    <member kind="function">
      <type>FrameClockPhase</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gab8ab5922c81a4da78c05e8cdd62e8ba5</anchor>
      <arglist>(FrameClockPhase flags)</arglist>
    </member>
    <member kind="function">
      <type>FrameClockPhase &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga405553d5f9c2385f747a33c93f301f03</anchor>
      <arglist>(FrameClockPhase &amp;lhs, FrameClockPhase rhs)</arglist>
    </member>
    <member kind="function">
      <type>FrameClockPhase &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaa4ba43b5dab66183e9e6d3a1b38ed401</anchor>
      <arglist>(FrameClockPhase &amp;lhs, FrameClockPhase rhs)</arglist>
    </member>
    <member kind="function">
      <type>FrameClockPhase &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga653bd925867dcb5fb92b68840d979ddd</anchor>
      <arglist>(FrameClockPhase &amp;lhs, FrameClockPhase rhs)</arglist>
    </member>
    <member kind="function">
      <type>SeatCapabilities</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga8d47c5dd6a76881309092efa93601222</anchor>
      <arglist>(SeatCapabilities lhs, SeatCapabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>SeatCapabilities</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaefe3e443c38ed601a0edd59b1dd41ad3</anchor>
      <arglist>(SeatCapabilities lhs, SeatCapabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>SeatCapabilities</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga4638e687312d4b356fb3ff9516076123</anchor>
      <arglist>(SeatCapabilities lhs, SeatCapabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>SeatCapabilities</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga8ac0934e77bf611229ee4d4e84e0d185</anchor>
      <arglist>(SeatCapabilities flags)</arglist>
    </member>
    <member kind="function">
      <type>SeatCapabilities &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaeaa13e03f57e1dde1d06a77d0d708bed</anchor>
      <arglist>(SeatCapabilities &amp;lhs, SeatCapabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>SeatCapabilities &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga6233e46c4b70d2f126b80faf8851a78d</anchor>
      <arglist>(SeatCapabilities &amp;lhs, SeatCapabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>SeatCapabilities &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga8339f0c77284fbf3af0a8080328566d9</anchor>
      <arglist>(SeatCapabilities &amp;lhs, SeatCapabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>ModifierType</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaea5a44032c938042746ad236bd660cb2</anchor>
      <arglist>(ModifierType lhs, ModifierType rhs)</arglist>
    </member>
    <member kind="function">
      <type>ModifierType</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gad82a54dfc3606ebaa71c019c0f529845</anchor>
      <arglist>(ModifierType lhs, ModifierType rhs)</arglist>
    </member>
    <member kind="function">
      <type>ModifierType</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga0cdb70ae86f6833d530d8342cdea8f4f</anchor>
      <arglist>(ModifierType lhs, ModifierType rhs)</arglist>
    </member>
    <member kind="function">
      <type>ModifierType</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gac4cedd5d88bb8edb2777e6bbccfd1b3b</anchor>
      <arglist>(ModifierType flags)</arglist>
    </member>
    <member kind="function">
      <type>ModifierType &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga99cb90b1d68978ab0c006a66382fc1a7</anchor>
      <arglist>(ModifierType &amp;lhs, ModifierType rhs)</arglist>
    </member>
    <member kind="function">
      <type>ModifierType &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga0639d6eb9650f83675b5195a290a28db</anchor>
      <arglist>(ModifierType &amp;lhs, ModifierType rhs)</arglist>
    </member>
    <member kind="function">
      <type>ModifierType &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gacb25d39f0de616dbd29c3202e75c68bb</anchor>
      <arglist>(ModifierType &amp;lhs, ModifierType rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowState</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaf9969fc71063efb3b37f41955837f771</anchor>
      <arglist>(WindowState lhs, WindowState rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowState</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga58a37376b2be859cbb227deb322a1b36</anchor>
      <arglist>(WindowState lhs, WindowState rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowState</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga8b2d09de757d14d82311f6bcdc6aff8b</anchor>
      <arglist>(WindowState lhs, WindowState rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowState</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga4a73cc31885c48923b08e11d6a555133</anchor>
      <arglist>(WindowState flags)</arglist>
    </member>
    <member kind="function">
      <type>WindowState &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaa2333c283eab1b4a042c5b45613f3eda</anchor>
      <arglist>(WindowState &amp;lhs, WindowState rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowState &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gab99b0a8bf562ae38c140093ae225e46a</anchor>
      <arglist>(WindowState &amp;lhs, WindowState rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowState &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaea54c9b491f737576f0328097bb53e20</anchor>
      <arglist>(WindowState &amp;lhs, WindowState rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowAttributesType</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga07e2d6d83c3eaa35582551e0e55b70ca</anchor>
      <arglist>(WindowAttributesType lhs, WindowAttributesType rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowAttributesType</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga997f4d5502e2f97f49179923c42859a0</anchor>
      <arglist>(WindowAttributesType lhs, WindowAttributesType rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowAttributesType</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gabfbb2c833dad877e1b334c820667a807</anchor>
      <arglist>(WindowAttributesType lhs, WindowAttributesType rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowAttributesType</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga59311672bf7c12c681354cecf621eead</anchor>
      <arglist>(WindowAttributesType flags)</arglist>
    </member>
    <member kind="function">
      <type>WindowAttributesType &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga6d0826df75fa792fea8677eab4e72de5</anchor>
      <arglist>(WindowAttributesType &amp;lhs, WindowAttributesType rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowAttributesType &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gad816e2db5babd124a221a9ef3fb594b5</anchor>
      <arglist>(WindowAttributesType &amp;lhs, WindowAttributesType rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowAttributesType &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gadcc2e9681ffc1cad0b1f6dec443efd65</anchor>
      <arglist>(WindowAttributesType &amp;lhs, WindowAttributesType rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowHints</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaf44475fd95eeceaa08bfb2db0d88daac</anchor>
      <arglist>(WindowHints lhs, WindowHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowHints</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gac07136d5abbd0452a8ccd9d98d299a71</anchor>
      <arglist>(WindowHints lhs, WindowHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowHints</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga7b5bd3db92630db5e9d6440cf74ab02b</anchor>
      <arglist>(WindowHints lhs, WindowHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowHints</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga529b51c729b63b8c19fa3dcdfdb749fe</anchor>
      <arglist>(WindowHints flags)</arglist>
    </member>
    <member kind="function">
      <type>WindowHints &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga1635dce56521da3b2b3358ee09fc98e0</anchor>
      <arglist>(WindowHints &amp;lhs, WindowHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowHints &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga34f1688c041b889955874c86a8d03354</anchor>
      <arglist>(WindowHints &amp;lhs, WindowHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowHints &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga2e79dde61de6c9e2debbd5684f2d7b1b</anchor>
      <arglist>(WindowHints &amp;lhs, WindowHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>WMDecoration</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaf0bf563785e856d25124a5016e91f417</anchor>
      <arglist>(WMDecoration lhs, WMDecoration rhs)</arglist>
    </member>
    <member kind="function">
      <type>WMDecoration</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gac3997bc9abbf55128501c4a0cf2dcf05</anchor>
      <arglist>(WMDecoration lhs, WMDecoration rhs)</arglist>
    </member>
    <member kind="function">
      <type>WMDecoration</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga66504f447e760431ff5eb73d6e9f7204</anchor>
      <arglist>(WMDecoration lhs, WMDecoration rhs)</arglist>
    </member>
    <member kind="function">
      <type>WMDecoration</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaa2de4e22fbf85bfb2aeff16aa23953b4</anchor>
      <arglist>(WMDecoration flags)</arglist>
    </member>
    <member kind="function">
      <type>WMDecoration &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga246daf5cc044a59dc7505d859443aa3f</anchor>
      <arglist>(WMDecoration &amp;lhs, WMDecoration rhs)</arglist>
    </member>
    <member kind="function">
      <type>WMDecoration &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga135087f5fcdfd1390a2ba9e921bfbd8d</anchor>
      <arglist>(WMDecoration &amp;lhs, WMDecoration rhs)</arglist>
    </member>
    <member kind="function">
      <type>WMDecoration &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaf0f371878e37172d2efd3f06fe06497a</anchor>
      <arglist>(WMDecoration &amp;lhs, WMDecoration rhs)</arglist>
    </member>
    <member kind="function">
      <type>WMFunction</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gabbe1ffdfcd4621a50cbb70437535f528</anchor>
      <arglist>(WMFunction lhs, WMFunction rhs)</arglist>
    </member>
    <member kind="function">
      <type>WMFunction</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaa13829345810750d00aecd676ab313b0</anchor>
      <arglist>(WMFunction lhs, WMFunction rhs)</arglist>
    </member>
    <member kind="function">
      <type>WMFunction</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga16cfb561770873a87c607214be549b88</anchor>
      <arglist>(WMFunction lhs, WMFunction rhs)</arglist>
    </member>
    <member kind="function">
      <type>WMFunction</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gae36e99dc9387a7893448a194581a2f12</anchor>
      <arglist>(WMFunction flags)</arglist>
    </member>
    <member kind="function">
      <type>WMFunction &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga81377b8d9bf9a5aef27a9aa0d8365b65</anchor>
      <arglist>(WMFunction &amp;lhs, WMFunction rhs)</arglist>
    </member>
    <member kind="function">
      <type>WMFunction &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga895cce7091acfbb09aa9a8a12e6ce01d</anchor>
      <arglist>(WMFunction &amp;lhs, WMFunction rhs)</arglist>
    </member>
    <member kind="function">
      <type>WMFunction &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga4bc91f69341d0699f9a9f1eb2884d6d2</anchor>
      <arglist>(WMFunction &amp;lhs, WMFunction rhs)</arglist>
    </member>
    <member kind="function">
      <type>AnchorHints</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gae484f290e9b5e65cc1477023326d5b7c</anchor>
      <arglist>(AnchorHints lhs, AnchorHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>AnchorHints</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaeab522e4886592c592b0a39cbd2c51ff</anchor>
      <arglist>(AnchorHints lhs, AnchorHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>AnchorHints</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga5fba6499c1bef048e61300108ef1961d</anchor>
      <arglist>(AnchorHints lhs, AnchorHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>AnchorHints</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga93766424068809b36648ad03f603e14e</anchor>
      <arglist>(AnchorHints flags)</arglist>
    </member>
    <member kind="function">
      <type>AnchorHints &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gae52c4490f004aee155140e38957e1c2c</anchor>
      <arglist>(AnchorHints &amp;lhs, AnchorHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>AnchorHints &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga7bd3cff4750fe4c7eecc247ec1880ecc</anchor>
      <arglist>(AnchorHints &amp;lhs, AnchorHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>AnchorHints &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga6dc7a116b6e719d67628be53dd32ad42</anchor>
      <arglist>(AnchorHints &amp;lhs, AnchorHints rhs)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Gdk::Cairo</name>
    <filename>namespaceGdk_1_1Cairo.html</filename>
    <member kind="function">
      <type>void</type>
      <name>set_source_color</name>
      <anchorfile>namespaceGdk_1_1Cairo.html</anchorfile>
      <anchor>a756dfe9de49bc8cc860ccae52713e290</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;context, const Gdk::Color &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_source_rgba</name>
      <anchorfile>namespaceGdk_1_1Cairo.html</anchorfile>
      <anchor>a0f592f448c610fa191d3de1fbf1899e3</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;context, const Gdk::RGBA &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_source_pixbuf</name>
      <anchorfile>namespaceGdk_1_1Cairo.html</anchorfile>
      <anchor>a91e890136c8188a3b3044f653b55f5d1</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;context, const Glib::RefPtr&lt; Gdk::Pixbuf &gt; &amp;pixbuf, double pixbuf_x=0, double pixbuf_y=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_rectangle_to_path</name>
      <anchorfile>namespaceGdk_1_1Cairo.html</anchorfile>
      <anchor>a6ea2e5e747df1326ca23215e39616a78</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;context, const Gdk::Rectangle &amp;rectangle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_region_to_path</name>
      <anchorfile>namespaceGdk_1_1Cairo.html</anchorfile>
      <anchor>a217bdd97cd08f473eb56c191f091419e</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;context, const ::Cairo::RefPtr&lt; ::Cairo::Region &gt; &amp;region)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_clip_rectangle</name>
      <anchorfile>namespaceGdk_1_1Cairo.html</anchorfile>
      <anchor>a9e69885d5ba2340372b1d75383eaf0c3</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;context, Gdk::Rectangle &amp;rectangle)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_clip_rectangle</name>
      <anchorfile>namespaceGdk_1_1Cairo.html</anchorfile>
      <anchor>a6347be5deb37caf427e85e8c5cde37c7</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;context)</arglist>
    </member>
    <member kind="function">
      <type>::Cairo::RefPtr&lt; ::Cairo::Region &gt;</type>
      <name>create_region_from_surface</name>
      <anchorfile>namespaceGdk_1_1Cairo.html</anchorfile>
      <anchor>a890b5dc9fe567788120090785ca91a6a</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Surface &gt; &amp;surface)</arglist>
    </member>
    <member kind="function">
      <type>::Cairo::RefPtr&lt; ::Cairo::ImageSurface &gt;</type>
      <name>create_surface_from_pixbuf</name>
      <anchorfile>namespaceGdk_1_1Cairo.html</anchorfile>
      <anchor>a572868b909f47f65f62fe64299fef07f</anchor>
      <arglist>(const Glib::RefPtr&lt; const Gdk::Pixbuf &gt; &amp;pixbuf, int scale, const Glib::RefPtr&lt; Gdk::Window &gt; &amp;for_window={})</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw_from_gl</name>
      <anchorfile>namespaceGdk_1_1Cairo.html</anchorfile>
      <anchor>ad10c0da389aca32ab93242be7d1eb047</anchor>
      <arglist>(const ::Cairo::RefPtr&lt; ::Cairo::Context &gt; &amp;context, const Glib::RefPtr&lt; Gdk::Window &gt; &amp;window, int source, int source_type, int buffer_scale, int x, int y, int width, int height)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Gio</name>
    <filename>namespaceGio.html</filename>
    <member kind="typedef">
      <type>Glib::ListHandle&lt; Gio::SrvTarget, SrvTargetListTraits &gt;</type>
      <name>ListHandle_SrvTarget</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>a0e20e371af96fff4efd6974a484c5b8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AppInfoCreateFlags</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gae39c1e25f40a070e1720470758a55344</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ApplicationFlags</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga493d914cf0a466cc9c6b18a44c5d345e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ConverterResult</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gaa0a2aaee2c908b38261e17b4cb851b5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ConverterFlags</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gab07e5ab152ffbc542e6e5c007809f17c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CredentialsType</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gae498b021f21459dc83201f010ddf8dde</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DriveStartFlags</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gab628e70b1d028b3bc9b02b0d3b8acf2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DriveStartStopType</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga148d2356238c5c8f809dcbd58341cc2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EmblemOrigin</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga7f2c8f757fdeb91ca48c0bc8184f9270</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DataStreamByteOrder</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga87dea9b56fed9c0bca0f8426fb57781e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DataStreamNewlineType</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga2de111fe308aff763fb98a39bc507267</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ErrorEnum</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SocketFamily</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga0ba69e14ad979bf9b2073ad122e38d48</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TlsAuthenticationMode</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga202fd408b6a0f198ae5aaf0f0c6a69b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TlsCertificateFlags</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gac96df88bc70e763045de6aa47e87039a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FileQueryInfoFlags</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga2cb7bdea61353f0999607785abd032c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FileCreateFlags</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga500a44e123fd4c578f8af9ddef2f7601</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FileCopyFlags</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga08edc09a45449b136b27493647d4ecbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FileMonitorFlags</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga469f795e9a4dddb2421c0e5568be6649</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FileMeasureFlags</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga3d27573e797e8e78e7b71705ad015ced</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FileAttributeType</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga5e79fa284e14b18d180741cd1c03d0e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FileAttributeInfoFlags</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga8687b5c14230bb3e46a1df7341941f16</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FileAttributeStatus</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gae926022c51a79fd117e4bfd100c25b29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FileType</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga7dcba95023d74c47bba3fd0a07f8824c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FileMonitorEvent</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gabd42cf9877b5b6556bb18b7fd6b6dd81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IOStreamSpliceFlags</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga753fc539949f2db7d1114d7ebd5b45b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MenuAttribute</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga7df84578d37eccbf86072c8fc85b217a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MenuLink</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga4febebe134c8e141020c6c253711e0d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MountUnmountFlags</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga9fa1b6a8eabf8f88e4cf6d611a4cff44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MountMountFlags</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga5484bace25c932fd4c7354259e138814</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AskPasswordFlags</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gac807da73d3b89a6dc16dad028244e6ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PasswordSave</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gafec517575c8f8d6f48433c86da52448f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MountOperationResult</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gac479310f8df4ad5909d717caec261076</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NetworkConnectivity</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga19329d33cc5bb273b36883742550acd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NotificationPriority</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga342e11d6fd463ede2d49d20cb584f1b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>OutputStreamSpliceFlags</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga7c30d67e5f60d33fdcd3053123feea74</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ResolverRecordType</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga7305dc7c78903a65491f3a505f55e966</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ResourceFlags</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gab96db7e3e47eb9f35766a29b025790e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ResourceLookupFlags</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga834108a2d288186de3d9beea8925b9a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SettingsBindFlags</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gab41e4379084ff04d75104143d99ecf61</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SocketType</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga2302a45e052658e343729e0be2fd3310</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SocketProtocol</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga4e8932017a600fffa5e8e6b5f6ea5b16</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SocketMsgFlags</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga11f5e6b2ba2903428e93d947c82fa04e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SocketClientEvent</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gaf8428cdf057aabdd8990b5e0a8021adc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TlsRehandshakeMode</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga9730680b829b7745e4f36c1540761f3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TlsDatabaseVerifyFlags</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gaa46a3fc37c1e5566af625d7db3123a4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TlsDatabaseLookupFlags</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga0de6ee7362d49df4f068b6214b93a076</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TlsInteractionResult</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga13ffba1819a4d780593c50266d7a9484</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TlsCertificateRequestFlags</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gaab2a17acffc49fca7080e27fd1e61996</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TlsPasswordFlags</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga8ac18330be9383471445ba62336a929a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ZlibCompressorFormat</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gab247c6072c566753c8b9762f66e84c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UnixSocketAddressType</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gaf842f4597d522154407164deb4906c2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>content_type_equals</name>
      <anchorfile>group__giommContentType.html</anchorfile>
      <anchor>ga496c304f10ea79f1a20137bf614466e8</anchor>
      <arglist>(const Glib::ustring &amp;type1, const Glib::ustring &amp;type2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>content_type_is_a</name>
      <anchorfile>group__giommContentType.html</anchorfile>
      <anchor>ga278fca288c7c2e9995ebb64ce43a6ffd</anchor>
      <arglist>(const Glib::ustring &amp;type, const Glib::ustring &amp;supertype)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>content_type_is_unknown</name>
      <anchorfile>group__giommContentType.html</anchorfile>
      <anchor>gaee153086e7cd9f1ab0509cbf81ec06e9</anchor>
      <arglist>(const Glib::ustring &amp;type)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>content_type_get_description</name>
      <anchorfile>group__giommContentType.html</anchorfile>
      <anchor>gac065cb89d7abb5935cfa225e3d41a732</anchor>
      <arglist>(const Glib::ustring &amp;type)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>content_type_get_mime_type</name>
      <anchorfile>group__giommContentType.html</anchorfile>
      <anchor>ga92f379d45658e14f3ec1bec3da71d908</anchor>
      <arglist>(const Glib::ustring &amp;type)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Icon &gt;</type>
      <name>content_type_get_icon</name>
      <anchorfile>group__giommContentType.html</anchorfile>
      <anchor>ga7972eb82466bf972bbbf5b58f6344e84</anchor>
      <arglist>(const Glib::ustring &amp;type)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Icon &gt;</type>
      <name>content_type_get_symbolic_icon</name>
      <anchorfile>group__giommContentType.html</anchorfile>
      <anchor>gab55b0d4ac98b1aa0edab98afa66a8b6c</anchor>
      <arglist>(const Glib::ustring &amp;type)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>content_type_can_be_executable</name>
      <anchorfile>group__giommContentType.html</anchorfile>
      <anchor>gae5107c4e00134d7d9df3b755a74f9494</anchor>
      <arglist>(const Glib::ustring &amp;type)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>content_type_from_mime_type</name>
      <anchorfile>group__giommContentType.html</anchorfile>
      <anchor>gad5432d8f8c8ba74f8157af9d49930b4c</anchor>
      <arglist>(const Glib::ustring &amp;mime_type)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>content_type_guess</name>
      <anchorfile>group__giommContentType.html</anchorfile>
      <anchor>ga48e8afbb7f1724efcdebd7c028da5560</anchor>
      <arglist>(const std::string &amp;filename, const guchar *data, gsize data_size, bool &amp;result_uncertain)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>content_type_guess</name>
      <anchorfile>group__giommContentType.html</anchorfile>
      <anchor>gae46acc46aa5c33a8d1feda6a675fefa9</anchor>
      <arglist>(const std::string &amp;filename, const std::string &amp;data, bool &amp;result_uncertain)</arglist>
    </member>
    <member kind="function">
      <type>Glib::StringArrayHandle</type>
      <name>content_type_guess_for_tree</name>
      <anchorfile>group__giommContentType.html</anchorfile>
      <anchor>ga7e82e215c402edca50219020e43d08ec</anchor>
      <arglist>(const Glib::RefPtr&lt; const File &gt; &amp;root)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ListHandle&lt; Glib::ustring &gt;</type>
      <name>content_types_get_registered</name>
      <anchorfile>group__giommContentType.html</anchorfile>
      <anchor>gaeae6cd7ee77a7b1c52443116f346b476</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>a28171d5c1584ce2516ba05b13cee04ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SignalSocket</type>
      <name>signal_socket</name>
      <anchorfile>group__NetworkIO.html</anchorfile>
      <anchor>ga73dc3243f51abce0a62424329724f510</anchor>
      <arglist>(const Glib::RefPtr&lt; Glib::MainContext &gt; &amp;context=Glib::RefPtr&lt; Glib::MainContext &gt;())</arglist>
    </member>
    <member kind="function">
      <type>AppInfoCreateFlags</type>
      <name>operator|</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gac2ae439cef63de06f97ed8454b67ec32</anchor>
      <arglist>(AppInfoCreateFlags lhs, AppInfoCreateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AppInfoCreateFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga1f0f1235c25f5552c8a1467697bd66d3</anchor>
      <arglist>(AppInfoCreateFlags lhs, AppInfoCreateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AppInfoCreateFlags</type>
      <name>operator^</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga9f582e5773b615c406ceb28b695b7015</anchor>
      <arglist>(AppInfoCreateFlags lhs, AppInfoCreateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AppInfoCreateFlags</type>
      <name>operator~</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga302df8457f421e75eaea25a67cb63c19</anchor>
      <arglist>(AppInfoCreateFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>AppInfoCreateFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gaccda1b3df9583689a62a3add6715f640</anchor>
      <arglist>(AppInfoCreateFlags &amp;lhs, AppInfoCreateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AppInfoCreateFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga179d7c2a3d709c7a8e4a0796a8b5e833</anchor>
      <arglist>(AppInfoCreateFlags &amp;lhs, AppInfoCreateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AppInfoCreateFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga5dac484830e37250c0942325fb4b85a3</anchor>
      <arglist>(AppInfoCreateFlags &amp;lhs, AppInfoCreateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ApplicationFlags</type>
      <name>operator|</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga44ea3f3bc13b4f365f8b2423a9ac6697</anchor>
      <arglist>(ApplicationFlags lhs, ApplicationFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ApplicationFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga69ea1b280906db58e7da69dfa8e967f4</anchor>
      <arglist>(ApplicationFlags lhs, ApplicationFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ApplicationFlags</type>
      <name>operator^</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gaf78c94e5bddf6119131fc2925e25e4db</anchor>
      <arglist>(ApplicationFlags lhs, ApplicationFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ApplicationFlags</type>
      <name>operator~</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gabfccee773f2311c38a00aa0d1ecbe3ac</anchor>
      <arglist>(ApplicationFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>ApplicationFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga7f8cf604f276081f162dfe2e78e5e76a</anchor>
      <arglist>(ApplicationFlags &amp;lhs, ApplicationFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ApplicationFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga786d1f08e7b472c5474df9bf6ebe1a1b</anchor>
      <arglist>(ApplicationFlags &amp;lhs, ApplicationFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ApplicationFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga58651ff4ec0b8e4ca0fd0e868e8f09cf</anchor>
      <arglist>(ApplicationFlags &amp;lhs, ApplicationFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ConverterFlags</type>
      <name>operator|</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga9f956fe651a1375f27fc596f1ade2ab6</anchor>
      <arglist>(ConverterFlags lhs, ConverterFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ConverterFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gaed01900163c4efb6fc8b072ace92a4ff</anchor>
      <arglist>(ConverterFlags lhs, ConverterFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ConverterFlags</type>
      <name>operator^</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gaa24dddaf6719113c40e5c8ec9694cf05</anchor>
      <arglist>(ConverterFlags lhs, ConverterFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ConverterFlags</type>
      <name>operator~</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga1ca85527dd594724362f3a6e8d1ad466</anchor>
      <arglist>(ConverterFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>ConverterFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga006555992fbb516f1cea93b762566516</anchor>
      <arglist>(ConverterFlags &amp;lhs, ConverterFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ConverterFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga09dd687bd08618a59a4a0128521f12ca</anchor>
      <arglist>(ConverterFlags &amp;lhs, ConverterFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ConverterFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga65a84e2cc906ff5924d3eb0af66b56b2</anchor>
      <arglist>(ConverterFlags &amp;lhs, ConverterFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>DriveStartFlags</type>
      <name>operator|</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga38b31de13d1949c2acb9255bdc858767</anchor>
      <arglist>(DriveStartFlags lhs, DriveStartFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>DriveStartFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga7c4f37b1ef92224ac50016d49c95bf00</anchor>
      <arglist>(DriveStartFlags lhs, DriveStartFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>DriveStartFlags</type>
      <name>operator^</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gae75239258d148626dc4b0048b55a4c44</anchor>
      <arglist>(DriveStartFlags lhs, DriveStartFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>DriveStartFlags</type>
      <name>operator~</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gaf625621abb6c686d449c3f3c43aee02c</anchor>
      <arglist>(DriveStartFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>DriveStartFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga994648faf5be7fd03bc1929554044dac</anchor>
      <arglist>(DriveStartFlags &amp;lhs, DriveStartFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>DriveStartFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga77b3f8597aac448c2dd860f204e32b8f</anchor>
      <arglist>(DriveStartFlags &amp;lhs, DriveStartFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>DriveStartFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga1c0e50bc08aaf61dc1fbbe786c5e6b33</anchor>
      <arglist>(DriveStartFlags &amp;lhs, DriveStartFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TlsCertificateFlags</type>
      <name>operator|</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga22c0194e634b597f4dcec67551a7ca9b</anchor>
      <arglist>(TlsCertificateFlags lhs, TlsCertificateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TlsCertificateFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga1380174558e94de7c9c8b36b56332550</anchor>
      <arglist>(TlsCertificateFlags lhs, TlsCertificateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TlsCertificateFlags</type>
      <name>operator^</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga9fd8470137571e8eef6bc1af201a5867</anchor>
      <arglist>(TlsCertificateFlags lhs, TlsCertificateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TlsCertificateFlags</type>
      <name>operator~</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga8fd13816125414ef8f52696da2c1e0ca</anchor>
      <arglist>(TlsCertificateFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>TlsCertificateFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga69a2edc59567e8ddc43d718a01ca11a3</anchor>
      <arglist>(TlsCertificateFlags &amp;lhs, TlsCertificateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TlsCertificateFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga9b25fecd6c1e006bac8f384156bfe80a</anchor>
      <arglist>(TlsCertificateFlags &amp;lhs, TlsCertificateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TlsCertificateFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga7960cd8bde85baaf03372bf57015d123</anchor>
      <arglist>(TlsCertificateFlags &amp;lhs, TlsCertificateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileQueryInfoFlags</type>
      <name>operator|</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gaba7574ea0b336541af125d4eb9423088</anchor>
      <arglist>(FileQueryInfoFlags lhs, FileQueryInfoFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileQueryInfoFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gafd57fe410ba970bb3cb78eb1c9942aeb</anchor>
      <arglist>(FileQueryInfoFlags lhs, FileQueryInfoFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileQueryInfoFlags</type>
      <name>operator^</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gacae77e10133f304081534efa76be4a52</anchor>
      <arglist>(FileQueryInfoFlags lhs, FileQueryInfoFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileQueryInfoFlags</type>
      <name>operator~</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga42422c40ea08ec4f0ad74c8e2a657eb5</anchor>
      <arglist>(FileQueryInfoFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>FileQueryInfoFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gac59d6f3b6a2adca24d2763ba2af99a02</anchor>
      <arglist>(FileQueryInfoFlags &amp;lhs, FileQueryInfoFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileQueryInfoFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga203c5d02679e3aa4c78080fb9269b1f9</anchor>
      <arglist>(FileQueryInfoFlags &amp;lhs, FileQueryInfoFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileQueryInfoFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga55adc6ecb3a15cb850b30bafb7eb9248</anchor>
      <arglist>(FileQueryInfoFlags &amp;lhs, FileQueryInfoFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileCreateFlags</type>
      <name>operator|</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga431f17ab67ccea562ea556c10df6bd27</anchor>
      <arglist>(FileCreateFlags lhs, FileCreateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileCreateFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga4a52dbf7b71137a0d00ef49c0eb163a6</anchor>
      <arglist>(FileCreateFlags lhs, FileCreateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileCreateFlags</type>
      <name>operator^</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gab4d3e010c78b9f5ca2673210269b999d</anchor>
      <arglist>(FileCreateFlags lhs, FileCreateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileCreateFlags</type>
      <name>operator~</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga703109997bbde3b6a686dd36ec9d35ad</anchor>
      <arglist>(FileCreateFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>FileCreateFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga4f6ed1c3e6f2a3a7d394b62f3166df7a</anchor>
      <arglist>(FileCreateFlags &amp;lhs, FileCreateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileCreateFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga43d71b19c0e673331de89e1b1d84679b</anchor>
      <arglist>(FileCreateFlags &amp;lhs, FileCreateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileCreateFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga045123aaa65f69e2a76a488d1024e34d</anchor>
      <arglist>(FileCreateFlags &amp;lhs, FileCreateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileCopyFlags</type>
      <name>operator|</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga0b841b27ceceb381f08e1bc5cf929eb1</anchor>
      <arglist>(FileCopyFlags lhs, FileCopyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileCopyFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gabb1d7757198076b221ba038b1d3ae841</anchor>
      <arglist>(FileCopyFlags lhs, FileCopyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileCopyFlags</type>
      <name>operator^</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga29b016e93e7a6dfdebc4f9f6e4fbf1c1</anchor>
      <arglist>(FileCopyFlags lhs, FileCopyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileCopyFlags</type>
      <name>operator~</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga70312f36423a73fbf663c64824631dc8</anchor>
      <arglist>(FileCopyFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>FileCopyFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gabb9c03e9bbf1ef698696dc08b0d36371</anchor>
      <arglist>(FileCopyFlags &amp;lhs, FileCopyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileCopyFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gad2f22009032ff6f0975c5a5701ca061d</anchor>
      <arglist>(FileCopyFlags &amp;lhs, FileCopyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileCopyFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga514b3929469585c9cfc222ef2daf4fea</anchor>
      <arglist>(FileCopyFlags &amp;lhs, FileCopyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileMonitorFlags</type>
      <name>operator|</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gab3fab04e51aeff08aaf235f038e50d72</anchor>
      <arglist>(FileMonitorFlags lhs, FileMonitorFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileMonitorFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gaf801bc2b57ef5136eba961cdcd68e2e6</anchor>
      <arglist>(FileMonitorFlags lhs, FileMonitorFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileMonitorFlags</type>
      <name>operator^</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga81b5df359bd6a61df867af8274d182ae</anchor>
      <arglist>(FileMonitorFlags lhs, FileMonitorFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileMonitorFlags</type>
      <name>operator~</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga501c69e3e5101b66d2e5fb8181229b2c</anchor>
      <arglist>(FileMonitorFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>FileMonitorFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga8af51d7b4e7b78d3f0153090674470aa</anchor>
      <arglist>(FileMonitorFlags &amp;lhs, FileMonitorFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileMonitorFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gae45bc889f678f9f87ff04596b0de7d1a</anchor>
      <arglist>(FileMonitorFlags &amp;lhs, FileMonitorFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileMonitorFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gaffa032f65b2c0270e12fe6bafa5c36bf</anchor>
      <arglist>(FileMonitorFlags &amp;lhs, FileMonitorFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileMeasureFlags</type>
      <name>operator|</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga881f9e3f716eea055f2436e00f817bcd</anchor>
      <arglist>(FileMeasureFlags lhs, FileMeasureFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileMeasureFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga62c11254603103531378a6c86f251519</anchor>
      <arglist>(FileMeasureFlags lhs, FileMeasureFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileMeasureFlags</type>
      <name>operator^</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga178b6b7a47d7191a834ba91ef45d8900</anchor>
      <arglist>(FileMeasureFlags lhs, FileMeasureFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileMeasureFlags</type>
      <name>operator~</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga73ba283b4941eb5ed0586c5de9e687af</anchor>
      <arglist>(FileMeasureFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>FileMeasureFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga8b334fb16e12f2fb292818af8f91430b</anchor>
      <arglist>(FileMeasureFlags &amp;lhs, FileMeasureFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileMeasureFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gad1b04b5b1c7c54552cd86d3ec144ec24</anchor>
      <arglist>(FileMeasureFlags &amp;lhs, FileMeasureFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileMeasureFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga1dd67b3e69f82f1ae7d29ae6a36a0571</anchor>
      <arglist>(FileMeasureFlags &amp;lhs, FileMeasureFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileAttributeInfoFlags</type>
      <name>operator|</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga3779f0623bf9380fb656028b9bc88323</anchor>
      <arglist>(FileAttributeInfoFlags lhs, FileAttributeInfoFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileAttributeInfoFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga31f3ea9c0f0f3b94b829cff51a483da3</anchor>
      <arglist>(FileAttributeInfoFlags lhs, FileAttributeInfoFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileAttributeInfoFlags</type>
      <name>operator^</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gade49ce26dfa73eb2eb9fc56534ac1319</anchor>
      <arglist>(FileAttributeInfoFlags lhs, FileAttributeInfoFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileAttributeInfoFlags</type>
      <name>operator~</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga9150f4358ab779fd1267151c4ee84a46</anchor>
      <arglist>(FileAttributeInfoFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>FileAttributeInfoFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gadebdfefd85c32a1b626bce9ae251138b</anchor>
      <arglist>(FileAttributeInfoFlags &amp;lhs, FileAttributeInfoFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileAttributeInfoFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga4d263feb91a513421902169e234bb8c3</anchor>
      <arglist>(FileAttributeInfoFlags &amp;lhs, FileAttributeInfoFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileAttributeInfoFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gaf8c86d142fcb81426bc429d51da4f7d9</anchor>
      <arglist>(FileAttributeInfoFlags &amp;lhs, FileAttributeInfoFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>IOStreamSpliceFlags</type>
      <name>operator|</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gadd33991052b8c7b6d70b6afd4c4b3850</anchor>
      <arglist>(IOStreamSpliceFlags lhs, IOStreamSpliceFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>IOStreamSpliceFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gac4e194f1ff1b6337b2001528aad67bc9</anchor>
      <arglist>(IOStreamSpliceFlags lhs, IOStreamSpliceFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>IOStreamSpliceFlags</type>
      <name>operator^</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga798437d9bba38467f6bf1eb02935f618</anchor>
      <arglist>(IOStreamSpliceFlags lhs, IOStreamSpliceFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>IOStreamSpliceFlags</type>
      <name>operator~</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga69033ae6dd34521e4951f4a5ca14dfff</anchor>
      <arglist>(IOStreamSpliceFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>IOStreamSpliceFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gadeb0ed62d112c12255260042ff0205dd</anchor>
      <arglist>(IOStreamSpliceFlags &amp;lhs, IOStreamSpliceFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>IOStreamSpliceFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gab782a172a6c7d8b540c720f86fd5ad44</anchor>
      <arglist>(IOStreamSpliceFlags &amp;lhs, IOStreamSpliceFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>IOStreamSpliceFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gad48e0449d3be29a9e01e27982d62fad6</anchor>
      <arglist>(IOStreamSpliceFlags &amp;lhs, IOStreamSpliceFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MountUnmountFlags</type>
      <name>operator|</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga42e2925c2e192eb3e9b71b727e676644</anchor>
      <arglist>(MountUnmountFlags lhs, MountUnmountFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MountUnmountFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga9ab823e8ba96b485774da1e93c7e576f</anchor>
      <arglist>(MountUnmountFlags lhs, MountUnmountFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MountUnmountFlags</type>
      <name>operator^</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga76909c76363248e860a94b20dad18ad9</anchor>
      <arglist>(MountUnmountFlags lhs, MountUnmountFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MountUnmountFlags</type>
      <name>operator~</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gace7018ee540582a709530dce1dd9191a</anchor>
      <arglist>(MountUnmountFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>MountUnmountFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga2d1ab6ef14833802a3615e54b8115aa8</anchor>
      <arglist>(MountUnmountFlags &amp;lhs, MountUnmountFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MountUnmountFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gae1e6af7ffa613a35d110daedd6671389</anchor>
      <arglist>(MountUnmountFlags &amp;lhs, MountUnmountFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MountUnmountFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga6a939c0dc5f5b25dbad5cdb7a1848184</anchor>
      <arglist>(MountUnmountFlags &amp;lhs, MountUnmountFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MountMountFlags</type>
      <name>operator|</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga1248f40d35ae4fb70d74c5df295cb4ae</anchor>
      <arglist>(MountMountFlags lhs, MountMountFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MountMountFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gaa459981a578b6e5ee443681687f9a777</anchor>
      <arglist>(MountMountFlags lhs, MountMountFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MountMountFlags</type>
      <name>operator^</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga02952bdc6c064b144e6667e326618c2d</anchor>
      <arglist>(MountMountFlags lhs, MountMountFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MountMountFlags</type>
      <name>operator~</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga74223d1de9c9db1c53429a6d23671d4f</anchor>
      <arglist>(MountMountFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>MountMountFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gaab40e5b0bc75d3308e8cb78606c4eb18</anchor>
      <arglist>(MountMountFlags &amp;lhs, MountMountFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MountMountFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga24a69ca68eff0e99a80c1c73f32c304e</anchor>
      <arglist>(MountMountFlags &amp;lhs, MountMountFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>MountMountFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gad941eb418369c3f95f0b5c046e7d868d</anchor>
      <arglist>(MountMountFlags &amp;lhs, MountMountFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AskPasswordFlags</type>
      <name>operator|</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gab444ed2fbe1877464f469a64d9107e36</anchor>
      <arglist>(AskPasswordFlags lhs, AskPasswordFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AskPasswordFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga8a45caccd402223c595e5a160f15f030</anchor>
      <arglist>(AskPasswordFlags lhs, AskPasswordFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AskPasswordFlags</type>
      <name>operator^</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gaf0b37f457e38844832549486982ed1d8</anchor>
      <arglist>(AskPasswordFlags lhs, AskPasswordFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AskPasswordFlags</type>
      <name>operator~</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga993dba04647b8f34ad72e86cbc88ba34</anchor>
      <arglist>(AskPasswordFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>AskPasswordFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga01e87fab2e1906ac5eafa153747ceae9</anchor>
      <arglist>(AskPasswordFlags &amp;lhs, AskPasswordFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AskPasswordFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga90dc37e16010e611eed712a21ee0a787</anchor>
      <arglist>(AskPasswordFlags &amp;lhs, AskPasswordFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AskPasswordFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga8e3411a2fa7d7f016953b5f84dbad4c1</anchor>
      <arglist>(AskPasswordFlags &amp;lhs, AskPasswordFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>OutputStreamSpliceFlags</type>
      <name>operator|</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gaef500d088ea9d123dc514f71c4c67b1d</anchor>
      <arglist>(OutputStreamSpliceFlags lhs, OutputStreamSpliceFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>OutputStreamSpliceFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga39f9583f05c94f16ce6228b52663e4e4</anchor>
      <arglist>(OutputStreamSpliceFlags lhs, OutputStreamSpliceFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>OutputStreamSpliceFlags</type>
      <name>operator^</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga14a79b6dee4f711a22b52bf259539e34</anchor>
      <arglist>(OutputStreamSpliceFlags lhs, OutputStreamSpliceFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>OutputStreamSpliceFlags</type>
      <name>operator~</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gafcded381df7535fe7c41bb8f8c21c169</anchor>
      <arglist>(OutputStreamSpliceFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>OutputStreamSpliceFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga5602d53794a62a9e823005e6f9aed428</anchor>
      <arglist>(OutputStreamSpliceFlags &amp;lhs, OutputStreamSpliceFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>OutputStreamSpliceFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gab363845e9d7769f38c78dc7cc55d9db6</anchor>
      <arglist>(OutputStreamSpliceFlags &amp;lhs, OutputStreamSpliceFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>OutputStreamSpliceFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga01f192f0f1b9f66047d603780c458e6e</anchor>
      <arglist>(OutputStreamSpliceFlags &amp;lhs, OutputStreamSpliceFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>hostname_to_ascii</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>a77e0b4b95d9ab0d2c2b21e79117ec77a</anchor>
      <arglist>(const Glib::ustring &amp;hostname)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>hostname_to_unicode</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>a80496bf6a136c6b3a4d995849d0665af</anchor>
      <arglist>(const Glib::ustring &amp;hostname)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hostname_is_non_ascii</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>a0d47bc4dc47f82a829ee5e00e13987f3</anchor>
      <arglist>(const Glib::ustring &amp;hostname)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hostname_is_ascii_encoded</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>a58e3cc92152717d75a9f5cf4d260815d</anchor>
      <arglist>(const Glib::ustring &amp;hostname)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hostname_is_ip_address</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>a19e270aea166c888515b97d0623f4309</anchor>
      <arglist>(const Glib::ustring &amp;hostname)</arglist>
    </member>
    <member kind="function">
      <type>ResourceFlags</type>
      <name>operator|</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga516e2a00d96b55f44b38f344f7e33958</anchor>
      <arglist>(ResourceFlags lhs, ResourceFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ResourceFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga3deb9d9718830ed98aad1c2a48d5df60</anchor>
      <arglist>(ResourceFlags lhs, ResourceFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ResourceFlags</type>
      <name>operator^</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gace4049bb40811eef3a5e999e2818b8a4</anchor>
      <arglist>(ResourceFlags lhs, ResourceFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ResourceFlags</type>
      <name>operator~</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gad9978d07f4e7b6d6c1bcf01bc61a76ec</anchor>
      <arglist>(ResourceFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>ResourceFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gaacd735992103524e700acf793263248c</anchor>
      <arglist>(ResourceFlags &amp;lhs, ResourceFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ResourceFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gafca5cba7e18e821dce42e6b01cac8029</anchor>
      <arglist>(ResourceFlags &amp;lhs, ResourceFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ResourceFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gaebb4dc4755df27ef3c41fc535e3e96cc</anchor>
      <arglist>(ResourceFlags &amp;lhs, ResourceFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ResourceLookupFlags</type>
      <name>operator|</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga20427c15169127d85de3e40bfccda3b9</anchor>
      <arglist>(ResourceLookupFlags lhs, ResourceLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ResourceLookupFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga2e625af896307dbe23d7b6da3ec63bb7</anchor>
      <arglist>(ResourceLookupFlags lhs, ResourceLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ResourceLookupFlags</type>
      <name>operator^</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gaa9ebf29ebadd80df263f088a1b90b583</anchor>
      <arglist>(ResourceLookupFlags lhs, ResourceLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ResourceLookupFlags</type>
      <name>operator~</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga217b7daa1dfa4753ae2d2d4b0afe5fcc</anchor>
      <arglist>(ResourceLookupFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>ResourceLookupFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gac1a4ea570928539b089d621205950fbf</anchor>
      <arglist>(ResourceLookupFlags &amp;lhs, ResourceLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ResourceLookupFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga1338fcc66553bad7f31589d5c2812d72</anchor>
      <arglist>(ResourceLookupFlags &amp;lhs, ResourceLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ResourceLookupFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gacb4f3bd6cedade144573c1722a028e4a</anchor>
      <arglist>(ResourceLookupFlags &amp;lhs, ResourceLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SettingsBindFlags</type>
      <name>operator|</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga8cd5ffb873f77345b515bf4ec2522ad7</anchor>
      <arglist>(SettingsBindFlags lhs, SettingsBindFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SettingsBindFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gaf9c3bdce8aa4209b368419a8a4f374a7</anchor>
      <arglist>(SettingsBindFlags lhs, SettingsBindFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SettingsBindFlags</type>
      <name>operator^</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gabe81d29f028b8bfb85c189c2471a290d</anchor>
      <arglist>(SettingsBindFlags lhs, SettingsBindFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SettingsBindFlags</type>
      <name>operator~</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga3faf22f64ae075a5465b7827001101d2</anchor>
      <arglist>(SettingsBindFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>SettingsBindFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga0299f50197606d69c0f306224760fcdb</anchor>
      <arglist>(SettingsBindFlags &amp;lhs, SettingsBindFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SettingsBindFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga93c66617507b97c4ce9d5e7b99bd0c04</anchor>
      <arglist>(SettingsBindFlags &amp;lhs, SettingsBindFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SettingsBindFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga3f4f0e3823c4d8ce3470b656913fb4e0</anchor>
      <arglist>(SettingsBindFlags &amp;lhs, SettingsBindFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SocketMsgFlags</type>
      <name>operator|</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gaa085ca077592487a87d8339ce3324166</anchor>
      <arglist>(SocketMsgFlags lhs, SocketMsgFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SocketMsgFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga7483601181aa5da2467e986408d0136a</anchor>
      <arglist>(SocketMsgFlags lhs, SocketMsgFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SocketMsgFlags</type>
      <name>operator^</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gaadfaf5e3a456218e23ca0ee13ac3db3d</anchor>
      <arglist>(SocketMsgFlags lhs, SocketMsgFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SocketMsgFlags</type>
      <name>operator~</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gaf31952f93c501b25194ad46df8994752</anchor>
      <arglist>(SocketMsgFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>SocketMsgFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga62b41279cd63908c0736e96f868e832e</anchor>
      <arglist>(SocketMsgFlags &amp;lhs, SocketMsgFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SocketMsgFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga43e4984d2489a21f44a4ab961bf98541</anchor>
      <arglist>(SocketMsgFlags &amp;lhs, SocketMsgFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SocketMsgFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gab892045d6e9cf73dc96593ead692145b</anchor>
      <arglist>(SocketMsgFlags &amp;lhs, SocketMsgFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TlsDatabaseVerifyFlags</type>
      <name>operator|</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga39e0d92d55656c2a2632f98636265306</anchor>
      <arglist>(TlsDatabaseVerifyFlags lhs, TlsDatabaseVerifyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TlsDatabaseVerifyFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga36f857562dfaa5bedb2f11bdcb713be2</anchor>
      <arglist>(TlsDatabaseVerifyFlags lhs, TlsDatabaseVerifyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TlsDatabaseVerifyFlags</type>
      <name>operator^</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga8368dd487149972f892a91422e9bd33b</anchor>
      <arglist>(TlsDatabaseVerifyFlags lhs, TlsDatabaseVerifyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TlsDatabaseVerifyFlags</type>
      <name>operator~</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gaf2f0b0b2463b3e547db1a4b85603bd36</anchor>
      <arglist>(TlsDatabaseVerifyFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>TlsDatabaseVerifyFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga23b4f358bf1da65d761823c0c14601a3</anchor>
      <arglist>(TlsDatabaseVerifyFlags &amp;lhs, TlsDatabaseVerifyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TlsDatabaseVerifyFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gad2d6cac92ff624db2f477f5563ebe73b</anchor>
      <arglist>(TlsDatabaseVerifyFlags &amp;lhs, TlsDatabaseVerifyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TlsDatabaseVerifyFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gacf39fa96fbecf1a1eb1c265794b79c03</anchor>
      <arglist>(TlsDatabaseVerifyFlags &amp;lhs, TlsDatabaseVerifyFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TlsDatabaseLookupFlags</type>
      <name>operator|</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga17032c82d6f99398b325773ecfbb8864</anchor>
      <arglist>(TlsDatabaseLookupFlags lhs, TlsDatabaseLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TlsDatabaseLookupFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga8801450685cbe42b72c590b4deaa0f47</anchor>
      <arglist>(TlsDatabaseLookupFlags lhs, TlsDatabaseLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TlsDatabaseLookupFlags</type>
      <name>operator^</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gaab103c2de8ca0e1abc5afb44a06ab7c7</anchor>
      <arglist>(TlsDatabaseLookupFlags lhs, TlsDatabaseLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TlsDatabaseLookupFlags</type>
      <name>operator~</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gae83d0705d3e1b6a1c1214802fd0413a7</anchor>
      <arglist>(TlsDatabaseLookupFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>TlsDatabaseLookupFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga70adec8becf6acbe4d1f3a7d32512647</anchor>
      <arglist>(TlsDatabaseLookupFlags &amp;lhs, TlsDatabaseLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TlsDatabaseLookupFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga4c1f3085e84fdd58ee013b45e624da10</anchor>
      <arglist>(TlsDatabaseLookupFlags &amp;lhs, TlsDatabaseLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TlsDatabaseLookupFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gad91ca8afd55f164582fc2182414a567d</anchor>
      <arglist>(TlsDatabaseLookupFlags &amp;lhs, TlsDatabaseLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TlsCertificateRequestFlags</type>
      <name>operator|</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gaf22bb92488cf1cd6097decfc5ccff4aa</anchor>
      <arglist>(TlsCertificateRequestFlags lhs, TlsCertificateRequestFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TlsCertificateRequestFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga546257d6ed4e6d44df743dab4b3f96c1</anchor>
      <arglist>(TlsCertificateRequestFlags lhs, TlsCertificateRequestFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TlsCertificateRequestFlags</type>
      <name>operator^</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gabf70e6fec894c648a62a8b3057601b90</anchor>
      <arglist>(TlsCertificateRequestFlags lhs, TlsCertificateRequestFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TlsCertificateRequestFlags</type>
      <name>operator~</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga9b6865e73e13095e7a4a57bbac28db74</anchor>
      <arglist>(TlsCertificateRequestFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>TlsCertificateRequestFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga25a044628996f41d7419dd2ea3631ca7</anchor>
      <arglist>(TlsCertificateRequestFlags &amp;lhs, TlsCertificateRequestFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TlsCertificateRequestFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga1c9aafd291a44e3c108bd01423297899</anchor>
      <arglist>(TlsCertificateRequestFlags &amp;lhs, TlsCertificateRequestFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TlsCertificateRequestFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gad07b2cce57653f7ed382f2fecaba5798</anchor>
      <arglist>(TlsCertificateRequestFlags &amp;lhs, TlsCertificateRequestFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TlsPasswordFlags</type>
      <name>operator|</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gafbbaf640a1d770dc0bd46380763952e8</anchor>
      <arglist>(TlsPasswordFlags lhs, TlsPasswordFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TlsPasswordFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga58b2a4408d61617ba6bf6322aec97b3f</anchor>
      <arglist>(TlsPasswordFlags lhs, TlsPasswordFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TlsPasswordFlags</type>
      <name>operator^</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga18b59057b4efe6dfb55345e198c2dd4a</anchor>
      <arglist>(TlsPasswordFlags lhs, TlsPasswordFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TlsPasswordFlags</type>
      <name>operator~</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga9c6566499acc6dbfb73ad14225ebaff4</anchor>
      <arglist>(TlsPasswordFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>TlsPasswordFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gab3d9e43f9d3f79660d3eba8402cc3c7d</anchor>
      <arglist>(TlsPasswordFlags &amp;lhs, TlsPasswordFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TlsPasswordFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga4b9578c71d74bf9ba422b1b906c766cf</anchor>
      <arglist>(TlsPasswordFlags &amp;lhs, TlsPasswordFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TlsPasswordFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>ga1bf68c82d083fab33b612fe7756b7d56</anchor>
      <arglist>(TlsPasswordFlags &amp;lhs, TlsPasswordFlags rhs)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>APP_INFO_CREATE_NONE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gae39c1e25f40a070e1720470758a55344add0a457b19825cca468ab82bfcb26792</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>APP_INFO_CREATE_NEEDS_TERMINAL</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gae39c1e25f40a070e1720470758a55344a856b6d31af6aa3b829c4f7d0c369cb36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>APP_INFO_CREATE_SUPPORTS_URIS</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gae39c1e25f40a070e1720470758a55344acdadd06006e617905058fe72b7d20a15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>APP_INFO_CREATE_SUPPORTS_STARTUP_NOTIFICATION</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gae39c1e25f40a070e1720470758a55344a019ac7f7975aa01cf9cce569d32cb305</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>APPLICATION_FLAGS_NONE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga493d914cf0a466cc9c6b18a44c5d345eac3648311d6c651b1ec142a9126dd9218</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>APPLICATION_IS_SERVICE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga493d914cf0a466cc9c6b18a44c5d345eacbfbbfcf23728f586b20198ec8c0ef65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>APPLICATION_IS_LAUNCHER</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga493d914cf0a466cc9c6b18a44c5d345ea80b9654d577ba14cac46a377803582f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>APPLICATION_HANDLES_OPEN</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga493d914cf0a466cc9c6b18a44c5d345ea48febe68e1b1d161e976fbe7438d6dfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>APPLICATION_HANDLES_COMMAND_LINE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga493d914cf0a466cc9c6b18a44c5d345ea571b3655b06b966f063c6934c716827a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>APPLICATION_SEND_ENVIRONMENT</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga493d914cf0a466cc9c6b18a44c5d345ea3d7a27c9565496e3e091054a5c43d3a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>APPLICATION_NON_UNIQUE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga493d914cf0a466cc9c6b18a44c5d345ea076d0a322fe529f2d3e34cab73036d2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>APPLICATION_CAN_OVERRIDE_APP_ID</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga493d914cf0a466cc9c6b18a44c5d345eae62ad4558f55afd1e1f72b5b055dcc86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>APPLICATION_ALLOW_REPLACEMENT</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga493d914cf0a466cc9c6b18a44c5d345eafbc8e23ba18cdd36ef4c4990e33af5c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>APPLICATION_REPLACE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga493d914cf0a466cc9c6b18a44c5d345ea7605a54156d6298e60102641e4497ac4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CONVERTER_ERROR</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gaa0a2aaee2c908b38261e17b4cb851b5fafe3299680b582332e478fb2687a2444e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CONVERTER_CONVERTED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gaa0a2aaee2c908b38261e17b4cb851b5fa90c651f8d195d6f831ac5129d37bfea5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CONVERTER_FINISHED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gaa0a2aaee2c908b38261e17b4cb851b5fa8b4c5ace43db5f6c59e93f2657c64a24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CONVERTER_FLUSHED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gaa0a2aaee2c908b38261e17b4cb851b5faf5796b84682a3a74758fc0ebbff8e78a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CONVERTER_NO_FLAGS</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gab07e5ab152ffbc542e6e5c007809f17cad789df2d3d8b69e3c3e769799ea2fd9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CONVERTER_INPUT_AT_END</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gab07e5ab152ffbc542e6e5c007809f17caf8ef1d62da6ff9d9f48354d086c4542b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CONVERTER_FLUSH</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gab07e5ab152ffbc542e6e5c007809f17ca09637822cb0ec186b2765b19e32ca75c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CREDENTIALS_TYPE_INVALID</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gae498b021f21459dc83201f010ddf8ddea29474824e47dc06cd31745084064b741</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CREDENTIALS_TYPE_LINUX_UCRED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gae498b021f21459dc83201f010ddf8ddea41895e1cf2bf9aa8f1913fee18f6f57a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CREDENTIALS_TYPE_FREEBSD_CMSGCRED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gae498b021f21459dc83201f010ddf8ddea87ae260e0bc318acd72444ee24be4563</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CREDENTIALS_TYPE_OPENBSD_SOCKPEERCRED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gae498b021f21459dc83201f010ddf8ddea6f27f270318a2033f69c7fa5f3289813</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CREDENTIALS_TYPE_SOLARIS_UCRED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gae498b021f21459dc83201f010ddf8ddea70852c7fca3b1ed74f6adf469115c523</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CREDENTIALS_TYPE_NETBSD_UNPCBID</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gae498b021f21459dc83201f010ddf8ddea478afdbc5ff761304d5876f51e8c6d0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CREDENTIALS_TYPE_APPLE_XUCRED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gae498b021f21459dc83201f010ddf8ddea8216fe6ab2b7764115ba34d4ad959374</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>DRIVE_START_NONE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gab628e70b1d028b3bc9b02b0d3b8acf2da9fe888bc06249b6238868b8fffa4c9cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>DRIVE_START_STOP_TYPE_UNKNOWN</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga148d2356238c5c8f809dcbd58341cc2dac0b4d7173528ab4d281f2946189225b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>DRIVE_START_STOP_TYPE_SHUTDOWN</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga148d2356238c5c8f809dcbd58341cc2dab2f2a704561293cdd46fc45149a698ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>DRIVE_START_STOP_TYPE_NETWORK</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga148d2356238c5c8f809dcbd58341cc2daf3635f16b2365d617603e90b9894be49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>DRIVE_START_STOP_TYPE_MULTIDISK</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga148d2356238c5c8f809dcbd58341cc2da76e4f6e59c0474cb0f73bd35f8ede533</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>DRIVE_START_STOP_TYPE_PASSWORD</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga148d2356238c5c8f809dcbd58341cc2daeed465a6f82c4446c9585d3a070af35f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>EMBLEM_ORIGIN_UNKNOWN</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga7f2c8f757fdeb91ca48c0bc8184f9270a91846b396a34f3df7fabff035440d684</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>EMBLEM_ORIGIN_DEVICE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga7f2c8f757fdeb91ca48c0bc8184f9270a03234829155a8c8df81621edefb0611f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>EMBLEM_ORIGIN_LIVEMETADATA</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga7f2c8f757fdeb91ca48c0bc8184f9270a162bb08277c29a9e2a4697ae2bbe1abc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>EMBLEM_ORIGIN_TAG</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga7f2c8f757fdeb91ca48c0bc8184f9270a19f1be7e988a13fb24aba702e3a053a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>DATA_STREAM_BYTE_ORDER_BIG_ENDIAN</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga87dea9b56fed9c0bca0f8426fb57781ea8b4902d3cb6f18ca9cd368b8592bc2d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>DATA_STREAM_BYTE_ORDER_LITTLE_ENDIAN</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga87dea9b56fed9c0bca0f8426fb57781eacfc71a021f044e01f47fc17414d614cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>DATA_STREAM_BYTE_ORDER_HOST_ENDIAN</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga87dea9b56fed9c0bca0f8426fb57781eadbbb7a6b49187d80effe2f86ece4df35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>DATA_STREAM_NEWLINE_TYPE_LF</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga2de111fe308aff763fb98a39bc507267a3436677feb41490a984ca7a2888703c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>DATA_STREAM_NEWLINE_TYPE_CR</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga2de111fe308aff763fb98a39bc507267a26f114922babde47f335da1db19edc0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>DATA_STREAM_NEWLINE_TYPE_CR_LF</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga2de111fe308aff763fb98a39bc507267a67902d64d395eaf7ffda260087c18258</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>DATA_STREAM_NEWLINE_TYPE_ANY</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga2de111fe308aff763fb98a39bc507267acb8fa2e7c3b4afceb6247a60e11b3a14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_FAILED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9ab0cc1f39ca02a434f5743fe048024234</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_NOT_FOUND</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a4ef5a9505bfc5dfc1ae9f9f3447d4e11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_EXISTS</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a4ceb1df9ce7cee68ae688d9b4928bd35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_IS_DIRECTORY</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a51c6cd44b213e6398f0832b2e4f0d9a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_NOT_DIRECTORY</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a59876b7a8237ec343ab802d3d8d3993c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_NOT_EMPTY</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a88ac8b2960da0db4b2ad1911421ce6a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_NOT_REGULAR_FILE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a26df8843300d90f513e9e3cedb6b7160</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_NOT_SYMBOLIC_LINK</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a1cae279c511fd3bfa2bd6c22f40afad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_NOT_MOUNTABLE_FILE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a61a760edac9e645617248da0dc4cb1b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_FILENAME_TOO_LONG</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a94e7643e3100aec970d860fc04cf2a4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_INVALID_FILENAME</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a169d1d04640be309d75f57daaaab967a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_TOO_MANY_LINKS</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9aab3cb365b675f525a57cb3aa59b19eb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_NO_SPACE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a74478cef936bb366faa61c4d3fbd2f35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_INVALID_ARGUMENT</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a133a98e6b98462e693e2cdb01d04dd45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_PERMISSION_DENIED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a175f98a99b2eedf9388b0b1a14337768</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_NOT_SUPPORTED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a8105194f1a5fcafb73fa0bb11a58ba37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_NOT_MOUNTED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a6077fb042b3fbf7919b07e32cc58a0c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_ALREADY_MOUNTED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a76f3bd66119828db7de127c2d0d9d404</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_CLOSED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a811449c2fc1320fdc9cc2699e95c28b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_CANCELLED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a34b177be2c03351bc7229368daeb6c7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_PENDING</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a59888e38aafea0a297cddda02b4d4c30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_READ_ONLY</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a94ce70939862a818366ce36d4073eea5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_CANT_CREATE_BACKUP</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a3d84f8d331584efdecd6509659469963</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_WRONG_ETAG</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a5e70c1d9cabf665b6644072e617fcd8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_TIMED_OUT</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a6afbb366cf6fadbcd3a0cc9bdda4d785</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_WOULD_RECURSE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a40e63426571446c6b8367e8723ff884b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_BUSY</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9af03051cf787ed29bfbfc3eef779f643c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_WOULD_BLOCK</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a33cedc0aa8ed9ed6fe2046dafa6be761</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_HOST_NOT_FOUND</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9af82cfefac7dcb8443eeb68e00655018c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_HOST_WAS_NOT_FOUND</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9ae0f97278ba9282b38b4de0a05bc5d02a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_WOULD_MERGE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a8fde4035c92a204ea5ced8fc0246b1c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_FAILED_HANDLED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9aedf009957a6447d72d7b57e322873241</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_TOO_MANY_OPEN_FILES</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a07c99219035cdedfb7e68912103c4809</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_NOT_INITIALIZED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a41dba331826e8286d2cd6b0597c66ed3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_ADDRESS_IN_USE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a52c950d317ba2bf030503348fbbe3507</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_PARTIAL_INPUT</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a499e88d84d7c74f16f05d590ad325939</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_INVALID_DATA</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9ac127dae51d242cf4e555698a304ab6e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_DBUS_ERROR</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a01732f06363333ccd3a92315c39997bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_HOST_UNREACHABLE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9abb38de071094e3719cff06eda169ad19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_NETWORK_UNREACHABLE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a10b76e3c96ac62ce1b391bd16aaddd34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_CONNECTION_REFUSED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a7ea93acf57628c52f0ec0bca88867a1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_PROXY_FAILED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a488eb73dbfcda6c9dfdce34506aad189</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_PROXY_AUTH_FAILED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a719d21f61636b4a2be41c57095d75a28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_PROXY_NEED_AUTH</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9af530560c8f757e469966e70937c2b84f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_PROXY_NOT_ALLOWED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a792abebe5a0f00a91b764195990f863d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_BROKEN_PIPE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a4a016f0cbd21e8208d0d48ce6882ad98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_CONNECTION_CLOSED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a5a5a8e19d31cc278f25dfecd7a838c96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_NOT_CONNECTED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a74feb15f7727640d014feecdd4f5ce9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERROR_MESSAGE_TOO_LARGE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0f8fdeead92e74b78d209cb3c3e9f0e9a62d62e6f664b90737381377af7d58747</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SOCKET_FAMILY_INVALID</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0ba69e14ad979bf9b2073ad122e38d48a6bed0d7385152034c574c30517146415</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SOCKET_FAMILY_UNIX</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0ba69e14ad979bf9b2073ad122e38d48a064bccdabdfea2abf2b51d0c75776c90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SOCKET_FAMILY_IPV4</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0ba69e14ad979bf9b2073ad122e38d48ad5c89514986f19d88128f5e6904a7954</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SOCKET_FAMILY_IPV6</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0ba69e14ad979bf9b2073ad122e38d48ada5d2619a60802d5623077908d7d9d9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TLS_AUTHENTICATION_NONE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga202fd408b6a0f198ae5aaf0f0c6a69b1a6f68cd7902a2ff811172ef8790c3b45f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TLS_AUTHENTICATION_REQUESTED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga202fd408b6a0f198ae5aaf0f0c6a69b1a7f674a9fdd9ada5fc3aa290be6daa714</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TLS_AUTHENTICATION_REQUIRED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga202fd408b6a0f198ae5aaf0f0c6a69b1af0e295a2f16be5c1964b35b8ed26d755</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TLS_CERTIFICATE_UNKNOWN_CA</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gac96df88bc70e763045de6aa47e87039aaa61070c1752cab0ed249d122ea6d1c82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TLS_CERTIFICATE_BAD_IDENTITY</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gac96df88bc70e763045de6aa47e87039aacab8c8dda0e2cec3f607d9a9ca1a42b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TLS_CERTIFICATE_NOT_ACTIVATED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gac96df88bc70e763045de6aa47e87039aa5254c1571dbe9837634767c357b7d8bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TLS_CERTIFICATE_EXPIRED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gac96df88bc70e763045de6aa47e87039aa4fac7824ceea67b46567d4c02758f0de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TLS_CERTIFICATE_REVOKED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gac96df88bc70e763045de6aa47e87039aaef5e648db292564cead690dc80454a5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TLS_CERTIFICATE_INSECURE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gac96df88bc70e763045de6aa47e87039aa2fe51d259ecb128d4905bb5e25d6c5c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TLS_CERTIFICATE_GENERIC_ERROR</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gac96df88bc70e763045de6aa47e87039aad6eeb967a5da3b6b700f9380816f4840</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TLS_CERTIFICATE_VALIDATE_ALL</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gac96df88bc70e763045de6aa47e87039aa5f708cb7a52ac87665c6fb824f9ae066</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_QUERY_INFO_NONE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga2cb7bdea61353f0999607785abd032c0a4e412b5c20ae24607975e36b1d2142c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_QUERY_INFO_NOFOLLOW_SYMLINKS</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga2cb7bdea61353f0999607785abd032c0a083d027fec770383a5747b6f5d555f80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_CREATE_NONE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga500a44e123fd4c578f8af9ddef2f7601a823486fdb9088ef7b93e208bc6b62e88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_CREATE_PRIVATE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga500a44e123fd4c578f8af9ddef2f7601a20a321bcbed7bc1ca7dcfdafbd71542d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_CREATE_REPLACE_DESTINATION</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga500a44e123fd4c578f8af9ddef2f7601ae08c57359cd652d3ce61f4e1509748f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_COPY_NONE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga08edc09a45449b136b27493647d4ecbea74324723d31670f9d554d43d4d21cba9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_COPY_OVERWRITE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga08edc09a45449b136b27493647d4ecbea2be9041c22de8fec379aee9fb358320b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_COPY_BACKUP</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga08edc09a45449b136b27493647d4ecbeadc037d686a7557c965dfa15491df35cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_COPY_NOFOLLOW_SYMLINKS</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga08edc09a45449b136b27493647d4ecbea32ab435654684ff92fa8f8175af13201</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_COPY_ALL_METADATA</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga08edc09a45449b136b27493647d4ecbea4e001ed252dd18fecaa44f1b759e1569</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_COPY_NO_FALLBACK_FOR_MOVE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga08edc09a45449b136b27493647d4ecbeada7bad8e87c41d3dc1754d534216536d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_COPY_TARGET_DEFAULT_PERMS</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga08edc09a45449b136b27493647d4ecbeaae94c977672250ae25bc12fc6fe2c112</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_MONITOR_NONE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga469f795e9a4dddb2421c0e5568be6649adedf14a2a5916e81bc91e6174b400290</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_MONITOR_WATCH_MOUNTS</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga469f795e9a4dddb2421c0e5568be6649a137fce52cf19a9e99778bc444a168e8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_MONITOR_SEND_MOVED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga469f795e9a4dddb2421c0e5568be6649a685c2e018318ca8b6b74d1ad42275644</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_MONITOR_WATCH_HARD_LINKS</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga469f795e9a4dddb2421c0e5568be6649a415c73cd16a4fb046d37b427a087aac9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_MONITOR_WATCH_MOVES</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga469f795e9a4dddb2421c0e5568be6649a08340eaa7f8de052ae3850c07b92ad39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_MEASURE_NONE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga3d27573e797e8e78e7b71705ad015ceda96dacae2624b3093efe929aed02cbca3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_MEASURE_REPORT_ANY_ERROR</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga3d27573e797e8e78e7b71705ad015ceda32288391e78d0e5cdb60043371e6bc67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_MEASURE_APPARENT_SIZE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga3d27573e797e8e78e7b71705ad015cedaa164ff3f2ce85af9ce27769f624e68a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_MEASURE_NO_XDEV</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga3d27573e797e8e78e7b71705ad015cedab724452e7293d1d0a823cabb170b691d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_ATTRIBUTE_TYPE_INVALID</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga5e79fa284e14b18d180741cd1c03d0e2a805ed50e0977f72475eeda88c0d7a7a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_ATTRIBUTE_TYPE_STRING</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga5e79fa284e14b18d180741cd1c03d0e2a2245a488ce026f086d5c675094eff3f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_ATTRIBUTE_TYPE_BYTE_STRING</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga5e79fa284e14b18d180741cd1c03d0e2a164db2121bfd5ff822bac6acbde33544</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_ATTRIBUTE_TYPE_BOOLEAN</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga5e79fa284e14b18d180741cd1c03d0e2a93319c8374a669b5e1129567418bde82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_ATTRIBUTE_TYPE_UINT32</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga5e79fa284e14b18d180741cd1c03d0e2aba6788fbe235ea29dea30b35257fbc68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_ATTRIBUTE_TYPE_INT32</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga5e79fa284e14b18d180741cd1c03d0e2a4dc9622fb7721f6c649cd84383a5d5c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_ATTRIBUTE_TYPE_UINT64</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga5e79fa284e14b18d180741cd1c03d0e2a0fa0752320fa928bc91377fd949dd2b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_ATTRIBUTE_TYPE_INT64</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga5e79fa284e14b18d180741cd1c03d0e2a2125480e07a560278057f1708b2f2786</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_ATTRIBUTE_TYPE_OBJECT</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga5e79fa284e14b18d180741cd1c03d0e2a62c78139dc3d8dcfd7d9a065f03d8dd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_ATTRIBUTE_TYPE_STRINGV</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga5e79fa284e14b18d180741cd1c03d0e2a099ea86783dc6107a1091288cde7ed8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_ATTRIBUTE_INFO_NONE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga8687b5c14230bb3e46a1df7341941f16a94fee536cd3b76cf646d218bbe79431f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_ATTRIBUTE_INFO_COPY_WITH_FILE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga8687b5c14230bb3e46a1df7341941f16a4d067fa34aaa26916a8e628a324fd0ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_ATTRIBUTE_INFO_COPY_WHEN_MOVED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga8687b5c14230bb3e46a1df7341941f16a7c592c7403a77c24938d2cf862f3d4f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_ATTRIBUTE_STATUS_UNSET</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gae926022c51a79fd117e4bfd100c25b29aa6ae1faab740fea51730ec8deb321357</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_ATTRIBUTE_STATUS_SET</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gae926022c51a79fd117e4bfd100c25b29a498cc49dddb48bc7b47c6a1436635e9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_ATTRIBUTE_STATUS_ERROR_SETTING</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gae926022c51a79fd117e4bfd100c25b29a33b51e197bf827abaaf840392ca490c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_TYPE_NOT_KNOWN</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga7dcba95023d74c47bba3fd0a07f8824cac25cd997f78ab9767b89832029ff7643</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_TYPE_REGULAR</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga7dcba95023d74c47bba3fd0a07f8824cabb375590e8c40cd86e52d5514ef6cecb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_TYPE_DIRECTORY</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga7dcba95023d74c47bba3fd0a07f8824ca92da3d5f23153beff0aca0df8306f205</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_TYPE_SYMBOLIC_LINK</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga7dcba95023d74c47bba3fd0a07f8824ca1c546c9a8d5b169bc9341f91a4043a76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_TYPE_SPECIAL</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga7dcba95023d74c47bba3fd0a07f8824caa018808e35cbe9662b5d4912839d92af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_TYPE_SHORTCUT</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga7dcba95023d74c47bba3fd0a07f8824ca945309db7d4a735df1b2f9aa0de8e9af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_TYPE_MOUNTABLE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga7dcba95023d74c47bba3fd0a07f8824ca22b432ea367e5862e5afc063fd6b77e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_MONITOR_EVENT_CHANGED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gabd42cf9877b5b6556bb18b7fd6b6dd81a5a51698573022af410cb775ab5f624a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_MONITOR_EVENT_CHANGES_DONE_HINT</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gabd42cf9877b5b6556bb18b7fd6b6dd81a92c379f4f5af44ae845743ac00356ae0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_MONITOR_EVENT_DELETED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gabd42cf9877b5b6556bb18b7fd6b6dd81ae5ad92f521597f62f841b2fa3f4ac5ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_MONITOR_EVENT_CREATED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gabd42cf9877b5b6556bb18b7fd6b6dd81ab930b855d1b6166425a50e2f0073e96d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_MONITOR_EVENT_ATTRIBUTE_CHANGED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gabd42cf9877b5b6556bb18b7fd6b6dd81a497566a966a85e8a3d605b1e0f2fe6df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_MONITOR_EVENT_PRE_UNMOUNT</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gabd42cf9877b5b6556bb18b7fd6b6dd81aa6b5259e0e4118e4278e7ba3b2a7b3a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_MONITOR_EVENT_UNMOUNTED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gabd42cf9877b5b6556bb18b7fd6b6dd81afc80802f75f9a2b28e0ac8865a1c6c3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_MONITOR_EVENT_MOVED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gabd42cf9877b5b6556bb18b7fd6b6dd81a476780dff2264f47c66d99e73d82902b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_MONITOR_EVENT_RENAMED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gabd42cf9877b5b6556bb18b7fd6b6dd81a03ad1d5e5109472390938c337dc75577</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_MONITOR_EVENT_MOVED_IN</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gabd42cf9877b5b6556bb18b7fd6b6dd81adfad74bbc20e2c6d17ef283212983ca3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_MONITOR_EVENT_MOVED_OUT</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gabd42cf9877b5b6556bb18b7fd6b6dd81a3279dd7033a88654f27cc04b933df22b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_STREAM_SPLICE_NONE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga753fc539949f2db7d1114d7ebd5b45b7a72d9ff1d41beeda3a353d288067c1a89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_STREAM_SPLICE_CLOSE_STREAM1</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga753fc539949f2db7d1114d7ebd5b45b7a24034382c40a690f81e569dc73bb8ca8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_STREAM_SPLICE_CLOSE_STREAM2</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga753fc539949f2db7d1114d7ebd5b45b7aa6bbcbd7487a11353206d37995150d50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_STREAM_SPLICE_WAIT_FOR_BOTH</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga753fc539949f2db7d1114d7ebd5b45b7a76dec5a78d423a9443f657ce2fac8c36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>MENU_ATTRIBUTE_ACTION</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gga7df84578d37eccbf86072c8fc85b217aa86f1a371d32e9fab99744d963e04f5bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>MENU_ATTRIBUTE_LABEL</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gga7df84578d37eccbf86072c8fc85b217aa4ae64afc7fe6c6660c51c6f486c040cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>MENU_ATTRIBUTE_TARGET</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gga7df84578d37eccbf86072c8fc85b217aa58117bdf3a42e57648845407823a3219</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>MENU_ATTRIBUTE_ACTION_NAMESPACE</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gga7df84578d37eccbf86072c8fc85b217aa3a344faaa07211505892b27486697bf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>MENU_ATTRIBUTE_ICON</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gga7df84578d37eccbf86072c8fc85b217aa3a42ac8f1a8492addd96c8c72ace1c2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>MENU_LINK_SECTION</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gga4febebe134c8e141020c6c253711e0d2aa6356ca52c0aeb0abea871c903fa2b70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>MENU_LINK_SUBMENU</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gga4febebe134c8e141020c6c253711e0d2a58cf137e0477ed185f5ff32ae84dcedc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>MOUNT_UNMOUNT_NONE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga9fa1b6a8eabf8f88e4cf6d611a4cff44a1599c4ebeb5c0c6e9c312a4b9e4231b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>MOUNT_UNMOUNT_FORCE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga9fa1b6a8eabf8f88e4cf6d611a4cff44a8a1875392ebf634f2d02625395df5207</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>MOUNT_MOUNT_NONE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga5484bace25c932fd4c7354259e138814a73c8f98eedd8a952ae25a55533dc145d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASK_PASSWORD_NEED_PASSWORD</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gac807da73d3b89a6dc16dad028244e6eca777e15d6610937851ef05608edb34d16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASK_PASSWORD_NEED_USERNAME</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gac807da73d3b89a6dc16dad028244e6eca01380b474c01152aeb2db5351adc14a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASK_PASSWORD_NEED_DOMAIN</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gac807da73d3b89a6dc16dad028244e6ecae283224523fe0a4c343984e1fd0e7a72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASK_PASSWORD_SAVING_SUPPORTED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gac807da73d3b89a6dc16dad028244e6eca4e5c4cd229b2d87c9fa505262e31a747</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASK_PASSWORD_ANONYMOUS_SUPPORTED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gac807da73d3b89a6dc16dad028244e6eca58484c40d21ac105c3af15f845ef55f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASK_PASSWORD_TCRYPT</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gac807da73d3b89a6dc16dad028244e6eca139c3b5f580973a864389e617a596135</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PASSWORD_SAVE_NEVER</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gafec517575c8f8d6f48433c86da52448faedf9056b0e9394620857b9b142b4ceb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PASSWORD_SAVE_FOR_SESSION</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gafec517575c8f8d6f48433c86da52448fa11147906f5de9af5313c3dc99223e4dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PASSWORD_SAVE_PERMANENTLY</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gafec517575c8f8d6f48433c86da52448fa3372ea635ae7fa7c23f2941211703bba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>MOUNT_OPERATION_HANDLED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gac479310f8df4ad5909d717caec261076aadc695f34c2910427dc53ceb41785ffb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>MOUNT_OPERATION_ABORTED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gac479310f8df4ad5909d717caec261076a88bb44b71d0d353785c6b60b42bb5e9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>MOUNT_OPERATION_UNHANDLED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gac479310f8df4ad5909d717caec261076a22c0d4477019d21864affc0e6739b51d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NETWORK_CONNECTIVITY_LOCAL</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga19329d33cc5bb273b36883742550acd6a2988c68726b7f02a22e319aa3bd2ede9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NETWORK_CONNECTIVITY_LIMITED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga19329d33cc5bb273b36883742550acd6a63aa0e6c77f73d0caa7fa46ef38b8815</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NETWORK_CONNECTIVITY_PORTAL</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga19329d33cc5bb273b36883742550acd6a3cb00b4090345f8538ff202c64c29cb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NETWORK_CONNECTIVITY_FULL</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga19329d33cc5bb273b36883742550acd6accb71a7cff4a7118470fb72839551873</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NOTIFICATION_PRIORITY_NORMAL</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga342e11d6fd463ede2d49d20cb584f1b4a540bdded59011a11fe23020237b9bc0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NOTIFICATION_PRIORITY_LOW</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga342e11d6fd463ede2d49d20cb584f1b4a0c7be3f42864b275ac740c46ff2f1946</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NOTIFICATION_PRIORITY_HIGH</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga342e11d6fd463ede2d49d20cb584f1b4ad7c266a72023d6a1d06f73c4db84dd20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NOTIFICATION_PRIORITY_URGENT</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga342e11d6fd463ede2d49d20cb584f1b4ac6e8d50dba1a2f9364fb10199c3d12ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OUTPUT_STREAM_SPLICE_NONE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga7c30d67e5f60d33fdcd3053123feea74a4a8d0f68799497978b5baaf64a453435</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OUTPUT_STREAM_SPLICE_CLOSE_SOURCE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga7c30d67e5f60d33fdcd3053123feea74abc66eea22d58051ebd68f30510264db5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OUTPUT_STREAM_SPLICE_CLOSE_TARGET</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga7c30d67e5f60d33fdcd3053123feea74a342a9302a3953a86a706a5d016df4fc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>RESOLVER_RECORD_SRV</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga7305dc7c78903a65491f3a505f55e966ac548d0dd4d1ca0dc44e0198026d97743</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>RESOLVER_RECORD_MX</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga7305dc7c78903a65491f3a505f55e966a659ee77f7a108769e0a5ed1bd8d623cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>RESOLVER_RECORD_TXT</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga7305dc7c78903a65491f3a505f55e966a88dfa057fc978cf1b44d97cc524b4fba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>RESOLVER_RECORD_SOA</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga7305dc7c78903a65491f3a505f55e966ac16f3405fc29e0a668b86d50c297242b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>RESOLVER_RECORD_NS</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga7305dc7c78903a65491f3a505f55e966ad1009cbb36502af096ebbbe783b7a6ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>RESOURCE_FLAGS_NONE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gab96db7e3e47eb9f35766a29b025790e0a42a249e1bb855320676e5256495339a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>RESOURCE_FLAGS_COMPRESSED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gab96db7e3e47eb9f35766a29b025790e0a30500369b14531c262d0afecbf9dd217</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>RESOURCE_LOOKUP_FLAGS_NONE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga834108a2d288186de3d9beea8925b9a8a107ee0f5b03ddf59931825aab1696256</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SETTINGS_BIND_DEFAULT</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gab41e4379084ff04d75104143d99ecf61a3ce16849b0de4e3ee431fdc4b9e22743</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SETTINGS_BIND_GET</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gab41e4379084ff04d75104143d99ecf61aa319946ecd163150075ef1ab0f19284c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SETTINGS_BIND_SET</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gab41e4379084ff04d75104143d99ecf61a80140cfe9c11b5cea3600728f9d82ede</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SETTINGS_BIND_NO_SENSITIVITY</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gab41e4379084ff04d75104143d99ecf61a4f626b2d4de6868c5a90cac6e1ce19f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SETTINGS_BIND_GET_NO_CHANGES</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gab41e4379084ff04d75104143d99ecf61ad9391f896ba987bdf6eb6c41e33b4f8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SETTINGS_BIND_INVERT_BOOLEAN</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gab41e4379084ff04d75104143d99ecf61a3ad9eea211350bc06670ff384d0e8268</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SOCKET_TYPE_INVALID</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga2302a45e052658e343729e0be2fd3310a49bd4b46e7905c9394731d0abadb2e02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SOCKET_TYPE_STREAM</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga2302a45e052658e343729e0be2fd3310afc55c511821dc58a492d7c474a1b1ea8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SOCKET_TYPE_DATAGRAM</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga2302a45e052658e343729e0be2fd3310ae1eef5b09f7187e72db09c0f7bfaf944</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SOCKET_TYPE_SEQPACKET</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga2302a45e052658e343729e0be2fd3310a1b81d801009c9471bbeb3aba2412b6a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SOCKET_PROTOCOL_UNKNOWN</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga4e8932017a600fffa5e8e6b5f6ea5b16ab3f91855912cd06d5ae3cdc79ce65a97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SOCKET_PROTOCOL_DEFAULT</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga4e8932017a600fffa5e8e6b5f6ea5b16a96f0a62cfb9d0121dff3b1cbb86588e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SOCKET_PROTOCOL_TCP</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga4e8932017a600fffa5e8e6b5f6ea5b16ad06eafdd4ba6c1989f0e79da060bd968</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SOCKET_PROTOCOL_UDP</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga4e8932017a600fffa5e8e6b5f6ea5b16a68e3a82b9749e8503d2121bcc8528102</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SOCKET_PROTOCOL_SCTP</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga4e8932017a600fffa5e8e6b5f6ea5b16a1f4d47329d9ef942f5d20247da0b4c6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SOCKET_MSG_NONE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga11f5e6b2ba2903428e93d947c82fa04ea566eba142e4067e3510eb479d177ffad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SOCKET_MSG_OOB</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga11f5e6b2ba2903428e93d947c82fa04ea1d7b6de8ed171562d9254f285f5a5993</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SOCKET_MSG_PEEK</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga11f5e6b2ba2903428e93d947c82fa04eab353a9d8f6a5efbd5c5b5f70b3310b25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SOCKET_MSG_DONTROUTE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga11f5e6b2ba2903428e93d947c82fa04ea4d60627f51602e0da0f517d544236be0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SOCKET_CLIENT_RESOLVING</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gaf8428cdf057aabdd8990b5e0a8021adcaf27ff2bb8aa4bfba7f530914302e6b68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SOCKET_CLIENT_RESOLVED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gaf8428cdf057aabdd8990b5e0a8021adcad20a5e4f48335b65d71dd81fbb4e45ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SOCKET_CLIENT_CONNECTING</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gaf8428cdf057aabdd8990b5e0a8021adcaab53be1516a7898addfa234505380c91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SOCKET_CLIENT_CONNECTED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gaf8428cdf057aabdd8990b5e0a8021adca272d5c7a7ff4f8cc2dfb3f35a70293ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SOCKET_CLIENT_PROXY_NEGOTIATING</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gaf8428cdf057aabdd8990b5e0a8021adcad78637c6c51ffe5f0ee87445241ee07a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SOCKET_CLIENT_PROXY_NEGOTIATED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gaf8428cdf057aabdd8990b5e0a8021adca88d3229819861b95e92db313a03178fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SOCKET_CLIENT_TLS_HANDSHAKING</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gaf8428cdf057aabdd8990b5e0a8021adca6a19a1c046f9c1a7a48c035c15f2e9ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SOCKET_CLIENT_TLS_HANDSHAKED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gaf8428cdf057aabdd8990b5e0a8021adca9b4da0f454f3921280a4b53d627e5509</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SOCKET_CLIENT_COMPLETE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gaf8428cdf057aabdd8990b5e0a8021adcae48a58af767d126bf0b857f01606274a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TLS_REHANDSHAKE_NEVER</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga9730680b829b7745e4f36c1540761f3fac8ff1b158382a7e0944ca22d36efa45d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TLS_REHANDSHAKE_SAFELY</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga9730680b829b7745e4f36c1540761f3faa634954ea0400e153992717d5cb26cdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TLS_REHANDSHAKE_UNSAFELY</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga9730680b829b7745e4f36c1540761f3fa2176f716b50ba1295c669015897f5a81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TLS_DATABASE_VERIFY_NONE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gaa46a3fc37c1e5566af625d7db3123a4bae878bdddf57ebe9c6763e09cbeb1d0db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TLS_DATABASE_LOOKUP_NONE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0de6ee7362d49df4f068b6214b93a076ab4bcee74e44c9e07b862aea638a6a702</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TLS_DATABASE_LOOKUP_KEYPAIR</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga0de6ee7362d49df4f068b6214b93a076a4a63bab7d12dc952756580064d71a0a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TLS_INTERACTION_UNHANDLED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga13ffba1819a4d780593c50266d7a9484a9124d1a05b6e51fcfb74d1c5dfe81444</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TLS_INTERACTION_HANDLED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga13ffba1819a4d780593c50266d7a9484ae073f3fa9246f1aaf14cca26b643c0bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TLS_INTERACTION_FAILED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga13ffba1819a4d780593c50266d7a9484a246a89fbc6dd9fa82f7fe072f20d6ed8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TLS_CERTIFICATE_REQUEST_NONE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gaab2a17acffc49fca7080e27fd1e61996a1a43c45f95ab7c4cd60f77d3a668579d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TLS_PASSWORD_NONE</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga8ac18330be9383471445ba62336a929aa974fc670e6e7a7a558552003dd192b00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TLS_PASSWORD_RETRY</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga8ac18330be9383471445ba62336a929aa13f226bbdab3f2abb89c5bdc6aabbbff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TLS_PASSWORD_MANY_TRIES</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga8ac18330be9383471445ba62336a929aae3b9f706b9a6b6d6c63dc9c1d2609911</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TLS_PASSWORD_FINAL_TRY</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>ga8ac18330be9383471445ba62336a929aa231f395c8c272846b106aee9690901eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ZLIB_COMPRESSOR_FORMAT_ZLIB</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gab247c6072c566753c8b9762f66e84c02ab635cfa0d0ddeafe35f7e3c8ad411e1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ZLIB_COMPRESSOR_FORMAT_GZIP</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gab247c6072c566753c8b9762f66e84c02a0c0304ef454aaf0d34a180241d3c604b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ZLIB_COMPRESSOR_FORMAT_RAW</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gab247c6072c566753c8b9762f66e84c02a97beae051e98c770a6185a3336390fda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNIX_SOCKET_ADDRESS_INVALID</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gaf842f4597d522154407164deb4906c2eaeefc2bdc5ec67828a46119a74c8e7143</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNIX_SOCKET_ADDRESS_ANONYMOUS</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gaf842f4597d522154407164deb4906c2ea93c2605ae77d14182f21150b0b399b95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNIX_SOCKET_ADDRESS_PATH</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gaf842f4597d522154407164deb4906c2eaa81d365fa4258138dd887b23768fd30d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNIX_SOCKET_ADDRESS_ABSTRACT</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gaf842f4597d522154407164deb4906c2eae50800b7fb801e830b3ead075c13d644</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNIX_SOCKET_ADDRESS_ABSTRACT_PADDED</name>
      <anchorfile>namespaceGio.html</anchorfile>
      <anchor>gaf842f4597d522154407164deb4906c2ea7deb4d7d3c78b7f9bd191b853ede3f88</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Glib</name>
    <filename>namespaceGlib.html</filename>
    <class kind="class">Glib::Value&lt; Glib::RefPtr&lt; Gtk::RecentInfo &gt; &gt;</class>
    <class kind="class">Glib::Value&lt; Glib::RefPtr&lt; Gtk::TargetList &gt; &gt;</class>
    <class kind="class">Glib::Value&lt;::Cairo::RefPtr&lt;::Cairo::Surface &gt; &gt;</class>
    <member kind="typedef">
      <type>ArrayHandle&lt; Glib::ustring &gt;</type>
      <name>StringArrayHandle</name>
      <anchorfile>group__ContHandles.html</anchorfile>
      <anchor>ga66b4a4b57f64be3fdc1972d8bf93723a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Glib::ArrayHandle&lt; Glib::ustring &gt;</type>
      <name>SArray</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a5be457e99a6774e61acfe8f7d20f12b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxy&lt; R &gt;</type>
      <name>SignalProxy0</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a155737cae7f7b06b2b7f2f63998bd4fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxy&lt; R, T1 &gt;</type>
      <name>SignalProxy1</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a51901f16f9c1b820b285a93919eff6d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxy&lt; R, T1, T2 &gt;</type>
      <name>SignalProxy2</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a2d7df8f788171725eb6667be8b0109ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxy&lt; R, T1, T2, T3 &gt;</type>
      <name>SignalProxy3</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>abe36304b876f34c10e2a3354611b8677</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxy&lt; R, T1, T2, T3, T4 &gt;</type>
      <name>SignalProxy4</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a02e24f53a767dfb69d0ef3ff6b26eb80</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxy&lt; R, T1, T2, T3, T4, T5 &gt;</type>
      <name>SignalProxy5</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a4881f09b5aec85e9eb038eb265f4503d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxy&lt; R, T1, T2, T3, T4, T5, T6 &gt;</type>
      <name>SignalProxy6</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a4573dbf960fcbed7f8dc332603031f2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxyDetailedAnyType&lt; R &gt;</type>
      <name>SignalProxyDetailed0</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>aae7c7e7367ead24e78181bda1bfb3744</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxyDetailedAnyType&lt; R, T1 &gt;</type>
      <name>SignalProxyDetailed1</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a54274aad465ea5f4a2467cfed8643d4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxyDetailedAnyType&lt; R, T1, T2 &gt;</type>
      <name>SignalProxyDetailed2</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a49dfa86dde89998bf1fb28a6718d78a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxyDetailedAnyType&lt; R, T1, T2, T3 &gt;</type>
      <name>SignalProxyDetailed3</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a7133f945344c7d8b66f470492c99203a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxyDetailedAnyType&lt; R, T1, T2, T3, T4 &gt;</type>
      <name>SignalProxyDetailed4</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ad147a64bf10558f8382b9b142f08ed3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxyDetailedAnyType&lt; R, T1, T2, T3, T4, T5 &gt;</type>
      <name>SignalProxyDetailed5</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ae0bb2b218bc899c7711458ab8a55b0e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxyDetailedAnyType&lt; R, T1, T2, T3, T4, T5, T6 &gt;</type>
      <name>SignalProxyDetailed6</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a6a647516fa7ce3e8d6c3cc1da497b8ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GTimeSpan</type>
      <name>TimeSpan</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a3f11fead09a7e393e8e6b345a1b7b1c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GPid</type>
      <name>Pid</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a78044275242a0c3535e3b7b860106c0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; void &gt;</type>
      <name>SlotSpawnChildSetup</name>
      <anchorfile>group__Spawn.html</anchorfile>
      <anchor>ga3bac87a2607d06097afbcd5ebae5d57a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ArrayHandle&lt; Glib::ustring &gt;</type>
      <name>StringArrayHandle</name>
      <anchorfile>group__ContHandles.html</anchorfile>
      <anchor>ga66b4a4b57f64be3fdc1972d8bf93723a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Glib::ArrayHandle&lt; Glib::ustring &gt;</type>
      <name>SArray</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a5be457e99a6774e61acfe8f7d20f12b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxy&lt; R &gt;</type>
      <name>SignalProxy0</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a155737cae7f7b06b2b7f2f63998bd4fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxy&lt; R, T1 &gt;</type>
      <name>SignalProxy1</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a51901f16f9c1b820b285a93919eff6d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxy&lt; R, T1, T2 &gt;</type>
      <name>SignalProxy2</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a2d7df8f788171725eb6667be8b0109ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxy&lt; R, T1, T2, T3 &gt;</type>
      <name>SignalProxy3</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>abe36304b876f34c10e2a3354611b8677</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxy&lt; R, T1, T2, T3, T4 &gt;</type>
      <name>SignalProxy4</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a02e24f53a767dfb69d0ef3ff6b26eb80</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxy&lt; R, T1, T2, T3, T4, T5 &gt;</type>
      <name>SignalProxy5</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a4881f09b5aec85e9eb038eb265f4503d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxy&lt; R, T1, T2, T3, T4, T5, T6 &gt;</type>
      <name>SignalProxy6</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a4573dbf960fcbed7f8dc332603031f2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxyDetailedAnyType&lt; R &gt;</type>
      <name>SignalProxyDetailed0</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>aae7c7e7367ead24e78181bda1bfb3744</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxyDetailedAnyType&lt; R, T1 &gt;</type>
      <name>SignalProxyDetailed1</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a54274aad465ea5f4a2467cfed8643d4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxyDetailedAnyType&lt; R, T1, T2 &gt;</type>
      <name>SignalProxyDetailed2</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a49dfa86dde89998bf1fb28a6718d78a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxyDetailedAnyType&lt; R, T1, T2, T3 &gt;</type>
      <name>SignalProxyDetailed3</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a7133f945344c7d8b66f470492c99203a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxyDetailedAnyType&lt; R, T1, T2, T3, T4 &gt;</type>
      <name>SignalProxyDetailed4</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ad147a64bf10558f8382b9b142f08ed3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxyDetailedAnyType&lt; R, T1, T2, T3, T4, T5 &gt;</type>
      <name>SignalProxyDetailed5</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ae0bb2b218bc899c7711458ab8a55b0e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxyDetailedAnyType&lt; R, T1, T2, T3, T4, T5, T6 &gt;</type>
      <name>SignalProxyDetailed6</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a6a647516fa7ce3e8d6c3cc1da497b8ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GTimeSpan</type>
      <name>TimeSpan</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a3f11fead09a7e393e8e6b345a1b7b1c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GPid</type>
      <name>Pid</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a78044275242a0c3535e3b7b860106c0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; void &gt;</type>
      <name>SlotSpawnChildSetup</name>
      <anchorfile>group__Spawn.html</anchorfile>
      <anchor>ga3bac87a2607d06097afbcd5ebae5d57a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ArrayHandle&lt; Glib::ustring &gt;</type>
      <name>StringArrayHandle</name>
      <anchorfile>group__ContHandles.html</anchorfile>
      <anchor>ga66b4a4b57f64be3fdc1972d8bf93723a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Glib::ArrayHandle&lt; Glib::ustring &gt;</type>
      <name>SArray</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a5be457e99a6774e61acfe8f7d20f12b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxy&lt; R &gt;</type>
      <name>SignalProxy0</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a155737cae7f7b06b2b7f2f63998bd4fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxy&lt; R, T1 &gt;</type>
      <name>SignalProxy1</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a51901f16f9c1b820b285a93919eff6d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxy&lt; R, T1, T2 &gt;</type>
      <name>SignalProxy2</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a2d7df8f788171725eb6667be8b0109ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxy&lt; R, T1, T2, T3 &gt;</type>
      <name>SignalProxy3</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>abe36304b876f34c10e2a3354611b8677</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxy&lt; R, T1, T2, T3, T4 &gt;</type>
      <name>SignalProxy4</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a02e24f53a767dfb69d0ef3ff6b26eb80</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxy&lt; R, T1, T2, T3, T4, T5 &gt;</type>
      <name>SignalProxy5</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a4881f09b5aec85e9eb038eb265f4503d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxy&lt; R, T1, T2, T3, T4, T5, T6 &gt;</type>
      <name>SignalProxy6</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a4573dbf960fcbed7f8dc332603031f2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxyDetailedAnyType&lt; R &gt;</type>
      <name>SignalProxyDetailed0</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>aae7c7e7367ead24e78181bda1bfb3744</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxyDetailedAnyType&lt; R, T1 &gt;</type>
      <name>SignalProxyDetailed1</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a54274aad465ea5f4a2467cfed8643d4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxyDetailedAnyType&lt; R, T1, T2 &gt;</type>
      <name>SignalProxyDetailed2</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a49dfa86dde89998bf1fb28a6718d78a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxyDetailedAnyType&lt; R, T1, T2, T3 &gt;</type>
      <name>SignalProxyDetailed3</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a7133f945344c7d8b66f470492c99203a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxyDetailedAnyType&lt; R, T1, T2, T3, T4 &gt;</type>
      <name>SignalProxyDetailed4</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ad147a64bf10558f8382b9b142f08ed3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxyDetailedAnyType&lt; R, T1, T2, T3, T4, T5 &gt;</type>
      <name>SignalProxyDetailed5</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ae0bb2b218bc899c7711458ab8a55b0e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SignalProxyDetailedAnyType&lt; R, T1, T2, T3, T4, T5, T6 &gt;</type>
      <name>SignalProxyDetailed6</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a6a647516fa7ce3e8d6c3cc1da497b8ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GTimeSpan</type>
      <name>TimeSpan</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a3f11fead09a7e393e8e6b345a1b7b1c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GPid</type>
      <name>Pid</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a78044275242a0c3535e3b7b860106c0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sigc::slot&lt; void &gt;</type>
      <name>SlotSpawnChildSetup</name>
      <anchorfile>group__Spawn.html</anchorfile>
      <anchor>ga3bac87a2607d06097afbcd5ebae5d57a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>OwnershipType</name>
      <anchorfile>group__ContHandles.html</anchorfile>
      <anchor>ga64c27560b41710ccf64a3679a3ba3f20</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BindingFlags</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga6af48352fc6ed053e5ebebfe02630a6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ParamFlags</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FileTest</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga33c24ccefbd130021f06708763e16ef2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SeekType</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gaa3767731311bdba4ef42dc99215e5cda</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IOStatus</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga23fb251e48485b62a9c2677bb1f87d5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IOFlags</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gaee093e5db5bc1ea5738771ba0d1af3b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IOCondition</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gabd96381793b70d4ae32c725926990918</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>KeyFileFlags</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga5866be36312563d91e5a7be27348459b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UserDirectory</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga1d1ca7293a7a06f1d34ef3e21440b819</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FormatSizeFlags</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga53f0c2b27f8ba1bca1e695397a75c673</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ModuleFlags</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga502283ffbe523adf38c69905ec8640f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TraverseType</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gae3a70fa1e451da068323419e8c98e9a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RegexCompileFlags</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RegexMatchFlags</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SpawnFlags</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga075918988c271e7fb63f1a1d083e26dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ThreadPriority</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga9b87dca6496b6ad53baec9ca01318448</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NotLock</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a2dd111336e3b057b51ca5871795fffa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TryLock</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a7441a36336ea4cdb35c0fddbf3f97b19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TimeType</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga56a2fdf6fb8599b99302868a176aac43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UnicodeType</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UnicodeBreakType</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AsciiType</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga2e5a690ed07dfaa6f9ad9f1c57acd787</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NormalizeMode</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga18199b64f406e397627a4e7fc799f848</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>OwnershipType</name>
      <anchorfile>group__ContHandles.html</anchorfile>
      <anchor>ga64c27560b41710ccf64a3679a3ba3f20</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BindingFlags</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga6af48352fc6ed053e5ebebfe02630a6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ParamFlags</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FileTest</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga33c24ccefbd130021f06708763e16ef2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SeekType</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gaa3767731311bdba4ef42dc99215e5cda</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IOStatus</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga23fb251e48485b62a9c2677bb1f87d5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IOFlags</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gaee093e5db5bc1ea5738771ba0d1af3b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IOCondition</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gabd96381793b70d4ae32c725926990918</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>KeyFileFlags</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga5866be36312563d91e5a7be27348459b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UserDirectory</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga1d1ca7293a7a06f1d34ef3e21440b819</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FormatSizeFlags</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga53f0c2b27f8ba1bca1e695397a75c673</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ModuleFlags</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga502283ffbe523adf38c69905ec8640f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TraverseType</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gae3a70fa1e451da068323419e8c98e9a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RegexCompileFlags</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RegexMatchFlags</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SpawnFlags</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga075918988c271e7fb63f1a1d083e26dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ThreadPriority</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga9b87dca6496b6ad53baec9ca01318448</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NotLock</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a2dd111336e3b057b51ca5871795fffa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TryLock</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a7441a36336ea4cdb35c0fddbf3f97b19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TimeType</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga56a2fdf6fb8599b99302868a176aac43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UnicodeType</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UnicodeBreakType</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AsciiType</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga2e5a690ed07dfaa6f9ad9f1c57acd787</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NormalizeMode</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga18199b64f406e397627a4e7fc799f848</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>OwnershipType</name>
      <anchorfile>group__ContHandles.html</anchorfile>
      <anchor>ga64c27560b41710ccf64a3679a3ba3f20</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BindingFlags</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga6af48352fc6ed053e5ebebfe02630a6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ParamFlags</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FileTest</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga33c24ccefbd130021f06708763e16ef2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SeekType</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gaa3767731311bdba4ef42dc99215e5cda</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IOStatus</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga23fb251e48485b62a9c2677bb1f87d5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IOFlags</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gaee093e5db5bc1ea5738771ba0d1af3b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IOCondition</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gabd96381793b70d4ae32c725926990918</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>KeyFileFlags</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga5866be36312563d91e5a7be27348459b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UserDirectory</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga1d1ca7293a7a06f1d34ef3e21440b819</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FormatSizeFlags</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga53f0c2b27f8ba1bca1e695397a75c673</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ModuleFlags</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga502283ffbe523adf38c69905ec8640f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TraverseType</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gae3a70fa1e451da068323419e8c98e9a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RegexCompileFlags</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RegexMatchFlags</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SpawnFlags</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga075918988c271e7fb63f1a1d083e26dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ThreadPriority</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga9b87dca6496b6ad53baec9ca01318448</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NotLock</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a2dd111336e3b057b51ca5871795fffa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TryLock</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a7441a36336ea4cdb35c0fddbf3f97b19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TimeType</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga56a2fdf6fb8599b99302868a176aac43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UnicodeType</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UnicodeBreakType</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AsciiType</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga2e5a690ed07dfaa6f9ad9f1c57acd787</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NormalizeMode</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga18199b64f406e397627a4e7fc799f848</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Sequence&lt; Iterator &gt;</type>
      <name>sequence</name>
      <anchorfile>group__ContHandles.html</anchorfile>
      <anchor>ga76f58aa143a15c1ba422846c3176fbdc</anchor>
      <arglist>(Iterator pbegin, Iterator pend)</arglist>
    </member>
    <member kind="function">
      <type>sigc::connection</type>
      <name>add_exception_handler</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a9a79a59cac511993cfea861bebd2f391</anchor>
      <arglist>(const sigc::slot&lt; void &gt; &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ac90aee10d0b90e3d8a96a86b5394f87b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RefPtr&lt; ObjectBase &gt;</type>
      <name>wrap_interface</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a75643fed688d354848a0379d3da00133</anchor>
      <arglist>(GObject *object, bool take_copy=false)</arglist>
    </member>
    <member kind="function">
      <type>SignalTimeout</type>
      <name>signal_timeout</name>
      <anchorfile>group__MainLoop.html</anchorfile>
      <anchor>gaadb206fcc112f086f9d47c016b1f2175</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SignalIdle</type>
      <name>signal_idle</name>
      <anchorfile>group__MainLoop.html</anchorfile>
      <anchor>ga76792522d9680a05e232d3519a25f98d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SignalIO</type>
      <name>signal_io</name>
      <anchorfile>group__MainLoop.html</anchorfile>
      <anchor>gaf391654b755a32169d18be4835677376</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SignalChildWatch</type>
      <name>signal_child_watch</name>
      <anchorfile>group__MainLoop.html</anchorfile>
      <anchor>ga11ee7db80cc44ece02056a38bb049e3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>str_has_prefix</name>
      <anchorfile>group__StringUtils.html</anchorfile>
      <anchor>ga6b7e8354049756e92a97554a107618ac</anchor>
      <arglist>(const std::string &amp;str, const std::string &amp;prefix)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>str_has_suffix</name>
      <anchorfile>group__StringUtils.html</anchorfile>
      <anchor>ga5c4e380ffc6617ac61ca92e203e45630</anchor>
      <arglist>(const std::string &amp;str, const std::string &amp;suffix)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>strescape</name>
      <anchorfile>group__StringUtils.html</anchorfile>
      <anchor>ga35e288b5ce34cb15eeec907421d2b77c</anchor>
      <arglist>(const std::string &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>strescape</name>
      <anchorfile>group__StringUtils.html</anchorfile>
      <anchor>gad24f3547c8d6b3ec56d7f5805a11d6ab</anchor>
      <arglist>(const std::string &amp;source, const std::string &amp;exceptions)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>strcompress</name>
      <anchorfile>group__StringUtils.html</anchorfile>
      <anchor>ga85cd83bd40baf0119aac3ff0a9a5e7b2</anchor>
      <arglist>(const std::string &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>strerror</name>
      <anchorfile>group__StringUtils.html</anchorfile>
      <anchor>ga1eb869894996c91c0f69dbff96714c71</anchor>
      <arglist>(int errnum)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>strsignal</name>
      <anchorfile>group__StringUtils.html</anchorfile>
      <anchor>ga44ce9f689aff8abe1e3073b209f360d3</anchor>
      <arglist>(int signum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>usleep</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a5d75264c8b47f13fb33f973b0d4fc73e</anchor>
      <arglist>(unsigned long microseconds)</arglist>
    </member>
    <member kind="function">
      <type>gunichar</type>
      <name>get_unichar_from_std_iterator</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a1053052aad41d0dcf51f36c345bf4625</anchor>
      <arglist>(std::string::const_iterator pos)</arglist>
    </member>
    <member kind="function">
      <type>T::BaseObjectType *</type>
      <name>unwrap</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a2f73967c03d89b0bd6f730f6c36f748d</anchor>
      <arglist>(T *ptr)</arglist>
    </member>
    <member kind="function">
      <type>const T::BaseObjectType *</type>
      <name>unwrap</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a9841353e0b6ffe28fd74abe40c4d005d</anchor>
      <arglist>(const T *ptr)</arglist>
    </member>
    <member kind="function">
      <type>T::BaseObjectType *</type>
      <name>unwrap</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ac72231155b9573af4b4d5e6ce6494620</anchor>
      <arglist>(const Glib::RefPtr&lt; T &gt; &amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type>const T::BaseObjectType *</type>
      <name>unwrap</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ad806817113ad836cdd8ef5e3913316ab</anchor>
      <arglist>(const Glib::RefPtr&lt; const T &gt; &amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type>T::BaseObjectType *</type>
      <name>unwrap_copy</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a4e505dac0cb5b57703424cb12fa5a84f</anchor>
      <arglist>(const T &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>T::BaseObjectType *</type>
      <name>unwrap_copy</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a10a4206b41c1c361c29750d76924a752</anchor>
      <arglist>(const Glib::RefPtr&lt; T &gt; &amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type>const T::BaseObjectType *</type>
      <name>unwrap_copy</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a2792c33cdf2e70d10e432c6cf0fcac76</anchor>
      <arglist>(const Glib::RefPtr&lt; const T &gt; &amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type>BindingFlags</type>
      <name>operator|</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga749e95d7cc7706529af4346d2cf93dbe</anchor>
      <arglist>(BindingFlags lhs, BindingFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BindingFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga3c657041e3f9755edcd90d0f0ca2352e</anchor>
      <arglist>(BindingFlags lhs, BindingFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BindingFlags</type>
      <name>operator^</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga0fc30bce2b354d907971c0bf0e4d2f2e</anchor>
      <arglist>(BindingFlags lhs, BindingFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BindingFlags</type>
      <name>operator~</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga67a0e7f1c6cc4b071674d8026d562dc4</anchor>
      <arglist>(BindingFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>BindingFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga780a6b8d58daa1d6167da8f1b715d372</anchor>
      <arglist>(BindingFlags &amp;lhs, BindingFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BindingFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga0ea6363e1a9dc48a70f451f2be87bc43</anchor>
      <arglist>(BindingFlags &amp;lhs, BindingFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>BindingFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gaa52d6f01bc09aaeab3dd1a8afa4e9b57</anchor>
      <arglist>(BindingFlags &amp;lhs, BindingFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_charset</name>
      <anchorfile>group__CharsetConv.html</anchorfile>
      <anchor>gabf5fac564c47a7a9ad6037044c3909f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get_charset</name>
      <anchorfile>group__CharsetConv.html</anchorfile>
      <anchor>ga88965337df48a173a6b013e8243e4631</anchor>
      <arglist>(std::string &amp;charset)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>convert</name>
      <anchorfile>group__CharsetConv.html</anchorfile>
      <anchor>ga58f7e4556c436a96c64b186bbc8f7f4c</anchor>
      <arglist>(const std::string &amp;str, const std::string &amp;to_codeset, const std::string &amp;from_codeset)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>convert_with_fallback</name>
      <anchorfile>group__CharsetConv.html</anchorfile>
      <anchor>ga40b5aa172fabd1f3dbf50a962d0d351f</anchor>
      <arglist>(const std::string &amp;str, const std::string &amp;to_codeset, const std::string &amp;from_codeset)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>convert_with_fallback</name>
      <anchorfile>group__CharsetConv.html</anchorfile>
      <anchor>gaf1b091e4397a7637e884148484b1f71e</anchor>
      <arglist>(const std::string &amp;str, const std::string &amp;to_codeset, const std::string &amp;from_codeset, const Glib::ustring &amp;fallback)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>locale_to_utf8</name>
      <anchorfile>group__CharsetConv.html</anchorfile>
      <anchor>ga4517b17f2aad4cd5c0e0640de212d928</anchor>
      <arglist>(const std::string &amp;opsys_string)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>locale_from_utf8</name>
      <anchorfile>group__CharsetConv.html</anchorfile>
      <anchor>gacc062729285890a7e9b22bece6fb987c</anchor>
      <arglist>(const Glib::ustring &amp;utf8_string)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>filename_to_utf8</name>
      <anchorfile>group__CharsetConv.html</anchorfile>
      <anchor>ga6cf95dc00505401594260a360d70c17b</anchor>
      <arglist>(const std::string &amp;opsys_string)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>filename_from_utf8</name>
      <anchorfile>group__CharsetConv.html</anchorfile>
      <anchor>ga2bd94064ad97b43324a7854b62f0835b</anchor>
      <arglist>(const Glib::ustring &amp;utf8_string)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>filename_from_uri</name>
      <anchorfile>group__CharsetConv.html</anchorfile>
      <anchor>gada23cd7f7dc8eb25e99b867a55551763</anchor>
      <arglist>(const Glib::ustring &amp;uri, Glib::ustring &amp;hostname)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>filename_from_uri</name>
      <anchorfile>group__CharsetConv.html</anchorfile>
      <anchor>gab1cb94f4a4a70bad06b715fb14a252d9</anchor>
      <arglist>(const Glib::ustring &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>filename_to_uri</name>
      <anchorfile>group__CharsetConv.html</anchorfile>
      <anchor>gae1b2f056bde3fbab578c602fe42e3de9</anchor>
      <arglist>(const std::string &amp;filename, const Glib::ustring &amp;hostname)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>filename_to_uri</name>
      <anchorfile>group__CharsetConv.html</anchorfile>
      <anchor>gaaf69aec83665229cc06596cf627d9d5a</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>filename_display_basename</name>
      <anchorfile>group__CharsetConv.html</anchorfile>
      <anchor>ga05dd67157ad35da4401263247b6f4d81</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>filename_display_name</name>
      <anchorfile>group__CharsetConv.html</anchorfile>
      <anchor>gabc1b404cc965f3da6beecddfe2623afc</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>ParamFlags</type>
      <name>operator|</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga64411a0c48e2c3ecbc40926275201071</anchor>
      <arglist>(ParamFlags lhs, ParamFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ParamFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga01328dbced7d009330fe01cf8334ae7f</anchor>
      <arglist>(ParamFlags lhs, ParamFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ParamFlags</type>
      <name>operator^</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga23118c9638ef338fb3cb06407099fb17</anchor>
      <arglist>(ParamFlags lhs, ParamFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ParamFlags</type>
      <name>operator~</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gaaea9028c5269446e3e892216fc7e9f09</anchor>
      <arglist>(ParamFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>ParamFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga4180c1b9f616ce95a2fdf066360796a5</anchor>
      <arglist>(ParamFlags &amp;lhs, ParamFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ParamFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gaad68b971795db0bf683a37b7962244dd</anchor>
      <arglist>(ParamFlags &amp;lhs, ParamFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ParamFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gaf07dad32ab115f4f1db890ed19d50220</anchor>
      <arglist>(ParamFlags &amp;lhs, ParamFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileTest</type>
      <name>operator|</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga8e018d8609ba17b0f6955505a8363bf7</anchor>
      <arglist>(FileTest lhs, FileTest rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileTest</type>
      <name>operator&amp;</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gae652f47e7b61603b9a6b86b7251d5526</anchor>
      <arglist>(FileTest lhs, FileTest rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileTest</type>
      <name>operator^</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga6c089f23d6bfd92e083edc75519db75e</anchor>
      <arglist>(FileTest lhs, FileTest rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileTest</type>
      <name>operator~</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga948edadd8ee7442b83d37dc3c325f890</anchor>
      <arglist>(FileTest flags)</arglist>
    </member>
    <member kind="function">
      <type>FileTest &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga9a6f5470f667596e897f5bfbd1068283</anchor>
      <arglist>(FileTest &amp;lhs, FileTest rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileTest &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga112ada474a7aad83af2bd49403abf41e</anchor>
      <arglist>(FileTest &amp;lhs, FileTest rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileTest &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga2219c78993a5196ca2a435a18e0fc3a7</anchor>
      <arglist>(FileTest &amp;lhs, FileTest rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>file_test</name>
      <anchorfile>group__FileUtils.html</anchorfile>
      <anchor>ga0b2fce78896a9a84f7ea3a5646cc7d36</anchor>
      <arglist>(const std::string &amp;filename, FileTest test)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>mkstemp</name>
      <anchorfile>group__FileUtils.html</anchorfile>
      <anchor>gae4c8d716bd109b6b8e1420a8c20b3507</anchor>
      <arglist>(std::string &amp;filename_template)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>file_open_tmp</name>
      <anchorfile>group__FileUtils.html</anchorfile>
      <anchor>gae91f239f1cf0123399374deed54fbf3a</anchor>
      <arglist>(std::string &amp;name_used, const std::string &amp;prefix)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>file_open_tmp</name>
      <anchorfile>group__FileUtils.html</anchorfile>
      <anchor>ga682379de4ea119540b4bdc1759e93e1d</anchor>
      <arglist>(std::string &amp;name_used)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>file_get_contents</name>
      <anchorfile>group__FileUtils.html</anchorfile>
      <anchor>ga835da54212fe78e833ac55b49150b989</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>file_set_contents</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a4c6c4cb2115f410b15f09634909b0b7c</anchor>
      <arglist>(const std::string &amp;filename, const gchar *contents, gssize length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>file_set_contents</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a3e51edee26822f97749f589138776850</anchor>
      <arglist>(const std::string &amp;filename, const std::string &amp;contents)</arglist>
    </member>
    <member kind="function">
      <type>IOFlags</type>
      <name>operator|</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga0dd0a8800b6311ee8f3867eb27a72ae5</anchor>
      <arglist>(IOFlags lhs, IOFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>IOFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga7662618e73d046d4df5eb7cce3e487f8</anchor>
      <arglist>(IOFlags lhs, IOFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>IOFlags</type>
      <name>operator^</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gad61c57b0678c703e8a14230d18bacff7</anchor>
      <arglist>(IOFlags lhs, IOFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>IOFlags</type>
      <name>operator~</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga548c1cb09208fef57e5d0b3c992d71b9</anchor>
      <arglist>(IOFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>IOFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gac3539f6df5e0c0658726f4f0573146f9</anchor>
      <arglist>(IOFlags &amp;lhs, IOFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>IOFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gae84d9361a6154e6b0e8d099705ad6cad</anchor>
      <arglist>(IOFlags &amp;lhs, IOFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>IOFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga2180a5c566ced37bbeb37050d9632da9</anchor>
      <arglist>(IOFlags &amp;lhs, IOFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>IOCondition</type>
      <name>operator|</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gab5937e9164f36f75ba87fd67903348d5</anchor>
      <arglist>(IOCondition lhs, IOCondition rhs)</arglist>
    </member>
    <member kind="function">
      <type>IOCondition</type>
      <name>operator&amp;</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga12928ddba0f38406f19d55547bac552b</anchor>
      <arglist>(IOCondition lhs, IOCondition rhs)</arglist>
    </member>
    <member kind="function">
      <type>IOCondition</type>
      <name>operator^</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga6416bbf923045261beb85241fff8ef0d</anchor>
      <arglist>(IOCondition lhs, IOCondition rhs)</arglist>
    </member>
    <member kind="function">
      <type>IOCondition</type>
      <name>operator~</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga85461947d24f306cefd2fe17999deb97</anchor>
      <arglist>(IOCondition flags)</arglist>
    </member>
    <member kind="function">
      <type>IOCondition &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga8269a01826f8737d98ab0d345a0004f4</anchor>
      <arglist>(IOCondition &amp;lhs, IOCondition rhs)</arglist>
    </member>
    <member kind="function">
      <type>IOCondition &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga11f46ad6051058eeeb34d5963a4f7c44</anchor>
      <arglist>(IOCondition &amp;lhs, IOCondition rhs)</arglist>
    </member>
    <member kind="function">
      <type>IOCondition &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga995d6d5d01db67af62661bcd5dfd1ad6</anchor>
      <arglist>(IOCondition &amp;lhs, IOCondition rhs)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; IOChannel &gt;</type>
      <name>wrap</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a671306f4a3a0cae5ab4d7a9d54886592</anchor>
      <arglist>(GIOChannel *gobject, bool take_copy=false)</arglist>
    </member>
    <member kind="function">
      <type>KeyFileFlags</type>
      <name>operator|</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gabac5e1493392116b118e4d1048e3fef0</anchor>
      <arglist>(KeyFileFlags lhs, KeyFileFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>KeyFileFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga1827ef58fe5e85d65ff8166e51b33556</anchor>
      <arglist>(KeyFileFlags lhs, KeyFileFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>KeyFileFlags</type>
      <name>operator^</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gacc28b21831114895abfdbae6c1908114</anchor>
      <arglist>(KeyFileFlags lhs, KeyFileFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>KeyFileFlags</type>
      <name>operator~</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gab99ff1d7c6d96da2ddfcfd1c4954e9b6</anchor>
      <arglist>(KeyFileFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>KeyFileFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga7096a34594825c90d7b6257935a62eb1</anchor>
      <arglist>(KeyFileFlags &amp;lhs, KeyFileFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>KeyFileFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga80dd56fcaea8bc3f0a5f21b9d3049877</anchor>
      <arglist>(KeyFileFlags &amp;lhs, KeyFileFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>KeyFileFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gac90869f74a743e2f99f55708c28a585d</anchor>
      <arglist>(KeyFileFlags &amp;lhs, KeyFileFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FormatSizeFlags</type>
      <name>operator|</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga55c3ed59e5e0f11fe51ae823c9ebd8c5</anchor>
      <arglist>(FormatSizeFlags lhs, FormatSizeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FormatSizeFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga53ee4c03a17351cf3eeee91ad0851084</anchor>
      <arglist>(FormatSizeFlags lhs, FormatSizeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FormatSizeFlags</type>
      <name>operator^</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gac1a95f6b60212d09d58f2d5f79c2ed55</anchor>
      <arglist>(FormatSizeFlags lhs, FormatSizeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FormatSizeFlags</type>
      <name>operator~</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga0ae9e277d1b96ba75f89aad2c449951a</anchor>
      <arglist>(FormatSizeFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>FormatSizeFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gad0242df3176de300921be12195b30066</anchor>
      <arglist>(FormatSizeFlags &amp;lhs, FormatSizeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FormatSizeFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gac415899f08f69fdc4517b5277d36fa62</anchor>
      <arglist>(FormatSizeFlags &amp;lhs, FormatSizeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FormatSizeFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga472fd7f4cc0a950e7b9ec14f0d89f060</anchor>
      <arglist>(FormatSizeFlags &amp;lhs, FormatSizeFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_application_name</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>ga9c2f67828083d74925b23c59ab868698</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_application_name</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>ga40e45835b7b461cba0f7a10fbb63c0d3</anchor>
      <arglist>(const Glib::ustring &amp;application_name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_prgname</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>ga391655dededb496010eee2e92d0f1fdf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_prgname</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>ga7d5c429822c09048892c4dee9c8e08c1</anchor>
      <arglist>(const std::string &amp;prgname)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getenv</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>ga5e186fdb08835342a5866b11fe787ebb</anchor>
      <arglist>(const std::string &amp;variable, bool &amp;found)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getenv</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>ga8e2c8f250aa7f059956737851ace08f6</anchor>
      <arglist>(const std::string &amp;variable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setenv</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>ga862657f21e5a930541d048a920204f59</anchor>
      <arglist>(const std::string &amp;variable, const std::string &amp;value, bool overwrite=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsetenv</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>ga6fb89001630714ec9ee5244cab56343e</anchor>
      <arglist>(const std::string &amp;variable)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ArrayHandle&lt; std::string &gt;</type>
      <name>listenv</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>ga350a5f6f1ae631f748c89d8dbe7557df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_user_name</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>ga52964bfd712e8c9e688f668da51f3ed9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_real_name</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>ga30692e3263e66868878f535e0b7c9722</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>get_host_name</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>ga277934ae26423bfc8041ff8f2477a7f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_home_dir</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>ga9412ea70c7fea058c03211dac318f8e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_tmp_dir</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>gac42272146fd9320958132f1591d28991</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_current_dir</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>ga06d93c95572d6a382b8cc4e09dd5a339</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_user_special_dir</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>gabc928a4e477df53f90e221a854cc73cb</anchor>
      <arglist>(GUserDirectory directory)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_user_special_dir</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>ga33289a74049470bc23a3859ba8b310c5</anchor>
      <arglist>(UserDirectory directory)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_user_data_dir</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>ga821b704b5ede1583e4057990976d394b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_user_config_dir</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>gae517b931f4753abcd48adb2769a8fc48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>get_system_data_dirs</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>ga3a957e23dc92b928045135d4a5c6aec9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>get_system_config_dirs</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>ga7ac473ccb6ff59400b62b9396d1b72bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_user_cache_dir</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>gaa68121f26e82df1c293c82b89c8998e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get_user_runtime_dir</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>ga446e4191b677211b7d37e703f2355330</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>path_is_absolute</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>gad82525f39f7408f97f2c096c4f721b3b</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>path_skip_root</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>ga306eee64abc3d28993895b826f4dd533</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>path_get_basename</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>ga20ebf2917a7fce5d1901568017b95a35</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>path_get_dirname</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>gae03457226c4239a74b83486739521434</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>canonicalize_filename</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>ga26f7544ac2a74eb1e3351a65b638f309</anchor>
      <arglist>(StdStringView filename, StdStringView relative_to=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>build_filename</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>gaa4a70bf050b3f318f87049ed30206a9a</anchor>
      <arglist>(const Glib::ArrayHandle&lt; std::string &gt; &amp;elements)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>build_filename</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>gaf5e106ab98c5978491b6d0d9e26f6f92</anchor>
      <arglist>(const String1 &amp;elem1, const String2 &amp;elem2, const Strings &amp;...strings)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>build_filename</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>gada06023cc39be3a44eb68e38d6cbea6c</anchor>
      <arglist>(const std::string &amp;elem1, const std::string &amp;elem2)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>build_filename</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>gaf2be471b98cb5d47c9a30c084f87d9a7</anchor>
      <arglist>(const std::string &amp;elem1, const std::string &amp;elem2, const std::string &amp;elem3)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>build_filename</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>gab342ab4856f3de7a5bc69a36773d7fb3</anchor>
      <arglist>(const std::string &amp;elem1, const std::string &amp;elem2, const std::string &amp;elem3, const std::string &amp;elem4)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>build_filename</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>ga95d2bc18e3b0974f909243aca9970476</anchor>
      <arglist>(const std::string &amp;elem1, const std::string &amp;elem2, const std::string &amp;elem3, const std::string &amp;elem4, const std::string &amp;elem5)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>build_filename</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>ga8b726f15e39f873bb0174d26d8a636a6</anchor>
      <arglist>(const std::string &amp;elem1, const std::string &amp;elem2, const std::string &amp;elem3, const std::string &amp;elem4, const std::string &amp;elem5, const std::string &amp;elem6)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>build_filename</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>gaea9f342e6f620944625d48194622cdc6</anchor>
      <arglist>(const std::string &amp;elem1, const std::string &amp;elem2, const std::string &amp;elem3, const std::string &amp;elem4, const std::string &amp;elem5, const std::string &amp;elem6, const std::string &amp;elem7)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>build_filename</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>ga4349eeddfaee3e22194bc511d1e92873</anchor>
      <arglist>(const std::string &amp;elem1, const std::string &amp;elem2, const std::string &amp;elem3, const std::string &amp;elem4, const std::string &amp;elem5, const std::string &amp;elem6, const std::string &amp;elem7, const std::string &amp;elem8)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>build_filename</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>gafb17c98037af155ff8c46499bfbc5d2d</anchor>
      <arglist>(const std::string &amp;elem1, const std::string &amp;elem2, const std::string &amp;elem3, const std::string &amp;elem4, const std::string &amp;elem5, const std::string &amp;elem6, const std::string &amp;elem7, const std::string &amp;elem8, const std::string &amp;elem9)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>build_path</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>ga6afc89d45cc34f3cfce4a55f3f5e7afa</anchor>
      <arglist>(const std::string &amp;separator, const Glib::ArrayHandle&lt; std::string &gt; &amp;elements)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>find_program_in_path</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>gaa4c4ecb9a3eb803ae6d9dee51e1e5b14</anchor>
      <arglist>(const std::string &amp;program)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ustring</type>
      <name>format_size</name>
      <anchorfile>group__MiscUtils.html</anchorfile>
      <anchor>ga496c472c5f7234a09924eb1d30b93f44</anchor>
      <arglist>(guint64 size, FormatSizeFlags flags=FORMAT_SIZE_DEFAULT)</arglist>
    </member>
    <member kind="function">
      <type>ModuleFlags</type>
      <name>operator|</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gade862759d091b90329ba8f85aa2fd010</anchor>
      <arglist>(ModuleFlags lhs, ModuleFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ModuleFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gaacd06c8457fa8f31c1483f96c4933ddf</anchor>
      <arglist>(ModuleFlags lhs, ModuleFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ModuleFlags</type>
      <name>operator^</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga333d93ef372c08c322d27ac05bda0e18</anchor>
      <arglist>(ModuleFlags lhs, ModuleFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ModuleFlags</type>
      <name>operator~</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gaaa723a5b4d33e54167f7adbb18746004</anchor>
      <arglist>(ModuleFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>ModuleFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gae9df767ea1ec74b0d9d9acce426a07a8</anchor>
      <arglist>(ModuleFlags &amp;lhs, ModuleFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ModuleFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gab903aa5397125ce37c66a259c4b1a5f5</anchor>
      <arglist>(ModuleFlags &amp;lhs, ModuleFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ModuleFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga8e73a634c6441630eddf8805b22dd163</anchor>
      <arglist>(ModuleFlags &amp;lhs, ModuleFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RegexCompileFlags</type>
      <name>operator|</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga5c44b3a4eee7eefbb1f2d1d8f22642ca</anchor>
      <arglist>(RegexCompileFlags lhs, RegexCompileFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RegexCompileFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga4ae748a01d312275d2ca4e15c5df5826</anchor>
      <arglist>(RegexCompileFlags lhs, RegexCompileFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RegexCompileFlags</type>
      <name>operator^</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga69068f48bbea92cdd3cc7d69fdc017e1</anchor>
      <arglist>(RegexCompileFlags lhs, RegexCompileFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RegexCompileFlags</type>
      <name>operator~</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gacb650222b1a3f6a44e72df95d815a7f8</anchor>
      <arglist>(RegexCompileFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>RegexCompileFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gae6fd65d5a674d2e2e453793d86fa64cd</anchor>
      <arglist>(RegexCompileFlags &amp;lhs, RegexCompileFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RegexCompileFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gaeefcf05c20e07dde23268b83a1ff1c45</anchor>
      <arglist>(RegexCompileFlags &amp;lhs, RegexCompileFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RegexCompileFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga1425051a4ffed939a1bff1e0543c9498</anchor>
      <arglist>(RegexCompileFlags &amp;lhs, RegexCompileFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RegexMatchFlags</type>
      <name>operator|</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gab63da3a959cbd5f00f4fa535e35eda08</anchor>
      <arglist>(RegexMatchFlags lhs, RegexMatchFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RegexMatchFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga29b80a6c4482fae8e19f9328ec0c3147</anchor>
      <arglist>(RegexMatchFlags lhs, RegexMatchFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RegexMatchFlags</type>
      <name>operator^</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga06c395f619dffca3f0fc483fab302122</anchor>
      <arglist>(RegexMatchFlags lhs, RegexMatchFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RegexMatchFlags</type>
      <name>operator~</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gaf192ce556cbd7ddb416e8078bdb09523</anchor>
      <arglist>(RegexMatchFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>RegexMatchFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga8f30deab298559a873d7beca40279ead</anchor>
      <arglist>(RegexMatchFlags &amp;lhs, RegexMatchFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RegexMatchFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga283a3e82cd9d3da8746edbe13a6f616a</anchor>
      <arglist>(RegexMatchFlags &amp;lhs, RegexMatchFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RegexMatchFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga402d81f594d95305aa6e275aa74126ae</anchor>
      <arglist>(RegexMatchFlags &amp;lhs, RegexMatchFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>Glib::ArrayHandle&lt; std::string &gt;</type>
      <name>shell_parse_argv</name>
      <anchorfile>group__ShellUtils.html</anchorfile>
      <anchor>gabc52fcb14cfc7a5ba37ca821cc837818</anchor>
      <arglist>(const std::string &amp;command_line)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>shell_quote</name>
      <anchorfile>group__ShellUtils.html</anchorfile>
      <anchor>ga55ebfb935f2131b2ae40d339568f568c</anchor>
      <arglist>(const std::string &amp;unquoted_string)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>shell_unquote</name>
      <anchorfile>group__ShellUtils.html</anchorfile>
      <anchor>ga449dc37c6ea7e7563740df86e31c263c</anchor>
      <arglist>(const std::string &amp;quoted_string)</arglist>
    </member>
    <member kind="function">
      <type>SpawnFlags</type>
      <name>operator|</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gaba6cac919da111ebf69667bf9f8006ff</anchor>
      <arglist>(SpawnFlags lhs, SpawnFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SpawnFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga2d10b36fdc1ceb9fea2ffcd58406f3e2</anchor>
      <arglist>(SpawnFlags lhs, SpawnFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SpawnFlags</type>
      <name>operator^</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga84449a9a461b381f88f65435ef8389ec</anchor>
      <arglist>(SpawnFlags lhs, SpawnFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SpawnFlags</type>
      <name>operator~</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga065f45ca68d1397febf331293e4cc4de</anchor>
      <arglist>(SpawnFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>SpawnFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gabbe289c910b34a158f8dc22bb0b0095f</anchor>
      <arglist>(SpawnFlags &amp;lhs, SpawnFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SpawnFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga93f15ab009ea244c1d8b069e27ec193f</anchor>
      <arglist>(SpawnFlags &amp;lhs, SpawnFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>SpawnFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga40166fcca8eb8ec5b148c82444553927</anchor>
      <arglist>(SpawnFlags &amp;lhs, SpawnFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>spawn_async_with_pipes</name>
      <anchorfile>group__Spawn.html</anchorfile>
      <anchor>ga68ea12be3693ed49e92312b63bef2d38</anchor>
      <arglist>(const std::string &amp;working_directory, const Glib::ArrayHandle&lt; std::string &gt; &amp;argv, const Glib::ArrayHandle&lt; std::string &gt; &amp;envp, SpawnFlags flags=SPAWN_DEFAULT, const SlotSpawnChildSetup &amp;child_setup=SlotSpawnChildSetup(), Pid *child_pid=nullptr, int *standard_input=nullptr, int *standard_output=nullptr, int *standard_error=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>spawn_async_with_pipes</name>
      <anchorfile>group__Spawn.html</anchorfile>
      <anchor>ga6d494f70dd5b914102c89083f7996486</anchor>
      <arglist>(const std::string &amp;working_directory, const Glib::ArrayHandle&lt; std::string &gt; &amp;argv, SpawnFlags flags=SPAWN_DEFAULT, const SlotSpawnChildSetup &amp;child_setup=SlotSpawnChildSetup(), Pid *child_pid=nullptr, int *standard_input=nullptr, int *standard_output=nullptr, int *standard_error=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>spawn_async</name>
      <anchorfile>group__Spawn.html</anchorfile>
      <anchor>gaa08d620227e82bccba437ecc541ef6fa</anchor>
      <arglist>(const std::string &amp;working_directory, const Glib::ArrayHandle&lt; std::string &gt; &amp;argv, const Glib::ArrayHandle&lt; std::string &gt; &amp;envp, SpawnFlags flags=SPAWN_DEFAULT, const SlotSpawnChildSetup &amp;child_setup=SlotSpawnChildSetup(), Pid *child_pid=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>spawn_async</name>
      <anchorfile>group__Spawn.html</anchorfile>
      <anchor>gab045450852e2a4dcbdecf0887d716aa6</anchor>
      <arglist>(const std::string &amp;working_directory, const Glib::ArrayHandle&lt; std::string &gt; &amp;argv, SpawnFlags flags=SPAWN_DEFAULT, const SlotSpawnChildSetup &amp;child_setup=SlotSpawnChildSetup(), Pid *child_pid=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>spawn_sync</name>
      <anchorfile>group__Spawn.html</anchorfile>
      <anchor>ga570555dc2fe25b548aaf528ac0127a1e</anchor>
      <arglist>(const std::string &amp;working_directory, const Glib::ArrayHandle&lt; std::string &gt; &amp;argv, const Glib::ArrayHandle&lt; std::string &gt; &amp;envp, SpawnFlags flags=SPAWN_DEFAULT, const SlotSpawnChildSetup &amp;child_setup=SlotSpawnChildSetup(), std::string *standard_output=nullptr, std::string *standard_error=nullptr, int *exit_status=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>spawn_sync</name>
      <anchorfile>group__Spawn.html</anchorfile>
      <anchor>ga44b768c4cd7158e32980fedbb7438a6d</anchor>
      <arglist>(const std::string &amp;working_directory, const Glib::ArrayHandle&lt; std::string &gt; &amp;argv, SpawnFlags flags=SPAWN_DEFAULT, const SlotSpawnChildSetup &amp;child_setup=SlotSpawnChildSetup(), std::string *standard_output=nullptr, std::string *standard_error=nullptr, int *exit_status=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>spawn_command_line_async</name>
      <anchorfile>group__Spawn.html</anchorfile>
      <anchor>ga648167a4af607f87763f1334fe5a472f</anchor>
      <arglist>(const std::string &amp;command_line)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>spawn_command_line_sync</name>
      <anchorfile>group__Spawn.html</anchorfile>
      <anchor>ga75961831b4dd3979bb8ab508ee3b3de7</anchor>
      <arglist>(const std::string &amp;command_line, std::string *standard_output=nullptr, std::string *standard_error=nullptr, int *exit_status=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>spawn_close_pid</name>
      <anchorfile>group__Spawn.html</anchorfile>
      <anchor>gaaea8f41c7a08af3b2919ce64fd0c27e5</anchor>
      <arglist>(Pid pid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>thread_init</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a8e983bffd7c8cdbbbe6038fc5e6fd3cf</anchor>
      <arglist>(GThreadFunctions *vtable=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>thread_supported</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ad59d126f6197035e6f6a31e7f4d87818</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AsciiType</type>
      <name>operator|</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga5bc1518eb5547dbb8af77b944ccaa048</anchor>
      <arglist>(AsciiType lhs, AsciiType rhs)</arglist>
    </member>
    <member kind="function">
      <type>AsciiType</type>
      <name>operator&amp;</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga4c340e00aeb13a9124081f383283eed0</anchor>
      <arglist>(AsciiType lhs, AsciiType rhs)</arglist>
    </member>
    <member kind="function">
      <type>AsciiType</type>
      <name>operator^</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga682a545ca2e86b3e162305e4f14fa8d5</anchor>
      <arglist>(AsciiType lhs, AsciiType rhs)</arglist>
    </member>
    <member kind="function">
      <type>AsciiType</type>
      <name>operator~</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gad7ea47582094c6d092a8f485e1e709c6</anchor>
      <arglist>(AsciiType flags)</arglist>
    </member>
    <member kind="function">
      <type>AsciiType &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga69bba23f4c9a83c268d0599f241b8ebe</anchor>
      <arglist>(AsciiType &amp;lhs, AsciiType rhs)</arglist>
    </member>
    <member kind="function">
      <type>AsciiType &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ga8f4b46bf548b21ef21a568ecc18a5871</anchor>
      <arglist>(AsciiType &amp;lhs, AsciiType rhs)</arglist>
    </member>
    <member kind="function">
      <type>AsciiType &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gac1b0239e539cf250333fe0adc04dbb41</anchor>
      <arglist>(AsciiType &amp;lhs, AsciiType rhs)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>uri_unescape_string</name>
      <anchorfile>group__UriUtils.html</anchorfile>
      <anchor>ga0c070cac984dc463fd60ccbdb4237e25</anchor>
      <arglist>(const std::string &amp;escaped_string, const std::string &amp;illegal_characters=std::string())</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>uri_parse_scheme</name>
      <anchorfile>group__UriUtils.html</anchorfile>
      <anchor>ga0cc4270d6796b2166964f08a5cb746b3</anchor>
      <arglist>(const std::string &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>uri_escape_string</name>
      <anchorfile>group__UriUtils.html</anchorfile>
      <anchor>gad902095ab5049111caa9207770b0a437</anchor>
      <arglist>(const std::string &amp;unescaped, const std::string &amp;reserved_chars_allowed=std::string(), bool allow_utf8=true)</arglist>
    </member>
    <member kind="function">
      <type>Variant&lt; Glib::ustring &gt;</type>
      <name>VariantBase::cast_dynamic&lt; Variant&lt; Glib::ustring &gt; &gt;</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a807ef11423a04d9f22d6d045fbaed27a</anchor>
      <arglist>(const VariantBase &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Variant&lt; std::string &gt;</type>
      <name>VariantBase::cast_dynamic&lt; Variant&lt; std::string &gt; &gt;</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>af44bc8b008e33a7ad5804c9a50226562</anchor>
      <arglist>(const VariantBase &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::Drive &gt;</type>
      <name>wrap</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a3c4b3f9afbb1f72fcd0db0fb9d96a23e</anchor>
      <arglist>(GDrive *object, bool take_copy)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::File &gt;</type>
      <name>wrap</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>aa536133405cc52c5887f4b87879e3bd6</anchor>
      <arglist>(GFile *object, bool take_copy)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::Mount &gt;</type>
      <name>wrap</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>aecec41aa86f5a57489c23f367593802c</anchor>
      <arglist>(GMount *object, bool take_copy)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; Gio::Volume &gt;</type>
      <name>wrap</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>aa4ad6dff9c5f095f3b45b6af8124c883</anchor>
      <arglist>(GVolume *object, bool take_copy)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OWNERSHIP_NONE</name>
      <anchorfile>group__ContHandles.html</anchorfile>
      <anchor>gga64c27560b41710ccf64a3679a3ba3f20a7d594cffcc2d2d6c4313ddb4d6613c79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OWNERSHIP_SHALLOW</name>
      <anchorfile>group__ContHandles.html</anchorfile>
      <anchor>gga64c27560b41710ccf64a3679a3ba3f20a448c598cdc37e2de8a162e1020001715</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OWNERSHIP_DEEP</name>
      <anchorfile>group__ContHandles.html</anchorfile>
      <anchor>gga64c27560b41710ccf64a3679a3ba3f20a2a6d6bfadc36f9eda31af79d32928c6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PRIORITY_HIGH</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a0c450f82b9e34689e2dda2038ba7834faa3219d7be6fa3282a80d7a850c401db9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PRIORITY_DEFAULT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a0c450f82b9e34689e2dda2038ba7834fa597ed3aa6067516c9c752896f3816b5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PRIORITY_HIGH_IDLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a0c450f82b9e34689e2dda2038ba7834faf2d20696a8afab425c00268d981e9897</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PRIORITY_DEFAULT_IDLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a0c450f82b9e34689e2dda2038ba7834fae8c1127af0a2dab71f196a957dab8375</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PRIORITY_LOW</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a0c450f82b9e34689e2dda2038ba7834fac6034649b50f9f92a69c1e67b92ecfc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>BINDING_DEFAULT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga6af48352fc6ed053e5ebebfe02630a6fa429c481acc1ddaca5c09e6d84f7dae29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>BINDING_BIDIRECTIONAL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga6af48352fc6ed053e5ebebfe02630a6fa0c2d9e60dc3177e8dd56f36e275b3327</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>BINDING_SYNC_CREATE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga6af48352fc6ed053e5ebebfe02630a6fac39d6aa495608453a377af413fb7e9b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>BINDING_INVERT_BOOLEAN</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga6af48352fc6ed053e5ebebfe02630a6faf5440a686da1abfc17d17cb1071f008c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_READABLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbca8e86b397b1d896933f70bf78427dbc79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_WRITABLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbcae586772dc00a2c781f504fdc4701846f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_READWRITE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbcad1554dc8f8eecab55f7c30e23ac391b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_CONSTRUCT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbcaa9e37000824a21f417101c94c37b2adb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_CONSTRUCT_ONLY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbcabc569cdee078f113f586999cd391f5d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_LAX_VALIDATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbca4c7e3a69c2d5e8e8419e912eb434e0e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_STATIC_NAME</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbcaea9c4dec23c8bbac14eaa8577e338551</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_PRIVATE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbcabc996f6a17c5aef47bcd8b0de7c2ea81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_STATIC_NICK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbca5994d69d3d72b93e77536b5a531bd142</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_STATIC_BLURB</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbca703a97fea00613c8ddbd4211c4ed24df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_EXPLICIT_NOTIFY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbca3dd3566586228c77257e6410386fa8c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_DEPRECATED</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbca586e2c999d0a2560e1804da0b36ab7ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_TEST_IS_REGULAR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga33c24ccefbd130021f06708763e16ef2ad7bb008269376841fe11c05da9c01a55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_TEST_IS_SYMLINK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga33c24ccefbd130021f06708763e16ef2ae9fcdfcc6fc6ee7bb83ce9634e5e9f18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_TEST_IS_DIR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga33c24ccefbd130021f06708763e16ef2ae4072d5338587b51642d1a68c730ec19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_TEST_IS_EXECUTABLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga33c24ccefbd130021f06708763e16ef2ae236ad1999c8c106a5ff31154ebd5692</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_TEST_EXISTS</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga33c24ccefbd130021f06708763e16ef2aa6cf22c3904f707c94f2ad911b5df6fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SEEK_TYPE_CUR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaa3767731311bdba4ef42dc99215e5cdaac0fc030f79f4b5623de9867333011e30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SEEK_TYPE_SET</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaa3767731311bdba4ef42dc99215e5cdaaa8e02688f42163a11bb8b47a72456bc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SEEK_TYPE_END</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaa3767731311bdba4ef42dc99215e5cdaa615f7b38be2cbd60fe5fbebd656f38bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_STATUS_ERROR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga23fb251e48485b62a9c2677bb1f87d5eabf1fa62d0111ab895ecb887ce6cce1c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_STATUS_NORMAL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga23fb251e48485b62a9c2677bb1f87d5eaf2008e64a9691fc76ad9320baef5c8ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_STATUS_EOF</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga23fb251e48485b62a9c2677bb1f87d5ea63be2a355cd7187f9ccdd854c80fd10c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_STATUS_AGAIN</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga23fb251e48485b62a9c2677bb1f87d5ead240a3a0fd203dd76e11b76a8115d881</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_FLAG_APPEND</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaee093e5db5bc1ea5738771ba0d1af3b7a0eddd66348cb8ec7aceef67736d59cce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_FLAG_NONBLOCK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaee093e5db5bc1ea5738771ba0d1af3b7a1a71350ea4fc4f9779a3a884f6977269</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_FLAG_IS_READABLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaee093e5db5bc1ea5738771ba0d1af3b7a45c527b36c1a1df9b5b1202f84eafeed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_FLAG_IS_WRITABLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaee093e5db5bc1ea5738771ba0d1af3b7a0632918f94e302c0b20e722e941ad124</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_FLAG_IS_WRITEABLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaee093e5db5bc1ea5738771ba0d1af3b7ac8bc4ce7e268189488cb98c94e15ce66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_FLAG_IS_SEEKABLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaee093e5db5bc1ea5738771ba0d1af3b7a65e5b54c7fad833478ed9cc169cc15be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_FLAG_MASK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaee093e5db5bc1ea5738771ba0d1af3b7a26bca9503544a0e4388041812e3ea1e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_FLAG_GET_MASK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaee093e5db5bc1ea5738771ba0d1af3b7a06c9ef83e6adc8a4b4ea98dd396e2206</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_FLAG_SET_MASK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaee093e5db5bc1ea5738771ba0d1af3b7a31bd353961673e2199474810e2ff3ff0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_IN</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gabd96381793b70d4ae32c725926990918aa38ee764d957d52ccd85688c27778daf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_OUT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gabd96381793b70d4ae32c725926990918a0945b81e85eb8d2d26e77fdc04821cae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_PRI</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gabd96381793b70d4ae32c725926990918ac8998d8c99453ea30c1ba129f89ec5a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gabd96381793b70d4ae32c725926990918a1798f7312c98ff12681ed93f1b08f0d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_HUP</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gabd96381793b70d4ae32c725926990918aa290fc1a996ead6c153515d4771fcdb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_NVAL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gabd96381793b70d4ae32c725926990918aadf52e698f361e79b53f0bcb3266df24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_FILE_NONE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga5866be36312563d91e5a7be27348459baec458bae700a8dfd34898a5ab5b22d3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_FILE_KEEP_COMMENTS</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga5866be36312563d91e5a7be27348459ba27ebf6c0c9a771f0268f7b06fe7e0347</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_FILE_KEEP_TRANSLATIONS</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga5866be36312563d91e5a7be27348459ba498ea5abdc02d9a60db9a0d2873f5c58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>USER_DIRECTORY_DESKTOP</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1d1ca7293a7a06f1d34ef3e21440b819a9bdde992722bfa20afe0533273f82bd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>USER_DIRECTORY_DOCUMENTS</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1d1ca7293a7a06f1d34ef3e21440b819a3550469cfb212ed889b1106750495040</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>USER_DIRECTORY_DOWNLOAD</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1d1ca7293a7a06f1d34ef3e21440b819aaf0c0361b86fd7c7e5cbf8015632bcd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>USER_DIRECTORY_MUSIC</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1d1ca7293a7a06f1d34ef3e21440b819a5b8e18721d39fbb45fbf965088170ca8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>USER_DIRECTORY_PICTURES</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1d1ca7293a7a06f1d34ef3e21440b819a2623f44d7b841e7f781098afc1716e07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>USER_DIRECTORY_PUBLIC_SHARE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1d1ca7293a7a06f1d34ef3e21440b819ad516c3546c3ff32fedf4a0722d143b9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>USER_DIRECTORY_TEMPLATES</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1d1ca7293a7a06f1d34ef3e21440b819ade29748ce1bc5d37e6662ea8d0c22f31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>USER_DIRECTORY_VIDEOS</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1d1ca7293a7a06f1d34ef3e21440b819acde3610b2eec032f93b54863521cd20a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>USER_N_DIRECTORIES</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1d1ca7293a7a06f1d34ef3e21440b819ae59fbe2f9e59f050f71638084be185b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FORMAT_SIZE_DEFAULT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga53f0c2b27f8ba1bca1e695397a75c673aaa2c16592d413276b5243a5b2f14c5af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FORMAT_SIZE_LONG_FORMAT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga53f0c2b27f8ba1bca1e695397a75c673a95ca15cbe9d4b5ea304e28bc5498ce67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FORMAT_SIZE_IEC_UNITS</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga53f0c2b27f8ba1bca1e695397a75c673abf93b9978954086005fa99da714ae788</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FORMAT_SIZE_BITS</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga53f0c2b27f8ba1bca1e695397a75c673abde05d3468dbf691f7e199b5b441ae62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>MODULE_BIND_LAZY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga502283ffbe523adf38c69905ec8640f3af7dfb341de1af451a3fc28d8c13e4593</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>MODULE_BIND_LOCAL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga502283ffbe523adf38c69905ec8640f3a61ed78ca3b7464b163e43240a4fffa96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>MODULE_BIND_MASK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga502283ffbe523adf38c69905ec8640f3ab1bb8b50aaab642b5abfcddac8d7806b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TRAVERSE_IN_ORDER</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ggae3a70fa1e451da068323419e8c98e9a9aa7f260b474a886df2bf1aefcfc0f14b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TRAVERSE_PRE_ORDER</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ggae3a70fa1e451da068323419e8c98e9a9abed8efe71581ccb087323f38b6807661</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TRAVERSE_POST_ORDER</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ggae3a70fa1e451da068323419e8c98e9a9a0af70e322b94dfbbfc98b100d21cef4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TRAVERSE_LEVEL_ORDER</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ggae3a70fa1e451da068323419e8c98e9a9a16cd819f4ab8175453f6287aeefad870</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_CASELESS</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da4e6c0b8e730db041fc8d1261c2932a7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MULTILINE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68dab11968f7c699f48954c586063dc83226</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_DOTALL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68daa30cd6e3af26544676c5c05578f3701f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_EXTENDED</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68dae4955dc52d3f93f46fa7b894689bb9dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_ANCHORED</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da242c71a1c506054daae47559a087885d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_DOLLAR_ENDONLY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da6a311ea6eb4cd26d46bef76a4ecd70d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_UNGREEDY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68dad3d43ecb091918275855d44bf137432c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_RAW</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da9aaaffdaa133f45d7412af35ad17b29e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_NO_AUTO_CAPTURE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da98b6d7f319fcee7ae0c1b9e8dc146869</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_OPTIMIZE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68daefe22a8d4297013ffcef77b83c40bf94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_FIRSTLINE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da4d72c42c744da757f5b4e8760933e355</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_DUPNAMES</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68dad96b981e024568febb07d7f237950a15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_NEWLINE_CR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da8743e2fb6fc70c8bbf53a025442a9f31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_NEWLINE_LF</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da18bf3b48001c90a1aefca35dd9bd832b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_NEWLINE_CRLF</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da31810ab9b1612d3dafbb86d164ea783c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_NEWLINE_ANYCRLF</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da6c4921ffcc04c53566d6bfe89fcf78b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_BSR_ANYCRLF</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da9fbe4801ca6fcae969a84c16826b9393</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_JAVASCRIPT_COMPAT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da7e66bb34557aafd6de8b6119c229d9c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_ANCHORED</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746a6d9730749c5506b89f3085ce25c80c21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_NOTBOL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746ae09a3a58b8d8e052a35719b4f22f937a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_NOTEOL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746ab8850a97e7a6b06b1a5c97e703be2a11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_NOTEMPTY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746a0aaf0a3c6a7fae74d4a1a6255062ae91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_PARTIAL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746ab8930fa357708487ef7a83350304dc2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_NEWLINE_CR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746ae0eb9716d96049f41f5560a215ea5dab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_NEWLINE_LF</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746a51549066ff64a814d44958ce9db5243b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_NEWLINE_CRLF</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746ad1536133fab0dd8e25c31c0c8555b365</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_NEWLINE_ANY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746acebebe55d6e1197e4a7e92a4fc4a999b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_NEWLINE_ANYCRLF</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746aa1a18562a24484f87f73115cb3a722c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_BSR_ANYCRLF</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746affaea7b025e947b22e7378bf0b6baf92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_BSR_ANY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746a824f70cd3d882d3717d67325b96a9b3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_PARTIAL_SOFT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746a69d773f5f7d17ef9b91bd43d545ae1c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_PARTIAL_HARD</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746a1d2d11e330bc91e85a50e01445288b3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_NOTEMPTY_ATSTART</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746aea0015d4a3887504f16321a0f960241f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SPAWN_DEFAULT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga075918988c271e7fb63f1a1d083e26dda4198b367b82bc1adf3469423da582663</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SPAWN_LEAVE_DESCRIPTORS_OPEN</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga075918988c271e7fb63f1a1d083e26dda3b30d87840df513617bd468c750e52c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SPAWN_DO_NOT_REAP_CHILD</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga075918988c271e7fb63f1a1d083e26dda8ba0abbaa6e1907446857439f454ced1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SPAWN_SEARCH_PATH</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga075918988c271e7fb63f1a1d083e26dda7d76ee852f6b00ffaef373f3d595139f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SPAWN_STDOUT_TO_DEV_NULL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga075918988c271e7fb63f1a1d083e26dda7a8c2616db1e6ef21f063652fd60872e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SPAWN_STDERR_TO_DEV_NULL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga075918988c271e7fb63f1a1d083e26dda198a2b8f3ce92dce5a1117d1c2dac345</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SPAWN_CHILD_INHERITS_STDIN</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga075918988c271e7fb63f1a1d083e26ddaeb1c843fc647e28134cd3e7fa259f285</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SPAWN_FILE_AND_ARGV_ZERO</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga075918988c271e7fb63f1a1d083e26ddaead6dad17dda98e0196495dd11d62cd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SPAWN_SEARCH_PATH_FROM_ENVP</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga075918988c271e7fb63f1a1d083e26dda876ee150dd220b4808c2f9ecab5dc0f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SPAWN_CLOEXEC_PIPES</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga075918988c271e7fb63f1a1d083e26ddace745e1ccff2497f03ea638316abe076</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>THREAD_PRIORITY_LOW</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga9b87dca6496b6ad53baec9ca01318448a035a7bdc6a5b5eae6f644ed2605e8a37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>THREAD_PRIORITY_NORMAL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga9b87dca6496b6ad53baec9ca01318448a6216bb25baaaca32642841ade911a92e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>THREAD_PRIORITY_HIGH</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga9b87dca6496b6ad53baec9ca01318448aef77081535e90116b203ce3b3b0fe523</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>THREAD_PRIORITY_URGENT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga9b87dca6496b6ad53baec9ca01318448a5b79355bbd59c508995af57e0ed39a94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NOT_LOCK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a2dd111336e3b057b51ca5871795fffa4a9681fb4e85e62ba64e39a12526eaa840</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TRY_LOCK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a7441a36336ea4cdb35c0fddbf3f97b19adf6b2565785992ff637cbc453988841d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TIME_TYPE_STANDARD</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga56a2fdf6fb8599b99302868a176aac43ae6b2b23e160971f7487d630c1fa8cf70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TIME_TYPE_DAYLIGHT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga56a2fdf6fb8599b99302868a176aac43a08bb0503339270dd7bf04c3406cf60c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TIME_TYPE_UNIVERSAL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga56a2fdf6fb8599b99302868a176aac43a88ad6264677876bc7203353a1cf45391</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_CONTROL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea600cfdae816c0d120e6e3e4a32d5d9cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_FORMAT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea5b522871761887006148af4734e84875</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_UNASSIGNED</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea6e8a7e7b5ce23cd99d30f4ab7b672efd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_PRIVATE_USE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea4d8e2c9e7eb9ab4352d6e4b6699267f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_SURROGATE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea69161af321691d504ec819bb9c19b808</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_LOWERCASE_LETTER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46eaab14707b2ffc2073a6d770ecd70ae321</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_MODIFIER_LETTER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea7bfc1c73f50fa8c69224e0df70b0b14b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_OTHER_LETTER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea146261fc855eb4e65cdfb86886bdedf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_TITLECASE_LETTER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea3f43a11337d15c6050fc1ef0e2da75b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_UPPERCASE_LETTER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea43db8de276cdf9f23e23a8661456ff4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_SPACING_MARK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46eac73f211f2caa9d82027985cb8b549cf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_ENCLOSING_MARK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea9a7db30781bd0d0a61374fd261944e07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_NON_SPACING_MARK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea09f4af19dd4a3d3d0f10369f8b8afda2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_DECIMAL_NUMBER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46eaf93e0b2714dcd443d48e246768a8da9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_LETTER_NUMBER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea09e6ab53938abe6c9c2d8981f137e5e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_OTHER_NUMBER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea05027699449d2ff55d446fa7572a8c5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_CONNECT_PUNCTUATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea32edc36db8c13121a39dc416b22f822a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_DASH_PUNCTUATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46eab3b75b13d04b7ef056e72f798dae0e3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_CLOSE_PUNCTUATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea0d4f41955bed4fddc7855ce714e1f957</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_FINAL_PUNCTUATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea90fff8c0bd976f3592629074fa3e801f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_INITIAL_PUNCTUATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46eace6196e830393b5497bfbfd6501680a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_OTHER_PUNCTUATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea1ded1d0a0b6e5936e8a3ecd123f66869</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_OPEN_PUNCTUATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea14677d2ca9b5a1354f7460de17579daa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_CURRENCY_SYMBOL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46eae75f8f34e79ffe86801984519eb40e6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_MODIFIER_SYMBOL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea3b6b351ca86d8095ada1d6a32e758d7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_MATH_SYMBOL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46eac35f3c4aa05eca14835c22a4c6a56acf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_OTHER_SYMBOL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea85c851b5804ed262ed84c2d5bc59aa1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_LINE_SEPARATOR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea2a65c1eb916c613c404eea150eac93ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_PARAGRAPH_SEPARATOR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46eac808b6d7ba1f9cbb28bc0a255578085b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_SPACE_SEPARATOR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46eabf9e349217923adfb3baef8135756118</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_MANDATORY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaaade2215e9c2207518154a283bebb5c3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_CARRIAGE_RETURN</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa48ba653f60f909e05dd9b650970ecc1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_LINE_FEED</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaab556cd8a4eaa5d766b3e49591ffae8b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_COMBINING_MARK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa3f8c62e980013b2e44027ef9c34ce5c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_SURROGATE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaaa47bd54d2aef8bd0e52c07e8abbb65f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_ZERO_WIDTH_SPACE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa37b49337ed4ecd7f53e7c9a2817d029f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_INSEPARABLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa9913f639ecf34dbe62f6610fc9c3da11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_NON_BREAKING_GLUE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaaab52faa88b6578ab4cd88c3095793653</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_CONTINGENT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa2cccec32194082ea6f93db40c4af1ca5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_SPACE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaac623ed7dc2c0cabe23c2d69f4572b7bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_AFTER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa9729f705eea307bb7ccb0283a3a85093</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_BEFORE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa32422806593a1aa950f533cf6eb394a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_BEFORE_AND_AFTER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa05fc37bc6f3efcf0dc74973fb967f7c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_HYPHEN</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa1074d431136b2b556b91e682eee4a189</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_NON_STARTER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaaeb0c44e9512fb806b9ce4991e9d50f5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_OPEN_PUNCTUATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaab7df43ac603e4d7b51d52d5a701e718e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_CLOSE_PUNCTUATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa80435e54ace548890b953c6395556c7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_QUOTATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaaf28d5b9cddeb8bb905fcfa829f436a2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_EXCLAMATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa4ab287f55e05833854353ae861b27f5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_IDEOGRAPHIC</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaabb30f05e59de03b80d55f021de4dd1ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_NUMERIC</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaaacc8824bbbaf262b7563f51afce9be15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_INFIX_SEPARATOR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaacf598d2b5eb2d0459d2339f2e8a9b237</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_SYMBOL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa1bd798c1ae867ef8879f01778ee37b1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_ALPHABETIC</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaaecf3f2bfd41dbab74e897106fef322c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_PREFIX</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa7e5a7d95bc74c01ca77bd3a3446ebae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_POSTFIX</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa4c4fd955be2dc60284b046f8f7fae397</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_COMPLEX_CONTEXT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaae0f8fcb8bfaaddb4f30edf642b2a6146</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_AMBIGUOUS</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa84ce090d6c8bf46abd148573bd0e3f78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_UNKNOWN</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaae393ca22fb6bd8b01c1012d4e3386a04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_NEXT_LINE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa28a02b08d3965c0ea0f6ff763a34beac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_WORD_JOINER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa968e329ae40754bed636979d27540fed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_HANGUL_L_JAMO</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaabfa27ce91eb258c1bd72131c857669d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_HANGUL_V_JAMO</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaaeaea498600767a8af3b41e92816faea8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_HANGUL_T_JAMO</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaaabefad2b773b963104e38fe77a03281c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_HANGUL_LV_SYLLABLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaaccb629a2a1bae689139c8f3cc1048b31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_HANGUL_LVT_SYLLABLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa8903e767aa9ab7445578257292d1a1e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_CLOSE_PARANTHESIS</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaabfb13fbf5e6898e8c038bd4ade5eaa4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_CONDITIONAL_JAPANESE_STARTER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa9ccab026be2a4042b441a16dc5c393ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_HEBREW_LETTER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaaaddbde75b0df1eee37443c5059884f19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_REGIONAL_INDICATOR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaadff1a8802de9de1cec52b82a9b26f515</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_EMOJI_BASE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa2c31b8c70e7d86a680e6fc5f81b92595</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_EMOJI_MODIFIER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa0d2fbd391a22f61e75f68e872bb8ada8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_ZERO_WIDTH_JOINER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa8e123422d888bcb53f913413fc7a5eed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASCII_ALNUM</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gga2e5a690ed07dfaa6f9ad9f1c57acd787af7d63a99479102b5391b44f631b5f009</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASCII_ALPHA</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gga2e5a690ed07dfaa6f9ad9f1c57acd787ac87947c729ac3c3f9f58b0ca28460152</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASCII_CNTRL</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gga2e5a690ed07dfaa6f9ad9f1c57acd787a2e19c57ce5a6eac38d911a86cc44a2fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASCII_DIGIT</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gga2e5a690ed07dfaa6f9ad9f1c57acd787a9acd9a82d0670a3eb0377db782f48853</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASCII_GRAPH</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gga2e5a690ed07dfaa6f9ad9f1c57acd787a2ecdbe5137af423fce73ff2bbb34d625</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASCII_LOWER</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gga2e5a690ed07dfaa6f9ad9f1c57acd787a875d3cb7494e1548db0d37ab44d4057e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASCII_PRINT</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gga2e5a690ed07dfaa6f9ad9f1c57acd787a9b1775043a8043d994c0c0ab890e86c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASCII_PUNCT</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gga2e5a690ed07dfaa6f9ad9f1c57acd787ad3416d8662560db626259013ff72c58f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASCII_SPACE</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gga2e5a690ed07dfaa6f9ad9f1c57acd787a7d7a68814efba3cf3d294475123413ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASCII_UPPER</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gga2e5a690ed07dfaa6f9ad9f1c57acd787a5ae30681069b2ab88eed13e358c08090</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASCII_XDIGIT</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gga2e5a690ed07dfaa6f9ad9f1c57acd787ad78490a35d65839f2f06449e7e472337</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NORMALIZE_DEFAULT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga18199b64f406e397627a4e7fc799f848a779b5d7aebd18e4b84c5e57ad1e72510</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NORMALIZE_NFD</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga18199b64f406e397627a4e7fc799f848a81e760fdac4c57b878ba43603ed6e9d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NORMALIZE_DEFAULT_COMPOSE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga18199b64f406e397627a4e7fc799f848af8fec61972c5f6ab8b7e600db176ed06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NORMALIZE_NFC</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga18199b64f406e397627a4e7fc799f848ae3887d6a5497fb144f48348af4d0c2f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NORMALIZE_ALL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga18199b64f406e397627a4e7fc799f848a112d77bcde45ec6eb2bf2ac29bb39697</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NORMALIZE_NFKD</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga18199b64f406e397627a4e7fc799f848a6dbd51b7381af7adf532faec482be46a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NORMALIZE_ALL_COMPOSE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga18199b64f406e397627a4e7fc799f848abfd1d0e2d16a6ba9ef9b0855124aeeb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NORMALIZE_NFKC</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga18199b64f406e397627a4e7fc799f848abf819c3bb24fbe163d47308cc4058640</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_BOOL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a0784d542e9b53c186bba6d96c131a1b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_BYTE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a315351b721918e130a75fa64e8f595ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_INT16</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a88fcc49187b1e775333edd0e31fe9503</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_UINT16</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a7e31fbcbbfdd63b923e5ba30157af2c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_INT32</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a1c7d03f6e8a214c0c9e8f93912900803</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_UINT32</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>aea985e724e3ea31a3a0ba801ab0d34ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_INT64</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a9fda1870c01b8514588eaf17c1f11700</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_UINT64</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a52cc2e5d30a3707d03503dfbafba0a82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_DOUBLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a1e01c96d6a7a33b47c0ce5d3678c3cc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_STRING</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a5234d463a42d95bf51ed31795aa214b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_OBJECT_PATH</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>acb229115cd457c6f4c46db53179bcf09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_SIGNATURE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a1ae362fd54a0dca4ff11dc91eb91e807</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_VARIANT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a423dc734d6f45d88da308c355e1daad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_HANDLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a42a8f15e75bbb853c29f82b226b8524d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_UNIT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a401be57899373ddc4ea3fa90dd082c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_ANY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>abb0b65abaef0c0f96b5dd53c2d41d50f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_BASIC</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>af3dd5a8ce4eea408f082ec37239f8594</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_MAYBE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>afa3c807de47227c78826fbd0c1ff1c59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_ARRAY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a44335d30ad2929ba1cb03f6b218f61f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_TUPLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ae4f961225712c4218460ed1a0d09e0bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_DICT_ENTRY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a2351713cde6ee899e9cd5dc6792424d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_DICTIONARY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a642324aa1ad05df695012086ea4a4ee2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_STRING_ARRAY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>aeba26de9c5d32fb0d5fd14a66279d930</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_OBJECT_PATH_ARRAY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>adfdadf7e0a33345e22924c238987272f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_BYTESTRING</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ad20daf2fe6fa1235624d4180e949ad5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_BYTESTRING_ARRAY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a046eff603c12c9414430468883cc609b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OWNERSHIP_NONE</name>
      <anchorfile>group__ContHandles.html</anchorfile>
      <anchor>gga64c27560b41710ccf64a3679a3ba3f20a7d594cffcc2d2d6c4313ddb4d6613c79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OWNERSHIP_SHALLOW</name>
      <anchorfile>group__ContHandles.html</anchorfile>
      <anchor>gga64c27560b41710ccf64a3679a3ba3f20a448c598cdc37e2de8a162e1020001715</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OWNERSHIP_DEEP</name>
      <anchorfile>group__ContHandles.html</anchorfile>
      <anchor>gga64c27560b41710ccf64a3679a3ba3f20a2a6d6bfadc36f9eda31af79d32928c6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PRIORITY_HIGH</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a0c450f82b9e34689e2dda2038ba7834faa3219d7be6fa3282a80d7a850c401db9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PRIORITY_DEFAULT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a0c450f82b9e34689e2dda2038ba7834fa597ed3aa6067516c9c752896f3816b5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PRIORITY_HIGH_IDLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a0c450f82b9e34689e2dda2038ba7834faf2d20696a8afab425c00268d981e9897</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PRIORITY_DEFAULT_IDLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a0c450f82b9e34689e2dda2038ba7834fae8c1127af0a2dab71f196a957dab8375</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PRIORITY_LOW</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a0c450f82b9e34689e2dda2038ba7834fac6034649b50f9f92a69c1e67b92ecfc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>BINDING_DEFAULT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga6af48352fc6ed053e5ebebfe02630a6fa429c481acc1ddaca5c09e6d84f7dae29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>BINDING_BIDIRECTIONAL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga6af48352fc6ed053e5ebebfe02630a6fa0c2d9e60dc3177e8dd56f36e275b3327</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>BINDING_SYNC_CREATE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga6af48352fc6ed053e5ebebfe02630a6fac39d6aa495608453a377af413fb7e9b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>BINDING_INVERT_BOOLEAN</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga6af48352fc6ed053e5ebebfe02630a6faf5440a686da1abfc17d17cb1071f008c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_READABLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbca8e86b397b1d896933f70bf78427dbc79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_WRITABLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbcae586772dc00a2c781f504fdc4701846f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_READWRITE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbcad1554dc8f8eecab55f7c30e23ac391b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_CONSTRUCT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbcaa9e37000824a21f417101c94c37b2adb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_CONSTRUCT_ONLY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbcabc569cdee078f113f586999cd391f5d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_LAX_VALIDATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbca4c7e3a69c2d5e8e8419e912eb434e0e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_STATIC_NAME</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbcaea9c4dec23c8bbac14eaa8577e338551</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_PRIVATE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbcabc996f6a17c5aef47bcd8b0de7c2ea81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_STATIC_NICK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbca5994d69d3d72b93e77536b5a531bd142</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_STATIC_BLURB</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbca703a97fea00613c8ddbd4211c4ed24df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_EXPLICIT_NOTIFY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbca3dd3566586228c77257e6410386fa8c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_DEPRECATED</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbca586e2c999d0a2560e1804da0b36ab7ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_TEST_IS_REGULAR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga33c24ccefbd130021f06708763e16ef2ad7bb008269376841fe11c05da9c01a55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_TEST_IS_SYMLINK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga33c24ccefbd130021f06708763e16ef2ae9fcdfcc6fc6ee7bb83ce9634e5e9f18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_TEST_IS_DIR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga33c24ccefbd130021f06708763e16ef2ae4072d5338587b51642d1a68c730ec19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_TEST_IS_EXECUTABLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga33c24ccefbd130021f06708763e16ef2ae236ad1999c8c106a5ff31154ebd5692</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_TEST_EXISTS</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga33c24ccefbd130021f06708763e16ef2aa6cf22c3904f707c94f2ad911b5df6fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SEEK_TYPE_CUR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaa3767731311bdba4ef42dc99215e5cdaac0fc030f79f4b5623de9867333011e30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SEEK_TYPE_SET</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaa3767731311bdba4ef42dc99215e5cdaaa8e02688f42163a11bb8b47a72456bc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SEEK_TYPE_END</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaa3767731311bdba4ef42dc99215e5cdaa615f7b38be2cbd60fe5fbebd656f38bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_STATUS_ERROR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga23fb251e48485b62a9c2677bb1f87d5eabf1fa62d0111ab895ecb887ce6cce1c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_STATUS_NORMAL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga23fb251e48485b62a9c2677bb1f87d5eaf2008e64a9691fc76ad9320baef5c8ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_STATUS_EOF</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga23fb251e48485b62a9c2677bb1f87d5ea63be2a355cd7187f9ccdd854c80fd10c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_STATUS_AGAIN</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga23fb251e48485b62a9c2677bb1f87d5ead240a3a0fd203dd76e11b76a8115d881</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_FLAG_APPEND</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaee093e5db5bc1ea5738771ba0d1af3b7a0eddd66348cb8ec7aceef67736d59cce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_FLAG_NONBLOCK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaee093e5db5bc1ea5738771ba0d1af3b7a1a71350ea4fc4f9779a3a884f6977269</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_FLAG_IS_READABLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaee093e5db5bc1ea5738771ba0d1af3b7a45c527b36c1a1df9b5b1202f84eafeed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_FLAG_IS_WRITABLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaee093e5db5bc1ea5738771ba0d1af3b7a0632918f94e302c0b20e722e941ad124</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_FLAG_IS_WRITEABLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaee093e5db5bc1ea5738771ba0d1af3b7ac8bc4ce7e268189488cb98c94e15ce66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_FLAG_IS_SEEKABLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaee093e5db5bc1ea5738771ba0d1af3b7a65e5b54c7fad833478ed9cc169cc15be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_FLAG_MASK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaee093e5db5bc1ea5738771ba0d1af3b7a26bca9503544a0e4388041812e3ea1e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_FLAG_GET_MASK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaee093e5db5bc1ea5738771ba0d1af3b7a06c9ef83e6adc8a4b4ea98dd396e2206</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_FLAG_SET_MASK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaee093e5db5bc1ea5738771ba0d1af3b7a31bd353961673e2199474810e2ff3ff0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_IN</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gabd96381793b70d4ae32c725926990918aa38ee764d957d52ccd85688c27778daf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_OUT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gabd96381793b70d4ae32c725926990918a0945b81e85eb8d2d26e77fdc04821cae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_PRI</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gabd96381793b70d4ae32c725926990918ac8998d8c99453ea30c1ba129f89ec5a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gabd96381793b70d4ae32c725926990918a1798f7312c98ff12681ed93f1b08f0d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_HUP</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gabd96381793b70d4ae32c725926990918aa290fc1a996ead6c153515d4771fcdb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_NVAL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gabd96381793b70d4ae32c725926990918aadf52e698f361e79b53f0bcb3266df24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_FILE_NONE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga5866be36312563d91e5a7be27348459baec458bae700a8dfd34898a5ab5b22d3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_FILE_KEEP_COMMENTS</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga5866be36312563d91e5a7be27348459ba27ebf6c0c9a771f0268f7b06fe7e0347</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_FILE_KEEP_TRANSLATIONS</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga5866be36312563d91e5a7be27348459ba498ea5abdc02d9a60db9a0d2873f5c58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>USER_DIRECTORY_DESKTOP</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1d1ca7293a7a06f1d34ef3e21440b819a9bdde992722bfa20afe0533273f82bd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>USER_DIRECTORY_DOCUMENTS</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1d1ca7293a7a06f1d34ef3e21440b819a3550469cfb212ed889b1106750495040</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>USER_DIRECTORY_DOWNLOAD</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1d1ca7293a7a06f1d34ef3e21440b819aaf0c0361b86fd7c7e5cbf8015632bcd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>USER_DIRECTORY_MUSIC</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1d1ca7293a7a06f1d34ef3e21440b819a5b8e18721d39fbb45fbf965088170ca8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>USER_DIRECTORY_PICTURES</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1d1ca7293a7a06f1d34ef3e21440b819a2623f44d7b841e7f781098afc1716e07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>USER_DIRECTORY_PUBLIC_SHARE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1d1ca7293a7a06f1d34ef3e21440b819ad516c3546c3ff32fedf4a0722d143b9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>USER_DIRECTORY_TEMPLATES</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1d1ca7293a7a06f1d34ef3e21440b819ade29748ce1bc5d37e6662ea8d0c22f31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>USER_DIRECTORY_VIDEOS</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1d1ca7293a7a06f1d34ef3e21440b819acde3610b2eec032f93b54863521cd20a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>USER_N_DIRECTORIES</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1d1ca7293a7a06f1d34ef3e21440b819ae59fbe2f9e59f050f71638084be185b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FORMAT_SIZE_DEFAULT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga53f0c2b27f8ba1bca1e695397a75c673aaa2c16592d413276b5243a5b2f14c5af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FORMAT_SIZE_LONG_FORMAT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga53f0c2b27f8ba1bca1e695397a75c673a95ca15cbe9d4b5ea304e28bc5498ce67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FORMAT_SIZE_IEC_UNITS</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga53f0c2b27f8ba1bca1e695397a75c673abf93b9978954086005fa99da714ae788</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FORMAT_SIZE_BITS</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga53f0c2b27f8ba1bca1e695397a75c673abde05d3468dbf691f7e199b5b441ae62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>MODULE_BIND_LAZY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga502283ffbe523adf38c69905ec8640f3af7dfb341de1af451a3fc28d8c13e4593</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>MODULE_BIND_LOCAL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga502283ffbe523adf38c69905ec8640f3a61ed78ca3b7464b163e43240a4fffa96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>MODULE_BIND_MASK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga502283ffbe523adf38c69905ec8640f3ab1bb8b50aaab642b5abfcddac8d7806b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TRAVERSE_IN_ORDER</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ggae3a70fa1e451da068323419e8c98e9a9aa7f260b474a886df2bf1aefcfc0f14b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TRAVERSE_PRE_ORDER</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ggae3a70fa1e451da068323419e8c98e9a9abed8efe71581ccb087323f38b6807661</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TRAVERSE_POST_ORDER</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ggae3a70fa1e451da068323419e8c98e9a9a0af70e322b94dfbbfc98b100d21cef4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TRAVERSE_LEVEL_ORDER</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ggae3a70fa1e451da068323419e8c98e9a9a16cd819f4ab8175453f6287aeefad870</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_CASELESS</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da4e6c0b8e730db041fc8d1261c2932a7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MULTILINE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68dab11968f7c699f48954c586063dc83226</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_DOTALL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68daa30cd6e3af26544676c5c05578f3701f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_EXTENDED</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68dae4955dc52d3f93f46fa7b894689bb9dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_ANCHORED</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da242c71a1c506054daae47559a087885d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_DOLLAR_ENDONLY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da6a311ea6eb4cd26d46bef76a4ecd70d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_UNGREEDY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68dad3d43ecb091918275855d44bf137432c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_RAW</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da9aaaffdaa133f45d7412af35ad17b29e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_NO_AUTO_CAPTURE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da98b6d7f319fcee7ae0c1b9e8dc146869</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_OPTIMIZE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68daefe22a8d4297013ffcef77b83c40bf94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_FIRSTLINE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da4d72c42c744da757f5b4e8760933e355</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_DUPNAMES</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68dad96b981e024568febb07d7f237950a15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_NEWLINE_CR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da8743e2fb6fc70c8bbf53a025442a9f31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_NEWLINE_LF</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da18bf3b48001c90a1aefca35dd9bd832b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_NEWLINE_CRLF</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da31810ab9b1612d3dafbb86d164ea783c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_NEWLINE_ANYCRLF</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da6c4921ffcc04c53566d6bfe89fcf78b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_BSR_ANYCRLF</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da9fbe4801ca6fcae969a84c16826b9393</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_JAVASCRIPT_COMPAT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da7e66bb34557aafd6de8b6119c229d9c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_ANCHORED</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746a6d9730749c5506b89f3085ce25c80c21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_NOTBOL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746ae09a3a58b8d8e052a35719b4f22f937a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_NOTEOL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746ab8850a97e7a6b06b1a5c97e703be2a11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_NOTEMPTY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746a0aaf0a3c6a7fae74d4a1a6255062ae91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_PARTIAL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746ab8930fa357708487ef7a83350304dc2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_NEWLINE_CR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746ae0eb9716d96049f41f5560a215ea5dab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_NEWLINE_LF</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746a51549066ff64a814d44958ce9db5243b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_NEWLINE_CRLF</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746ad1536133fab0dd8e25c31c0c8555b365</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_NEWLINE_ANY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746acebebe55d6e1197e4a7e92a4fc4a999b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_NEWLINE_ANYCRLF</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746aa1a18562a24484f87f73115cb3a722c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_BSR_ANYCRLF</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746affaea7b025e947b22e7378bf0b6baf92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_BSR_ANY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746a824f70cd3d882d3717d67325b96a9b3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_PARTIAL_SOFT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746a69d773f5f7d17ef9b91bd43d545ae1c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_PARTIAL_HARD</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746a1d2d11e330bc91e85a50e01445288b3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_NOTEMPTY_ATSTART</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746aea0015d4a3887504f16321a0f960241f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SPAWN_DEFAULT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga075918988c271e7fb63f1a1d083e26dda4198b367b82bc1adf3469423da582663</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SPAWN_LEAVE_DESCRIPTORS_OPEN</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga075918988c271e7fb63f1a1d083e26dda3b30d87840df513617bd468c750e52c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SPAWN_DO_NOT_REAP_CHILD</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga075918988c271e7fb63f1a1d083e26dda8ba0abbaa6e1907446857439f454ced1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SPAWN_SEARCH_PATH</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga075918988c271e7fb63f1a1d083e26dda7d76ee852f6b00ffaef373f3d595139f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SPAWN_STDOUT_TO_DEV_NULL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga075918988c271e7fb63f1a1d083e26dda7a8c2616db1e6ef21f063652fd60872e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SPAWN_STDERR_TO_DEV_NULL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga075918988c271e7fb63f1a1d083e26dda198a2b8f3ce92dce5a1117d1c2dac345</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SPAWN_CHILD_INHERITS_STDIN</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga075918988c271e7fb63f1a1d083e26ddaeb1c843fc647e28134cd3e7fa259f285</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SPAWN_FILE_AND_ARGV_ZERO</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga075918988c271e7fb63f1a1d083e26ddaead6dad17dda98e0196495dd11d62cd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SPAWN_SEARCH_PATH_FROM_ENVP</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga075918988c271e7fb63f1a1d083e26dda876ee150dd220b4808c2f9ecab5dc0f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SPAWN_CLOEXEC_PIPES</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga075918988c271e7fb63f1a1d083e26ddace745e1ccff2497f03ea638316abe076</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>THREAD_PRIORITY_LOW</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga9b87dca6496b6ad53baec9ca01318448a035a7bdc6a5b5eae6f644ed2605e8a37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>THREAD_PRIORITY_NORMAL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga9b87dca6496b6ad53baec9ca01318448a6216bb25baaaca32642841ade911a92e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>THREAD_PRIORITY_HIGH</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga9b87dca6496b6ad53baec9ca01318448aef77081535e90116b203ce3b3b0fe523</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>THREAD_PRIORITY_URGENT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga9b87dca6496b6ad53baec9ca01318448a5b79355bbd59c508995af57e0ed39a94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NOT_LOCK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a2dd111336e3b057b51ca5871795fffa4a9681fb4e85e62ba64e39a12526eaa840</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TRY_LOCK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a7441a36336ea4cdb35c0fddbf3f97b19adf6b2565785992ff637cbc453988841d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TIME_TYPE_STANDARD</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga56a2fdf6fb8599b99302868a176aac43ae6b2b23e160971f7487d630c1fa8cf70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TIME_TYPE_DAYLIGHT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga56a2fdf6fb8599b99302868a176aac43a08bb0503339270dd7bf04c3406cf60c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TIME_TYPE_UNIVERSAL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga56a2fdf6fb8599b99302868a176aac43a88ad6264677876bc7203353a1cf45391</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_CONTROL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea600cfdae816c0d120e6e3e4a32d5d9cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_FORMAT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea5b522871761887006148af4734e84875</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_UNASSIGNED</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea6e8a7e7b5ce23cd99d30f4ab7b672efd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_PRIVATE_USE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea4d8e2c9e7eb9ab4352d6e4b6699267f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_SURROGATE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea69161af321691d504ec819bb9c19b808</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_LOWERCASE_LETTER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46eaab14707b2ffc2073a6d770ecd70ae321</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_MODIFIER_LETTER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea7bfc1c73f50fa8c69224e0df70b0b14b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_OTHER_LETTER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea146261fc855eb4e65cdfb86886bdedf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_TITLECASE_LETTER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea3f43a11337d15c6050fc1ef0e2da75b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_UPPERCASE_LETTER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea43db8de276cdf9f23e23a8661456ff4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_SPACING_MARK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46eac73f211f2caa9d82027985cb8b549cf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_ENCLOSING_MARK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea9a7db30781bd0d0a61374fd261944e07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_NON_SPACING_MARK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea09f4af19dd4a3d3d0f10369f8b8afda2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_DECIMAL_NUMBER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46eaf93e0b2714dcd443d48e246768a8da9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_LETTER_NUMBER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea09e6ab53938abe6c9c2d8981f137e5e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_OTHER_NUMBER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea05027699449d2ff55d446fa7572a8c5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_CONNECT_PUNCTUATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea32edc36db8c13121a39dc416b22f822a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_DASH_PUNCTUATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46eab3b75b13d04b7ef056e72f798dae0e3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_CLOSE_PUNCTUATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea0d4f41955bed4fddc7855ce714e1f957</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_FINAL_PUNCTUATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea90fff8c0bd976f3592629074fa3e801f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_INITIAL_PUNCTUATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46eace6196e830393b5497bfbfd6501680a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_OTHER_PUNCTUATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea1ded1d0a0b6e5936e8a3ecd123f66869</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_OPEN_PUNCTUATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea14677d2ca9b5a1354f7460de17579daa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_CURRENCY_SYMBOL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46eae75f8f34e79ffe86801984519eb40e6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_MODIFIER_SYMBOL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea3b6b351ca86d8095ada1d6a32e758d7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_MATH_SYMBOL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46eac35f3c4aa05eca14835c22a4c6a56acf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_OTHER_SYMBOL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea85c851b5804ed262ed84c2d5bc59aa1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_LINE_SEPARATOR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea2a65c1eb916c613c404eea150eac93ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_PARAGRAPH_SEPARATOR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46eac808b6d7ba1f9cbb28bc0a255578085b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_SPACE_SEPARATOR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46eabf9e349217923adfb3baef8135756118</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_MANDATORY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaaade2215e9c2207518154a283bebb5c3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_CARRIAGE_RETURN</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa48ba653f60f909e05dd9b650970ecc1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_LINE_FEED</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaab556cd8a4eaa5d766b3e49591ffae8b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_COMBINING_MARK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa3f8c62e980013b2e44027ef9c34ce5c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_SURROGATE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaaa47bd54d2aef8bd0e52c07e8abbb65f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_ZERO_WIDTH_SPACE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa37b49337ed4ecd7f53e7c9a2817d029f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_INSEPARABLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa9913f639ecf34dbe62f6610fc9c3da11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_NON_BREAKING_GLUE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaaab52faa88b6578ab4cd88c3095793653</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_CONTINGENT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa2cccec32194082ea6f93db40c4af1ca5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_SPACE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaac623ed7dc2c0cabe23c2d69f4572b7bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_AFTER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa9729f705eea307bb7ccb0283a3a85093</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_BEFORE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa32422806593a1aa950f533cf6eb394a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_BEFORE_AND_AFTER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa05fc37bc6f3efcf0dc74973fb967f7c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_HYPHEN</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa1074d431136b2b556b91e682eee4a189</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_NON_STARTER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaaeb0c44e9512fb806b9ce4991e9d50f5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_OPEN_PUNCTUATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaab7df43ac603e4d7b51d52d5a701e718e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_CLOSE_PUNCTUATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa80435e54ace548890b953c6395556c7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_QUOTATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaaf28d5b9cddeb8bb905fcfa829f436a2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_EXCLAMATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa4ab287f55e05833854353ae861b27f5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_IDEOGRAPHIC</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaabb30f05e59de03b80d55f021de4dd1ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_NUMERIC</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaaacc8824bbbaf262b7563f51afce9be15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_INFIX_SEPARATOR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaacf598d2b5eb2d0459d2339f2e8a9b237</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_SYMBOL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa1bd798c1ae867ef8879f01778ee37b1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_ALPHABETIC</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaaecf3f2bfd41dbab74e897106fef322c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_PREFIX</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa7e5a7d95bc74c01ca77bd3a3446ebae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_POSTFIX</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa4c4fd955be2dc60284b046f8f7fae397</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_COMPLEX_CONTEXT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaae0f8fcb8bfaaddb4f30edf642b2a6146</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_AMBIGUOUS</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa84ce090d6c8bf46abd148573bd0e3f78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_UNKNOWN</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaae393ca22fb6bd8b01c1012d4e3386a04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_NEXT_LINE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa28a02b08d3965c0ea0f6ff763a34beac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_WORD_JOINER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa968e329ae40754bed636979d27540fed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_HANGUL_L_JAMO</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaabfa27ce91eb258c1bd72131c857669d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_HANGUL_V_JAMO</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaaeaea498600767a8af3b41e92816faea8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_HANGUL_T_JAMO</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaaabefad2b773b963104e38fe77a03281c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_HANGUL_LV_SYLLABLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaaccb629a2a1bae689139c8f3cc1048b31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_HANGUL_LVT_SYLLABLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa8903e767aa9ab7445578257292d1a1e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_CLOSE_PARANTHESIS</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaabfb13fbf5e6898e8c038bd4ade5eaa4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_CONDITIONAL_JAPANESE_STARTER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa9ccab026be2a4042b441a16dc5c393ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_HEBREW_LETTER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaaaddbde75b0df1eee37443c5059884f19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_REGIONAL_INDICATOR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaadff1a8802de9de1cec52b82a9b26f515</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_EMOJI_BASE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa2c31b8c70e7d86a680e6fc5f81b92595</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_EMOJI_MODIFIER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa0d2fbd391a22f61e75f68e872bb8ada8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_ZERO_WIDTH_JOINER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa8e123422d888bcb53f913413fc7a5eed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASCII_ALNUM</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gga2e5a690ed07dfaa6f9ad9f1c57acd787af7d63a99479102b5391b44f631b5f009</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASCII_ALPHA</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gga2e5a690ed07dfaa6f9ad9f1c57acd787ac87947c729ac3c3f9f58b0ca28460152</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASCII_CNTRL</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gga2e5a690ed07dfaa6f9ad9f1c57acd787a2e19c57ce5a6eac38d911a86cc44a2fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASCII_DIGIT</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gga2e5a690ed07dfaa6f9ad9f1c57acd787a9acd9a82d0670a3eb0377db782f48853</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASCII_GRAPH</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gga2e5a690ed07dfaa6f9ad9f1c57acd787a2ecdbe5137af423fce73ff2bbb34d625</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASCII_LOWER</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gga2e5a690ed07dfaa6f9ad9f1c57acd787a875d3cb7494e1548db0d37ab44d4057e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASCII_PRINT</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gga2e5a690ed07dfaa6f9ad9f1c57acd787a9b1775043a8043d994c0c0ab890e86c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASCII_PUNCT</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gga2e5a690ed07dfaa6f9ad9f1c57acd787ad3416d8662560db626259013ff72c58f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASCII_SPACE</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gga2e5a690ed07dfaa6f9ad9f1c57acd787a7d7a68814efba3cf3d294475123413ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASCII_UPPER</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gga2e5a690ed07dfaa6f9ad9f1c57acd787a5ae30681069b2ab88eed13e358c08090</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASCII_XDIGIT</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gga2e5a690ed07dfaa6f9ad9f1c57acd787ad78490a35d65839f2f06449e7e472337</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NORMALIZE_DEFAULT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga18199b64f406e397627a4e7fc799f848a779b5d7aebd18e4b84c5e57ad1e72510</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NORMALIZE_NFD</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga18199b64f406e397627a4e7fc799f848a81e760fdac4c57b878ba43603ed6e9d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NORMALIZE_DEFAULT_COMPOSE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga18199b64f406e397627a4e7fc799f848af8fec61972c5f6ab8b7e600db176ed06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NORMALIZE_NFC</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga18199b64f406e397627a4e7fc799f848ae3887d6a5497fb144f48348af4d0c2f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NORMALIZE_ALL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga18199b64f406e397627a4e7fc799f848a112d77bcde45ec6eb2bf2ac29bb39697</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NORMALIZE_NFKD</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga18199b64f406e397627a4e7fc799f848a6dbd51b7381af7adf532faec482be46a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NORMALIZE_ALL_COMPOSE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga18199b64f406e397627a4e7fc799f848abfd1d0e2d16a6ba9ef9b0855124aeeb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NORMALIZE_NFKC</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga18199b64f406e397627a4e7fc799f848abf819c3bb24fbe163d47308cc4058640</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_BOOL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a0784d542e9b53c186bba6d96c131a1b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_BYTE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a315351b721918e130a75fa64e8f595ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_INT16</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a88fcc49187b1e775333edd0e31fe9503</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_UINT16</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a7e31fbcbbfdd63b923e5ba30157af2c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_INT32</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a1c7d03f6e8a214c0c9e8f93912900803</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_UINT32</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>aea985e724e3ea31a3a0ba801ab0d34ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_INT64</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a9fda1870c01b8514588eaf17c1f11700</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_UINT64</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a52cc2e5d30a3707d03503dfbafba0a82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_DOUBLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a1e01c96d6a7a33b47c0ce5d3678c3cc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_STRING</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a5234d463a42d95bf51ed31795aa214b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_OBJECT_PATH</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>acb229115cd457c6f4c46db53179bcf09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_SIGNATURE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a1ae362fd54a0dca4ff11dc91eb91e807</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_VARIANT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a423dc734d6f45d88da308c355e1daad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_HANDLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a42a8f15e75bbb853c29f82b226b8524d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_UNIT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a401be57899373ddc4ea3fa90dd082c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_ANY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>abb0b65abaef0c0f96b5dd53c2d41d50f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_BASIC</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>af3dd5a8ce4eea408f082ec37239f8594</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_MAYBE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>afa3c807de47227c78826fbd0c1ff1c59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_ARRAY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a44335d30ad2929ba1cb03f6b218f61f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_TUPLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ae4f961225712c4218460ed1a0d09e0bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_DICT_ENTRY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a2351713cde6ee899e9cd5dc6792424d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_DICTIONARY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a642324aa1ad05df695012086ea4a4ee2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_STRING_ARRAY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>aeba26de9c5d32fb0d5fd14a66279d930</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_OBJECT_PATH_ARRAY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>adfdadf7e0a33345e22924c238987272f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_BYTESTRING</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ad20daf2fe6fa1235624d4180e949ad5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_BYTESTRING_ARRAY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a046eff603c12c9414430468883cc609b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OWNERSHIP_NONE</name>
      <anchorfile>group__ContHandles.html</anchorfile>
      <anchor>gga64c27560b41710ccf64a3679a3ba3f20a7d594cffcc2d2d6c4313ddb4d6613c79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OWNERSHIP_SHALLOW</name>
      <anchorfile>group__ContHandles.html</anchorfile>
      <anchor>gga64c27560b41710ccf64a3679a3ba3f20a448c598cdc37e2de8a162e1020001715</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OWNERSHIP_DEEP</name>
      <anchorfile>group__ContHandles.html</anchorfile>
      <anchor>gga64c27560b41710ccf64a3679a3ba3f20a2a6d6bfadc36f9eda31af79d32928c6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PRIORITY_HIGH</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a0c450f82b9e34689e2dda2038ba7834faa3219d7be6fa3282a80d7a850c401db9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PRIORITY_DEFAULT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a0c450f82b9e34689e2dda2038ba7834fa597ed3aa6067516c9c752896f3816b5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PRIORITY_HIGH_IDLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a0c450f82b9e34689e2dda2038ba7834faf2d20696a8afab425c00268d981e9897</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PRIORITY_DEFAULT_IDLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a0c450f82b9e34689e2dda2038ba7834fae8c1127af0a2dab71f196a957dab8375</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PRIORITY_LOW</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a0c450f82b9e34689e2dda2038ba7834fac6034649b50f9f92a69c1e67b92ecfc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>BINDING_DEFAULT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga6af48352fc6ed053e5ebebfe02630a6fa429c481acc1ddaca5c09e6d84f7dae29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>BINDING_BIDIRECTIONAL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga6af48352fc6ed053e5ebebfe02630a6fa0c2d9e60dc3177e8dd56f36e275b3327</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>BINDING_SYNC_CREATE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga6af48352fc6ed053e5ebebfe02630a6fac39d6aa495608453a377af413fb7e9b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>BINDING_INVERT_BOOLEAN</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga6af48352fc6ed053e5ebebfe02630a6faf5440a686da1abfc17d17cb1071f008c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_READABLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbca8e86b397b1d896933f70bf78427dbc79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_WRITABLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbcae586772dc00a2c781f504fdc4701846f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_READWRITE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbcad1554dc8f8eecab55f7c30e23ac391b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_CONSTRUCT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbcaa9e37000824a21f417101c94c37b2adb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_CONSTRUCT_ONLY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbcabc569cdee078f113f586999cd391f5d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_LAX_VALIDATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbca4c7e3a69c2d5e8e8419e912eb434e0e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_STATIC_NAME</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbcaea9c4dec23c8bbac14eaa8577e338551</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_PRIVATE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbcabc996f6a17c5aef47bcd8b0de7c2ea81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_STATIC_NICK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbca5994d69d3d72b93e77536b5a531bd142</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_STATIC_BLURB</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbca703a97fea00613c8ddbd4211c4ed24df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_EXPLICIT_NOTIFY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbca3dd3566586228c77257e6410386fa8c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARAM_DEPRECATED</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga795b9718605425a03f337e0b7421fcbca586e2c999d0a2560e1804da0b36ab7ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_TEST_IS_REGULAR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga33c24ccefbd130021f06708763e16ef2ad7bb008269376841fe11c05da9c01a55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_TEST_IS_SYMLINK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga33c24ccefbd130021f06708763e16ef2ae9fcdfcc6fc6ee7bb83ce9634e5e9f18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_TEST_IS_DIR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga33c24ccefbd130021f06708763e16ef2ae4072d5338587b51642d1a68c730ec19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_TEST_IS_EXECUTABLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga33c24ccefbd130021f06708763e16ef2ae236ad1999c8c106a5ff31154ebd5692</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_TEST_EXISTS</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga33c24ccefbd130021f06708763e16ef2aa6cf22c3904f707c94f2ad911b5df6fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SEEK_TYPE_CUR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaa3767731311bdba4ef42dc99215e5cdaac0fc030f79f4b5623de9867333011e30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SEEK_TYPE_SET</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaa3767731311bdba4ef42dc99215e5cdaaa8e02688f42163a11bb8b47a72456bc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SEEK_TYPE_END</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaa3767731311bdba4ef42dc99215e5cdaa615f7b38be2cbd60fe5fbebd656f38bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_STATUS_ERROR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga23fb251e48485b62a9c2677bb1f87d5eabf1fa62d0111ab895ecb887ce6cce1c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_STATUS_NORMAL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga23fb251e48485b62a9c2677bb1f87d5eaf2008e64a9691fc76ad9320baef5c8ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_STATUS_EOF</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga23fb251e48485b62a9c2677bb1f87d5ea63be2a355cd7187f9ccdd854c80fd10c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_STATUS_AGAIN</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga23fb251e48485b62a9c2677bb1f87d5ead240a3a0fd203dd76e11b76a8115d881</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_FLAG_APPEND</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaee093e5db5bc1ea5738771ba0d1af3b7a0eddd66348cb8ec7aceef67736d59cce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_FLAG_NONBLOCK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaee093e5db5bc1ea5738771ba0d1af3b7a1a71350ea4fc4f9779a3a884f6977269</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_FLAG_IS_READABLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaee093e5db5bc1ea5738771ba0d1af3b7a45c527b36c1a1df9b5b1202f84eafeed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_FLAG_IS_WRITABLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaee093e5db5bc1ea5738771ba0d1af3b7a0632918f94e302c0b20e722e941ad124</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_FLAG_IS_WRITEABLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaee093e5db5bc1ea5738771ba0d1af3b7ac8bc4ce7e268189488cb98c94e15ce66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_FLAG_IS_SEEKABLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaee093e5db5bc1ea5738771ba0d1af3b7a65e5b54c7fad833478ed9cc169cc15be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_FLAG_MASK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaee093e5db5bc1ea5738771ba0d1af3b7a26bca9503544a0e4388041812e3ea1e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_FLAG_GET_MASK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaee093e5db5bc1ea5738771ba0d1af3b7a06c9ef83e6adc8a4b4ea98dd396e2206</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_FLAG_SET_MASK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaee093e5db5bc1ea5738771ba0d1af3b7a31bd353961673e2199474810e2ff3ff0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_IN</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gabd96381793b70d4ae32c725926990918aa38ee764d957d52ccd85688c27778daf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_OUT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gabd96381793b70d4ae32c725926990918a0945b81e85eb8d2d26e77fdc04821cae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_PRI</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gabd96381793b70d4ae32c725926990918ac8998d8c99453ea30c1ba129f89ec5a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_ERR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gabd96381793b70d4ae32c725926990918a1798f7312c98ff12681ed93f1b08f0d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_HUP</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gabd96381793b70d4ae32c725926990918aa290fc1a996ead6c153515d4771fcdb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>IO_NVAL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gabd96381793b70d4ae32c725926990918aadf52e698f361e79b53f0bcb3266df24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_FILE_NONE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga5866be36312563d91e5a7be27348459baec458bae700a8dfd34898a5ab5b22d3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_FILE_KEEP_COMMENTS</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga5866be36312563d91e5a7be27348459ba27ebf6c0c9a771f0268f7b06fe7e0347</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>KEY_FILE_KEEP_TRANSLATIONS</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga5866be36312563d91e5a7be27348459ba498ea5abdc02d9a60db9a0d2873f5c58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>USER_DIRECTORY_DESKTOP</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1d1ca7293a7a06f1d34ef3e21440b819a9bdde992722bfa20afe0533273f82bd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>USER_DIRECTORY_DOCUMENTS</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1d1ca7293a7a06f1d34ef3e21440b819a3550469cfb212ed889b1106750495040</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>USER_DIRECTORY_DOWNLOAD</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1d1ca7293a7a06f1d34ef3e21440b819aaf0c0361b86fd7c7e5cbf8015632bcd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>USER_DIRECTORY_MUSIC</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1d1ca7293a7a06f1d34ef3e21440b819a5b8e18721d39fbb45fbf965088170ca8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>USER_DIRECTORY_PICTURES</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1d1ca7293a7a06f1d34ef3e21440b819a2623f44d7b841e7f781098afc1716e07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>USER_DIRECTORY_PUBLIC_SHARE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1d1ca7293a7a06f1d34ef3e21440b819ad516c3546c3ff32fedf4a0722d143b9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>USER_DIRECTORY_TEMPLATES</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1d1ca7293a7a06f1d34ef3e21440b819ade29748ce1bc5d37e6662ea8d0c22f31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>USER_DIRECTORY_VIDEOS</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1d1ca7293a7a06f1d34ef3e21440b819acde3610b2eec032f93b54863521cd20a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>USER_N_DIRECTORIES</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1d1ca7293a7a06f1d34ef3e21440b819ae59fbe2f9e59f050f71638084be185b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FORMAT_SIZE_DEFAULT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga53f0c2b27f8ba1bca1e695397a75c673aaa2c16592d413276b5243a5b2f14c5af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FORMAT_SIZE_LONG_FORMAT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga53f0c2b27f8ba1bca1e695397a75c673a95ca15cbe9d4b5ea304e28bc5498ce67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FORMAT_SIZE_IEC_UNITS</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga53f0c2b27f8ba1bca1e695397a75c673abf93b9978954086005fa99da714ae788</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FORMAT_SIZE_BITS</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga53f0c2b27f8ba1bca1e695397a75c673abde05d3468dbf691f7e199b5b441ae62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>MODULE_BIND_LAZY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga502283ffbe523adf38c69905ec8640f3af7dfb341de1af451a3fc28d8c13e4593</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>MODULE_BIND_LOCAL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga502283ffbe523adf38c69905ec8640f3a61ed78ca3b7464b163e43240a4fffa96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>MODULE_BIND_MASK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga502283ffbe523adf38c69905ec8640f3ab1bb8b50aaab642b5abfcddac8d7806b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TRAVERSE_IN_ORDER</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ggae3a70fa1e451da068323419e8c98e9a9aa7f260b474a886df2bf1aefcfc0f14b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TRAVERSE_PRE_ORDER</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ggae3a70fa1e451da068323419e8c98e9a9abed8efe71581ccb087323f38b6807661</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TRAVERSE_POST_ORDER</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ggae3a70fa1e451da068323419e8c98e9a9a0af70e322b94dfbbfc98b100d21cef4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TRAVERSE_LEVEL_ORDER</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>ggae3a70fa1e451da068323419e8c98e9a9a16cd819f4ab8175453f6287aeefad870</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_CASELESS</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da4e6c0b8e730db041fc8d1261c2932a7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MULTILINE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68dab11968f7c699f48954c586063dc83226</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_DOTALL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68daa30cd6e3af26544676c5c05578f3701f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_EXTENDED</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68dae4955dc52d3f93f46fa7b894689bb9dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_ANCHORED</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da242c71a1c506054daae47559a087885d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_DOLLAR_ENDONLY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da6a311ea6eb4cd26d46bef76a4ecd70d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_UNGREEDY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68dad3d43ecb091918275855d44bf137432c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_RAW</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da9aaaffdaa133f45d7412af35ad17b29e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_NO_AUTO_CAPTURE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da98b6d7f319fcee7ae0c1b9e8dc146869</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_OPTIMIZE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68daefe22a8d4297013ffcef77b83c40bf94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_FIRSTLINE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da4d72c42c744da757f5b4e8760933e355</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_DUPNAMES</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68dad96b981e024568febb07d7f237950a15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_NEWLINE_CR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da8743e2fb6fc70c8bbf53a025442a9f31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_NEWLINE_LF</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da18bf3b48001c90a1aefca35dd9bd832b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_NEWLINE_CRLF</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da31810ab9b1612d3dafbb86d164ea783c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_NEWLINE_ANYCRLF</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da6c4921ffcc04c53566d6bfe89fcf78b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_BSR_ANYCRLF</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da9fbe4801ca6fcae969a84c16826b9393</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_JAVASCRIPT_COMPAT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gaaaedee3e1374af9f1d66ccd34252a68da7e66bb34557aafd6de8b6119c229d9c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_ANCHORED</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746a6d9730749c5506b89f3085ce25c80c21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_NOTBOL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746ae09a3a58b8d8e052a35719b4f22f937a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_NOTEOL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746ab8850a97e7a6b06b1a5c97e703be2a11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_NOTEMPTY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746a0aaf0a3c6a7fae74d4a1a6255062ae91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_PARTIAL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746ab8930fa357708487ef7a83350304dc2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_NEWLINE_CR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746ae0eb9716d96049f41f5560a215ea5dab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_NEWLINE_LF</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746a51549066ff64a814d44958ce9db5243b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_NEWLINE_CRLF</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746ad1536133fab0dd8e25c31c0c8555b365</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_NEWLINE_ANY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746acebebe55d6e1197e4a7e92a4fc4a999b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_NEWLINE_ANYCRLF</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746aa1a18562a24484f87f73115cb3a722c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_BSR_ANYCRLF</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746affaea7b025e947b22e7378bf0b6baf92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_BSR_ANY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746a824f70cd3d882d3717d67325b96a9b3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_PARTIAL_SOFT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746a69d773f5f7d17ef9b91bd43d545ae1c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_PARTIAL_HARD</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746a1d2d11e330bc91e85a50e01445288b3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REGEX_MATCH_NOTEMPTY_ATSTART</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga8375c7f6797efc96929e8be89435c746aea0015d4a3887504f16321a0f960241f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SPAWN_DEFAULT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga075918988c271e7fb63f1a1d083e26dda4198b367b82bc1adf3469423da582663</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SPAWN_LEAVE_DESCRIPTORS_OPEN</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga075918988c271e7fb63f1a1d083e26dda3b30d87840df513617bd468c750e52c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SPAWN_DO_NOT_REAP_CHILD</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga075918988c271e7fb63f1a1d083e26dda8ba0abbaa6e1907446857439f454ced1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SPAWN_SEARCH_PATH</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga075918988c271e7fb63f1a1d083e26dda7d76ee852f6b00ffaef373f3d595139f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SPAWN_STDOUT_TO_DEV_NULL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga075918988c271e7fb63f1a1d083e26dda7a8c2616db1e6ef21f063652fd60872e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SPAWN_STDERR_TO_DEV_NULL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga075918988c271e7fb63f1a1d083e26dda198a2b8f3ce92dce5a1117d1c2dac345</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SPAWN_CHILD_INHERITS_STDIN</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga075918988c271e7fb63f1a1d083e26ddaeb1c843fc647e28134cd3e7fa259f285</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SPAWN_FILE_AND_ARGV_ZERO</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga075918988c271e7fb63f1a1d083e26ddaead6dad17dda98e0196495dd11d62cd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SPAWN_SEARCH_PATH_FROM_ENVP</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga075918988c271e7fb63f1a1d083e26dda876ee150dd220b4808c2f9ecab5dc0f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SPAWN_CLOEXEC_PIPES</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga075918988c271e7fb63f1a1d083e26ddace745e1ccff2497f03ea638316abe076</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>THREAD_PRIORITY_LOW</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga9b87dca6496b6ad53baec9ca01318448a035a7bdc6a5b5eae6f644ed2605e8a37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>THREAD_PRIORITY_NORMAL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga9b87dca6496b6ad53baec9ca01318448a6216bb25baaaca32642841ade911a92e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>THREAD_PRIORITY_HIGH</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga9b87dca6496b6ad53baec9ca01318448aef77081535e90116b203ce3b3b0fe523</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>THREAD_PRIORITY_URGENT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga9b87dca6496b6ad53baec9ca01318448a5b79355bbd59c508995af57e0ed39a94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NOT_LOCK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a2dd111336e3b057b51ca5871795fffa4a9681fb4e85e62ba64e39a12526eaa840</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TRY_LOCK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a7441a36336ea4cdb35c0fddbf3f97b19adf6b2565785992ff637cbc453988841d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TIME_TYPE_STANDARD</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga56a2fdf6fb8599b99302868a176aac43ae6b2b23e160971f7487d630c1fa8cf70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TIME_TYPE_DAYLIGHT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga56a2fdf6fb8599b99302868a176aac43a08bb0503339270dd7bf04c3406cf60c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TIME_TYPE_UNIVERSAL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga56a2fdf6fb8599b99302868a176aac43a88ad6264677876bc7203353a1cf45391</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_CONTROL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea600cfdae816c0d120e6e3e4a32d5d9cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_FORMAT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea5b522871761887006148af4734e84875</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_UNASSIGNED</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea6e8a7e7b5ce23cd99d30f4ab7b672efd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_PRIVATE_USE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea4d8e2c9e7eb9ab4352d6e4b6699267f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_SURROGATE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea69161af321691d504ec819bb9c19b808</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_LOWERCASE_LETTER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46eaab14707b2ffc2073a6d770ecd70ae321</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_MODIFIER_LETTER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea7bfc1c73f50fa8c69224e0df70b0b14b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_OTHER_LETTER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea146261fc855eb4e65cdfb86886bdedf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_TITLECASE_LETTER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea3f43a11337d15c6050fc1ef0e2da75b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_UPPERCASE_LETTER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea43db8de276cdf9f23e23a8661456ff4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_SPACING_MARK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46eac73f211f2caa9d82027985cb8b549cf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_ENCLOSING_MARK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea9a7db30781bd0d0a61374fd261944e07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_NON_SPACING_MARK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea09f4af19dd4a3d3d0f10369f8b8afda2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_DECIMAL_NUMBER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46eaf93e0b2714dcd443d48e246768a8da9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_LETTER_NUMBER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea09e6ab53938abe6c9c2d8981f137e5e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_OTHER_NUMBER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea05027699449d2ff55d446fa7572a8c5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_CONNECT_PUNCTUATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea32edc36db8c13121a39dc416b22f822a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_DASH_PUNCTUATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46eab3b75b13d04b7ef056e72f798dae0e3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_CLOSE_PUNCTUATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea0d4f41955bed4fddc7855ce714e1f957</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_FINAL_PUNCTUATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea90fff8c0bd976f3592629074fa3e801f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_INITIAL_PUNCTUATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46eace6196e830393b5497bfbfd6501680a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_OTHER_PUNCTUATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea1ded1d0a0b6e5936e8a3ecd123f66869</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_OPEN_PUNCTUATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea14677d2ca9b5a1354f7460de17579daa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_CURRENCY_SYMBOL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46eae75f8f34e79ffe86801984519eb40e6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_MODIFIER_SYMBOL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea3b6b351ca86d8095ada1d6a32e758d7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_MATH_SYMBOL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46eac35f3c4aa05eca14835c22a4c6a56acf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_OTHER_SYMBOL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea85c851b5804ed262ed84c2d5bc59aa1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_LINE_SEPARATOR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46ea2a65c1eb916c613c404eea150eac93ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_PARAGRAPH_SEPARATOR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46eac808b6d7ba1f9cbb28bc0a255578085b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_SPACE_SEPARATOR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>gadfbb414be3a4d127146fdca66dc7a46eabf9e349217923adfb3baef8135756118</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_MANDATORY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaaade2215e9c2207518154a283bebb5c3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_CARRIAGE_RETURN</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa48ba653f60f909e05dd9b650970ecc1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_LINE_FEED</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaab556cd8a4eaa5d766b3e49591ffae8b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_COMBINING_MARK</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa3f8c62e980013b2e44027ef9c34ce5c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_SURROGATE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaaa47bd54d2aef8bd0e52c07e8abbb65f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_ZERO_WIDTH_SPACE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa37b49337ed4ecd7f53e7c9a2817d029f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_INSEPARABLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa9913f639ecf34dbe62f6610fc9c3da11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_NON_BREAKING_GLUE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaaab52faa88b6578ab4cd88c3095793653</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_CONTINGENT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa2cccec32194082ea6f93db40c4af1ca5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_SPACE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaac623ed7dc2c0cabe23c2d69f4572b7bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_AFTER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa9729f705eea307bb7ccb0283a3a85093</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_BEFORE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa32422806593a1aa950f533cf6eb394a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_BEFORE_AND_AFTER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa05fc37bc6f3efcf0dc74973fb967f7c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_HYPHEN</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa1074d431136b2b556b91e682eee4a189</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_NON_STARTER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaaeb0c44e9512fb806b9ce4991e9d50f5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_OPEN_PUNCTUATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaab7df43ac603e4d7b51d52d5a701e718e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_CLOSE_PUNCTUATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa80435e54ace548890b953c6395556c7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_QUOTATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaaf28d5b9cddeb8bb905fcfa829f436a2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_EXCLAMATION</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa4ab287f55e05833854353ae861b27f5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_IDEOGRAPHIC</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaabb30f05e59de03b80d55f021de4dd1ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_NUMERIC</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaaacc8824bbbaf262b7563f51afce9be15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_INFIX_SEPARATOR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaacf598d2b5eb2d0459d2339f2e8a9b237</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_SYMBOL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa1bd798c1ae867ef8879f01778ee37b1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_ALPHABETIC</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaaecf3f2bfd41dbab74e897106fef322c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_PREFIX</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa7e5a7d95bc74c01ca77bd3a3446ebae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_POSTFIX</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa4c4fd955be2dc60284b046f8f7fae397</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_COMPLEX_CONTEXT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaae0f8fcb8bfaaddb4f30edf642b2a6146</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_AMBIGUOUS</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa84ce090d6c8bf46abd148573bd0e3f78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_UNKNOWN</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaae393ca22fb6bd8b01c1012d4e3386a04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_NEXT_LINE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa28a02b08d3965c0ea0f6ff763a34beac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_WORD_JOINER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa968e329ae40754bed636979d27540fed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_HANGUL_L_JAMO</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaabfa27ce91eb258c1bd72131c857669d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_HANGUL_V_JAMO</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaaeaea498600767a8af3b41e92816faea8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_HANGUL_T_JAMO</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaaabefad2b773b963104e38fe77a03281c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_HANGUL_LV_SYLLABLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaaccb629a2a1bae689139c8f3cc1048b31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_HANGUL_LVT_SYLLABLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa8903e767aa9ab7445578257292d1a1e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_CLOSE_PARANTHESIS</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaabfb13fbf5e6898e8c038bd4ade5eaa4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_CONDITIONAL_JAPANESE_STARTER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa9ccab026be2a4042b441a16dc5c393ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_HEBREW_LETTER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaaaddbde75b0df1eee37443c5059884f19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_REGIONAL_INDICATOR</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaadff1a8802de9de1cec52b82a9b26f515</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_EMOJI_BASE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa2c31b8c70e7d86a680e6fc5f81b92595</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_EMOJI_MODIFIER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa0d2fbd391a22f61e75f68e872bb8ada8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNICODE_BREAK_ZERO_WIDTH_JOINER</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga1af1a717c84d71aa4aabc9fc77b4d0eaa8e123422d888bcb53f913413fc7a5eed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASCII_ALNUM</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gga2e5a690ed07dfaa6f9ad9f1c57acd787af7d63a99479102b5391b44f631b5f009</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASCII_ALPHA</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gga2e5a690ed07dfaa6f9ad9f1c57acd787ac87947c729ac3c3f9f58b0ca28460152</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASCII_CNTRL</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gga2e5a690ed07dfaa6f9ad9f1c57acd787a2e19c57ce5a6eac38d911a86cc44a2fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASCII_DIGIT</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gga2e5a690ed07dfaa6f9ad9f1c57acd787a9acd9a82d0670a3eb0377db782f48853</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASCII_GRAPH</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gga2e5a690ed07dfaa6f9ad9f1c57acd787a2ecdbe5137af423fce73ff2bbb34d625</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASCII_LOWER</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gga2e5a690ed07dfaa6f9ad9f1c57acd787a875d3cb7494e1548db0d37ab44d4057e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASCII_PRINT</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gga2e5a690ed07dfaa6f9ad9f1c57acd787a9b1775043a8043d994c0c0ab890e86c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASCII_PUNCT</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gga2e5a690ed07dfaa6f9ad9f1c57acd787ad3416d8662560db626259013ff72c58f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASCII_SPACE</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gga2e5a690ed07dfaa6f9ad9f1c57acd787a7d7a68814efba3cf3d294475123413ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASCII_UPPER</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gga2e5a690ed07dfaa6f9ad9f1c57acd787a5ae30681069b2ab88eed13e358c08090</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ASCII_XDIGIT</name>
      <anchorfile>group__glibmmEnums.html</anchorfile>
      <anchor>gga2e5a690ed07dfaa6f9ad9f1c57acd787ad78490a35d65839f2f06449e7e472337</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NORMALIZE_DEFAULT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga18199b64f406e397627a4e7fc799f848a779b5d7aebd18e4b84c5e57ad1e72510</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NORMALIZE_NFD</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga18199b64f406e397627a4e7fc799f848a81e760fdac4c57b878ba43603ed6e9d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NORMALIZE_DEFAULT_COMPOSE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga18199b64f406e397627a4e7fc799f848af8fec61972c5f6ab8b7e600db176ed06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NORMALIZE_NFC</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga18199b64f406e397627a4e7fc799f848ae3887d6a5497fb144f48348af4d0c2f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NORMALIZE_ALL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga18199b64f406e397627a4e7fc799f848a112d77bcde45ec6eb2bf2ac29bb39697</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NORMALIZE_NFKD</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga18199b64f406e397627a4e7fc799f848a6dbd51b7381af7adf532faec482be46a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NORMALIZE_ALL_COMPOSE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga18199b64f406e397627a4e7fc799f848abfd1d0e2d16a6ba9ef9b0855124aeeb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NORMALIZE_NFKC</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ga18199b64f406e397627a4e7fc799f848abf819c3bb24fbe163d47308cc4058640</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_BOOL</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a0784d542e9b53c186bba6d96c131a1b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_BYTE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a315351b721918e130a75fa64e8f595ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_INT16</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a88fcc49187b1e775333edd0e31fe9503</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_UINT16</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a7e31fbcbbfdd63b923e5ba30157af2c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_INT32</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a1c7d03f6e8a214c0c9e8f93912900803</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_UINT32</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>aea985e724e3ea31a3a0ba801ab0d34ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_INT64</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a9fda1870c01b8514588eaf17c1f11700</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_UINT64</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a52cc2e5d30a3707d03503dfbafba0a82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_DOUBLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a1e01c96d6a7a33b47c0ce5d3678c3cc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_STRING</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a5234d463a42d95bf51ed31795aa214b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_OBJECT_PATH</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>acb229115cd457c6f4c46db53179bcf09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_SIGNATURE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a1ae362fd54a0dca4ff11dc91eb91e807</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_VARIANT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a423dc734d6f45d88da308c355e1daad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_HANDLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a42a8f15e75bbb853c29f82b226b8524d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_UNIT</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a401be57899373ddc4ea3fa90dd082c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_ANY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>abb0b65abaef0c0f96b5dd53c2d41d50f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_BASIC</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>af3dd5a8ce4eea408f082ec37239f8594</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_MAYBE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>afa3c807de47227c78826fbd0c1ff1c59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_ARRAY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a44335d30ad2929ba1cb03f6b218f61f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_TUPLE</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ae4f961225712c4218460ed1a0d09e0bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_DICT_ENTRY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a2351713cde6ee899e9cd5dc6792424d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_DICTIONARY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a642324aa1ad05df695012086ea4a4ee2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_STRING_ARRAY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>aeba26de9c5d32fb0d5fd14a66279d930</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_OBJECT_PATH_ARRAY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>adfdadf7e0a33345e22924c238987272f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_BYTESTRING</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>ad20daf2fe6fa1235624d4180e949ad5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const VariantType</type>
      <name>VARIANT_TYPE_BYTESTRING_ARRAY</name>
      <anchorfile>namespaceGlib.html</anchorfile>
      <anchor>a046eff603c12c9414430468883cc609b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Gtk</name>
    <filename>namespaceGtk.html</filename>
    <namespace>Gtk::AccelMap</namespace>
    <namespace>Gtk::Menu_Helpers</namespace>
    <namespace>Gtk::Stock</namespace>
    <class kind="class">Gtk::AboutDialog</class>
    <class kind="class">Gtk::AccelGroup</class>
    <class kind="class">Gtk::AccelKey</class>
    <class kind="class">Gtk::AccelLabel</class>
    <class kind="class">Gtk::Action</class>
    <class kind="class">Gtk::Actionable</class>
    <class kind="class">Gtk::ActionBar</class>
    <class kind="class">Gtk::ActionGroup</class>
    <class kind="class">Gtk::Activatable</class>
    <class kind="class">Gtk::Adjustment</class>
    <class kind="class">Gtk::Alignment</class>
    <class kind="class">Gtk::AppChooser</class>
    <class kind="class">Gtk::AppChooserButton</class>
    <class kind="class">Gtk::AppChooserDialog</class>
    <class kind="class">Gtk::AppChooserWidget</class>
    <class kind="class">Gtk::Application</class>
    <class kind="class">Gtk::ApplicationWindow</class>
    <class kind="class">Gtk::Arrow</class>
    <class kind="class">Gtk::AspectFrame</class>
    <class kind="class">Gtk::Assistant</class>
    <class kind="class">Gtk::Bin</class>
    <class kind="class">Gtk::Border</class>
    <class kind="class">Gtk::Box</class>
    <class kind="class">Gtk::Buildable</class>
    <class kind="class">Gtk::Builder</class>
    <class kind="class">Gtk::BuilderError</class>
    <class kind="struct">Gtk::BuiltinStockID</class>
    <class kind="class">Gtk::Button</class>
    <class kind="class">Gtk::ButtonBox</class>
    <class kind="class">Gtk::Calendar</class>
    <class kind="class">Gtk::CellArea</class>
    <class kind="class">Gtk::CellAreaBox</class>
    <class kind="class">Gtk::CellAreaContext</class>
    <class kind="class">Gtk::CellEditable</class>
    <class kind="class">Gtk::CellLayout</class>
    <class kind="class">Gtk::CellRenderer</class>
    <class kind="class">Gtk::CellRendererAccel</class>
    <class kind="class">Gtk::CellRendererCombo</class>
    <class kind="class">Gtk::CellRendererPixbuf</class>
    <class kind="class">Gtk::CellRendererProgress</class>
    <class kind="class">Gtk::CellRendererSpin</class>
    <class kind="class">Gtk::CellRendererSpinner</class>
    <class kind="class">Gtk::CellRendererText</class>
    <class kind="class">Gtk::CellRendererToggle</class>
    <class kind="class">Gtk::CellView</class>
    <class kind="class">Gtk::CheckButton</class>
    <class kind="class">Gtk::CheckMenuItem</class>
    <class kind="class">Gtk::ChildPropertyProxy</class>
    <class kind="class">Gtk::ChildPropertyProxy_Base</class>
    <class kind="class">Gtk::ChildPropertyProxy_ReadOnly</class>
    <class kind="class">Gtk::ChildPropertyProxy_WriteOnly</class>
    <class kind="class">Gtk::Clipboard</class>
    <class kind="class">Gtk::ColorButton</class>
    <class kind="class">Gtk::ColorChooser</class>
    <class kind="class">Gtk::ColorChooserDialog</class>
    <class kind="class">Gtk::ColorSelection</class>
    <class kind="class">Gtk::ColorSelectionDialog</class>
    <class kind="class">Gtk::ComboBox</class>
    <class kind="class">Gtk::ComboBoxText</class>
    <class kind="class">Gtk::Container</class>
    <class kind="class">Gtk::CssProvider</class>
    <class kind="class">Gtk::CssProviderError</class>
    <class kind="class">Gtk::CssSection</class>
    <class kind="class">Gtk::Dialog</class>
    <class kind="class">Gtk::DrawingArea</class>
    <class kind="class">Gtk::Editable</class>
    <class kind="class">Gtk::Entry</class>
    <class kind="class">Gtk::EntryBuffer</class>
    <class kind="class">Gtk::EntryCompletion</class>
    <class kind="class">Gtk::EventBox</class>
    <class kind="class">Gtk::EventController</class>
    <class kind="class">Gtk::Expander</class>
    <class kind="class">Gtk::FileChooser</class>
    <class kind="class">Gtk::FileChooserButton</class>
    <class kind="class">Gtk::FileChooserDialog</class>
    <class kind="class">Gtk::FileChooserError</class>
    <class kind="class">Gtk::FileChooserNative</class>
    <class kind="class">Gtk::FileChooserWidget</class>
    <class kind="class">Gtk::FileFilter</class>
    <class kind="class">Gtk::Fixed</class>
    <class kind="class">Gtk::FlowBox</class>
    <class kind="class">Gtk::FlowBoxChild</class>
    <class kind="class">Gtk::FontButton</class>
    <class kind="class">Gtk::FontChooser</class>
    <class kind="class">Gtk::FontChooserDialog</class>
    <class kind="class">Gtk::FontChooserWidget</class>
    <class kind="class">Gtk::FontSelection</class>
    <class kind="class">Gtk::FontSelectionDialog</class>
    <class kind="class">Gtk::Frame</class>
    <class kind="class">Gtk::Gesture</class>
    <class kind="class">Gtk::GestureDrag</class>
    <class kind="class">Gtk::GestureLongPress</class>
    <class kind="class">Gtk::GestureMultiPress</class>
    <class kind="class">Gtk::GesturePan</class>
    <class kind="class">Gtk::GestureRotate</class>
    <class kind="class">Gtk::GestureSingle</class>
    <class kind="class">Gtk::GestureSwipe</class>
    <class kind="class">Gtk::GestureZoom</class>
    <class kind="class">Gtk::GLArea</class>
    <class kind="class">Gtk::Grid</class>
    <class kind="class">Gtk::HandleBox</class>
    <class kind="class">Gtk::HBox</class>
    <class kind="class">Gtk::HButtonBox</class>
    <class kind="class">Gtk::HeaderBar</class>
    <class kind="class">Gtk::HPaned</class>
    <class kind="class">Gtk::HScale</class>
    <class kind="class">Gtk::HScrollbar</class>
    <class kind="class">Gtk::HSeparator</class>
    <class kind="class">Gtk::IconFactory</class>
    <class kind="class">Gtk::IconInfo</class>
    <class kind="class">Gtk::IconSet</class>
    <class kind="class">Gtk::IconSize</class>
    <class kind="class">Gtk::IconSource</class>
    <class kind="class">Gtk::IconTheme</class>
    <class kind="class">Gtk::IconThemeError</class>
    <class kind="class">Gtk::IconView</class>
    <class kind="class">Gtk::Image</class>
    <class kind="class">Gtk::ImageMenuItem</class>
    <class kind="class">Gtk::InfoBar</class>
    <class kind="class">Gtk::Invisible</class>
    <class kind="class">Gtk::Label</class>
    <class kind="class">Gtk::Layout</class>
    <class kind="class">Gtk::LevelBar</class>
    <class kind="class">Gtk::LinkButton</class>
    <class kind="class">Gtk::ListBox</class>
    <class kind="class">Gtk::ListBoxRow</class>
    <class kind="class">Gtk::ListStore</class>
    <class kind="class">Gtk::ListViewText</class>
    <class kind="class">Gtk::LockButton</class>
    <class kind="class">Gtk::Main</class>
    <class kind="class">Gtk::Menu</class>
    <class kind="class">Gtk::MenuBar</class>
    <class kind="class">Gtk::MenuButton</class>
    <class kind="class">Gtk::MenuItem</class>
    <class kind="class">Gtk::MenuShell</class>
    <class kind="class">Gtk::MenuToolButton</class>
    <class kind="class">Gtk::MessageDialog</class>
    <class kind="class">Gtk::Misc</class>
    <class kind="class">Gtk::ModelButton</class>
    <class kind="class">Gtk::NativeDialog</class>
    <class kind="class">Gtk::Notebook</class>
    <class kind="class">Gtk::NumerableIcon</class>
    <class kind="class">Gtk::Object</class>
    <class kind="class">Gtk::OffscreenWindow</class>
    <class kind="class">Gtk::Orientable</class>
    <class kind="class">Gtk::Overlay</class>
    <class kind="class">Gtk::PageSetup</class>
    <class kind="class">Gtk::PageSetupUnixDialog</class>
    <class kind="class">Gtk::Paned</class>
    <class kind="class">Gtk::PaperSize</class>
    <class kind="class">Gtk::PlacesSidebar</class>
    <class kind="class">Gtk::Plug</class>
    <class kind="class">Gtk::Popover</class>
    <class kind="class">Gtk::PopoverMenu</class>
    <class kind="class">Gtk::PrintContext</class>
    <class kind="class">Gtk::Printer</class>
    <class kind="class">Gtk::PrintError</class>
    <class kind="class">Gtk::PrintJob</class>
    <class kind="class">Gtk::PrintOperation</class>
    <class kind="class">Gtk::PrintOperationPreview</class>
    <class kind="class">Gtk::PrintSettings</class>
    <class kind="class">Gtk::PrintUnixDialog</class>
    <class kind="class">Gtk::ProgressBar</class>
    <class kind="class">Gtk::RadioAction</class>
    <class kind="class">Gtk::RadioButton</class>
    <class kind="class">Gtk::RadioButtonGroup</class>
    <class kind="class">Gtk::RadioMenuItem</class>
    <class kind="class">Gtk::RadioToolButton</class>
    <class kind="class">Gtk::Range</class>
    <class kind="class">Gtk::RecentAction</class>
    <class kind="class">Gtk::RecentChooser</class>
    <class kind="class">Gtk::RecentChooserDialog</class>
    <class kind="class">Gtk::RecentChooserError</class>
    <class kind="class">Gtk::RecentChooserMenu</class>
    <class kind="class">Gtk::RecentChooserWidget</class>
    <class kind="class">Gtk::RecentFilter</class>
    <class kind="class">Gtk::RecentInfo</class>
    <class kind="class">Gtk::RecentManager</class>
    <class kind="class">Gtk::RecentManagerError</class>
    <class kind="class">Gtk::Revealer</class>
    <class kind="class">Gtk::Scale</class>
    <class kind="class">Gtk::ScaleButton</class>
    <class kind="class">Gtk::Scrollable</class>
    <class kind="class">Gtk::Scrollbar</class>
    <class kind="class">Gtk::ScrolledWindow</class>
    <class kind="class">Gtk::SearchBar</class>
    <class kind="class">Gtk::SearchEntry</class>
    <class kind="class">Gtk::SelectionData</class>
    <class kind="class">Gtk::Separator</class>
    <class kind="class">Gtk::SeparatorMenuItem</class>
    <class kind="class">Gtk::SeparatorToolItem</class>
    <class kind="class">Gtk::Settings</class>
    <class kind="class">Gtk::ShortcutLabel</class>
    <class kind="class">Gtk::ShortcutsGroup</class>
    <class kind="class">Gtk::ShortcutsSection</class>
    <class kind="class">Gtk::ShortcutsShortcut</class>
    <class kind="class">Gtk::ShortcutsWindow</class>
    <class kind="class">Gtk::SignalProxyChildProperty</class>
    <class kind="class">Gtk::SizeGroup</class>
    <class kind="class">Gtk::Socket</class>
    <class kind="class">Gtk::SpinButton</class>
    <class kind="class">Gtk::Spinner</class>
    <class kind="class">Gtk::Stack</class>
    <class kind="class">Gtk::StackSidebar</class>
    <class kind="class">Gtk::StackSwitcher</class>
    <class kind="class">Gtk::Statusbar</class>
    <class kind="class">Gtk::StatusIcon</class>
    <class kind="class">Gtk::StockID</class>
    <class kind="class">Gtk::StockItem</class>
    <class kind="class">Gtk::StyleContext</class>
    <class kind="class">Gtk::StyleProperty</class>
    <class kind="class">Gtk::StylePropertyBase</class>
    <class kind="class">Gtk::StyleProvider</class>
    <class kind="class">Gtk::Switch</class>
    <class kind="class">Gtk::Table</class>
    <class kind="class">Gtk::TargetEntry</class>
    <class kind="class">Gtk::TargetList</class>
    <class kind="class">Gtk::TearoffMenuItem</class>
    <class kind="class">Gtk::TextAttributes</class>
    <class kind="class">Gtk::TextBuffer</class>
    <class kind="class">Gtk::TextChildAnchor</class>
    <class kind="class">Gtk::TextIter</class>
    <class kind="class">Gtk::TextMark</class>
    <class kind="class">Gtk::TextTag</class>
    <class kind="class">Gtk::TextTagTable</class>
    <class kind="class">Gtk::TextView</class>
    <class kind="class">Gtk::ToggleAction</class>
    <class kind="class">Gtk::ToggleButton</class>
    <class kind="class">Gtk::ToggleToolButton</class>
    <class kind="class">Gtk::Toolbar</class>
    <class kind="class">Gtk::ToolButton</class>
    <class kind="class">Gtk::ToolItem</class>
    <class kind="class">Gtk::ToolItemGroup</class>
    <class kind="class">Gtk::ToolPalette</class>
    <class kind="class">Gtk::ToolShell</class>
    <class kind="class">Gtk::Tooltip</class>
    <class kind="class">Gtk::TreeDragDest</class>
    <class kind="class">Gtk::TreeDragSource</class>
    <class kind="class">Gtk::TreeIter</class>
    <class kind="class">Gtk::TreeIterBase</class>
    <class kind="class">Gtk::TreeModel</class>
    <class kind="class">Gtk::TreeModelColumn</class>
    <class kind="class">Gtk::TreeModelColumnBase</class>
    <class kind="class">Gtk::TreeModelColumnRecord</class>
    <class kind="class">Gtk::TreeModelFilter</class>
    <class kind="class">Gtk::TreeModelSort</class>
    <class kind="class">Gtk::TreeNodeChildren</class>
    <class kind="class">Gtk::TreePath</class>
    <class kind="class">Gtk::TreeRow</class>
    <class kind="class">Gtk::TreeRowReference</class>
    <class kind="class">Gtk::TreeSelection</class>
    <class kind="class">Gtk::TreeSortable</class>
    <class kind="class">Gtk::TreeStore</class>
    <class kind="class">Gtk::TreeValueProxy</class>
    <class kind="class">Gtk::TreeView</class>
    <class kind="class">Gtk::TreeViewColumn</class>
    <class kind="class">Gtk::UIManager</class>
    <class kind="class">Gtk::VBox</class>
    <class kind="class">Gtk::VButtonBox</class>
    <class kind="class">Gtk::Viewport</class>
    <class kind="class">Gtk::VolumeButton</class>
    <class kind="class">Gtk::VPaned</class>
    <class kind="class">Gtk::VScale</class>
    <class kind="class">Gtk::VScrollbar</class>
    <class kind="class">Gtk::VSeparator</class>
    <class kind="class">Gtk::Widget</class>
    <class kind="class">Gtk::WidgetPath</class>
    <class kind="class">Gtk::Window</class>
    <class kind="class">Gtk::WindowGroup</class>
    <member kind="typedef">
      <type>sigc::slot&lt; void, const Glib::RefPtr&lt; PageSetup &gt; &amp; &gt;</type>
      <name>SlotPrintSetupDone</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>a63788d5b16e7bde4fed371e95c1ec7e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GtkRequisition</type>
      <name>Requisition</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>a5ae8be4427f5ac86ecb38401ab7e4d78</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Gdk::Rectangle</type>
      <name>Allocation</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>a8aafb0aa51d1034c06046f066563367b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>License</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga31c303a3e473b086b1f8225cd6c47db4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LICENSE_UNKNOWN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga31c303a3e473b086b1f8225cd6c47db4a9648eb20ea568ad97b6b8dbf31cf8e29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LICENSE_CUSTOM</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga31c303a3e473b086b1f8225cd6c47db4ab779d40e56ef3dead5875bc5b217ec42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LICENSE_GPL_2_0</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga31c303a3e473b086b1f8225cd6c47db4a9a7aea7de5e917711d6a4d544d7d90ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LICENSE_GPL_3_0</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga31c303a3e473b086b1f8225cd6c47db4aba961ba84bf5f1f474f26dbb13783e86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LICENSE_LGPL_2_1</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga31c303a3e473b086b1f8225cd6c47db4a0b5632ef1a8e0e2f228171cddd93db89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LICENSE_LGPL_3_0</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga31c303a3e473b086b1f8225cd6c47db4ae69a67304702da30cdd87448dbc43815</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LICENSE_BSD</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga31c303a3e473b086b1f8225cd6c47db4aeb884c4f3b15a34cbc961f21b6c53755</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LICENSE_MIT_X11</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga31c303a3e473b086b1f8225cd6c47db4a5037a3a0f6b1caaae3da1bddbd8d9f8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LICENSE_ARTISTIC</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga31c303a3e473b086b1f8225cd6c47db4a845618db084a3df9af2f52e7565fb2a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LICENSE_GPL_2_0_ONLY</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga31c303a3e473b086b1f8225cd6c47db4a369ea718eef9110cbec8edb50332a489</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LICENSE_GPL_3_0_ONLY</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga31c303a3e473b086b1f8225cd6c47db4a175584c617966cf83ebe15eb6a319d01</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LICENSE_LGPL_2_1_ONLY</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga31c303a3e473b086b1f8225cd6c47db4a9f7a11229c9e65a3bef8c51d068005a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LICENSE_LGPL_3_0_ONLY</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga31c303a3e473b086b1f8225cd6c47db4a42963496a73c5b6c341b12674e93c343</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LICENSE_AGPL_3_0</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga31c303a3e473b086b1f8225cd6c47db4a89125d6f7fadb96a8fc504b784957c9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LICENSE_AGPL_3_0_ONLY</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga31c303a3e473b086b1f8225cd6c47db4a8f117081ffd3c69db9a063eed9ddebd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ApplicationInhibitFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga5214469eb7025397aaecaf904b7e1390</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>APPLICATION_INHIBIT_LOGOUT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5214469eb7025397aaecaf904b7e1390aa8ac700bfd372662de04eebdf191ed30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>APPLICATION_INHIBIT_SWITCH</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5214469eb7025397aaecaf904b7e1390ae80f8f7475c632aa04a3d733d6b1a639</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>APPLICATION_INHIBIT_SUSPEND</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5214469eb7025397aaecaf904b7e1390a5030bca1a33facabb55e93a3634067d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>APPLICATION_INHIBIT_IDLE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5214469eb7025397aaecaf904b7e1390adc1e273b35e06c654489d965d2ac6a92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AssistantPageType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga0cc30724e08e01366c885a8051ffe635</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ASSISTANT_PAGE_CONTENT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0cc30724e08e01366c885a8051ffe635a7fc1ecc8c8e03b66dcb71bb75acfdf8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ASSISTANT_PAGE_INTRO</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0cc30724e08e01366c885a8051ffe635ac723440995c9f9306d9d11f58dd95823</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ASSISTANT_PAGE_CONFIRM</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0cc30724e08e01366c885a8051ffe635af3ff5083682b4a4e2073ebb5ff21e7b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ASSISTANT_PAGE_SUMMARY</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0cc30724e08e01366c885a8051ffe635a53a8055a936c73497ed794e1ef1b6fce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ASSISTANT_PAGE_PROGRESS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0cc30724e08e01366c885a8051ffe635a16e0ed523f027117213868debe9e8050</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ASSISTANT_PAGE_CUSTOM</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0cc30724e08e01366c885a8051ffe635ab28fa803a92e666c7824f43a484ed44e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PackOptions</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga83727a1b6fed51566dfd5c8e58890dba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PACK_SHRINK</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gga83727a1b6fed51566dfd5c8e58890dbaac313cacfd3687cf669b07a636b884f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PACK_EXPAND_PADDING</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gga83727a1b6fed51566dfd5c8e58890dbaa074ce079bed2415c97de70acf6afb8f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PACK_EXPAND_WIDGET</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gga83727a1b6fed51566dfd5c8e58890dbaa7b88e2329efd6367522358da92a3a736</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTONBOX_DEFAULT_SPACING</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ggaf6f7a88cac1c71271e56ce8daa01d07eaf17adb822bc4ac658b3f137a5026f773</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CalendarDisplayOptions</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad728f6abafdc4512321ff59dd35b4328</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALENDAR_SHOW_HEADING</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gad728f6abafdc4512321ff59dd35b4328a37a27bd0ac788ced46fe9fc2312b0f7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALENDAR_SHOW_DAY_NAMES</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gad728f6abafdc4512321ff59dd35b4328a597be9e7f6556db3694259e4d40ad10e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALENDAR_NO_MONTH_CHANGE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gad728f6abafdc4512321ff59dd35b4328a98ec78725f00dffb0c23196b68696699</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALENDAR_SHOW_WEEK_NUMBERS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gad728f6abafdc4512321ff59dd35b4328a7e24656656961167e559811b697d9f1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALENDAR_SHOW_DETAILS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gad728f6abafdc4512321ff59dd35b4328af30ee771cd528a318fed75722ae599dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CellRendererState</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga7061270b7c31ba72e053ab001ec2b877</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CELL_RENDERER_SELECTED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7061270b7c31ba72e053ab001ec2b877aea7cf8806fead01dcf55c9de2f516148</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CELL_RENDERER_PRELIT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7061270b7c31ba72e053ab001ec2b877ae77104521fe2844378ed7e21a0a14ffd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CELL_RENDERER_INSENSITIVE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7061270b7c31ba72e053ab001ec2b877a87321b7df12a3464860f2f11f0a332d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CELL_RENDERER_SORTED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7061270b7c31ba72e053ab001ec2b877afe74bd6b585ffeaed2c335b07a817db2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CELL_RENDERER_FOCUSED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7061270b7c31ba72e053ab001ec2b877a83a9e9082d5f28120df0dceb44f8e30e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CELL_RENDERER_EXPANDABLE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7061270b7c31ba72e053ab001ec2b877a732affdb899af485d9ce68e8b80436f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CELL_RENDERER_EXPANDED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7061270b7c31ba72e053ab001ec2b877a5cf4de9f6fc46ccff05e28fbff864d01</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CellRendererMode</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaf272c01b5a3cb656e373301223b1eecf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CELL_RENDERER_MODE_INERT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf272c01b5a3cb656e373301223b1eecfa8c8035c2bd3dd67df12fde128bbdf921</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CELL_RENDERER_MODE_ACTIVATABLE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf272c01b5a3cb656e373301223b1eecfa9797d47dfec3257eed44657f820b044d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CELL_RENDERER_MODE_EDITABLE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf272c01b5a3cb656e373301223b1eecfacd558d4850315ecf50ac7e1d121829dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CellRendererAccelMode</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaef820baa45214a2ba2af8fb144ca9137</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CELL_RENDERER_ACCEL_MODE_GTK</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaef820baa45214a2ba2af8fb144ca9137a4cbe81e1e5d3eeecd84d1384024d4dae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CELL_RENDERER_ACCEL_MODE_OTHER</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaef820baa45214a2ba2af8fb144ca9137ad6c8497e4243d9d0bd75e6a12e10be13</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CssSectionType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga5b38e1f2b7ce6b61f8293cbccd549e2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CSS_SECTION_DOCUMENT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5b38e1f2b7ce6b61f8293cbccd549e2ba80047ec1f3bc5172870cd44374c9416f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CSS_SECTION_IMPORT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5b38e1f2b7ce6b61f8293cbccd549e2bae3fc87b8d9c4065b110de4290b6e7003</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CSS_SECTION_COLOR_DEFINITION</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5b38e1f2b7ce6b61f8293cbccd549e2ba5bc0947828e0c586a9d61cb7ce8d9daa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CSS_SECTION_BINDING_SET</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5b38e1f2b7ce6b61f8293cbccd549e2ba9e3680cce551a123effb29df37459790</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CSS_SECTION_RULESET</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5b38e1f2b7ce6b61f8293cbccd549e2ba33a9124dd0153fccd99cf12d8cd23f0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CSS_SECTION_SELECTOR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5b38e1f2b7ce6b61f8293cbccd549e2baaa08a6765d408ba8d02ac5a4ef3bfbda</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CSS_SECTION_DECLARATION</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5b38e1f2b7ce6b61f8293cbccd549e2ba440dae333464b2c9c1b62887a51095bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CSS_SECTION_VALUE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5b38e1f2b7ce6b61f8293cbccd549e2bae47c16b290bbcfadede5a391080e391e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CSS_SECTION_KEYFRAMES</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5b38e1f2b7ce6b61f8293cbccd549e2ba65be0362005e6dce2e9a880cf4e4ae6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DialogFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gab353a3da9b5bcdc1e81fbfef2db13311</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIALOG_MODAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gab353a3da9b5bcdc1e81fbfef2db13311a64a2415926fcc7be656106bec3592f79</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIALOG_DESTROY_WITH_PARENT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gab353a3da9b5bcdc1e81fbfef2db13311af0a691b2857540e95ee48f0ca8a64bfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIALOG_USE_HEADER_BAR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gab353a3da9b5bcdc1e81fbfef2db13311a272355d12378b77430f3c9381a0ef8ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ResponseType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga407d25a7b827dbdb685077de442e9b38</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESPONSE_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga407d25a7b827dbdb685077de442e9b38a5c7275fe57b1eaf0119bf0f2ca65112c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESPONSE_REJECT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga407d25a7b827dbdb685077de442e9b38a29e122e85bcec7f98d58dfb72f0ce684</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESPONSE_ACCEPT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga407d25a7b827dbdb685077de442e9b38a245efaf9799ba0d286fa2192d86f58eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESPONSE_DELETE_EVENT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga407d25a7b827dbdb685077de442e9b38ad58fdfe87de2ee3c1b066a2d357e6ca3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESPONSE_OK</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga407d25a7b827dbdb685077de442e9b38a47872c2b8ad2edefae6419681b1c7e84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESPONSE_CANCEL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga407d25a7b827dbdb685077de442e9b38a1486658490c768438187a06862643831</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESPONSE_CLOSE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga407d25a7b827dbdb685077de442e9b38ab148ae632c0c04490009bd93673e82b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESPONSE_YES</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga407d25a7b827dbdb685077de442e9b38ab4893ca38fab279f709f1b2a5efd72fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESPONSE_NO</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga407d25a7b827dbdb685077de442e9b38a0485d293a3feb556ac3fb5aebb0d003b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESPONSE_APPLY</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga407d25a7b827dbdb685077de442e9b38a21f976076a45e56820ff3853e5cd39e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESPONSE_HELP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga407d25a7b827dbdb685077de442e9b38ae3af5a737412ee91eef1fd78317dbeb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EntryIconPosition</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae34921e41dbd5ca92e75a80065d62cf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENTRY_ICON_PRIMARY</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae34921e41dbd5ca92e75a80065d62cf0afdf81b56ad8e85b97dd3cec728e56293</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENTRY_ICON_SECONDARY</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae34921e41dbd5ca92e75a80065d62cf0ab0297b876e8a4ad71e6d1db64d130f1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AccelFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gab431162192e6ad78f2153cae6683238a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ACCEL_VISIBLE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gab431162192e6ad78f2153cae6683238aad7562a0f2f0000a0bce91e7e83bb92a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ACCEL_LOCKED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gab431162192e6ad78f2153cae6683238aa9b89ac31b2eb78022989d052e01e42b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ACCEL_MASK</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gab431162192e6ad78f2153cae6683238aa6d759cfbbc6e94d41662b320ec4817d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Align</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga07dda5f4c3d75f3ccb9fbec43a46b411</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGN_FILL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga07dda5f4c3d75f3ccb9fbec43a46b411ae3d4c67d808533746be100d173746498</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGN_START</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga07dda5f4c3d75f3ccb9fbec43a46b411a3f0677f2866fecc0af32c4935287d7ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGN_END</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga07dda5f4c3d75f3ccb9fbec43a46b411aadcf2166315ddc18b738025fab7d102b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGN_CENTER</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga07dda5f4c3d75f3ccb9fbec43a46b411aa560699006483237ca58e1b4980cd637</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGN_BASELINE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga07dda5f4c3d75f3ccb9fbec43a46b411a2c20b5c52d556e3452f3cce1e805cc4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ArrowType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga5f1b4259f10ccf40735a017cff64782a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARROW_UP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5f1b4259f10ccf40735a017cff64782aa2176a17580cff7b35387461894214e6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARROW_DOWN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5f1b4259f10ccf40735a017cff64782aa9c7da4efc5bf0283761391ecd12e4b2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARROW_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5f1b4259f10ccf40735a017cff64782aa140e50343f20f603b6205357c279edb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARROW_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5f1b4259f10ccf40735a017cff64782aa317f40896cf95c72545d4e06b8467807</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARROW_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5f1b4259f10ccf40735a017cff64782aa5953ea19b33f383c839f6e1fd6a51b19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AttachOptions</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad0ae047e9bb4f262003dbb94468f5d81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPAND</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gad0ae047e9bb4f262003dbb94468f5d81a376c39238459ee8d7dcb06ba100c4259</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHRINK</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gad0ae047e9bb4f262003dbb94468f5d81aa150380dbcd41f196d5fa3b1761c0160</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FILL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gad0ae047e9bb4f262003dbb94468f5d81a036abcca77c9906e325a7bbd2a9787ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ButtonBoxStyle</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaf8380aa1633c0cc444fa28086237e056</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTONBOX_SPREAD</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf8380aa1633c0cc444fa28086237e056a5d2b4fcbd4e36c034ec1467b69bb1fec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTONBOX_EDGE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf8380aa1633c0cc444fa28086237e056a53f2aeec62ad11c4f5a2059ae9850bcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTONBOX_START</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf8380aa1633c0cc444fa28086237e056a206f53b180e95831dde9c8617dd18f6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTONBOX_END</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf8380aa1633c0cc444fa28086237e056a41a16e6765e52df735280b4d605cb78c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTONBOX_CENTER</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf8380aa1633c0cc444fa28086237e056ace269058ee556ffe0deb6181b22f9d49</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTONBOX_EXPAND</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf8380aa1633c0cc444fa28086237e056ac99d72ff0d7c25787439c808ed4a04b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DeleteType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga9c026e86bfa8453a9894d7372046ab3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELETE_CHARS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga9c026e86bfa8453a9894d7372046ab3aa37ad588d7ea168cec4100bc827733b74</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELETE_WORD_ENDS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga9c026e86bfa8453a9894d7372046ab3aa5a3192dc21e92bbae4526f6e5128d09d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELETE_WORDS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga9c026e86bfa8453a9894d7372046ab3aa120d87deb3b71735efd99db32db4eb97</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELETE_DISPLAY_LINES</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga9c026e86bfa8453a9894d7372046ab3aa6356fdd5a3a2d009d2cafc522e809b17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELETE_DISPLAY_LINE_ENDS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga9c026e86bfa8453a9894d7372046ab3aae89e530ac2288476cfa72b481d92a383</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELETE_PARAGRAPH_ENDS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga9c026e86bfa8453a9894d7372046ab3aa2866c2313cd5c3aea3ab9ae59210dd2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELETE_PARAGRAPHS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga9c026e86bfa8453a9894d7372046ab3aa91e0b0a1c4c9e5665c2c3d83080e74e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELETE_WHITESPACE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga9c026e86bfa8453a9894d7372046ab3aa1821447aecd9ceee9992065b267534b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DirectionType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga6c754c32a8421f746367b43c277e4d7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIR_TAB_FORWARD</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6c754c32a8421f746367b43c277e4d7ba9862c2e5e6ec0b814c9a7efa2dd73451</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIR_TAB_BACKWARD</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6c754c32a8421f746367b43c277e4d7ba26bf66835c56302d2b072cebbfce190b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIR_UP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6c754c32a8421f746367b43c277e4d7baf77a7b57f9a5f6fa5d7cb01899893f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIR_DOWN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6c754c32a8421f746367b43c277e4d7bada1c4b43adee3a13bc86e6ad6b9cefd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIR_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6c754c32a8421f746367b43c277e4d7bab7c09e54d85b8c99b0d24faa8484da3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIR_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6c754c32a8421f746367b43c277e4d7ba7ac7bb87e3d6f52b106f70e3afc51262</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ExpanderStyle</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga89d4d4f59bc9ab0c75c48f24c512ed1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPANDER_COLLAPSED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga89d4d4f59bc9ab0c75c48f24c512ed1caf06d5045b841a68bb0aa37a4d86867ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPANDER_SEMI_COLLAPSED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga89d4d4f59bc9ab0c75c48f24c512ed1ca1df4038af3f26a7b3c431f69e1e3d4b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPANDER_SEMI_EXPANDED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga89d4d4f59bc9ab0c75c48f24c512ed1ca044edf4e87235822b7ee816331bda042</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPANDER_EXPANDED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga89d4d4f59bc9ab0c75c48f24c512ed1ca08e6170ea32ae3f383065be8e33ee7ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BuiltinIconSize</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaeb555deb523560fe697977c2f8adbb76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_SIZE_INVALID</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaeb555deb523560fe697977c2f8adbb76a730c38e92a77f6ab3c9ee711ae3aa5c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_SIZE_MENU</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaeb555deb523560fe697977c2f8adbb76ae36e75552853448d657f8ce2932e2347</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_SIZE_SMALL_TOOLBAR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaeb555deb523560fe697977c2f8adbb76a5c456088e657e875dd36fe07958f6411</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_SIZE_LARGE_TOOLBAR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaeb555deb523560fe697977c2f8adbb76a36cb5067991a868d96805ca8415db596</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_SIZE_BUTTON</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaeb555deb523560fe697977c2f8adbb76a4d61489945b35ad6d42eb80f6f2b593d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_SIZE_DND</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaeb555deb523560fe697977c2f8adbb76ae40e0f525de9fc62607612d0ac1cb0ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_SIZE_DIALOG</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaeb555deb523560fe697977c2f8adbb76a36e0dc3dd54cebcf5438d23402299d84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TextDirection</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaabfcae0b9b0cf2aab01ee96352668d3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXT_DIR_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaabfcae0b9b0cf2aab01ee96352668d3da69c1bcdaec2e1b1fc34555ad8517ba66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXT_DIR_LTR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaabfcae0b9b0cf2aab01ee96352668d3da28d53c45c2db804905c1d6bda83bcd29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXT_DIR_RTL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaabfcae0b9b0cf2aab01ee96352668d3da8a89e14b56b45428f734cd2458c2aa2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Justification</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga5ba228222f6b4bfde1d59eb7134549be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUSTIFY_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5ba228222f6b4bfde1d59eb7134549beadee351ce61b32c978134bd10345ec36c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUSTIFY_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5ba228222f6b4bfde1d59eb7134549beabb1df35625b72c982274681b226a3439</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUSTIFY_CENTER</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5ba228222f6b4bfde1d59eb7134549bea0cd28bb1e5223721e47e108025140ae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUSTIFY_FILL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5ba228222f6b4bfde1d59eb7134549bea0cfe49a130f57bc657098506d4d2e6bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MenuDirectionType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae902f8d62fa1e764d6bd22e8a0e8e015</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENU_DIR_PARENT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae902f8d62fa1e764d6bd22e8a0e8e015afb7165662689fc905ca6f35ee2d59450</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENU_DIR_CHILD</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae902f8d62fa1e764d6bd22e8a0e8e015abd6d511559fc92afcf905f1198800c0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENU_DIR_NEXT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae902f8d62fa1e764d6bd22e8a0e8e015a6f6ad369220aebae179aea3851ff1bf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENU_DIR_PREV</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae902f8d62fa1e764d6bd22e8a0e8e015a7f4f97444c9199686631a3ddffb027f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MessageType</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>a8698319d7eb64b1f297b04e4e5c7809b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_INFO</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>a8698319d7eb64b1f297b04e4e5c7809bae4f6e0b8c4f4d026cc91d4c7fa2c5aa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_WARNING</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>a8698319d7eb64b1f297b04e4e5c7809ba935925486603741fdc5fb9aed8499e02</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_QUESTION</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>a8698319d7eb64b1f297b04e4e5c7809ba1cc0d02e3dd05ef5fc4c1f51b00c46d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_ERROR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>a8698319d7eb64b1f297b04e4e5c7809ba8ee71b86b3d0d5a1ce0f1c630d75af8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MESSAGE_OTHER</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>a8698319d7eb64b1f297b04e4e5c7809ba6e41b780cf4055c53bea08e444caa0c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MovementStep</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga26a9a2bc22d7c9d4a635c54eecd2bdec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOVEMENT_LOGICAL_POSITIONS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga26a9a2bc22d7c9d4a635c54eecd2bdeca3eb679c5a338f917602f09e9ac214cb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOVEMENT_VISUAL_POSITIONS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga26a9a2bc22d7c9d4a635c54eecd2bdecaf87c34a13728a8898630e8b6684dcb8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOVEMENT_WORDS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga26a9a2bc22d7c9d4a635c54eecd2bdecaa1ba25ca801594c8dbe8185b3938604a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOVEMENT_DISPLAY_LINES</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga26a9a2bc22d7c9d4a635c54eecd2bdeca4dd7dc439249289fbf8a0fab8ba0099b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOVEMENT_DISPLAY_LINE_ENDS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga26a9a2bc22d7c9d4a635c54eecd2bdecaa8aa5e1ad0eca65a946a863da14cf2e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOVEMENT_PARAGRAPHS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga26a9a2bc22d7c9d4a635c54eecd2bdecadda7f9206047bf3b0614b128864b8c98</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOVEMENT_PARAGRAPH_ENDS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga26a9a2bc22d7c9d4a635c54eecd2bdecaeaebba22dd0ccf8475d86189a692dfe0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOVEMENT_PAGES</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga26a9a2bc22d7c9d4a635c54eecd2bdeca1f611811ebde97caef097737500739af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOVEMENT_BUFFER_ENDS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga26a9a2bc22d7c9d4a635c54eecd2bdeca0ee138d9060106789677b4bfbe0a3472</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOVEMENT_HORIZONTAL_PAGES</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga26a9a2bc22d7c9d4a635c54eecd2bdecae876ba46f0147ce8961ebf35e2c581ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Orientation</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga84179a467b0ed4f61b4e325eb09b0b1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ORIENTATION_HORIZONTAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga84179a467b0ed4f61b4e325eb09b0b1ca9918e94af1a41d338c12de7e70f263b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ORIENTATION_VERTICAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga84179a467b0ed4f61b4e325eb09b0b1ca8e2f05df3412d16178e1a0e8e699f197</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CornerType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gacb771ef9e379831be8ae9711cf01796a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CORNER_TOP_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gacb771ef9e379831be8ae9711cf01796aae79d63a5073aaac728d89792f9527fb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CORNER_BOTTOM_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gacb771ef9e379831be8ae9711cf01796aa0e97f03ddb7d8329a249aaa7c2d19342</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CORNER_TOP_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gacb771ef9e379831be8ae9711cf01796aad1812d377aac992eb60733525540074c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CORNER_BOTTOM_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gacb771ef9e379831be8ae9711cf01796aa2a95eb38efc0cfef304dddeebfe06ec8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PackType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gafd31781c802e2887a7898b442780662d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PACK_START</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gafd31781c802e2887a7898b442780662daf8e4cb47658ea8e4b9bc4304971c98f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PACK_END</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gafd31781c802e2887a7898b442780662dace98cc48fc4c5573a26a044df6dd90cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PathPriorityType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga1ddc33ed74bc2f243d05391434845397</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PATH_PRIO_LOWEST</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga1ddc33ed74bc2f243d05391434845397acfd1a726a40bc82edd0b1c49fc67bb0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PATH_PRIO_GTK</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga1ddc33ed74bc2f243d05391434845397a6ad24aaf2d67d43278e788da386fed8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PATH_PRIO_APPLICATION</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga1ddc33ed74bc2f243d05391434845397a9f54f24eba293a0ae219c947434164e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PATH_PRIO_THEME</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga1ddc33ed74bc2f243d05391434845397a87a17fa7b8eecffd6200afcffc88219d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PATH_PRIO_RC</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga1ddc33ed74bc2f243d05391434845397a88bd33a30a6a23877a87a54e22f739f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PATH_PRIO_HIGHEST</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga1ddc33ed74bc2f243d05391434845397aee93011afafc66a4aa413aea37d2617d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PathType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga7a597389c9973f73edd08589e12a3798</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PATH_WIDGET</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7a597389c9973f73edd08589e12a3798a77d5ab895e8ada83d1e45de394e850c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PATH_WIDGET_CLASS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7a597389c9973f73edd08589e12a3798ac63908cc1689487118dd8fcb9b4a08de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PATH_CLASS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7a597389c9973f73edd08589e12a3798a48487613c7d2df1606f554beab3ecd9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PlacesOpenFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga2697cced647fdc326af296be5fb56cd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLACES_OPEN_NORMAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2697cced647fdc326af296be5fb56cd0af902611d26ecd18f992dfee9ee26cf65</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLACES_OPEN_NEW_TAB</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2697cced647fdc326af296be5fb56cd0a33b495d58a5ab91ffd01958fe697f11b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLACES_OPEN_NEW_WINDOW</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2697cced647fdc326af296be5fb56cd0a46c7d4ceb3d7ea68cfbe572ff85e43b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PolicyType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gacb7ebcc442f2bdbeca2bf7436c18ffd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POLICY_ALWAYS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gacb7ebcc442f2bdbeca2bf7436c18ffd9af4930c8ffe7cf28c8e4e5980c964b314</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POLICY_AUTOMATIC</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gacb7ebcc442f2bdbeca2bf7436c18ffd9a71654394d09bd1e064bc3172cb6e030a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POLICY_NEVER</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gacb7ebcc442f2bdbeca2bf7436c18ffd9a9f017f33f350f7bb7d2784b5359fa9fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POLICY_EXTERNAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gacb7ebcc442f2bdbeca2bf7436c18ffd9acc5e00e96081e54a15f1d4012faf2002</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PositionType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3568edcd04af4a2cbd1eb0195513fe6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POS_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga3568edcd04af4a2cbd1eb0195513fe6ba5c6ed0e9d245e51a0e3935bfcc2e8016</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POS_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga3568edcd04af4a2cbd1eb0195513fe6ba77d4efba9fc846f832ee0c6c0d1a32a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POS_TOP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga3568edcd04af4a2cbd1eb0195513fe6ba9d8cbe5c86b9eda147d745732ec4e159</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POS_BOTTOM</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga3568edcd04af4a2cbd1eb0195513fe6ba392d25c1053b73adbacf716dc6b71deb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ReliefStyle</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga11df7b40133f3cd29b07bd87c969ff42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RELIEF_NORMAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga11df7b40133f3cd29b07bd87c969ff42ad12cfa2416bbe7cd16cab7d7640a50cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RELIEF_HALF</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga11df7b40133f3cd29b07bd87c969ff42a161ced4abffb2a538e71f1bf55ab3c55</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RELIEF_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga11df7b40133f3cd29b07bd87c969ff42a70e24f406ab368ed7b4abef302205ad3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ResizeMode</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad226b0aaa5fb1a2d445bee61e7acb9e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESIZE_PARENT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gad226b0aaa5fb1a2d445bee61e7acb9e0a22670bc0a9ae953d808f6478f6d32b62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESIZE_QUEUE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gad226b0aaa5fb1a2d445bee61e7acb9e0aa643c65600ae73d106391466216c410d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESIZE_IMMEDIATE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gad226b0aaa5fb1a2d445bee61e7acb9e0a81cfd210bfcc60670303ebaef0356d70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RevealerTransitionType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga027016b2a3cb48c00420bd5c883d2542</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REVEALER_TRANSITION_TYPE_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga027016b2a3cb48c00420bd5c883d2542a72868363bb97f2d8fa427b74406d33a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REVEALER_TRANSITION_TYPE_CROSSFADE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga027016b2a3cb48c00420bd5c883d2542a1bbc80fcde9ba9a6aa97c9cdc3385229</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REVEALER_TRANSITION_TYPE_SLIDE_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga027016b2a3cb48c00420bd5c883d2542a56e524e279b378bfbf9059d9c096c1e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REVEALER_TRANSITION_TYPE_SLIDE_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga027016b2a3cb48c00420bd5c883d2542a2c0f667baa48dddd34dbbf44ca8a7955</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REVEALER_TRANSITION_TYPE_SLIDE_UP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga027016b2a3cb48c00420bd5c883d2542a41955103a3ca30cd0b3c9307888c32a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REVEALER_TRANSITION_TYPE_SLIDE_DOWN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga027016b2a3cb48c00420bd5c883d2542a05684b82fb5668ccd944accb2db8b57d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ScrollType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8a36fc0022c4f190a04e739c27c7af4696</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_JUMP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8ac5ffafe75d7632a1f0f82a0950a75348</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_STEP_BACKWARD</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8aa3b301978fcbc81fd5326c7e5e2cc910</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_STEP_FORWARD</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8a7f440f824c5fa0076a67fa001cbb3abb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_PAGE_BACKWARD</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8af781f792cfc680acb1d30503ae9c156f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_PAGE_FORWARD</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8ab11d5ac8f9734174121ad5360b3cd3c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_STEP_UP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8a5fb8c06a5c956eab066ae3cb1216df5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_STEP_DOWN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8a14208fe68d8549b99d4074f2a31be79c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_PAGE_UP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8adcaecd605f3f05e6509a559d5297a8bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_PAGE_DOWN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8affdf6943e771ca1b939cd415952c3929</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_STEP_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8a341b34a41674863c58749d4c9f352a8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_STEP_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8a92816c59cdd70fef2234cac5a763bd38</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_PAGE_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8a400f21ccdc4bad2c95af8d673ca06a91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_PAGE_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8ac78a2ffdf2caa4cfa32a56f7c7bc784c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_START</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8a59f728a4a6606ea877081d4616f97f71</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_END</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8a684812272ff99c9930f9ca79ab38e4dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SelectionMode</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3e58167cfed0be4c87474c3bdca80d78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SELECTION_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga3e58167cfed0be4c87474c3bdca80d78a2403cfaa9075ec8697964a06ea1bf784</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SELECTION_SINGLE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga3e58167cfed0be4c87474c3bdca80d78ad13a716e12870c274b1ec2c93ab1ad8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SELECTION_BROWSE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga3e58167cfed0be4c87474c3bdca80d78a20ff440f8431e847329a83c901bcad2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SELECTION_MULTIPLE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga3e58167cfed0be4c87474c3bdca80d78a0001344812be65bc09b8acc4dcf8eec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ShadowType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gac5cfb21bae7f04c83c5eabdacb92512e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHADOW_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac5cfb21bae7f04c83c5eabdacb92512eac6e4e14b2db0f4f33ef61747730cceb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHADOW_IN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac5cfb21bae7f04c83c5eabdacb92512ea42e7aff5d2966a06a71598ed0917057c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHADOW_OUT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac5cfb21bae7f04c83c5eabdacb92512ea0e084c75408cf580fcd1b9a734597c34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHADOW_ETCHED_IN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac5cfb21bae7f04c83c5eabdacb92512ea0afc0f91569d5e26cfb9127fb4995b50</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHADOW_ETCHED_OUT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac5cfb21bae7f04c83c5eabdacb92512ea4ef9d30bcece2a1dd5171caf9fd83e8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StackTransitionType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290aef719e0d8aa77d6e8b64e95702e52a7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_CROSSFADE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290aa8d297dd2e01d1550983aa2ce142ad12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_SLIDE_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290a966cfaf1fcaa3a5ca8b4d484ccb9b699</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_SLIDE_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290abb4662651344b3b0cfa228781294d0a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_SLIDE_UP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290adc9a1ba0c47986f2df0d1c7d04da0db2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_SLIDE_DOWN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290abef5c19753c846491900eb613a1b3b5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_SLIDE_LEFT_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290a777421c0d4c77eeec38a0f419f9e3cdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_SLIDE_UP_DOWN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290a79f37efbc5b01bfa24162f71503c5e38</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_OVER_UP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290aa7ce5b0e2a1d2ac334baeccb36972499</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_OVER_DOWN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290a811203b1285977341a66dbceca60d511</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_OVER_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290a5caf7a14a794d4ab732b15e9178cee04</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_OVER_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290a44a960402e2350011e829145cf04db7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_UNDER_UP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290a473b692e67d1a37931f73b7b4cbaa44d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_UNDER_DOWN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290a2c7cd1d681a89bdd8da1fbeba1270a10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_UNDER_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290a264c3bca7d433eb973c33c86b9331ef1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_UNDER_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290a9e18e802c5e0c11a62b95f018d107f98</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_OVER_UP_DOWN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290a8ec28f833c9824ea5b3906df6fbc4ba4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_OVER_DOWN_UP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290a90bb77445eff2352c68dce1940668131</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_OVER_LEFT_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290a1d42b8f535e321943e9c29bf27cf85c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_OVER_RIGHT_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290aa10d372c95443c307f678519563c06a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StateType</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ae389c7fef8176df3e8b7992c521d9661</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_NORMAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ae389c7fef8176df3e8b7992c521d9661ab972af7dcd1b41cd5ed7bf4105ff9d26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_ACTIVE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ae389c7fef8176df3e8b7992c521d9661a78123c2afdc4f454588183f24d5cdec5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_PRELIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ae389c7fef8176df3e8b7992c521d9661a42af297cf14c1c32285fda89737b90a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_SELECTED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ae389c7fef8176df3e8b7992c521d9661a8229be2f7942bc45df66b5e79dfc181d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_INSENSITIVE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ae389c7fef8176df3e8b7992c521d9661a256f6cfb75b9adb8ee634af7f97830c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_INCONSISTENT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ae389c7fef8176df3e8b7992c521d9661a468e5b6b495d7702e0ef5b4debb391d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_FOCUSED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ae389c7fef8176df3e8b7992c521d9661ab046b8d8a6a8b56e0edddae9b33e0954</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TargetFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gac7b573a509498007baa2ea1ee90c66de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TARGET_SAME_APP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac7b573a509498007baa2ea1ee90c66dea874f95413ec617a74dd0d261dfb5f160</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TARGET_SAME_WIDGET</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac7b573a509498007baa2ea1ee90c66dea2ff4f113f21f90243d89fe84242325d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TARGET_OTHER_APP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac7b573a509498007baa2ea1ee90c66deadd84b78ca4468dcfa423a353e557e1e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TARGET_OTHER_WIDGET</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac7b573a509498007baa2ea1ee90c66dea32816ed2963fba345aa3f3f9daac6357</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ToolbarStyle</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga5aad48684bb486d0aaca8c5aceb64b58</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOOLBAR_ICONS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5aad48684bb486d0aaca8c5aceb64b58ac0641be36b8044e3cb0c5acf34baebeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOOLBAR_TEXT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5aad48684bb486d0aaca8c5aceb64b58aaf11d62f75aedd9adde34f1c79295952</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOOLBAR_BOTH</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5aad48684bb486d0aaca8c5aceb64b58a72a6f5866f58e6d171450b84d7741afa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOOLBAR_BOTH_HORIZ</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5aad48684bb486d0aaca8c5aceb64b58a6bc61cf2744678c173e86f32e3ed8159</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WindowPosition</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gabfa67443f852c48477b2d55b15982e21</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WIN_POS_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gabfa67443f852c48477b2d55b15982e21ad3d5ca98f6fb9fa93839b848bbae55c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WIN_POS_CENTER</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gabfa67443f852c48477b2d55b15982e21a38664c1583bb395801e1416990ee4b1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WIN_POS_MOUSE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gabfa67443f852c48477b2d55b15982e21a07318e190a15f3761a698baa3bfee76f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WIN_POS_CENTER_ALWAYS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gabfa67443f852c48477b2d55b15982e21a17be77abd851915fe9d44c6e4b2fe408</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WIN_POS_CENTER_ON_PARENT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gabfa67443f852c48477b2d55b15982e21ab091a84afb95b87275271257c657faed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WindowType</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>a8c724168aabf37953fbb194b35ad250f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TOPLEVEL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>a8c724168aabf37953fbb194b35ad250fa2dda9d11bc0893e86750771f627954eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_POPUP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>a8c724168aabf37953fbb194b35ad250fab998cf1e4344c15e7545be64844c2843</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WrapMode</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ad4b21987a45f87bbdae74d63d92e543b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WRAP_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ad4b21987a45f87bbdae74d63d92e543ba154f029a96f7e1c4c4cbd76e4cf23fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WRAP_CHAR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ad4b21987a45f87bbdae74d63d92e543ba10f1945447e9fdbfe836a0ceb8cf3b1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WRAP_WORD</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ad4b21987a45f87bbdae74d63d92e543bab2c2c67518cd1f5e02b016c6d42b80d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WRAP_WORD_CHAR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ad4b21987a45f87bbdae74d63d92e543ba6ca3cb24645363c6e61f5b92385e06a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SortType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga6052510d27fae00eed4aaa3640ff9fbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SORT_ASCENDING</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6052510d27fae00eed4aaa3640ff9fbea0fdd9cfa6fc0ffe08bde47a2e5427e62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SORT_DESCENDING</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6052510d27fae00eed4aaa3640ff9fbeab5ff002d205cfd26ce7c20e55d6695d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PageOrientation</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga466045b8876a149482ab0034c53302bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAGE_ORIENTATION_PORTRAIT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga466045b8876a149482ab0034c53302bfaa379c057ca758f2ecf7add5a2dd04b85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAGE_ORIENTATION_LANDSCAPE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga466045b8876a149482ab0034c53302bfa7d4cd29dab9c4d3f0ab9d9617545d938</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAGE_ORIENTATION_REVERSE_PORTRAIT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga466045b8876a149482ab0034c53302bfadf701e2cf00716bdc8650d0404d2e42c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAGE_ORIENTATION_REVERSE_LANDSCAPE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga466045b8876a149482ab0034c53302bfa302aec905525b8ab7f618c458e39566c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SensitivityType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga20c60e5d15f0bd720bdbd72567414baa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SENSITIVITY_AUTO</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga20c60e5d15f0bd720bdbd72567414baaad9f626a65e06617d8d99df3358c25260</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SENSITIVITY_ON</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga20c60e5d15f0bd720bdbd72567414baaa9aded8cd00664bec5e0f8a46746600ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SENSITIVITY_OFF</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga20c60e5d15f0bd720bdbd72567414baaabbadfd2bdfc64b1b8a63fb73d53c329a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SizeRequestMode</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga35be6d001d814dbf37bd405433b06cf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIZE_REQUEST_HEIGHT_FOR_WIDTH</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga35be6d001d814dbf37bd405433b06cf5ad76703251eed37bb48ca3afcd648c902</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIZE_REQUEST_WIDTH_FOR_HEIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga35be6d001d814dbf37bd405433b06cf5ade6387b8dbdbf6f1dc6bd86e519bec25</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIZE_REQUEST_CONSTANT_SIZE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga35be6d001d814dbf37bd405433b06cf5a7854e443464b5c01756f2a098280356e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RegionFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gadc4fb4d2dff732ed7c11f2620e3be645</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REGION_EVEN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gadc4fb4d2dff732ed7c11f2620e3be645ad725ca224c74cdfb4dbd9f666943c15c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REGION_ODD</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gadc4fb4d2dff732ed7c11f2620e3be645ab51dbf567248929766a31448ae1bbddf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REGION_FIRST</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gadc4fb4d2dff732ed7c11f2620e3be645aa6e68fa619783e0dcf24bcd79f5f01ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REGION_LAST</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gadc4fb4d2dff732ed7c11f2620e3be645abb8a736fc08a5750fb6f835558fdd18f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REGION_ONLY</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gadc4fb4d2dff732ed7c11f2620e3be645aeeaba253cace0a6f8ae7822710544d69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REGION_SORTED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gadc4fb4d2dff732ed7c11f2620e3be645a5be665c3a99c229c4cad187794a17a25</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>JunctionSides</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga84b9903c70a332deb86a58d31236b20b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUNCTION_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga84b9903c70a332deb86a58d31236b20ba38f18694adab82d5215ac085c18020fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUNCTION_CORNER_TOPLEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga84b9903c70a332deb86a58d31236b20ba2b843b29dc201c8260d57c2f9940accd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUNCTION_CORNER_TOPRIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga84b9903c70a332deb86a58d31236b20ba4ab511b9950c7f610a081b4ae651ef18</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUNCTION_CORNER_BOTTOMLEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga84b9903c70a332deb86a58d31236b20bacffade4ee988af065ae22c7a0ebf7166</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUNCTION_CORNER_BOTTOMRIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga84b9903c70a332deb86a58d31236b20ba97a0caf7af6ab0000259400093ee5560</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUNCTION_TOP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga84b9903c70a332deb86a58d31236b20baa76f6c7c262f1ef52618212202d19769</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUNCTION_BOTTOM</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga84b9903c70a332deb86a58d31236b20ba5cb5788835ac6c08c8182b50108168b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUNCTION_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga84b9903c70a332deb86a58d31236b20baf4da33baac2577a9925cddc69936d3a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUNCTION_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga84b9903c70a332deb86a58d31236b20baab86b06e1c132043a932b29b39fb17d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StateFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga0a5e26de0d09b403a8487431c69c29e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_FLAG_NORMAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0a5e26de0d09b403a8487431c69c29e8a15696a1cc0c337db0c6f9baa8a3ee7bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_FLAG_ACTIVE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0a5e26de0d09b403a8487431c69c29e8a2e4640bea89efda3867020ed078e7b78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_FLAG_PRELIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0a5e26de0d09b403a8487431c69c29e8a40ab773048569ae3bdf7f46bd8d452df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_FLAG_SELECTED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0a5e26de0d09b403a8487431c69c29e8a2662f18924be84868b87426e906a3fde</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_FLAG_INSENSITIVE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0a5e26de0d09b403a8487431c69c29e8a8655295c61306d383e1617146a401c15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_FLAG_INCONSISTENT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0a5e26de0d09b403a8487431c69c29e8af8dc0f4e2a0eaa264ff09c730635daec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_FLAG_FOCUSED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0a5e26de0d09b403a8487431c69c29e8a5ca5c369e7254627e39520e4b316ebbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_FLAG_BACKDROP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0a5e26de0d09b403a8487431c69c29e8aed0e4f340934e7788e822c9a19a8e57d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_FLAG_DIR_LTR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0a5e26de0d09b403a8487431c69c29e8af3af36ae8fdd02c7275c0675e444e7d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_FLAG_DIR_RTL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0a5e26de0d09b403a8487431c69c29e8a197902e80d349b635f6e9393f165f395</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_FLAG_LINK</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0a5e26de0d09b403a8487431c69c29e8a05e22a4454014de89de3eaa75aab8df1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_FLAG_VISITED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0a5e26de0d09b403a8487431c69c29e8a6aef65ca0dbc48aceacb0344da4c6605</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_FLAG_CHECKED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0a5e26de0d09b403a8487431c69c29e8a56943be44a8fe227af25373c933b972a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_FLAG_DROP_ACTIVE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0a5e26de0d09b403a8487431c69c29e8ade7776bbabf261fa5758f2e4e9187e8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>InputPurpose</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaf17b1622b867a2fddd3e0d89641dc5b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_PURPOSE_FREE_FORM</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf17b1622b867a2fddd3e0d89641dc5b6ab63c50974516b950b5e7482bd3302375</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_PURPOSE_ALPHA</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf17b1622b867a2fddd3e0d89641dc5b6a75de7f54065d2e48ef69de686c3c3925</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_PURPOSE_DIGITS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf17b1622b867a2fddd3e0d89641dc5b6ace14eb340cee4d80daac2fcf2602f601</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_PURPOSE_NUMBER</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf17b1622b867a2fddd3e0d89641dc5b6a80673ba3e0001b184d480b5a2d6afb2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_PURPOSE_PHONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf17b1622b867a2fddd3e0d89641dc5b6a1f95797997f98b2c83750f06de9a839d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_PURPOSE_URL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf17b1622b867a2fddd3e0d89641dc5b6a4d13cd51552a58180c3a775dbe1d2a6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_PURPOSE_EMAIL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf17b1622b867a2fddd3e0d89641dc5b6a9c87c44ca3dbeaae45fac181af6248af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_PURPOSE_NAME</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf17b1622b867a2fddd3e0d89641dc5b6ad3bc23414bb8cdf2dc686a378bcbcd11</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_PURPOSE_PASSWORD</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf17b1622b867a2fddd3e0d89641dc5b6a13155ea75559db8626dae11b84986e6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_PURPOSE_PIN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf17b1622b867a2fddd3e0d89641dc5b6ad8ad073688e20c1bb8fab248bd8b33a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>InputHints</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae29290d8d4e5fa9c44bfa8682bfd20d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_HINT_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae29290d8d4e5fa9c44bfa8682bfd20d5aca7e33bf2f10a507b3772bed6f9cacd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_HINT_SPELLCHECK</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae29290d8d4e5fa9c44bfa8682bfd20d5ab964f9c3cf9ba388c4e5419faec076d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_HINT_NO_SPELLCHECK</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae29290d8d4e5fa9c44bfa8682bfd20d5ac646184c450e98a45461079dc9a4b1a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_HINT_WORD_COMPLETION</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae29290d8d4e5fa9c44bfa8682bfd20d5a56815d45525c00d8751190e99106a0bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_HINT_LOWERCASE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae29290d8d4e5fa9c44bfa8682bfd20d5a04eedf282372c47a18ce6ef21ed17b20</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_HINT_UPPERCASE_CHARS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae29290d8d4e5fa9c44bfa8682bfd20d5ad27370352ffaeb1ba2a7f64d015cb60e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_HINT_UPPERCASE_WORDS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae29290d8d4e5fa9c44bfa8682bfd20d5ac95c5c45a5c203e6d43a9cc3562e74f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_HINT_UPPERCASE_SENTENCES</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae29290d8d4e5fa9c44bfa8682bfd20d5a7616247ca3f94277025c83cd4c37f44e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_HINT_INHIBIT_OSK</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae29290d8d4e5fa9c44bfa8682bfd20d5a27c88117dfd4508b232981aff2b7af3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_HINT_VERTICAL_WRITING</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae29290d8d4e5fa9c44bfa8682bfd20d5a2205e5c6c89712e5210b1add5de1d9c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_HINT_EMOJI</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae29290d8d4e5fa9c44bfa8682bfd20d5a8ce1064fcc1032bee40e5c19c1d5816f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_HINT_NO_EMOJI</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae29290d8d4e5fa9c44bfa8682bfd20d5adffa509ddf357b1b08abf7ac905433d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BaselinePosition</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga00fac330ed16cf77e1f1e2744d6dcdf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASELINE_POSITION_TOP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga00fac330ed16cf77e1f1e2744d6dcdf2ab31318f6dee083dcd587f8d681bef99f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASELINE_POSITION_CENTER</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga00fac330ed16cf77e1f1e2744d6dcdf2a6d2314a0a9f448536a6fe07ed4b88a4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASELINE_POSITION_BOTTOM</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga00fac330ed16cf77e1f1e2744d6dcdf2a2c4e574d883e779da9c231e9106a1946</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PropagationPhase</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3f2ccdc42fe620ab04147029242efb57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHASE_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga3f2ccdc42fe620ab04147029242efb57a52efe0489bf33841355d3f99214369c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHASE_CAPTURE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga3f2ccdc42fe620ab04147029242efb57ad8e07721c82ebb0f5afb6652db4d79ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHASE_BUBBLE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga3f2ccdc42fe620ab04147029242efb57a97140c46c446805d9ccdb709d38c2012</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHASE_TARGET</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga3f2ccdc42fe620ab04147029242efb57ac1885e6a3dd9a21e878d6d0c602849e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FileChooserAction</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga0d6076e7637ec501f26296e65fee2212</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FILE_CHOOSER_ACTION_OPEN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0d6076e7637ec501f26296e65fee2212ad5a7a701a84079ac0a66daa6a278292c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FILE_CHOOSER_ACTION_SAVE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0d6076e7637ec501f26296e65fee2212a58b10d83eaf27bd2018d009f5066d6d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FILE_CHOOSER_ACTION_SELECT_FOLDER</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0d6076e7637ec501f26296e65fee2212a31c49ed863b01cfe30a944eed1bfd74e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FILE_CHOOSER_ACTION_CREATE_FOLDER</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0d6076e7637ec501f26296e65fee2212a7de3b4d18684101830f2a95a510704a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FileChooserConfirmation</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga1a1277039e186174bca107feda453c22</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FILE_CHOOSER_CONFIRMATION_CONFIRM</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga1a1277039e186174bca107feda453c22a28d3e0b8b0fdde485b45c193df8dc4b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FILE_CHOOSER_CONFIRMATION_ACCEPT_FILENAME</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga1a1277039e186174bca107feda453c22ae17ac8465cf76a69db8f5354f612b659</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FILE_CHOOSER_CONFIRMATION_SELECT_AGAIN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga1a1277039e186174bca107feda453c22ac071456eeb8473eea4aaa71e0bd7978a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FileFilterFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaf8205a61123bc5013c12d13335623959</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FILE_FILTER_FILENAME</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf8205a61123bc5013c12d13335623959a0e3c33b62a7eb6a85fbcb244e05e9358</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FILE_FILTER_URI</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf8205a61123bc5013c12d13335623959a30793dc739e71921864b23c65ea34459</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FILE_FILTER_DISPLAY_NAME</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf8205a61123bc5013c12d13335623959aecc26b0c5434f7df14a97df7e430d67a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FILE_FILTER_MIME_TYPE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf8205a61123bc5013c12d13335623959ab7d930aae46afeef5a41b44035d9ef86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EventSequenceState</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gac6cd8c73d758289d36ce3ead17b42b8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_SEQUENCE_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac6cd8c73d758289d36ce3ead17b42b8ea8349618f0fec7bb614c3accccbfc487c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_SEQUENCE_CLAIMED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac6cd8c73d758289d36ce3ead17b42b8ea9e24da93ff0242d6bfae61a7584b5fb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_SEQUENCE_DENIED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac6cd8c73d758289d36ce3ead17b42b8ea982e208d39348315abea56f495a2efc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PanDirection</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga69b6d95718a927fa162896019abf6ccf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAN_DIRECTION_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga69b6d95718a927fa162896019abf6ccfaa6afe3bd2b78d4352807fdbc45f8bfc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAN_DIRECTION_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga69b6d95718a927fa162896019abf6ccfa7bca8cf86461632c666a9931f7a4229c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAN_DIRECTION_UP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga69b6d95718a927fa162896019abf6ccfaec5c292a9a7bcc930bd393e1b1ed1c20</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAN_DIRECTION_DOWN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga69b6d95718a927fa162896019abf6ccfa671225932cb68396a74c74fec6d1c4c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IconLookupFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga6d0c2193613cfb97ab313746a5bacaa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_LOOKUP_NO_SVG</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6d0c2193613cfb97ab313746a5bacaa2a92c32adce624caec23a9b8f0569bc7cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_LOOKUP_FORCE_SVG</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6d0c2193613cfb97ab313746a5bacaa2a962b0a44a9ba4346948b86e849c2da1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_LOOKUP_USE_BUILTIN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6d0c2193613cfb97ab313746a5bacaa2a0c6c44f5873f9475641055bdf38545d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_LOOKUP_GENERIC_FALLBACK</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6d0c2193613cfb97ab313746a5bacaa2a0d548f98ecfee7e35f7a9456c8b92baf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_LOOKUP_FORCE_SIZE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6d0c2193613cfb97ab313746a5bacaa2a1f1cb7da5c2ee5c65e9b1ece1ce8b85d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_LOOKUP_FORCE_REGULAR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6d0c2193613cfb97ab313746a5bacaa2a34c75c7731ecbb6438a4b54654b0280a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_LOOKUP_FORCE_SYMBOLIC</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6d0c2193613cfb97ab313746a5bacaa2ae2b9d3fb74539c820fa043d17f4f935a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_LOOKUP_DIR_LTR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6d0c2193613cfb97ab313746a5bacaa2abf958408559f8df5d7e3abb841464eed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_LOOKUP_DIR_RTL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6d0c2193613cfb97ab313746a5bacaa2af3faded6e4002aacb99b3955ee748f9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IconViewDropPosition</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga8daabe8a63be70be35f4f23086e7d9af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_VIEW_NO_DROP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga8daabe8a63be70be35f4f23086e7d9afaf99aec7c72621477eccdbfcc1139a0c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_VIEW_DROP_INTO</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga8daabe8a63be70be35f4f23086e7d9afa862128b8626b2c115083d9e3b7f81870</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_VIEW_DROP_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga8daabe8a63be70be35f4f23086e7d9afa7cf087b91a29939f2e76d277520cdfd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_VIEW_DROP_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga8daabe8a63be70be35f4f23086e7d9afa181f33acee9b71d215094e744ccd8ab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_VIEW_DROP_ABOVE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga8daabe8a63be70be35f4f23086e7d9afafae4878ab74e05aba69c0d9f5c15c5a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_VIEW_DROP_BELOW</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga8daabe8a63be70be35f4f23086e7d9afa73d2a8d6f98ea65353391de8510a5967</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ImageType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga92e349952b9dba45f2b008e3fcec013b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMAGE_EMPTY</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga92e349952b9dba45f2b008e3fcec013ba7ed45230e3819d347328db6cd9451a22</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMAGE_PIXBUF</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga92e349952b9dba45f2b008e3fcec013ba46c0f19cb4c577357ad742833d7d42d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMAGE_STOCK</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga92e349952b9dba45f2b008e3fcec013baab43d5f87147c0ff5067f9a531c8a2f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMAGE_ICON_SET</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga92e349952b9dba45f2b008e3fcec013babcecd66d0cc005a6d83cddc238ca84cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMAGE_ANIMATION</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga92e349952b9dba45f2b008e3fcec013ba31f342429da436b94c418e0c83203543</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMAGE_ICON_NAME</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga92e349952b9dba45f2b008e3fcec013ba9bbcfdf3162f01ccf462686b7ddb01ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMAGE_GICON</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga92e349952b9dba45f2b008e3fcec013baf62159d8de5d3ca24388e7825f92fe70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMAGE_SURFACE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga92e349952b9dba45f2b008e3fcec013bae3c45dfb27137847656459bb4115748c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LevelBarMode</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gafe658a50de3c9d63860bac04f47ecb3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LEVEL_BAR_MODE_CONTINUOUS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gafe658a50de3c9d63860bac04f47ecb3aaf97dfa11508534afb83b4326e1ec1bab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LEVEL_BAR_MODE_DISCRETE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gafe658a50de3c9d63860bac04f47ecb3aab83ff5417bbadf9c4423df4c79e05194</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PackDirection</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaf96b2ca081fb2549f583182bbb629d2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PACK_DIRECTION_LTR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf96b2ca081fb2549f583182bbb629d2caaa5e4d34c8e623d316c835ebba4950c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PACK_DIRECTION_RTL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf96b2ca081fb2549f583182bbb629d2ca449587f09bbe7191299beb022af651a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PACK_DIRECTION_TTB</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf96b2ca081fb2549f583182bbb629d2ca19c857000737014b8cbaf787c1486ed0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PACK_DIRECTION_BTT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf96b2ca081fb2549f583182bbb629d2cacbd62f33d3cd59cf0ee2e219f2b35e5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ButtonsType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga13107e98e788d2cd5f823a58dcb094ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTONS_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga13107e98e788d2cd5f823a58dcb094abad2949d906bce39744dc6f08f0bd1e340</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTONS_OK</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga13107e98e788d2cd5f823a58dcb094abaa0f550b4f7e5e689bcf7c7cc37cf9caa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTONS_CLOSE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga13107e98e788d2cd5f823a58dcb094abab1f8dfe4d366bd3ee4ad6159649b1d90</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTONS_CANCEL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga13107e98e788d2cd5f823a58dcb094ababf32428218815da407835c4fffac4271</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTONS_YES_NO</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga13107e98e788d2cd5f823a58dcb094aba134ca971f40f33f0794dc93cbf255991</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTONS_OK_CANCEL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga13107e98e788d2cd5f823a58dcb094aba71c348c9e1cf376039ee2df52954d4ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ButtonRole</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga4082d65ff064ee2cdcc23ecca0af50bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON_ROLE_NORMAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4082d65ff064ee2cdcc23ecca0af50bca486e8e0f84bf21db85522f1d762e41e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON_ROLE_CHECK</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4082d65ff064ee2cdcc23ecca0af50bca2923877753c8fce1696656fbaeac7a06</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON_ROLE_RADIO</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4082d65ff064ee2cdcc23ecca0af50bca995cf149c316291277b3a293a2da1e0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NotebookTab</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga804b44857d22ee4305c3c2f333f08062</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOTEBOOK_TAB_FIRST</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gga804b44857d22ee4305c3c2f333f08062a197be870323c8dfd1fc9852671403212</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOTEBOOK_TAB_LAST</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gga804b44857d22ee4305c3c2f333f08062a8feb306c73f894c46c06ce69092de13f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Unit</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga9cdd3adb4017a5c706e205aa914ba6fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNIT_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga9cdd3adb4017a5c706e205aa914ba6fba0eb676d3f8c323f5df2d84f1826c0bb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNIT_POINTS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga9cdd3adb4017a5c706e205aa914ba6fbac6b1df24b563890c08b66d8fd4817ac9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNIT_INCH</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga9cdd3adb4017a5c706e205aa914ba6fba1c5d1b055175cd25803fae3c6274fc39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNIT_MM</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga9cdd3adb4017a5c706e205aa914ba6fba4beaa93c4fd12107565d7c607c980626</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PopoverConstraint</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga92be4c914d0652067ce26d4bd964937e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POPOVER_CONSTRAINT_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga92be4c914d0652067ce26d4bd964937ea36d4ab60130b1d6c0b2f056fd23b6e75</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POPOVER_CONSTRAINT_WINDOW</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga92be4c914d0652067ce26d4bd964937eacd98baf51cf0a8a61f9061a3572ebe02</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PrintStatus</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga55cc984b17f826539f78a64c4b9022a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_STATUS_INITIAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga55cc984b17f826539f78a64c4b9022a2a40793af917b8fdc99c02cdf6ca3fd179</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_STATUS_PREPARING</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga55cc984b17f826539f78a64c4b9022a2a0f05825f33ada52306f1d378aaa1a16d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_STATUS_GENERATING_DATA</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga55cc984b17f826539f78a64c4b9022a2a22b71039c6f4d7fe58c92deebc6a8f44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_STATUS_SENDING_DATA</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga55cc984b17f826539f78a64c4b9022a2a727241f06f9e2a24757ab86170bd8c05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_STATUS_PENDING</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga55cc984b17f826539f78a64c4b9022a2a2f82f4d7a209da86ddcff37d3a59f188</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_STATUS_PENDING_ISSUE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga55cc984b17f826539f78a64c4b9022a2ab021541dc7a0c88213ecb10343b75707</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_STATUS_PRINTING</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga55cc984b17f826539f78a64c4b9022a2ab4abcc6e2fcc936d62c90966a621a0fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_STATUS_FINISHED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga55cc984b17f826539f78a64c4b9022a2ab3fc15f7d7b12a4cdbd2cc3daf9f9aa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_STATUS_FINISHED_ABORTED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga55cc984b17f826539f78a64c4b9022a2a1b973c050ba471062209daacf4cda80c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PrintOperationResult</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga6881ef70e8c3bc460ba179a84bee78d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_OPERATION_RESULT_ERROR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6881ef70e8c3bc460ba179a84bee78d0ad0c8487bdce5b6ce87efc9bf14a87f03</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_OPERATION_RESULT_APPLY</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6881ef70e8c3bc460ba179a84bee78d0ab8d2a921eeb1264faec9e64fa3c9fec8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_OPERATION_RESULT_CANCEL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6881ef70e8c3bc460ba179a84bee78d0a4e4ceaaf3283cc1fce51a984145a3d6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_OPERATION_RESULT_IN_PROGRESS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6881ef70e8c3bc460ba179a84bee78d0a29b5dc59153ab58e17ea8613656038c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PrintOperationAction</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gab4b10c2e7079a2137daf871c261c2443</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_OPERATION_ACTION_PRINT_DIALOG</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gab4b10c2e7079a2137daf871c261c2443affad9f4df93b843a56ffdb2de077cc56</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_OPERATION_ACTION_PRINT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gab4b10c2e7079a2137daf871c261c2443add63e8d563203e07ae08b33c457febdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_OPERATION_ACTION_PREVIEW</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gab4b10c2e7079a2137daf871c261c2443ae2753f957d8fbacd9decdedb7968d298</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_OPERATION_ACTION_EXPORT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gab4b10c2e7079a2137daf871c261c2443ab9080dab7f29e51e1dc5c9965c34e71f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PrintDuplex</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga50af48ce5ffc122b50924230939b78e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_DUPLEX_SIMPLEX</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga50af48ce5ffc122b50924230939b78e3afe50c764a536f77d72e975a8e9a30939</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_DUPLEX_HORIZONTAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga50af48ce5ffc122b50924230939b78e3ae08fa948547b36eb7413afcb2ddddc9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_DUPLEX_VERTICAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga50af48ce5ffc122b50924230939b78e3a73d199d3edbb61775e825afa980553cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PrintQuality</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gab282abd83fff59a70ddba9e26cd30e04</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_QUALITY_LOW</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gab282abd83fff59a70ddba9e26cd30e04a771e91286314ee4a6777bff39f8964cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_QUALITY_NORMAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gab282abd83fff59a70ddba9e26cd30e04ab91b6cf5483233abe878034cfaa8a9f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_QUALITY_HIGH</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gab282abd83fff59a70ddba9e26cd30e04afb9be071fe89d424b229bf0b1141f834</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_QUALITY_DRAFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gab282abd83fff59a70ddba9e26cd30e04a333f3c6a0613bda02b25da80318319ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PrintPages</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga003abcb0f8711428f85e3c54c68ee25e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_PAGES_ALL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga003abcb0f8711428f85e3c54c68ee25eabf98a8c8442bd1b0fb1736b8d21c0a1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_PAGES_CURRENT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga003abcb0f8711428f85e3c54c68ee25ea5e480a5c781bc71c8483da6d16a2c436</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_PAGES_RANGES</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga003abcb0f8711428f85e3c54c68ee25ea0db89ac6f058215853d29c5cd9467ac1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_PAGES_SELECTION</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga003abcb0f8711428f85e3c54c68ee25ea811b394dd03365c14fabb08a3142a269</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PageSet</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga26726525983cb55ec0633b7485143cf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAGE_SET_ALL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga26726525983cb55ec0633b7485143cf3af67a5c38f72a14809502cbf43bcbf537</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAGE_SET_EVEN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga26726525983cb55ec0633b7485143cf3a47adf4314f0d3d4d3b5e458689369a20</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAGE_SET_ODD</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga26726525983cb55ec0633b7485143cf3a22949b5d59fe9beb19dd8bf8f7663ffd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NumberUpLayout</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga439c4b003562e9c4f6e20f76134d9da9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_TOP_TO_BOTTOM</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga439c4b003562e9c4f6e20f76134d9da9a309bddcde1c1bfc22102ae47116f0749</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_BOTTOM_TO_TOP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga439c4b003562e9c4f6e20f76134d9da9a5d696ac6874fd56f6e81272b12667a37</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_TOP_TO_BOTTOM</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga439c4b003562e9c4f6e20f76134d9da9a44ce766db0c57f16e80f7796e7027b49</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_BOTTOM_TO_TOP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga439c4b003562e9c4f6e20f76134d9da9a9be542f31c6065aff531b74e919df215</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_LEFT_TO_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga439c4b003562e9c4f6e20f76134d9da9a472fd42eec4812d30f64f8771b0bffda</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_RIGHT_TO_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga439c4b003562e9c4f6e20f76134d9da9a05b5ef5aeccf95faa3cd3cfe03fcc7f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_LEFT_TO_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga439c4b003562e9c4f6e20f76134d9da9a63490d66c46231027f69106b5dbd25be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_RIGHT_TO_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga439c4b003562e9c4f6e20f76134d9da9a18203a0358842997cd75b30e4a78f1b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RecentSortType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gac02d49f6d49650abf59e27291e3ef111</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RECENT_SORT_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac02d49f6d49650abf59e27291e3ef111a5420d8d9280a1412d65db38fd90a3678</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RECENT_SORT_MRU</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac02d49f6d49650abf59e27291e3ef111af1b389d1a7abdb686f98aec734c2d92f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RECENT_SORT_LRU</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac02d49f6d49650abf59e27291e3ef111ab1d3f5e0191682b01002f5566a1b6029</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RECENT_SORT_CUSTOM</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac02d49f6d49650abf59e27291e3ef111ac831bed4ef1afdd9e61ad27ec4c94d33</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RecentFilterFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga367108566a3e735eccbfd86db71ac02a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RECENT_FILTER_URI</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga367108566a3e735eccbfd86db71ac02aa8c86efcda66edea6fa079037d6f7b291</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RECENT_FILTER_DISPLAY_NAME</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga367108566a3e735eccbfd86db71ac02aa5df9f41b69c21b356a133223b914e787</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RECENT_FILTER_MIME_TYPE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga367108566a3e735eccbfd86db71ac02aad0454a5cd689c91e64fa5c183665d54d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RECENT_FILTER_APPLICATION</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga367108566a3e735eccbfd86db71ac02aa884d30087455f4571fc54fe1c706a774</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RECENT_FILTER_GROUP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga367108566a3e735eccbfd86db71ac02aa713a446811437ec970db357bfc16617c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RECENT_FILTER_AGE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga367108566a3e735eccbfd86db71ac02aa22f5375bc9986f1316709ed088886b79</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ScrollablePolicy</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga5bcedb5840dd94012405d0e33b2a18c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_MINIMUM</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5bcedb5840dd94012405d0e33b2a18c5ad3abaaa65ca30cf5c64f03680365f1e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_NATURAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5bcedb5840dd94012405d0e33b2a18c5aa34361b9aeea9089ae8b8f111e442cd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IMPreeditStyle</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga415072adab5698928d2d340d279d57af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IM_PREEDIT_NOTHING</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga415072adab5698928d2d340d279d57afa3f54b0b2bc3966f2bb84c1effe604803</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IM_PREEDIT_CALLBACK</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga415072adab5698928d2d340d279d57afaa34892a093c132adefa5a4cc5a262531</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IM_PREEDIT_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga415072adab5698928d2d340d279d57afae62366aae37b5285c2804339a5f16364</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IMStatusStyle</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gac5721e3548b652cb118d89f2d4c601ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IM_STATUS_NOTHING</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac5721e3548b652cb118d89f2d4c601ecad5f163d687323c080f168515d7d18869</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IM_STATUS_CALLBACK</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac5721e3548b652cb118d89f2d4c601ecac03d41b8db7b83910f0a7c9ba996a4ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IM_STATUS_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac5721e3548b652cb118d89f2d4c601eca0320c38cea95b203f35f2ee525605029</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ShortcutType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga379230abb3c93aad74b3d2859960db02</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHORTCUT_ACCELERATOR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga379230abb3c93aad74b3d2859960db02abc9503b74ff331c1efd1b3f40013fd39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHORTCUT_GESTURE_PINCH</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga379230abb3c93aad74b3d2859960db02aa6c35d743dfa230f1f67fd7ed6bd0892</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHORTCUT_GESTURE_STRETCH</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga379230abb3c93aad74b3d2859960db02a70ffd674262a1878050185f30458ae3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHORTCUT_GESTURE_ROTATE_CLOCKWISE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga379230abb3c93aad74b3d2859960db02a0b55d14caa7e410cb2285a56d32e64af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHORTCUT_GESTURE_ROTATE_COUNTERCLOCKWISE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga379230abb3c93aad74b3d2859960db02a0d6cc62e9b786d1887e88dc2a6806e0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHORTCUT_GESTURE_TWO_FINGER_SWIPE_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga379230abb3c93aad74b3d2859960db02af1fabdfdd94ed124469d1d3a7374b884</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHORTCUT_GESTURE_TWO_FINGER_SWIPE_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga379230abb3c93aad74b3d2859960db02a21e55c79f4d35510e41009c19b6aa9ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHORTCUT_GESTURE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga379230abb3c93aad74b3d2859960db02a1c0b0755cef7e26c69e6c5deba88927b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SizeGroupMode</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga7230c54c268363becedfd97bc42f7d05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIZE_GROUP_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7230c54c268363becedfd97bc42f7d05a9be38183fb711ddd13e0423c9b0bb149</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIZE_GROUP_HORIZONTAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7230c54c268363becedfd97bc42f7d05ad04cfc90778f458fbb638489a742785d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIZE_GROUP_VERTICAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7230c54c268363becedfd97bc42f7d05a1bfef1a40cfb4c4bf2b47b22a6affdeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIZE_GROUP_BOTH</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7230c54c268363becedfd97bc42f7d05a9b253c06358cd0c6c049f7cc535d37db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SpinButtonUpdatePolicy</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad6ac4f99aa79bca0ff4daa89d6e5e8db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UPDATE_ALWAYS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gad6ac4f99aa79bca0ff4daa89d6e5e8dbaa637cfe297b94024feec236777bce060</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UPDATE_IF_VALID</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gad6ac4f99aa79bca0ff4daa89d6e5e8dba76c81d2b4dac8fbd33c58b82fe36ded2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SpinType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga1fdcff1634130369780165ddce65575c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIN_STEP_FORWARD</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga1fdcff1634130369780165ddce65575ca5e00431387edb1572c76aeac971ca43b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIN_STEP_BACKWARD</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga1fdcff1634130369780165ddce65575cae4946b4810d70388531fe9abf1ddd7f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIN_PAGE_FORWARD</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga1fdcff1634130369780165ddce65575caeee387b5ab3b414e5df2091deb9b6576</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIN_PAGE_BACKWARD</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga1fdcff1634130369780165ddce65575ca6e78dfe07284ab0a89579d2f9342da58</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIN_HOME</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga1fdcff1634130369780165ddce65575ca849fae22a8039308b02e69ac43a46985</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIN_END</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga1fdcff1634130369780165ddce65575cab67d96e1aa705773a3a678b4c619daaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIN_USER_DEFINED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga1fdcff1634130369780165ddce65575ca9f664d914691584b404e9df132bcf6db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_ERROR</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gga16d8648324de7184c53e7ba888f80bf3ab13b96852791f1cc3d89b1839074b384</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TextSearchFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga45bb48ef86a7da2535de94066029bc29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXT_SEARCH_VISIBLE_ONLY</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga45bb48ef86a7da2535de94066029bc29ae527fc589a79c421b76fb421a1689daf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXT_SEARCH_TEXT_ONLY</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga45bb48ef86a7da2535de94066029bc29a323f538e8768e07994fde82c85a991e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXT_SEARCH_CASE_INSENSITIVE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga45bb48ef86a7da2535de94066029bc29a194d21cbac8963ec39e1f38ff978ca42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TextWindowType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga7a67e20499adf4787fa20ca51cb848c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXT_WINDOW_PRIVATE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7a67e20499adf4787fa20ca51cb848c4a53c1e561995e89fab1635f8afcba766d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXT_WINDOW_WIDGET</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7a67e20499adf4787fa20ca51cb848c4aea034500af52670685eef35c928b7e04</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXT_WINDOW_TEXT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7a67e20499adf4787fa20ca51cb848c4ae27b9712be2df51ea62c6d74ce3e118d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXT_WINDOW_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7a67e20499adf4787fa20ca51cb848c4a47910b74a040b14c3797ea83e5a76489</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXT_WINDOW_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7a67e20499adf4787fa20ca51cb848c4a09609356b16198adeb38a0f830b8b7ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXT_WINDOW_TOP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7a67e20499adf4787fa20ca51cb848c4a41fde904679ac4b6fa11f3bbd483e32f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXT_WINDOW_BOTTOM</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7a67e20499adf4787fa20ca51cb848c4a32e6f546fd57630d72591e12de839279</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ToolPaletteDragTargets</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga12f8b782727425486ccd6fb29a5ad8c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOOL_PALETTE_DRAG_ITEMS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga12f8b782727425486ccd6fb29a5ad8c8acd42b75f8427390aaa680400b127538d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOOL_PALETTE_DRAG_GROUPS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga12f8b782727425486ccd6fb29a5ad8c8a8ea0bd9ddfc3cc96bae6dcabc107f278</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TreeModelFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga8db2110062643eb26461ec23b63e2cb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TREE_MODEL_ITERS_PERSIST</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga8db2110062643eb26461ec23b63e2cb2a751b4e7f738f5d11ec139e93b8842e02</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TREE_MODEL_LIST_ONLY</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga8db2110062643eb26461ec23b63e2cb2af904d3863b4e8de9ded73f2a4e87f2ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TreeViewDropPosition</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga13ae619b02491e21302ca02d94649844</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TREE_VIEW_DROP_BEFORE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga13ae619b02491e21302ca02d94649844af2c094b6eebd182d057e33c00123f8c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TREE_VIEW_DROP_AFTER</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga13ae619b02491e21302ca02d94649844a374d594b8ad1ed7bfea517489f9ca7c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TREE_VIEW_DROP_INTO_OR_BEFORE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga13ae619b02491e21302ca02d94649844a56ccdb98f4531dfe17ad1fd865a03357</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TREE_VIEW_DROP_INTO_OR_AFTER</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga13ae619b02491e21302ca02d94649844a5a2a2e9aaaeac74539d4a44c7d68a9e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TreeViewGridLines</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad31d2169f6fed4a27e4e42072822c43e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TREE_VIEW_GRID_LINES_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gad31d2169f6fed4a27e4e42072822c43ea184cd6082238a07c3017470fc0c3f04f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TREE_VIEW_GRID_LINES_HORIZONTAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gad31d2169f6fed4a27e4e42072822c43eaf3b6f50a69d459b2baffa0b302344f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TREE_VIEW_GRID_LINES_VERTICAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gad31d2169f6fed4a27e4e42072822c43eaa10e949f959fce209ad18d506d0bdf9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TREE_VIEW_GRID_LINES_BOTH</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gad31d2169f6fed4a27e4e42072822c43ea6863c222e31f25a48a4f61425bbf78b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TreeViewColumnSizing</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga48e69dbd33a70f5b13c8ceaef1bbf06c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TREE_VIEW_COLUMN_GROW_ONLY</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga48e69dbd33a70f5b13c8ceaef1bbf06ca70b06c621fd0aaed5d9182d5dd2c3e36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TREE_VIEW_COLUMN_AUTOSIZE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga48e69dbd33a70f5b13c8ceaef1bbf06cad79ba3bb1bbd28ea7c4d90a81eb7a1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TREE_VIEW_COLUMN_FIXED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga48e69dbd33a70f5b13c8ceaef1bbf06ca9eca07d5cdce6d0259d70e8495a2ca90</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DestDefaults</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaf2f1ae1fbd332c3a3b420bb10ed73a65</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEST_DEFAULT_MOTION</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf2f1ae1fbd332c3a3b420bb10ed73a65a584274cfa5f10fe057f2b9513e4baec1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEST_DEFAULT_HIGHLIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf2f1ae1fbd332c3a3b420bb10ed73a65a37d742bfeb7fc7f9f999a29343827b06</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEST_DEFAULT_DROP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf2f1ae1fbd332c3a3b420bb10ed73a65a3cf93f14e3a94f94f8d6ccae37e12b20</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEST_DEFAULT_ALL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf2f1ae1fbd332c3a3b420bb10ed73a65a5ac16e0c257a677b264b3b5a0c144459</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WidgetHelpType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3e92630d8db9a7591552c9d38c8df1c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WIDGET_HELP_TOOLTIP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga3e92630d8db9a7591552c9d38c8df1c3a3d2069803e9fa6333ce23b91d5227493</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WIDGET_HELP_WHATS_THIS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga3e92630d8db9a7591552c9d38c8df1c3aeef0cb60b72c46c64f29bcee26b9f8f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DragResult</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga83e9371a4c82c7b87d30da8107e06977</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_RESULT_SUCCESS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga83e9371a4c82c7b87d30da8107e06977a01acfd538e7781605f4f4ece976b1057</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_RESULT_NO_TARGET</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga83e9371a4c82c7b87d30da8107e06977ac738359e99685eca717ba6d8b4be7097</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_RESULT_USER_CANCELLED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga83e9371a4c82c7b87d30da8107e06977ae82f91e332d5f3a1033d75d4b36ada0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_RESULT_TIMEOUT_EXPIRED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga83e9371a4c82c7b87d30da8107e06977acea2896283926537b33d8d3960df012b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_RESULT_GRAB_BROKEN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga83e9371a4c82c7b87d30da8107e06977a0509d5076c9c66cde01b18f4ff1d44c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_RESULT_ERROR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga83e9371a4c82c7b87d30da8107e06977ad652a4d8677cd0d41a3aed9bbeba1a24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PrintCapabilities</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaba4fee25db9350d20b61ec5c3f468bcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_CAPABILITY_PAGE_SET</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaba4fee25db9350d20b61ec5c3f468bcbac8c270ad95144fc613d15581b43188b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_CAPABILITY_COPIES</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaba4fee25db9350d20b61ec5c3f468bcba433115c157ea275d4d5e87bb6cd0ae41</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_CAPABILITY_COLLATE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaba4fee25db9350d20b61ec5c3f468bcba4fe69a4d12cf8006fa316a9a7a650223</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_CAPABILITY_REVERSE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaba4fee25db9350d20b61ec5c3f468bcba04d9b09123c77fdb651a1885502b8704</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_CAPABILITY_SCALE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaba4fee25db9350d20b61ec5c3f468bcba3c6c9723fe14c7ec590757735a4fafbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_CAPABILITY_GENERATE_PDF</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaba4fee25db9350d20b61ec5c3f468bcba202d90969f9ca05887ac558983442ab8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_CAPABILITY_GENERATE_PS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaba4fee25db9350d20b61ec5c3f468bcba3845dda4395a5fc1e179b8ed874f7edc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_CAPABILITY_PREVIEW</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaba4fee25db9350d20b61ec5c3f468bcba31e0707ec91d347b4fb337dd60e50695</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_CAPABILITY_NUMBER_UP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaba4fee25db9350d20b61ec5c3f468bcba4003b630728dc48d737cce742cdf9881</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_CAPABILITY_NUMBER_UP_LAYOUT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaba4fee25db9350d20b61ec5c3f468bcbaf4e2d52c9054102b528a5c9372b74a94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UIManagerItemType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga91226ea137a67080d9b487225aa41d7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UI_MANAGER_AUTO</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga91226ea137a67080d9b487225aa41d7bae758e6cca4e5a1577aae97b77c28b2a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UI_MANAGER_MENUBAR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga91226ea137a67080d9b487225aa41d7ba16490d879f37144ade6b94017f19cfd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UI_MANAGER_MENU</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga91226ea137a67080d9b487225aa41d7baa8ff47c71257a5f8ad51490c08dd67a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UI_MANAGER_TOOLBAR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga91226ea137a67080d9b487225aa41d7babb2303ed366403a1dc589c9717a4e793</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UI_MANAGER_PLACEHOLDER</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga91226ea137a67080d9b487225aa41d7ba313e29e15813501275b01604034500d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UI_MANAGER_POPUP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga91226ea137a67080d9b487225aa41d7ba3f148f432ba87e1bb574988292356425</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UI_MANAGER_MENUITEM</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga91226ea137a67080d9b487225aa41d7babfeb9663a46f709abdbe8ddfec223319</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UI_MANAGER_TOOLITEM</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga91226ea137a67080d9b487225aa41d7ba0f4f5e1e494d3b52e3c2f2fa1a2480c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UI_MANAGER_SEPARATOR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga91226ea137a67080d9b487225aa41d7bae92872b64039e1a22edb9e46d20213f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UI_MANAGER_ACCELERATOR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga91226ea137a67080d9b487225aa41d7ba6ec181f8abd4339b0914f1e5588c9d8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UI_MANAGER_POPUP_WITH_ACCELS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga91226ea137a67080d9b487225aa41d7ba9eede5a34d207545019446098750faf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>manage</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>a753d0ddca83bd0d0decdfdcd1e93076a</anchor>
      <arglist>(T *obj)</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>make_managed</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>a80c3138e1fc01e8285ea22c5b79a7021</anchor>
      <arglist>(T_Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>ApplicationInhibitFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gab3871388e3b3c3a5bc191ad1262f6b75</anchor>
      <arglist>(ApplicationInhibitFlags lhs, ApplicationInhibitFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ApplicationInhibitFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaa7ef4c13c11735946b946b2251ebe342</anchor>
      <arglist>(ApplicationInhibitFlags lhs, ApplicationInhibitFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ApplicationInhibitFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaa6c7ba177dd7640b98c02a6df5440524</anchor>
      <arglist>(ApplicationInhibitFlags lhs, ApplicationInhibitFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ApplicationInhibitFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga2cac6efa3949289ee3d9f315efc65946</anchor>
      <arglist>(ApplicationInhibitFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>ApplicationInhibitFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga70da0f72d6f80e7ae46b4a7c637b6c69</anchor>
      <arglist>(ApplicationInhibitFlags &amp;lhs, ApplicationInhibitFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ApplicationInhibitFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga15b43589151a46ed7f6d454f5dc598f5</anchor>
      <arglist>(ApplicationInhibitFlags &amp;lhs, ApplicationInhibitFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ApplicationInhibitFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga060255392e1ac889406a7f2ab16addf3</anchor>
      <arglist>(ApplicationInhibitFlags &amp;lhs, ApplicationInhibitFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>CalendarDisplayOptions</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga95b3448e56544d00d50925ebbe190137</anchor>
      <arglist>(CalendarDisplayOptions lhs, CalendarDisplayOptions rhs)</arglist>
    </member>
    <member kind="function">
      <type>CalendarDisplayOptions</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gace44b8e4670cb96f899a305fd567a875</anchor>
      <arglist>(CalendarDisplayOptions lhs, CalendarDisplayOptions rhs)</arglist>
    </member>
    <member kind="function">
      <type>CalendarDisplayOptions</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3809a7e22d1fba7b99a6c80b07bf1cba</anchor>
      <arglist>(CalendarDisplayOptions lhs, CalendarDisplayOptions rhs)</arglist>
    </member>
    <member kind="function">
      <type>CalendarDisplayOptions</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga4761531f78f03c1f4871f2cab422d2da</anchor>
      <arglist>(CalendarDisplayOptions flags)</arglist>
    </member>
    <member kind="function">
      <type>CalendarDisplayOptions &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaefb72e931e7f44f9fa5a5fb469562395</anchor>
      <arglist>(CalendarDisplayOptions &amp;lhs, CalendarDisplayOptions rhs)</arglist>
    </member>
    <member kind="function">
      <type>CalendarDisplayOptions &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga308dc9d79d50662d6c9770a3c824ec11</anchor>
      <arglist>(CalendarDisplayOptions &amp;lhs, CalendarDisplayOptions rhs)</arglist>
    </member>
    <member kind="function">
      <type>CalendarDisplayOptions &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga96c630fb80a32f236164a576478cc10e</anchor>
      <arglist>(CalendarDisplayOptions &amp;lhs, CalendarDisplayOptions rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellRendererState</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga95ae2f1836dd939955d64dfda0734032</anchor>
      <arglist>(CellRendererState lhs, CellRendererState rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellRendererState</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga347757f95f45cafb39eff727d14b22fa</anchor>
      <arglist>(CellRendererState lhs, CellRendererState rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellRendererState</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga55d02129ec54aed65c659d1ef73261e5</anchor>
      <arglist>(CellRendererState lhs, CellRendererState rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellRendererState</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga5afd3653c32defe9fc0c788ba865ed0d</anchor>
      <arglist>(CellRendererState flags)</arglist>
    </member>
    <member kind="function">
      <type>CellRendererState &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga1c2c79ca5b77d866e386bc29560ba66c</anchor>
      <arglist>(CellRendererState &amp;lhs, CellRendererState rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellRendererState &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga73c38048d39ad525c36ac18208c0b5d3</anchor>
      <arglist>(CellRendererState &amp;lhs, CellRendererState rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellRendererState &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gac60535e95befe7132bc7a2a29ebbc2ce</anchor>
      <arglist>(CellRendererState &amp;lhs, CellRendererState rhs)</arglist>
    </member>
    <member kind="function">
      <type>DialogFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3b82085a73fc81dd0cc467274b657795</anchor>
      <arglist>(DialogFlags lhs, DialogFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>DialogFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae7535e4ef79b707689a48379e5edf205</anchor>
      <arglist>(DialogFlags lhs, DialogFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>DialogFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad06038ee99394c76ff8fda55112133fe</anchor>
      <arglist>(DialogFlags lhs, DialogFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>DialogFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga8e68efedff247bf01dde15ddddc27990</anchor>
      <arglist>(DialogFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>DialogFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga0e5c8bc2979e1916d83e523d8f995ff9</anchor>
      <arglist>(DialogFlags &amp;lhs, DialogFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>DialogFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga205d0d1ee778d684f168922d976a102a</anchor>
      <arglist>(DialogFlags &amp;lhs, DialogFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>DialogFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaf0acfc2799a8e022b074e090728aca01</anchor>
      <arglist>(DialogFlags &amp;lhs, DialogFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AccelFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga24fd2d1cb6839ef86ce7a6b2d75c8f26</anchor>
      <arglist>(AccelFlags lhs, AccelFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AccelFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gafe48a3d029478a94658470a2cd1bf743</anchor>
      <arglist>(AccelFlags lhs, AccelFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AccelFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga2470fdd72dcfe56242bd53c4cc7d4860</anchor>
      <arglist>(AccelFlags lhs, AccelFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AccelFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad7e9a60d61a3d88550b105c346762301</anchor>
      <arglist>(AccelFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>AccelFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga73fc84d22787312866827ccd8031eb6c</anchor>
      <arglist>(AccelFlags &amp;lhs, AccelFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AccelFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga393ca9d4e0a5a61eebd9b19a67c341a1</anchor>
      <arglist>(AccelFlags &amp;lhs, AccelFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AccelFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga711fb9ea4d4f97b5dd66a6dad8387c1b</anchor>
      <arglist>(AccelFlags &amp;lhs, AccelFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AttachOptions</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gacbda89c53fffbf710c773c1042998462</anchor>
      <arglist>(AttachOptions lhs, AttachOptions rhs)</arglist>
    </member>
    <member kind="function">
      <type>AttachOptions</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga2aadad1af9a73f8225ef6665e50bc1ca</anchor>
      <arglist>(AttachOptions lhs, AttachOptions rhs)</arglist>
    </member>
    <member kind="function">
      <type>AttachOptions</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga8218f49c48d9e7e93cf872c57cf897c0</anchor>
      <arglist>(AttachOptions lhs, AttachOptions rhs)</arglist>
    </member>
    <member kind="function">
      <type>AttachOptions</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gadc9e80fec7475ffd43cf3e7d2b0e95fd</anchor>
      <arglist>(AttachOptions flags)</arglist>
    </member>
    <member kind="function">
      <type>AttachOptions &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga0420be2f6abd3c9f193e993fedfee500</anchor>
      <arglist>(AttachOptions &amp;lhs, AttachOptions rhs)</arglist>
    </member>
    <member kind="function">
      <type>AttachOptions &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaf78081f6b56e1e4df42c34ee03e87dc7</anchor>
      <arglist>(AttachOptions &amp;lhs, AttachOptions rhs)</arglist>
    </member>
    <member kind="function">
      <type>AttachOptions &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga4f001a825ba2be47358c1e75e182daaf</anchor>
      <arglist>(AttachOptions &amp;lhs, AttachOptions rhs)</arglist>
    </member>
    <member kind="function">
      <type>PlacesOpenFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga923466ccaa16fb6c19eb09aae3178fdd</anchor>
      <arglist>(PlacesOpenFlags lhs, PlacesOpenFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PlacesOpenFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae1941608ce57aa1ef8ef4ec49b5bc9ab</anchor>
      <arglist>(PlacesOpenFlags lhs, PlacesOpenFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PlacesOpenFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gac99a607261bf16d15451233f642e22f3</anchor>
      <arglist>(PlacesOpenFlags lhs, PlacesOpenFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PlacesOpenFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaf2bf3fe654b6821158419ebe014c5dfc</anchor>
      <arglist>(PlacesOpenFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>PlacesOpenFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga2658f3fc323ceef480b862d44732e7dc</anchor>
      <arglist>(PlacesOpenFlags &amp;lhs, PlacesOpenFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PlacesOpenFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga2478ac7728c49445d471f7015acb02af</anchor>
      <arglist>(PlacesOpenFlags &amp;lhs, PlacesOpenFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PlacesOpenFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaa128f5e9d9a2148a4c419f56cad0b5ec</anchor>
      <arglist>(PlacesOpenFlags &amp;lhs, PlacesOpenFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TargetFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga64342f7fe4d6b5fea652e5665d2e46cb</anchor>
      <arglist>(TargetFlags lhs, TargetFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TargetFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3ad4468fabf318ff689eea091277c14b</anchor>
      <arglist>(TargetFlags lhs, TargetFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TargetFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga8064038c09a5cdadceb16d47364ada09</anchor>
      <arglist>(TargetFlags lhs, TargetFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TargetFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga0c128df6a28725a9f0cde3ae13105045</anchor>
      <arglist>(TargetFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>TargetFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga33f31ee8ba96613e93f24e9720d26aee</anchor>
      <arglist>(TargetFlags &amp;lhs, TargetFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TargetFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga7bae79ced32ada911acb65bebdfd905a</anchor>
      <arglist>(TargetFlags &amp;lhs, TargetFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TargetFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga7f55d6ef80eaff46bbc91d1641b470ee</anchor>
      <arglist>(TargetFlags &amp;lhs, TargetFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RegionFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gace6dc97ced2760793b6661627f198c57</anchor>
      <arglist>(RegionFlags lhs, RegionFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RegionFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga291d71e741a69f8ada8a5828802ff971</anchor>
      <arglist>(RegionFlags lhs, RegionFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RegionFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga9de1b68ef88eef2a50d5ebb3a752a96d</anchor>
      <arglist>(RegionFlags lhs, RegionFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RegionFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga7ab05505095789dd94d0b48acdb5a262</anchor>
      <arglist>(RegionFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>RegionFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga18952cbf1727db3f3f013339ccb2a87a</anchor>
      <arglist>(RegionFlags &amp;lhs, RegionFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RegionFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga662ff56232ba842f403c4799ecdcd4d0</anchor>
      <arglist>(RegionFlags &amp;lhs, RegionFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RegionFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga282ae58caea6e63b16e2a62705261cdd</anchor>
      <arglist>(RegionFlags &amp;lhs, RegionFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>JunctionSides</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga8f57a113abb1b042614c8a070c30aee9</anchor>
      <arglist>(JunctionSides lhs, JunctionSides rhs)</arglist>
    </member>
    <member kind="function">
      <type>JunctionSides</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga2fee05161818f37a908dcbd024e1a5f2</anchor>
      <arglist>(JunctionSides lhs, JunctionSides rhs)</arglist>
    </member>
    <member kind="function">
      <type>JunctionSides</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gacdcc03b9f35f262d5641d75fb4e61e3f</anchor>
      <arglist>(JunctionSides lhs, JunctionSides rhs)</arglist>
    </member>
    <member kind="function">
      <type>JunctionSides</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad3653126aa89e938877ad82e5b453065</anchor>
      <arglist>(JunctionSides flags)</arglist>
    </member>
    <member kind="function">
      <type>JunctionSides &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gadea901fa174f0bd8285461a05a0809a4</anchor>
      <arglist>(JunctionSides &amp;lhs, JunctionSides rhs)</arglist>
    </member>
    <member kind="function">
      <type>JunctionSides &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga783678ce4482ee6ce5a65f3476397431</anchor>
      <arglist>(JunctionSides &amp;lhs, JunctionSides rhs)</arglist>
    </member>
    <member kind="function">
      <type>JunctionSides &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga99ef1cfce385c11c99c220d4e321b75a</anchor>
      <arglist>(JunctionSides &amp;lhs, JunctionSides rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaa430c6d062989989c878a4f1409376f8</anchor>
      <arglist>(StateFlags lhs, StateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga2cbf355a938231d81ffe937654fd4599</anchor>
      <arglist>(StateFlags lhs, StateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gadf47fccda70b738a0e6b6dde1dbb2ea9</anchor>
      <arglist>(StateFlags lhs, StateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga2c413d343ec83522dd8a42c6987fc0eb</anchor>
      <arglist>(StateFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>StateFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga37d7a45c257f87eb52d62dbae44255dc</anchor>
      <arglist>(StateFlags &amp;lhs, StateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gac2be079f075e21089339425f4c3f6a3b</anchor>
      <arglist>(StateFlags &amp;lhs, StateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga46591e2dc834d86e904e55fa39e9f8e8</anchor>
      <arglist>(StateFlags &amp;lhs, StateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>InputHints</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga6ba3c52bbebec0f97b48f59b9f84a3a8</anchor>
      <arglist>(InputHints lhs, InputHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>InputHints</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae5bb58fae80b9d328ffeabaeace1ded9</anchor>
      <arglist>(InputHints lhs, InputHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>InputHints</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga9ed94f7dab42eacdb9de8713c965bad1</anchor>
      <arglist>(InputHints lhs, InputHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>InputHints</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gacaad3c53584466e69c8f244367e977c6</anchor>
      <arglist>(InputHints flags)</arglist>
    </member>
    <member kind="function">
      <type>InputHints &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae8ca47a4563565d1f33971ad81cfce4c</anchor>
      <arglist>(InputHints &amp;lhs, InputHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>InputHints &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga1e13e262c767b57c682bc11f155adcef</anchor>
      <arglist>(InputHints &amp;lhs, InputHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>InputHints &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga6b376ffed88b71a4f7ded7a0389775b3</anchor>
      <arglist>(InputHints &amp;lhs, InputHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileFilterFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaf276384194b5b066483fcfc80ae44a8f</anchor>
      <arglist>(FileFilterFlags lhs, FileFilterFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileFilterFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaa7a0e9d419b5f5fa6b1667b41be8dce6</anchor>
      <arglist>(FileFilterFlags lhs, FileFilterFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileFilterFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga8a315e478dd2a634891759dc2a36893d</anchor>
      <arglist>(FileFilterFlags lhs, FileFilterFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileFilterFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga06f04a55d677c29ebbe05a66788c974e</anchor>
      <arglist>(FileFilterFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>FileFilterFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3291cedc4ee2b65f6aaf6e1920314a7e</anchor>
      <arglist>(FileFilterFlags &amp;lhs, FileFilterFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileFilterFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad93576f7621bf253dbb24ae441c3369e</anchor>
      <arglist>(FileFilterFlags &amp;lhs, FileFilterFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileFilterFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga7f9085428bfebc0fcbe07b60de0ac2fa</anchor>
      <arglist>(FileFilterFlags &amp;lhs, FileFilterFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>IconLookupFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae43eefc56e404acd25aa5088fa9eab40</anchor>
      <arglist>(IconLookupFlags lhs, IconLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>IconLookupFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga396c2a966305f85991a6a63247438d4b</anchor>
      <arglist>(IconLookupFlags lhs, IconLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>IconLookupFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga5042237701d1e7cb3210bb46cdb41b87</anchor>
      <arglist>(IconLookupFlags lhs, IconLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>IconLookupFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga8f097ce72dcecce314f18303ed06bfac</anchor>
      <arglist>(IconLookupFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>IconLookupFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga4151cc515d6ce6b6d99c5f9c7c3822f1</anchor>
      <arglist>(IconLookupFlags &amp;lhs, IconLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>IconLookupFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga9037d2bb6e8f05b4210a596cfd8fda9c</anchor>
      <arglist>(IconLookupFlags &amp;lhs, IconLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>IconLookupFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gab5daff6317f96dc6602f9d300d597eef</anchor>
      <arglist>(IconLookupFlags &amp;lhs, IconLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; PageSetup &gt;</type>
      <name>run_page_setup_dialog</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>acdc501a0e38df936b78003f61a4e37fd</anchor>
      <arglist>(Window &amp;parent, const Glib::RefPtr&lt; const PageSetup &gt; &amp;page_setup, const Glib::RefPtr&lt; const PrintSettings &gt; &amp;print_settings)</arglist>
    </member>
    <member kind="function">
      <type>Glib::RefPtr&lt; PageSetup &gt;</type>
      <name>run_page_setup_dialog</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>a5165504babd346f7dfd33f8848e07a06</anchor>
      <arglist>(Window &amp;parent, const Glib::RefPtr&lt; const PrintSettings &gt; &amp;print_settings)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>run_page_setup_dialog_async</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>a42452c3f915addf41ed7b51b4e052d34</anchor>
      <arglist>(Window &amp;parent, const Glib::RefPtr&lt; const PageSetup &gt; &amp;page_setup, const Glib::RefPtr&lt; const PrintSettings &gt; &amp;print_settings, const SlotPrintSetupDone &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>run_page_setup_dialog_async</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ae717dafe63d99c1e26ecf66d0e20fd60</anchor>
      <arglist>(Window &amp;parent, const Glib::RefPtr&lt; const PrintSettings &gt; &amp;print_settings, const SlotPrintSetupDone &amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>RecentFilterFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga2a23c80769d64fe8064e8d2f2df34b5f</anchor>
      <arglist>(RecentFilterFlags lhs, RecentFilterFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RecentFilterFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga592044aec001cebdd21eb115991d7c02</anchor>
      <arglist>(RecentFilterFlags lhs, RecentFilterFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RecentFilterFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga781baf4e4d527ec65e061923717b71e3</anchor>
      <arglist>(RecentFilterFlags lhs, RecentFilterFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RecentFilterFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gac009d3aa1a81fe70daf3c99a065cd007</anchor>
      <arglist>(RecentFilterFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>RecentFilterFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga95f2298e8acb574a7a51ae2bf355ae7e</anchor>
      <arglist>(RecentFilterFlags &amp;lhs, RecentFilterFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RecentFilterFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae07b330895b2c7c3f62793a632a77fc6</anchor>
      <arglist>(RecentFilterFlags &amp;lhs, RecentFilterFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RecentFilterFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaa3dd79412594212617e6091508e0e3d2</anchor>
      <arglist>(RecentFilterFlags &amp;lhs, RecentFilterFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TextSearchFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga00496c69b32a8eddccf163fb11e00327</anchor>
      <arglist>(TextSearchFlags lhs, TextSearchFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TextSearchFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga7360481e7db3ee22b52891b45b801f89</anchor>
      <arglist>(TextSearchFlags lhs, TextSearchFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TextSearchFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaac266d954271ea5fe49d534864f2d5f1</anchor>
      <arglist>(TextSearchFlags lhs, TextSearchFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TextSearchFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga0f9d38cf1bed3e028260e13b8fbc9870</anchor>
      <arglist>(TextSearchFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>TextSearchFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae0035cd1212a0d562b3c4dc774282b69</anchor>
      <arglist>(TextSearchFlags &amp;lhs, TextSearchFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TextSearchFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad8778fcc2c2c67aa28abdec698207600</anchor>
      <arglist>(TextSearchFlags &amp;lhs, TextSearchFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TextSearchFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3171b3210f43ed5468a094117b7c36eb</anchor>
      <arglist>(TextSearchFlags &amp;lhs, TextSearchFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ToolPaletteDragTargets</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gab58a3872c7a4739ec349d6f5b324f944</anchor>
      <arglist>(ToolPaletteDragTargets lhs, ToolPaletteDragTargets rhs)</arglist>
    </member>
    <member kind="function">
      <type>ToolPaletteDragTargets</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3ae17c1cd719d4f3b83fb837bca77414</anchor>
      <arglist>(ToolPaletteDragTargets lhs, ToolPaletteDragTargets rhs)</arglist>
    </member>
    <member kind="function">
      <type>ToolPaletteDragTargets</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga90e60b61cb3b83380b785d460058e3c8</anchor>
      <arglist>(ToolPaletteDragTargets lhs, ToolPaletteDragTargets rhs)</arglist>
    </member>
    <member kind="function">
      <type>ToolPaletteDragTargets</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae20bf064b0327c2bfe202ed68f54c376</anchor>
      <arglist>(ToolPaletteDragTargets flags)</arglist>
    </member>
    <member kind="function">
      <type>ToolPaletteDragTargets &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga39d5044fc340a759d3fb7e97c3b9a6eb</anchor>
      <arglist>(ToolPaletteDragTargets &amp;lhs, ToolPaletteDragTargets rhs)</arglist>
    </member>
    <member kind="function">
      <type>ToolPaletteDragTargets &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga9e922c5bc0991e8ed49043de2a2d4c87</anchor>
      <arglist>(ToolPaletteDragTargets &amp;lhs, ToolPaletteDragTargets rhs)</arglist>
    </member>
    <member kind="function">
      <type>ToolPaletteDragTargets &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga5dc5ff391b857ce0b981b26f3ea233c0</anchor>
      <arglist>(ToolPaletteDragTargets &amp;lhs, ToolPaletteDragTargets rhs)</arglist>
    </member>
    <member kind="function">
      <type>TreeModelFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga4c93ffcbc6c7f5dbb811f3541a72f191</anchor>
      <arglist>(TreeModelFlags lhs, TreeModelFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TreeModelFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gafc752abf2fd6a0e4761765291d130a72</anchor>
      <arglist>(TreeModelFlags lhs, TreeModelFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TreeModelFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga914b4d0c9afe671965097f7228ffb01e</anchor>
      <arglist>(TreeModelFlags lhs, TreeModelFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TreeModelFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gab17753d3b215df816676f0741fa8ba91</anchor>
      <arglist>(TreeModelFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>TreeModelFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gabfcb14fc2c3e23016669427e080dfd1c</anchor>
      <arglist>(TreeModelFlags &amp;lhs, TreeModelFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TreeModelFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga0e4401e477b00648d7680d1d1ecc69fe</anchor>
      <arglist>(TreeModelFlags &amp;lhs, TreeModelFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TreeModelFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga17dfbab3cbd754fd2295d875cc2d9a67</anchor>
      <arglist>(TreeModelFlags &amp;lhs, TreeModelFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>DestDefaults</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad53569ea5ff70233b03b41b870a08d37</anchor>
      <arglist>(DestDefaults lhs, DestDefaults rhs)</arglist>
    </member>
    <member kind="function">
      <type>DestDefaults</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga4350db281aab8769c9326925b7ee834e</anchor>
      <arglist>(DestDefaults lhs, DestDefaults rhs)</arglist>
    </member>
    <member kind="function">
      <type>DestDefaults</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga600559f88f10f14551d6b2c50b50bf68</anchor>
      <arglist>(DestDefaults lhs, DestDefaults rhs)</arglist>
    </member>
    <member kind="function">
      <type>DestDefaults</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gace29957c0b7dc5d2e8461a4ca4226b81</anchor>
      <arglist>(DestDefaults flags)</arglist>
    </member>
    <member kind="function">
      <type>DestDefaults &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga051f1d7cb86c9c5513bd83ecf3b2dd4c</anchor>
      <arglist>(DestDefaults &amp;lhs, DestDefaults rhs)</arglist>
    </member>
    <member kind="function">
      <type>DestDefaults &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3969d3a13a2ea793f50e81e25cb4cbf9</anchor>
      <arglist>(DestDefaults &amp;lhs, DestDefaults rhs)</arglist>
    </member>
    <member kind="function">
      <type>DestDefaults &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaa9df1befb72008c547eec239bdb33c54</anchor>
      <arglist>(DestDefaults &amp;lhs, DestDefaults rhs)</arglist>
    </member>
    <member kind="function">
      <type>PrintCapabilities</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaad61a9471f6ee6484f965ad54b5afb80</anchor>
      <arglist>(PrintCapabilities lhs, PrintCapabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>PrintCapabilities</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga76b2f115d9c93812b98e55c298fa5a88</anchor>
      <arglist>(PrintCapabilities lhs, PrintCapabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>PrintCapabilities</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga89e437a62c5057f51524d52555f83208</anchor>
      <arglist>(PrintCapabilities lhs, PrintCapabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>PrintCapabilities</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga45759a0732ecd7ebcf69e83924465de5</anchor>
      <arglist>(PrintCapabilities flags)</arglist>
    </member>
    <member kind="function">
      <type>PrintCapabilities &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaacc1cca7058c9611b24e6f631e07a4e2</anchor>
      <arglist>(PrintCapabilities &amp;lhs, PrintCapabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>PrintCapabilities &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga828daae7b326f2fedde6b21401fb05fa</anchor>
      <arglist>(PrintCapabilities &amp;lhs, PrintCapabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>PrintCapabilities &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae5d504a32337e05514b2fb747d61d058</anchor>
      <arglist>(PrintCapabilities &amp;lhs, PrintCapabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>UIManagerItemType</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga436aeccc08950dd6cd8fc208b4d7abda</anchor>
      <arglist>(UIManagerItemType lhs, UIManagerItemType rhs)</arglist>
    </member>
    <member kind="function">
      <type>UIManagerItemType</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gab927be6214138245d093b316f6f64154</anchor>
      <arglist>(UIManagerItemType lhs, UIManagerItemType rhs)</arglist>
    </member>
    <member kind="function">
      <type>UIManagerItemType</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga81aeb45830ac510a4e5d5a8916ffcfb7</anchor>
      <arglist>(UIManagerItemType lhs, UIManagerItemType rhs)</arglist>
    </member>
    <member kind="function">
      <type>UIManagerItemType</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga22a9ae52041e93f31989d1e429098659</anchor>
      <arglist>(UIManagerItemType flags)</arglist>
    </member>
    <member kind="function">
      <type>UIManagerItemType &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gadc7f0e3a0ea2d418a9db741cf63f3f24</anchor>
      <arglist>(UIManagerItemType &amp;lhs, UIManagerItemType rhs)</arglist>
    </member>
    <member kind="function">
      <type>UIManagerItemType &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaedcbdcccbdf482d610227cacbf85b0a0</anchor>
      <arglist>(UIManagerItemType &amp;lhs, UIManagerItemType rhs)</arglist>
    </member>
    <member kind="function">
      <type>UIManagerItemType &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gabca912b053aba7c694b25bfa0fce9447</anchor>
      <arglist>(UIManagerItemType &amp;lhs, UIManagerItemType rhs)</arglist>
    </member>
    <member kind="variable">
      <type>const Glib::ustring</type>
      <name>PAPER_NAME_A3</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>a0d839d584fffab643302c626ddde1a23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Glib::ustring</type>
      <name>PAPER_NAME_A4</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>a8697827f471b189c608152681faba896</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Glib::ustring</type>
      <name>PAPER_NAME_A5</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>a9bbe475f2cd466e1990ddf4e0b4d8e94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Glib::ustring</type>
      <name>PAPER_NAME_B5</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>aae11f067c17cf37a423f155a0d1a33a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Glib::ustring</type>
      <name>PAPER_NAME_LETTER</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>a00711ed67d3d355965209311f281a151</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Glib::ustring</type>
      <name>PAPER_NAME_EXECUTIVE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>afe39a20910b2541fb8406aa4b9b3ad53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Glib::ustring</type>
      <name>PAPER_NAME_LEGAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>a8554a14efd109647e8356413a6e4eda5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Gtk::AccelMap</name>
    <filename>namespaceGtk_1_1AccelMap.html</filename>
    <member kind="function">
      <type>void</type>
      <name>add_entry</name>
      <anchorfile>namespaceGtk_1_1AccelMap.html</anchorfile>
      <anchor>a6313a0f99aebe342c08f2d2d0f9416ad</anchor>
      <arglist>(const std::string &amp;accel_path, guint accel_key, Gdk::ModifierType accel_mods)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>change_entry</name>
      <anchorfile>namespaceGtk_1_1AccelMap.html</anchorfile>
      <anchor>a95ea03719ffcda0d038252d3886f935b</anchor>
      <arglist>(const std::string &amp;accel_path, guint accel_key, Gdk::ModifierType accel_mods, bool replace)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>namespaceGtk_1_1AccelMap.html</anchorfile>
      <anchor>ab08ddf040f6014f34398ef1f5ff61d20</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save</name>
      <anchorfile>namespaceGtk_1_1AccelMap.html</anchorfile>
      <anchor>abcf3439b02031c060e7984f919604aaa</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lock_path</name>
      <anchorfile>namespaceGtk_1_1AccelMap.html</anchorfile>
      <anchor>aab88799290240d3b9f95ea5a8db296a0</anchor>
      <arglist>(const std::string &amp;accel_path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlock_path</name>
      <anchorfile>namespaceGtk_1_1AccelMap.html</anchorfile>
      <anchor>a34e0669e9f2eb96abeaba309d751f535</anchor>
      <arglist>(const std::string &amp;accel_path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>lookup_entry</name>
      <anchorfile>namespaceGtk_1_1AccelMap.html</anchorfile>
      <anchor>a2b71d89fdafdf9b71ef7ba1dedf5e70c</anchor>
      <arglist>(const Glib::ustring &amp;accel_path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>lookup_entry</name>
      <anchorfile>namespaceGtk_1_1AccelMap.html</anchorfile>
      <anchor>a65ed240c5058b980c7047c519b3a3a37</anchor>
      <arglist>(const Glib::ustring &amp;accel_path, Gtk::AccelKey &amp;key)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Gtk::Menu_Helpers</name>
    <filename>namespaceGtk_1_1Menu__Helpers.html</filename>
  </compound>
  <compound kind="namespace">
    <name>Gtk::Stock</name>
    <filename>namespaceGtk_1_1Stock.html</filename>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>af5a3d62d679e3dd162bd77ac76205105</anchor>
      <arglist>(const Gtk::StockItem &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>lookup</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a2e8af08233c9d1f328275a5c0e6a742e</anchor>
      <arglist>(const Gtk::StockID &amp;stock_id, Gtk::StockItem &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>lookup</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a6161c914a2d757f387f73df0db974a81</anchor>
      <arglist>(const Gtk::StockID &amp;stock_id, Glib::RefPtr&lt; Gtk::IconSet &gt; &amp;iconset)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>lookup</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a4dc27939c9cf6d35a22c68ac7956c5d4</anchor>
      <arglist>(const Gtk::StockID &amp;stock_id, Gtk::IconSize size, Gtk::Image &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Gtk::StockID &gt;</type>
      <name>get_ids</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>aa11803c9f66abc7668812892655676eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>DIALOG_AUTHENTICATION</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a774f24ac5ce37b55d836ee53327cdb88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>DIALOG_INFO</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>aaaa7221c35a8f748687332ce971fdfc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>DIALOG_WARNING</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a9854930f9d897a12e72b2e6c205111a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>DIALOG_ERROR</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a11bd3c8cb0513d6b2d3157a91be3aa27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>DIALOG_QUESTION</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>ae27e29cf3883b1e4ecc1302efbdbb950</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>DND</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>abe8c8f458f1266beaa978b1a093a624a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>DND_MULTIPLE</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>affff24b9028b7123c5f3954f5a1e1462</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>ABOUT</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>adff2141ffe8732f7f938d8a09afe9e13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>ADD</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>ae5ff18e6b993c6e6e536a5691f713fef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>APPLY</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a4cbfe0fbbd18329f560bb225081743c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>BOLD</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>ac9685666b26387bcd0c02153615870c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>CANCEL</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>acfe70802a49b2fb4b6ea17285eb4356e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>CAPS_LOCK_WARNING</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a15e7258aa51275aed3ca2886e9f6bd6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>CDROM</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>abafce7d44bbc432d9c74aa6b9f988f35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>CLEAR</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a96216a9bbcc84381b9c0374503fa4bf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>CLOSE</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a56b04c0b7ca639605134529d4763c785</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>COLOR_PICKER</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a429e7f57f5ff8778899249233d19edd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>CONVERT</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a0ee2c68fdc8effc3bcc18ffab289fc4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>CONNECT</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a79ba2647c9fb924b3c07a65f1818a4b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>COPY</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a9d7ac2081a0c8c7cec286946a7c0fb4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>CUT</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a76302fb02dfe89fd8a7af6cfac51eb2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>DELETE</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a111cedc394652655fd93229be1ae03b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>DIRECTORY</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a94820259b1d84a05dce97f119e75bd56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>DISCARD</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a6936d6141192bd31d121707015d0457c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>DISCONNECT</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a65c91d02688d4556380339cc714c8550</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>EDIT</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a39b5d6f7f313ead8ce58cf51fa5344d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>EXECUTE</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>af553b5476f48ac86b2c7e2eb399f2ff9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>FILE</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>aa0aa8a79b9eec5a1d7ab645c966c3585</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>FIND</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a6775f3422377831d16c2a3019f376b63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>FIND_AND_REPLACE</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a8dab60d835de98dea87145c1a767e957</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>FLOPPY</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a04cd8be9df9602aee99a2ff89831006b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>FULLSCREEN</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a0fc9559d507b55c620dd08250a5a6da8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>LEAVE_FULLSCREEN</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>ab9fb32ea4aa0df2e2c4486bd62dc909d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>GOTO_BOTTOM</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a0e14dad5088d5cc91bc14854f543c699</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>GOTO_FIRST</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a794131751dedbde000bd960a242ff518</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>GOTO_LAST</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a54513b61679a04a52a80cf4dcdda2b02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>GOTO_TOP</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>aeafd652651b5bc595d911d7456f860e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>GO_BACK</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a0012661bd5ef930f781a0603d67c375d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>GO_DOWN</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>aa032669c3bd77828586ae8d7e7b28747</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>GO_FORWARD</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>ade2f4405d6837420a523cc6a4ccd9e5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>GO_UP</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a3293184f4a9574d5b745d9abd0938ca8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>HARDDISK</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a329bcfa05bc68240470307978959513e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>HELP</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a55c8b40a09ba279bc2e70c92576a5523</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>HOME</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>ace4e1d7bad11dda2b729070f1765f9d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>INDEX</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a648ceddb785ff5a55d0673ddbec01f67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>INFO</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a71bd708853dabfb121ade7234e1822cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>INDENT</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a211f3891c41c91fcc8adca3db3b4f166</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>UNINDENT</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>aaa4cdf96ad0fcc5ecc70e84fc13938f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>ITALIC</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>aa7f41d8ac9e0278edc95979a60e33a0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>JUMP_TO</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>ae456395272d9512434c3e21db83c5f5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>JUSTIFY_CENTER</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a538a5e027df5b0484e199120f3148a4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>JUSTIFY_FILL</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a27f984e10b8c08640fd3ca6b05fc28ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>JUSTIFY_LEFT</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a99ce60489706a5acec5732b2396f696d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>JUSTIFY_RIGHT</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a10bc551ea2708abed5f222550786ca2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>MISSING_IMAGE</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>ad8073b63cf06998e9f589a09da5044ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>MEDIA_FORWARD</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a8b303a965b7678e771f4750fca8ea2e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>MEDIA_NEXT</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>acab361141f2b0f3542e4f3c5363e69e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>MEDIA_PAUSE</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>ac51007b4697a741e34d8852fe407700d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>MEDIA_PLAY</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a2f874010fb14a55f20a301aff3f25b04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>MEDIA_PREVIOUS</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>ab0a37dc6ada78252609dcbc011e89197</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>MEDIA_RECORD</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>ae6472badf628bcd34a3909dc157370c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>MEDIA_REWIND</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>af852e1a3bb5f4533825f632b24081722</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>MEDIA_STOP</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a819052b0ee47b1353e1ce031c9ecb2c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>NETWORK</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a1ce3bfcd72ff75052f1a11b5714c0fcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>NEW</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>afeadf75b7b8b773f5494d939671d04bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>NO</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>ac88c5e9a0d133834bb681280238ac394</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>OK</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a783d80fdc67520898ed369836f1f3390</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>OPEN</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>ab88540e8025a1f0bf6d5b01915079612</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>ORIENTATION_PORTRAIT</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a55f5893e7eae700cd670066ddda5bca9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>ORIENTATION_LANDSCAPE</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>ab80651ca58b1224ab13b28210a68bccb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>ORIENTATION_REVERSE_LANDSCAPE</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a8d547176e3bb49b2df33e49b7755baf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>ORIENTATION_REVERSE_PORTRAIT</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>aa1f9e78054d4aaa6c9117d87d2715214</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>PASTE</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>ab7e3b84945995bc01398b11b122d6593</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>PREFERENCES</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a410177586075fb45a56b9f6f2754fca2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>PAGE_SETUP</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a1895efd08da379fe2eff5153ecd073cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>PRINT</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a254aaf7d29510463f48778714c7acd96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>PRINT_ERROR</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>ac3c86f1062d4778bfb9a5ed7024de232</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>PRINT_PREVIEW</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a4752168da26d221fa4ed94a4719a6d15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>PRINT_REPORT</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a8c92903f57ea3de9daa0f0df8edb3b6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>PRINT_WARNING</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>aa42f6b1b36ce321d00cd1440726d9cac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>PROPERTIES</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a5b8b4ce043f8515288d58c9ee7c13aef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>QUIT</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>ae0c8e9a0347999e440dd1a95153e390b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>REDO</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a68d58ed40936a79bcef345042edbc15c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>REFRESH</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>abac78ea7c63985cd60ed68bd3eb2ff0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>REMOVE</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>af854bbf7f288d271a85ca8da98a6df2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>REVERT_TO_SAVED</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a96499352c8388b884626234b5cedb4c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>SAVE</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a8ab61ea16777b635a24a6bf56851448a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>SAVE_AS</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a143490b78e429a69a29105a99778cdf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>SELECT_ALL</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>ab24c622a1ef1c23d39f1e5333e83c404</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>SELECT_COLOR</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a3faa83ee08ecd780b30caa3179610298</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>SELECT_FONT</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>acc8a15b74a82e600aa8215578c03539b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>SORT_ASCENDING</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a7dd2eab70a41486eb7e2ee6f7ad02743</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>SORT_DESCENDING</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>ac07ea80ec54605c7ee950421e7e86bd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>SPELL_CHECK</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a81cbf2f9c4b5ddda49aad1cb37bdc33b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>STOP</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a7988dfa4b447d3724e1188df0c59294c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>STRIKETHROUGH</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>aceea96df05feb637e408d15a503d26c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>UNDELETE</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a7bc608e8f5ff400bcd50c67b3820a587</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>UNDERLINE</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>af96c5ec7f63939a7531e3409036a0534</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>UNDO</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a826108fbd25250976fd3478864af276d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>YES</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>acf80d9c8e5271cf1e449060c44d714da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>ZOOM_100</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>aff46e9e3f4bcc45cbb57d3ac55170b75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>ZOOM_FIT</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a942e4e7feaba227dcee3b4cf8ceeebbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>ZOOM_IN</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a85312d896ddc087dbabe1bab1aaaa400</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Gtk::BuiltinStockID</type>
      <name>ZOOM_OUT</name>
      <anchorfile>namespaceGtk_1_1Stock.html</anchorfile>
      <anchor>a4bf2288b2486111f962e0f9f711a93f9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Containers</name>
    <title>Container Widgets</title>
    <filename>group__Containers.html</filename>
    <class kind="class">Gtk::ListViewText</class>
    <class kind="class">Gtk::AspectFrame</class>
    <class kind="class">Gtk::Expander</class>
    <class kind="class">Gtk::Fixed</class>
    <class kind="class">Gtk::FlowBox</class>
    <class kind="class">Gtk::FlowBoxChild</class>
    <class kind="class">Gtk::Frame</class>
    <class kind="class">Gtk::Grid</class>
    <class kind="class">Gtk::HeaderBar</class>
    <class kind="class">Gtk::VBox</class>
    <class kind="class">Gtk::HBox</class>
    <class kind="class">Gtk::IconView</class>
    <class kind="class">Gtk::Layout</class>
    <class kind="class">Gtk::ListBox</class>
    <class kind="class">Gtk::ListBoxRow</class>
    <class kind="class">Gtk::MenuShell</class>
    <class kind="class">Gtk::Notebook</class>
    <class kind="class">Gtk::OffscreenWindow</class>
    <class kind="class">Gtk::Overlay</class>
    <class kind="class">Gtk::Paned</class>
    <class kind="class">Gtk::PopoverMenu</class>
    <class kind="class">Gtk::ScrolledWindow</class>
    <class kind="class">Gtk::Stack</class>
    <class kind="class">Gtk::TextView</class>
    <class kind="class">Gtk::Toolbar</class>
    <class kind="class">Gtk::ToolItemGroup</class>
    <class kind="class">Gtk::ToolPalette</class>
    <class kind="class">Gtk::TreeView</class>
    <class kind="class">Gtk::Viewport</class>
    <class kind="class">Gtk::Socket</class>
    <class kind="class">Gtk::Alignment</class>
    <class kind="class">Gtk::HandleBox</class>
    <class kind="class">Gtk::VButtonBox</class>
    <class kind="class">Gtk::HButtonBox</class>
    <class kind="class">Gtk::Table</class>
  </compound>
  <compound kind="group">
    <name>Dialogs</name>
    <title>Dialogs</title>
    <filename>group__Dialogs.html</filename>
    <class kind="class">Gtk::AboutDialog</class>
    <class kind="class">Gtk::AppChooserDialog</class>
    <class kind="class">Gtk::Assistant</class>
    <class kind="class">Gtk::ColorChooserDialog</class>
    <class kind="class">Gtk::Dialog</class>
    <class kind="class">Gtk::FileChooserDialog</class>
    <class kind="class">Gtk::FontChooserDialog</class>
    <class kind="class">Gtk::FontChooserWidget</class>
    <class kind="class">Gtk::MessageDialog</class>
    <class kind="class">Gtk::ColorSelectionDialog</class>
    <class kind="class">Gtk::FontSelectionDialog</class>
  </compound>
  <compound kind="group">
    <name>Gestures</name>
    <title>Event Controllers and Gestures</title>
    <filename>group__Gestures.html</filename>
    <class kind="class">Gtk::EventController</class>
    <class kind="class">Gtk::Gesture</class>
    <class kind="class">Gtk::GestureDrag</class>
    <class kind="class">Gtk::GestureLongPress</class>
    <class kind="class">Gtk::GestureMultiPress</class>
    <class kind="class">Gtk::GesturePan</class>
    <class kind="class">Gtk::GestureRotate</class>
    <class kind="class">Gtk::GestureSingle</class>
    <class kind="class">Gtk::GestureSwipe</class>
    <class kind="class">Gtk::GestureZoom</class>
  </compound>
  <compound kind="group">
    <name>Menus</name>
    <title>Menu classes</title>
    <filename>group__Menus.html</filename>
    <class kind="class">Gtk::AccelKey</class>
    <class kind="class">Gtk::CheckMenuItem</class>
    <class kind="class">Gtk::Menu</class>
    <class kind="class">Gtk::MenuBar</class>
    <class kind="class">Gtk::MenuItem</class>
    <class kind="class">Gtk::MenuShell</class>
    <class kind="class">Gtk::PopoverMenu</class>
    <class kind="class">Gtk::RadioMenuItem</class>
    <class kind="class">Gtk::SeparatorMenuItem</class>
    <class kind="class">Gtk::ImageMenuItem</class>
    <class kind="class">Gtk::TearoffMenuItem</class>
  </compound>
  <compound kind="group">
    <name>Printing</name>
    <title>Printing</title>
    <filename>group__Printing.html</filename>
    <class kind="class">Gtk::PageSetup</class>
    <class kind="class">Gtk::PaperSize</class>
    <class kind="class">Gtk::PrintContext</class>
    <class kind="class">Gtk::PrintOperation</class>
    <class kind="class">Gtk::PrintOperationPreview</class>
    <class kind="class">Gtk::PrintSettings</class>
    <class kind="class">Gtk::PageSetupUnixDialog</class>
    <class kind="class">Gtk::Printer</class>
    <class kind="class">Gtk::PrintJob</class>
    <class kind="class">Gtk::PrintUnixDialog</class>
  </compound>
  <compound kind="group">
    <name>RecentFiles</name>
    <title>RecentFiles</title>
    <filename>group__RecentFiles.html</filename>
    <class kind="class">Gtk::RecentChooser</class>
    <class kind="class">Gtk::RecentChooserDialog</class>
    <class kind="class">Gtk::RecentChooserMenu</class>
    <class kind="class">Gtk::RecentChooserWidget</class>
    <class kind="class">Gtk::RecentFilter</class>
    <class kind="class">Gtk::RecentInfo</class>
    <class kind="class">Gtk::RecentManager</class>
    <class kind="class">Gtk::RecentAction</class>
  </compound>
  <compound kind="group">
    <name>TextView</name>
    <title>TextView Classes</title>
    <filename>group__TextView.html</filename>
    <class kind="class">Gtk::TextAttributes</class>
    <class kind="class">Gtk::TextBuffer</class>
    <class kind="class">Gtk::TextChildAnchor</class>
    <class kind="class">Gtk::TextIter</class>
    <class kind="class">Gtk::TextMark</class>
    <class kind="class">Gtk::TextTag</class>
    <class kind="class">Gtk::TextTagTable</class>
    <class kind="class">Gtk::TextView</class>
  </compound>
  <compound kind="group">
    <name>TreeView</name>
    <title>TreeView Classes</title>
    <filename>group__TreeView.html</filename>
    <class kind="class">Gtk::ListViewText</class>
    <class kind="class">Gtk::TreeModelColumnRecord</class>
    <class kind="class">Gtk::TreeModelColumnBase</class>
    <class kind="class">Gtk::TreeModelColumn</class>
    <class kind="class">Gtk::CellRenderer</class>
    <class kind="class">Gtk::CellRendererAccel</class>
    <class kind="class">Gtk::CellRendererCombo</class>
    <class kind="class">Gtk::CellRendererPixbuf</class>
    <class kind="class">Gtk::CellRendererProgress</class>
    <class kind="class">Gtk::CellRendererSpin</class>
    <class kind="class">Gtk::CellRendererSpinner</class>
    <class kind="class">Gtk::CellRendererText</class>
    <class kind="class">Gtk::CellRendererToggle</class>
    <class kind="class">Gtk::ListStore</class>
    <class kind="class">Gtk::TreeDragDest</class>
    <class kind="class">Gtk::TreeDragSource</class>
    <class kind="class">Gtk::TreeIterBase</class>
    <class kind="class">Gtk::TreeIter</class>
    <class kind="class">Gtk::TreeRow</class>
    <class kind="class">Gtk::TreeNodeChildren</class>
    <class kind="class">Gtk::TreeModel</class>
    <class kind="class">Gtk::TreeModelFilter</class>
    <class kind="class">Gtk::TreeModelSort</class>
    <class kind="class">Gtk::TreePath</class>
    <class kind="class">Gtk::TreeRowReference</class>
    <class kind="class">Gtk::TreeSelection</class>
    <class kind="class">Gtk::TreeSortable</class>
    <class kind="class">Gtk::TreeStore</class>
    <class kind="class">Gtk::TreeView</class>
    <class kind="class">Gtk::TreeViewColumn</class>
  </compound>
  <compound kind="group">
    <name>Widgets</name>
    <title>Widgets</title>
    <filename>group__Widgets.html</filename>
    <class kind="class">Gtk::ListViewText</class>
    <class kind="class">Gtk::AccelLabel</class>
    <class kind="class">Gtk::ActionBar</class>
    <class kind="class">Gtk::AppChooserButton</class>
    <class kind="class">Gtk::AppChooserWidget</class>
    <class kind="class">Gtk::AspectFrame</class>
    <class kind="class">Gtk::Bin</class>
    <class kind="class">Gtk::Button</class>
    <class kind="class">Gtk::Calendar</class>
    <class kind="class">Gtk::CellView</class>
    <class kind="class">Gtk::CheckButton</class>
    <class kind="class">Gtk::CheckMenuItem</class>
    <class kind="class">Gtk::ColorButton</class>
    <class kind="class">Gtk::ComboBox</class>
    <class kind="class">Gtk::ComboBoxText</class>
    <class kind="class">Gtk::Container</class>
    <class kind="class">Gtk::DrawingArea</class>
    <class kind="class">Gtk::Entry</class>
    <class kind="class">Gtk::EventBox</class>
    <class kind="class">Gtk::Expander</class>
    <class kind="class">Gtk::FileChooserButton</class>
    <class kind="class">Gtk::FileChooserWidget</class>
    <class kind="class">Gtk::Fixed</class>
    <class kind="class">Gtk::FlowBox</class>
    <class kind="class">Gtk::FlowBoxChild</class>
    <class kind="class">Gtk::FontButton</class>
    <class kind="class">Gtk::FontChooserWidget</class>
    <class kind="class">Gtk::Frame</class>
    <class kind="class">Gtk::GLArea</class>
    <class kind="class">Gtk::Grid</class>
    <class kind="class">Gtk::VBox</class>
    <class kind="class">Gtk::HBox</class>
    <class kind="class">Gtk::IconView</class>
    <class kind="class">Gtk::Image</class>
    <class kind="class">Gtk::InfoBar</class>
    <class kind="class">Gtk::Invisible</class>
    <class kind="class">Gtk::Label</class>
    <class kind="class">Gtk::Layout</class>
    <class kind="class">Gtk::LevelBar</class>
    <class kind="class">Gtk::LinkButton</class>
    <class kind="class">Gtk::ListBox</class>
    <class kind="class">Gtk::ListBoxRow</class>
    <class kind="class">Gtk::LockButton</class>
    <class kind="class">Gtk::Menu</class>
    <class kind="class">Gtk::MenuBar</class>
    <class kind="class">Gtk::MenuButton</class>
    <class kind="class">Gtk::MenuItem</class>
    <class kind="class">Gtk::MenuShell</class>
    <class kind="class">Gtk::MenuToolButton</class>
    <class kind="class">Gtk::ModelButton</class>
    <class kind="class">Gtk::Notebook</class>
    <class kind="class">Gtk::OffscreenWindow</class>
    <class kind="class">Gtk::Paned</class>
    <class kind="class">Gtk::PlacesSidebar</class>
    <class kind="class">Gtk::Popover</class>
    <class kind="class">Gtk::PopoverMenu</class>
    <class kind="class">Gtk::ProgressBar</class>
    <class kind="class">Gtk::RadioButton</class>
    <class kind="class">Gtk::RadioMenuItem</class>
    <class kind="class">Gtk::RadioToolButton</class>
    <class kind="class">Gtk::Range</class>
    <class kind="class">Gtk::Revealer</class>
    <class kind="class">Gtk::Scale</class>
    <class kind="class">Gtk::ScaleButton</class>
    <class kind="class">Gtk::Scrollbar</class>
    <class kind="class">Gtk::ScrolledWindow</class>
    <class kind="class">Gtk::SearchBar</class>
    <class kind="class">Gtk::SearchEntry</class>
    <class kind="class">Gtk::SeparatorMenuItem</class>
    <class kind="class">Gtk::SeparatorToolItem</class>
    <class kind="class">Gtk::ShortcutLabel</class>
    <class kind="class">Gtk::ShortcutsGroup</class>
    <class kind="class">Gtk::ShortcutsSection</class>
    <class kind="class">Gtk::ShortcutsShortcut</class>
    <class kind="class">Gtk::ShortcutsWindow</class>
    <class kind="class">Gtk::SpinButton</class>
    <class kind="class">Gtk::Spinner</class>
    <class kind="class">Gtk::Stack</class>
    <class kind="class">Gtk::StackSidebar</class>
    <class kind="class">Gtk::StackSwitcher</class>
    <class kind="class">Gtk::Statusbar</class>
    <class kind="class">Gtk::Switch</class>
    <class kind="class">Gtk::TextView</class>
    <class kind="class">Gtk::ToggleButton</class>
    <class kind="class">Gtk::ToggleToolButton</class>
    <class kind="class">Gtk::Toolbar</class>
    <class kind="class">Gtk::ToolButton</class>
    <class kind="class">Gtk::ToolItem</class>
    <class kind="class">Gtk::ToolItemGroup</class>
    <class kind="class">Gtk::ToolPalette</class>
    <class kind="class">Gtk::TreeView</class>
    <class kind="class">Gtk::Viewport</class>
    <class kind="class">Gtk::VolumeButton</class>
    <class kind="class">Gtk::Window</class>
    <class kind="class">Gtk::Socket</class>
    <class kind="class">Gtk::Alignment</class>
    <class kind="class">Gtk::Arrow</class>
    <class kind="class">Gtk::ColorSelection</class>
    <class kind="class">Gtk::FontSelection</class>
    <class kind="class">Gtk::HandleBox</class>
    <class kind="class">Gtk::VButtonBox</class>
    <class kind="class">Gtk::HButtonBox</class>
    <class kind="class">Gtk::HPaned</class>
    <class kind="class">Gtk::VPaned</class>
    <class kind="class">Gtk::VScale</class>
    <class kind="class">Gtk::HScale</class>
    <class kind="class">Gtk::VScrollbar</class>
    <class kind="class">Gtk::HScrollbar</class>
    <class kind="class">Gtk::VSeparator</class>
    <class kind="class">Gtk::HSeparator</class>
    <class kind="class">Gtk::ImageMenuItem</class>
    <class kind="class">Gtk::Table</class>
    <class kind="class">Gtk::TearoffMenuItem</class>
  </compound>
  <compound kind="group">
    <name>gdkmmEnums</name>
    <title>gdkmm Enums and Flags</title>
    <filename>group__gdkmmEnums.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Status</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga33ce42e67ed9e5a8e467297d78a1d912</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OK</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gga33ce42e67ed9e5a8e467297d78a1d912a7ae3c9ca661532bb84a2c537c5618557</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ERROR</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gga33ce42e67ed9e5a8e467297d78a1d912a89f66ceaa2ad486eeeb2a17397c012e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ERROR_PARAM</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gga33ce42e67ed9e5a8e467297d78a1d912aa533b88ba847cf8816364162afc8080c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ERROR_FILE</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gga33ce42e67ed9e5a8e467297d78a1d912aa564853d5e4620f0870249b1c73cac78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ERROR_MEM</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gga33ce42e67ed9e5a8e467297d78a1d912ac824fafb9c236ceb3efb4e727a9b61df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CursorType</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>X_CURSOR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea6fa92ec58239953d60bdafa4440c4c9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARROW</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eafa80675ddfaa466f8505e408ccb63d3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASED_ARROW_DOWN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea853968556be34116e69fdf2a18be009d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASED_ARROW_UP</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea84f375ae6d0befbe22531d0ff9c1018f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOAT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea10aa4d61cddb935e43f2b62dea096abd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOGOSITY</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea7a8cfa3c930399e49ef68cbb505cabee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOTTOM_LEFT_CORNER</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea9845fa73563379e98fb860acb69d9bab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOTTOM_RIGHT_CORNER</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea1d59f312b332fc435d01430eef8cfe82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOTTOM_SIDE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eaa08c61108ea69fa33038512e09090f0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOTTOM_TEE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea7bf312e752ee63ab98855c3fd11d6d09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOX_SPIRAL</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eaa4be816fc4c51b075542ab679c5635e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CENTER_PTR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea25d5817adf38c3775304dc791923bf40</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CIRCLE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea919eedbd4b6032a18dcfe58469274897</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLOCK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eacfb49837cdeb6ae097fed0013e19b8b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COFFEE_MUG</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea2e2b788febfbd005d85e31451f2db694</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CROSS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea1336ffba0f880de737d4b0b66e0cc790</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CROSS_REVERSE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea33df5cbc877f7626925ff3f83fa188ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CROSSHAIR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea64d1788b6f158b910ca6bf0d10b6f4d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIAMOND_CROSS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea57aad6d7561d3df3a5808c9941f3bcb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eafe3e14a1385d46d3bc9601fcf25e3865</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOTBOX</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea4a07db0088f69dd51a6dfb09100c39b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOUBLE_ARROW</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea32f0679becbfb4ca4420d682d208199f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAFT_LARGE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eac73d7ef164539ad8c7112a36d9c9cb4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAFT_SMALL</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea915f971089b278a11751462849d0369f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAPED_BOX</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea265583771a2dbf9a07afc2cccad6b9ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXCHANGE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea2c9242717dd50c2a3986e112b3daea9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLEUR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eae3df3cf31063091d8c3df3617551c09f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GOBBLER</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea96b7765e4be855d01fc53f865f492758</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GUMBY</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eaeadc35e17cebabad68dd03a1aa1c8246</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HAND1</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea2918586c97533976d12d596d76bcf13f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HAND2</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eaf47f82fb9ff8bb6182e97ebf505bf7ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HEART</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea4d562ad508eb45b028956890401af604</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea8b3c2e5a6f30535dcdf2ff80ecc8b760</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IRON_CROSS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea9fe53c445720f4b59ffa550178efcb45</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LEFT_PTR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea4c4058065f448d8db3097ebd603e6dd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LEFT_SIDE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eaa58d00c4db5d41f5025a1cb2f872a306</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LEFT_TEE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea8dcf1b14a6a1d9566ba881bcddb4f2f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LEFTBUTTON</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eafe466feb39a43e1194505bd55014028f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LL_ANGLE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea3317959e58134bca3a77631bc09a398a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LR_ANGLE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea96fba2ec581cee199383311d2e926267</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea801cf05c6ff852f2c15cef3fd37d22fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIDDLEBUTTON</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea7c7d5821889ffe7b61953b53e7276468</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOUSE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea6fba7535aba49ab48c51be2e665c675c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PENCIL</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eaedb1afde7a750d3390a5bd3da15b2300</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIRATE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea6db11315bae5d349703719a45cddc1d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLUS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea3bd2d8516a0462a97acf7d609a8873b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUESTION_ARROW</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea22e9fc1c24ae3cfb13cadfa8c7f97fd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIGHT_PTR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea94f74e3755163dd4d7fb54dcf066ee89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIGHT_SIDE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eaf842ef0c00f9347734372990186c72e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIGHT_TEE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea1c40c4a0ca0037337606839acff10c1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIGHTBUTTON</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eacdfd06a6685dc4bef8aba55e659812a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RTL_LOGO</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea8f7faf7562c2ed6ebbf1cf498a1738f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAILBOAT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ead23d0cf07f8596298363b3e26acbc983</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SB_DOWN_ARROW</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea3108a6368b46076ca67ebc73f15592fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SB_H_DOUBLE_ARROW</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea832b8b72e1b1d1a717ee94be7a30c2c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SB_LEFT_ARROW</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eab68e40845f3a949fb53d1f35da8d7120</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SB_RIGHT_ARROW</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea9acdb6f0b80d2ed2b123ec6c3e60f031</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SB_UP_ARROW</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eaeae7cbabc774139e4aa4ce918eb049fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SB_V_DOUBLE_ARROW</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea5276b8a613d30f4bc75695ad35579156</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHUTTLE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea3d8ca6165a7b15487722b5fbe58cd239</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIZING</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eae7bdb2e0a780e539fedaa58913098584</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIDER</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea006c8e9981c9d5a8e9018b32eab6e14d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPRAYCAN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea003e498a4691e19e7433247a6e3d1419</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STAR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eac688146209b8d0ea47dbe5249913281e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TARGET</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea91eacbbaa6acac501f26da03e9852b23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TCROSS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ead4b6ca0b13e5ff1e8ff3a896d6ffca63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOP_LEFT_ARROW</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ead952bfb8fafa53183bdd1c4e19bffaf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOP_LEFT_CORNER</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea4b94e8f6ca4013c5f323c646b8fd316f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOP_RIGHT_CORNER</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea53288ace5f6f666ca9151a5a5016c793</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOP_SIDE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea32a819d0ccec7e8f703f0ba1b6931fe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOP_TEE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea133377a08a06ca5d51936963967ac14b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TREK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eafc8d59729dafa37a4c49a012f8667ccf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UL_ANGLE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea7db9da19da7b00b58fc5a863548bfb91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UMBRELLA</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea28d2a68ee5a23e958ead1e4a1f425f5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UR_ANGLE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea3b6e3b9b9202708c37fcf6130b91c112</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WATCH</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eadcb2e8f2760d1fca172a3eed7fcddd5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XTERM</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ead2979cf7358c8e22531a4a1fb8ba9ce8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LAST_CURSOR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ea4d9c4df54a6b02424839ff1431f64c8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BLANK_CURSOR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55ead3dfdad5291e00296ad9f66a9fdaa6b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CURSOR_IS_PIXMAP</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0957dd422e9f21f607f43b3d6336c55eaef221fca527f208a86b5e513016f3368</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EventMask</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPOSURE_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a02a37a692d3a22d23f108c7297e0e6d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POINTER_MOTION_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a342a902ef77f57d9334736f07a990076</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POINTER_MOTION_HINT_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61aac240ec38a5218d7573c67a09ab56281</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON_MOTION_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61af82369107be08234417f52b315199c3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON1_MOTION_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61abd7d7ab818464618a95b17fdaf74e58b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON2_MOTION_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a1a64ce75d34a53bf84e089f789015802</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON3_MOTION_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a2e18117d8362ae1aae06773cd18c3456</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON_PRESS_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61aab36cae32198c2fb44bfebb004ed1c54</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON_RELEASE_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a81d121e955040cd1452e57baff866f65</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_PRESS_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a8dfd519611828515fd7adda9e80b7870</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_RELEASE_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a9fd8a541519e432d8113974a78a9767b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENTER_NOTIFY_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a69b89d7a1ee1e3a7531eb42624108acd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LEAVE_NOTIFY_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a19978462f2718ee23be991ad2a07ef0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOCUS_CHANGE_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61acd8526a9652b8a69f9e6c372d6d41b1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRUCTURE_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a37bade8ec9af20c5b97d14b2af1494e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPERTY_CHANGE_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a4236c2b04d056b39a38356cc0ff94653</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VISIBILITY_NOTIFY_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a7361d5fc719d092eefdc2b3ff2e01791</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROXIMITY_IN_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a8c5fa92a00e0e2b271d98077500f05cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROXIMITY_OUT_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a511ba7e8e2505e66e6eb535c1ee78c0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBSTRUCTURE_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a494fd18922109a3bfaabcd0acf3c0ddf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a6a585b20af90d75babadd620d502aba1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOUCH_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a59781f091546b30f95efa63a937681f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SMOOTH_SCROLL_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61adfcb909ba01d5a3459485ff52bda3026</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOUCHPAD_GESTURE_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a9a4a25b9294e3d2e3248f15151bc2fb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TABLET_PAD_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61aa5e486be88756876d681269de7fa37a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALL_EVENTS_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0288c23e93ded8c0326235f1f1120c61a2eee3081581eff983bc8046d42a24938</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>InputMode</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaf6d613ed046401b6386ba8f7bfb273c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODE_DISABLED</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaf6d613ed046401b6386ba8f7bfb273c0a634dcb7e7a4a770ca68f15387cb20f8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODE_SCREEN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaf6d613ed046401b6386ba8f7bfb273c0a69903e10407d553fecd43603e1c2dae9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODE_WINDOW</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaf6d613ed046401b6386ba8f7bfb273c0addb39f6a3e9632ee9a9b612898822492</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>InputSource</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaa2b575499ce34e8b79386b2db0c3c95c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOURCE_MOUSE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa2b575499ce34e8b79386b2db0c3c95ca264f66b78469c63fc199ea13e716cfac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOURCE_PEN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa2b575499ce34e8b79386b2db0c3c95cafdb576e0253585fbb904708ce390eeb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOURCE_ERASER</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa2b575499ce34e8b79386b2db0c3c95ca771bbf8795defc0d0df331917f73df42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOURCE_CURSOR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa2b575499ce34e8b79386b2db0c3c95caabfefa7e6fc1e771379d2bea96b08884</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOURCE_KEYBOARD</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa2b575499ce34e8b79386b2db0c3c95ca99ba24638846730c6c82bfd902b6a70d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOURCE_TOUCHSCREEN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa2b575499ce34e8b79386b2db0c3c95ca19078c10a5b51c03718e7c009e5e9f7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOURCE_TOUCHPAD</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa2b575499ce34e8b79386b2db0c3c95ca5ed7e3e2369132246dcb8a2398ddff34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOURCE_TRACKPOINT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa2b575499ce34e8b79386b2db0c3c95cab2bbb6be6aa961971fc43b4401dda500</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOURCE_TABLET_PAD</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa2b575499ce34e8b79386b2db0c3c95ca1bc647b50d764c66b2545ddbf98fc3b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DeviceType</name>
      <anchorfile>namespaceCairo.html</anchorfile>
      <anchor>acd6c59cfdf7e4c9df93011f5dcf9b55c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GrabOwnership</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga6768e1b30c4bb0ffd848823157937454</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OWNERSHIP_NONE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga6768e1b30c4bb0ffd848823157937454ab164b5f9cf5a71e0e873d41a711a512b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OWNERSHIP_WINDOW</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga6768e1b30c4bb0ffd848823157937454a490a3088e730abb1fc7d6a8d32477fed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OWNERSHIP_APPLICATION</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga6768e1b30c4bb0ffd848823157937454adcf8c28e45320371feba0adb6aa01502</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GrabStatus</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gab3918cc69c861b97779ac08dfa48610f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAB_SUCCESS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gab3918cc69c861b97779ac08dfa48610fabd6ebda01b2ed297c760ca9f1e0d4e0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAB_ALREADY_GRABBED</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gab3918cc69c861b97779ac08dfa48610fa77dd4bcc31ff98fa6fd47d7f05fb036f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAB_INVALID_TIME</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gab3918cc69c861b97779ac08dfa48610faf90f2aeede6dfc0875e82d2e4ff72004</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAB_NOT_VIEWABLE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gab3918cc69c861b97779ac08dfa48610faedf626e98a9832d10cacea1309b558cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAB_FROZEN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gab3918cc69c861b97779ac08dfa48610faeed917b13325c56918488f80e463c445</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAB_FAILED</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gab3918cc69c861b97779ac08dfa48610fad8c5e3051b4fda3899e2ea049e7208a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DragAction</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga0a9506293be3b3dfe00ecdb83e764ca6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ACTION_DEFAULT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0a9506293be3b3dfe00ecdb83e764ca6a5e94c0f9d2b03988bc03650517807f64</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ACTION_COPY</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0a9506293be3b3dfe00ecdb83e764ca6a433271fbf84b33241dc9d3d59e769cc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ACTION_MOVE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0a9506293be3b3dfe00ecdb83e764ca6ae0f044c9fa91c63e4460bffc0beb5e8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ACTION_LINK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0a9506293be3b3dfe00ecdb83e764ca6a7add88020dc035e20383a002a9bd5e1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ACTION_PRIVATE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0a9506293be3b3dfe00ecdb83e764ca6adcbdee40d2b412f6a5e02b281c0b5756</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ACTION_ASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga0a9506293be3b3dfe00ecdb83e764ca6acd74eb3666f1d4dcc9a1f14e939daf3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DragProtocol</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga55102c640e0ecc1378ac73c1065d452d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_PROTO_NONE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga55102c640e0ecc1378ac73c1065d452da120c1fa6d6db01708efe13ac415cce3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_PROTO_MOTIF</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga55102c640e0ecc1378ac73c1065d452da25e53824ab7d50e4f8b12e6f2dc16c2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_PROTO_XDND</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga55102c640e0ecc1378ac73c1065d452da4b3fc88d81361b69cf45b17eae64ffbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_PROTO_ROOTWIN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga55102c640e0ecc1378ac73c1065d452da5ab53dc60ac51e3aec70d4efef371fc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_PROTO_WIN32_DROPFILES</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga55102c640e0ecc1378ac73c1065d452daa0bb8441f401057522c55e81ef447bc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_PROTO_OLE2</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga55102c640e0ecc1378ac73c1065d452da23df70e6fb2e38abb0bfca1f48faf188</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_PROTO_LOCAL</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga55102c640e0ecc1378ac73c1065d452da00c510f845b25109dab8ebe7a144b95f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_PROTO_WAYLAND</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga55102c640e0ecc1378ac73c1065d452da6bd3960d3a5531bbfe17b8d4b77756f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EventType</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOTHING</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a93a35982e45a0885d26f3ff11176ef3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELETE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8aeacf99323af1733f374a6fc35032dbb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DESTROY</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a2084cf30c131694f17b05745e5aaa6b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPOSE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a3dd25df95f91ac55fa9c28e87199d0a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOTION_NOTIFY</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8ada045f625aa299e3204f522ba03926db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON_PRESS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8ac1c4f4a6bbc55015e5054a2a9239dd30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOUBLE_BUTTON_PRESS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8aaa728c78a90dccc7b9f89526cf989460</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRIPLE_BUTTON_PRESS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a3c6d81adc405f35095921e1643c602a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON_RELEASE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8ab6dff5fd49532ec5119f10c1fb92ebd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_PRESS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8aa589ad7fcc480049c83658f1477a1695</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KEY_RELEASE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8ae102720557bf8822f1acb7a52ba647af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENTER_NOTIFY</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a80421188d15c6656e743ad2e98c75cfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LEAVE_NOTIFY</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a085004882f1c9e85dca94a34638f3d14</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOCUS_CHANGE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8af5164db52c7c779b82385e2be74a25c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONFIGURE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8ac2b1e2a5828d7b7c1d4a816bd4d90c43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAP</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a96a2c458b882dbb4b0658b9e87125377</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNMAP</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a1ebfdf9ba23db37695f3e95f9130567a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROPERTY_NOTIFY</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a9beddeeeae5ea5ad6ccf73a084fa5c4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SELECTION_CLEAR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a071d268ce5d90c4591cad19b22ebdb5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SELECTION_REQUEST</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a537a0cf8a20b137009d3c5f1825042e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SELECTION_NOTIFY</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a33e879b2da249052b2049612b61dd239</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROXIMITY_IN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a918eb6d23a6034ae9fdf542fb2d14599</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PROXIMITY_OUT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8aa0fc264bc93d2be2ff83ca906cc431ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_ENTER</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a396b4b58b2307a7cae4c530e4a5ff349</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_LEAVE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a8773ca2531f07be79bb2e84f39b824c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_MOTION</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8ad012ce4edc8d0f0acb64faf0cd73c193</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_STATUS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a12337b3eff9e88c2af1324ad9e30d615</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DROP_START</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a314486eca7b9b69197d7b5485c66fd99</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DROP_FINISHED</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a86c79709ecd8d91c133bcf2b4123f7b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CLIENT_EVENT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a9fc5f6c1b9c2b3a414c4d559b53f8d0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VISIBILITY_NOTIFY</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a958d9485237f3b336bf47bc13510c2f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a2580c3d8072a2ee0ed6bebab88acf505</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8aee23113999a1e3cd78f09c1d2528ef68</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SETTING</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8adece6bd1d0dd3d2ffdfa1cd1cda00cf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OWNER_CHANGE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8ad121dc5f8e9ce8c15123c9301cb59144</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAB_BROKEN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8aa9f6a21ad32aaab4240d59bd50cc57bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DAMAGE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a1642694dbc85cf8826d6afb3b7031ae5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOUCH_BEGIN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a37f53fbdd3e1b2084aef099c9c0e3951</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOUCH_UPDATE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a5d73e513e55b908dd315ae75ee84e98a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOUCH_END</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8aeb923e0a3eadf03c288c3d4065bd4a44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOUCH_CANCEL</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8abb33745ef24abe8d9646ebc96a3662f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOUCHPAD_SWIPE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8ad72e7b593991246267334ca61029b90d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOUCHPAD_PINCH</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8adde55bb46a603b65aaee6bf4baa5c1d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_BUTTON_PRESS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a36e99aeb703d761ae40c425b9f99636f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_BUTTON_RELEASE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a2221f97004078b0ee1a183dd93624109</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_RING</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a96190bc65398b04835305feb8c5efcde</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_STRIP</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8af4050935f9d547d8797294e87c3143eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAD_GROUP_MODE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8ad295dbb16b79d01cc8e6ce34e3f98175</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_LAST</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c4c9f01ff145972b1bc189092a69bb8a55716dd05d0ebfa28c4acec5858300c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AxisUse</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaa3ef1fe9ccf3e0e884578dba5a63feb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_IGNORE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa3ef1fe9ccf3e0e884578dba5a63feb7af595da9b6404510451469d472ec2c815</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_X</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa3ef1fe9ccf3e0e884578dba5a63feb7a77d06dae28d3d0094ba2fb5381aff503</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_Y</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa3ef1fe9ccf3e0e884578dba5a63feb7a7edd734b22b2d1276bd535f03c0caa5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_PRESSURE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa3ef1fe9ccf3e0e884578dba5a63feb7aa982e89b61c77b51db9f599440ef02be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_XTILT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa3ef1fe9ccf3e0e884578dba5a63feb7a98a7535175be29c55c974a4aac061233</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_YTILT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa3ef1fe9ccf3e0e884578dba5a63feb7a28453c82432d3eb5afd60a3c0a0caf8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_WHEEL</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa3ef1fe9ccf3e0e884578dba5a63feb7ad310415f50219b1af147c0c045eae2ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_DISTANCE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa3ef1fe9ccf3e0e884578dba5a63feb7a00587510da032535c009867e77869713</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_ROTATION</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa3ef1fe9ccf3e0e884578dba5a63feb7ab3db40bacafe6b1cbe756e48754c3198</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_SLIDER</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa3ef1fe9ccf3e0e884578dba5a63feb7ab47c4bbbe6e206856da1710a6962ec37</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_LAST</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaa3ef1fe9ccf3e0e884578dba5a63feb7a9d1a2bd0df534f0d4701614e5ffa89cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AxisFlags</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga1d57fbdd69ea913588b3fec3a438cd13</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_FLAG_X</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1d57fbdd69ea913588b3fec3a438cd13a6693d852421ece72b68c6c66dd6790c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_FLAG_Y</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1d57fbdd69ea913588b3fec3a438cd13aae24e55628d37357d6a21c688a44441a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_FLAG_PRESSURE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1d57fbdd69ea913588b3fec3a438cd13a34a0e028383435413c26847504bec3a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_FLAG_XTILT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1d57fbdd69ea913588b3fec3a438cd13aa8f6a0783f38101378c9914d3abf9afe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_FLAG_YTILT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1d57fbdd69ea913588b3fec3a438cd13a2f0b801375e7b4ed07f668c88428aa2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_FLAG_WHEEL</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1d57fbdd69ea913588b3fec3a438cd13a7622ebd0e2d4efde1ab4885a880b788d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_FLAG_DISTANCE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1d57fbdd69ea913588b3fec3a438cd13a0762accfe7ca49a5d585eb259ef326bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_FLAG_ROTATION</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1d57fbdd69ea913588b3fec3a438cd13a7498ee6510e2f20c3971112b08974f69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AXIS_FLAG_SLIDER</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1d57fbdd69ea913588b3fec3a438cd13a6d3bd1168ca31e7f4ea87788d089b31c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FrameClockPhase</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga29d3f1406e1cad2e2f4176fd3e01c4c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FRAME_CLOCK_PHASE_NONE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga29d3f1406e1cad2e2f4176fd3e01c4c2af39caf3fc212a5d9d9e1d9b2e36786a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FRAME_CLOCK_PHASE_FLUSH_EVENTS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga29d3f1406e1cad2e2f4176fd3e01c4c2a6f23cf63c97c71d47148423cb57d56dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FRAME_CLOCK_PHASE_BEFORE_PAINT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga29d3f1406e1cad2e2f4176fd3e01c4c2a6080c9890f48f036936e2057a2bc5085</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FRAME_CLOCK_PHASE_UPDATE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga29d3f1406e1cad2e2f4176fd3e01c4c2a8901342101b68d1416f3aea8b1b9e6da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FRAME_CLOCK_PHASE_LAYOUT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga29d3f1406e1cad2e2f4176fd3e01c4c2a1afb4a02d929da3d87070a4c2c12ce8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FRAME_CLOCK_PHASE_PAINT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga29d3f1406e1cad2e2f4176fd3e01c4c2a72c84e3af399f3f3d07b629df43c7b7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FRAME_CLOCK_PHASE_RESUME_EVENTS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga29d3f1406e1cad2e2f4176fd3e01c4c2ad4a72eecd27e3ce02968da58e90bee63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FRAME_CLOCK_PHASE_AFTER_PAINT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga29d3f1406e1cad2e2f4176fd3e01c4c2a73d2d831acd17b576cdd8b7b5d49353c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SubpixelLayout</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga78ece0189217fd9faec8f631fd201aaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBPIXEL_LAYOUT_UNKNOWN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga78ece0189217fd9faec8f631fd201aaaa8059b7bf8dc973ff2c34d930231c675c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBPIXEL_LAYOUT_NONE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga78ece0189217fd9faec8f631fd201aaaa89abfa58187e2d4b4e83be8d53a7b84c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBPIXEL_LAYOUT_HORIZONTAL_RGB</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga78ece0189217fd9faec8f631fd201aaaabce4f53fb70f9bef162822e2e064ecb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBPIXEL_LAYOUT_HORIZONTAL_BGR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga78ece0189217fd9faec8f631fd201aaaa04775679a7d9d4f9873af8a5684a1da1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBPIXEL_LAYOUT_VERTICAL_RGB</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga78ece0189217fd9faec8f631fd201aaaa31f0ce45457ba68551dedb02a9ed082d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUBPIXEL_LAYOUT_VERTICAL_BGR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga78ece0189217fd9faec8f631fd201aaaa1d9e5e9020aa04dad6b29a2d82bcab62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Colorspace</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga866d716154abb7f5be26bd36b3017d3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLORSPACE_RGB</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga866d716154abb7f5be26bd36b3017d3fac1b17e0eab25d354ed8b7af0c9145b2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>InterpType</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga709a35a3eb48c0b819041e3414715fac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTERP_NEAREST</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga709a35a3eb48c0b819041e3414715facaa75a2321f8f1457aa426a6ab0c0a0a90</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTERP_TILES</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga709a35a3eb48c0b819041e3414715faca3044cafffe2f1b6afcdee9551c1f10d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTERP_BILINEAR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga709a35a3eb48c0b819041e3414715facaf5cb778e1de880033206f6e37fc62b53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTERP_HYPER</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga709a35a3eb48c0b819041e3414715faca19e921abef9f5c73a84e4fc4135d7ef7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PixbufAlphaMode</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga9c246a3d798a37b03d87e1b44865e940</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIXBUF_ALPHA_BILEVEL</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c246a3d798a37b03d87e1b44865e940a0ead8206e877b43b694ca604242fb1cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIXBUF_ALPHA_FULL</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga9c246a3d798a37b03d87e1b44865e940a79ff66f3dc80747d0b5a0efd9cc6989e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PixbufRotation</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga2587434fd0a409f88feba9e5311e6240</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIXBUF_ROTATE_NONE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga2587434fd0a409f88feba9e5311e6240ae555bb689178e0ce3fe6eda90162904c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIXBUF_ROTATE_COUNTERCLOCKWISE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga2587434fd0a409f88feba9e5311e6240a26531e198732e7087025dfb743aa97f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIXBUF_ROTATE_UPSIDEDOWN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga2587434fd0a409f88feba9e5311e6240a9fd78a0e98cf78b859fa736bb12f7d1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PIXBUF_ROTATE_CLOCKWISE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga2587434fd0a409f88feba9e5311e6240a628792f0d777e7f958408489e2f75aaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SeatCapabilities</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga127986abb070fe4b2a5ba08493cec789</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEAT_CAPABILITY_NONE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga127986abb070fe4b2a5ba08493cec789a45eaf58a7790b4ba36163aa716067baa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEAT_CAPABILITY_POINTER</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga127986abb070fe4b2a5ba08493cec789a895885859ea9ecc05e8593b344f29bf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEAT_CAPABILITY_TOUCH</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga127986abb070fe4b2a5ba08493cec789a6993aa2aa616f9d603daa68b37849bbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEAT_CAPABILITY_TABLET_STYLUS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga127986abb070fe4b2a5ba08493cec789a3d944b0dbbabde0f0a150e0584d30c62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEAT_CAPABILITY_KEYBOARD</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga127986abb070fe4b2a5ba08493cec789a836710608b2e74ec287d5cc79f8c5ec8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEAT_CAPABILITY_ALL_POINTING</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga127986abb070fe4b2a5ba08493cec789aa77fc5c11fa2608159d3cf5d085d74f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SEAT_CAPABILITY_ALL</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga127986abb070fe4b2a5ba08493cec789aea2f2f59ec24f7d75486cfc56c14bbc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ByteOrder</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga23c7243f15304c7a86cf6a20118a7c85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LSB_FIRST</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga23c7243f15304c7a86cf6a20118a7c85a09a4282a993017402243f63eb1f07298</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MSB_FIRST</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga23c7243f15304c7a86cf6a20118a7c85a3f325a2fe586702e15a335a03d888ad6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ModifierType</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHIFT_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97ab830940004787adb1286da4d9beb39dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOCK_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97a53588955c27b5c2953c37dd813308a0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONTROL_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97ac5a0ad798032e8b909e97b332fa403db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOD1_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97aa5826c8c840c570ba9b4828095cfe769</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOD2_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97adeaf38ffeb91ed46f018f78f6f5a3df6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOD3_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97a287674fa8691edefad2af9eef6135aef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOD4_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97ad75197928b62e7e615c5bd3395572411</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOD5_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97ab3ce98b1c73b01270e8ae5adcb0eebfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON1_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97a7554a2834db735e5cb44ee2c80d00ba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON2_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97a65ecd49edf9402db05e719446099b6e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON3_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97ac780dd58eee5ea940343f33307a931d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON4_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97a51eb3c909fb55a37ab12b77b3f3f85e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON5_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97a6e1d3baf3df1900a3f3811bfa2a8c50d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_RESERVED_13_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97a824f05736c732e6368be69cdb3bc7afe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_RESERVED_14_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97adb3f9da79253e99bb8e9258a65e8e1ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_RESERVED_15_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97a07c43a9b3b6578c3fd322b641c37e930</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_RESERVED_16_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97abfb12740b3f51df205e7fa2668d1e262</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_RESERVED_17_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97a87e13158b56be279709439f35bc40158</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_RESERVED_18_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97a99a3959a8d9dca4afc0d02d3618a804b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_RESERVED_19_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97afcc7c99ad866812647da7f426285536f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_RESERVED_20_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97a50822e80565e70cdbf4c73800c420bee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_RESERVED_21_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97a27d35deea64c4d7f28c5b1db46d01a0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_RESERVED_22_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97a839a0b97870ad8cc3cfb45b85459d8be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_RESERVED_23_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97a8d62f83beb3213e6f37e9eaba8b3de9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_RESERVED_24_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97ad0cb8d5fb87206cc88b16a4a3a5acea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_RESERVED_25_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97aa9998a20ed5787c9d93bdcfaa67b9791</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUPER_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97a3a98399c90bf0f84da04716f7a7a60d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HYPER_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97ae75da94c4831dcc13a3f1cad2cdf09d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>META_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97aa94e66485b11ee78fbc855b88efbcb1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_RESERVED_29_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97a772445708fae6d0039b5d8eee9a6a551</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RELEASE_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97a1d52eb9545a6a6e1c4d3d44fb07fa9aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga734c2979005c87dbe51223a0128cdd97aab6a702f9936b54d1c08a1fbea5bf229</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ModifierIntent</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gacd3d3ec93fb7c6a28c26a61f5215b02a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_INTENT_PRIMARY_ACCELERATOR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gacd3d3ec93fb7c6a28c26a61f5215b02aa74b505e53725867b8e14233595ed2387</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_INTENT_CONTEXT_MENU</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gacd3d3ec93fb7c6a28c26a61f5215b02aa4e2e1d17ac7ec420e4b6267874e470a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_INTENT_EXTEND_SELECTION</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gacd3d3ec93fb7c6a28c26a61f5215b02aa5b3aa4f36d3a9fbe21eec574e9b81be6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_INTENT_MODIFY_SELECTION</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gacd3d3ec93fb7c6a28c26a61f5215b02aabea8ee8656a4744cf37062c1e3c95a30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_INTENT_NO_TEXT_INPUT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gacd3d3ec93fb7c6a28c26a61f5215b02aad21e3db5ab67f386aba20454c8856229</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_INTENT_SHIFT_GROUP</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gacd3d3ec93fb7c6a28c26a61f5215b02aa3a9242d7693b317c6dd1be5caa53c50c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MODIFIER_INTENT_DEFAULT_MOD_MASK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gacd3d3ec93fb7c6a28c26a61f5215b02aa67ca0bbd78f2e355bbc88b44e5d575c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VisualType</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaf51d8a92358be17e8bdcbe2a229d1620</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VISUAL_STATIC_GRAY</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaf51d8a92358be17e8bdcbe2a229d1620a3ffd4f05ff969aa4badc570e3569a255</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VISUAL_GRAYSCALE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaf51d8a92358be17e8bdcbe2a229d1620acdc759a7cfc4bda8b6f3191930e7bbe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VISUAL_STATIC_COLOR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaf51d8a92358be17e8bdcbe2a229d1620ab24af7f41fda4741188010ab328abf1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VISUAL_PSEUDO_COLOR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaf51d8a92358be17e8bdcbe2a229d1620aaa3c7364919dbcaea7da720ddcf59cc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VISUAL_TRUE_COLOR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaf51d8a92358be17e8bdcbe2a229d1620ac1a605a7885367d79610d868f10a3cd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VISUAL_DIRECT_COLOR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaf51d8a92358be17e8bdcbe2a229d1620a3ea45f6c3e94cda531b08706dc45de07</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WindowState</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE_WITHDRAWN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950a308b02b6fbd3352316139bb65fb4b240</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE_ICONIFIED</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950adbec3a8ee53400731e0760cd8e6d1a20</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE_MAXIMIZED</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950a70d1794e4551f8318f24f9594cda0571</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE_STICKY</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950a893d7ca40e0374a52e6d20087a5a511e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE_FULLSCREEN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950aea37fd15e3ca35de27026dfc1ce9b329</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE_ABOVE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950a202b9d6649ef8cc3f9303a9ff2b76e67</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE_BELOW</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950a25b2ac79049bd36d6f22d64d5eaf94d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE_FOCUSED</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950a724ecabfd4a24e106bd967f6d438b2f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE_TILED</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950ad8facd08531f58171f6354ebc88e3d1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE_TOP_TILED</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950aac65996d37f2e9366c96867083672c4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE_TOP_RESIZABLE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950a0939169b37230b03f85001e31a1cac94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE_RIGHT_TILED</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950ad1f992eb5231ce0b0858e9760b459cba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE_RIGHT_RESIZABLE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950a2f340ed21d239a3e3c844c8bac784022</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE_BOTTOM_TILED</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950a886e21d92556085167c72d1f7f23d451</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE_BOTTOM_RESIZABLE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950a83aa6a984500ba82ae702d07b6005eb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE_LEFT_TILED</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950a64146fe088650b3674995ad2d9ef7666</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_STATE_LEFT_RESIZABLE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga52281110716dc2727d7f1e8303f9b950a7de28c7b83448d4c5006ce55143af90e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WindowType</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga2b9f4daf18d16a75d9bfe279f5340c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_ROOT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga2b9f4daf18d16a75d9bfe279f5340c02a982f217422a4b0de72d45875c2d45024</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TOPLEVEL</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga2b9f4daf18d16a75d9bfe279f5340c02ac93a6caf2f8bbbd2a8c693787729240c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_CHILD</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga2b9f4daf18d16a75d9bfe279f5340c02aa64b0fbfe14b77da93e27d3faf3d7d80</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TEMP</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga2b9f4daf18d16a75d9bfe279f5340c02a941fbfd9feac8050fd4fdcb1c5e77901</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_FOREIGN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga2b9f4daf18d16a75d9bfe279f5340c02afc319bd8bcf7f84f7dab92f7bb25ce52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_OFFSCREEN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga2b9f4daf18d16a75d9bfe279f5340c02aa7108bb182629dfacc7fbcae50409cc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_SUBSURFACE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga2b9f4daf18d16a75d9bfe279f5340c02ac18b806b49cab5ae5b69d0d70cea60dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WindowAttributesType</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaab9ec1938d766d84d3e4c8caeb21815a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WA_TITLE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaab9ec1938d766d84d3e4c8caeb21815aa09f8b4ad35f61f771a119b5c625ca5bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WA_X</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaab9ec1938d766d84d3e4c8caeb21815aacd1c3069dc481438382c31c51249b509</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WA_Y</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaab9ec1938d766d84d3e4c8caeb21815aab7fd7ba69a4fbca7084733b26213a8b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WA_CURSOR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaab9ec1938d766d84d3e4c8caeb21815aa6e256cacf30a1be318c8dc3f82a810b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WA_VISUAL</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaab9ec1938d766d84d3e4c8caeb21815aae0ff633d25b81674723a7afbb2c719bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WA_WMCLASS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaab9ec1938d766d84d3e4c8caeb21815aa4dcb65543bf80a0042c702f70e7bf7f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WA_NOREDIR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaab9ec1938d766d84d3e4c8caeb21815aabec00d523922e1c93e4f39758b2b6dbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WA_TYPE_HINT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gaab9ec1938d766d84d3e4c8caeb21815aae3ba3855d95f1ced0945804bae5630d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WindowHints</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga7dd31e80216f3452a1e080bd22fcfd9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HINT_POS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga7dd31e80216f3452a1e080bd22fcfd9caf7a047235b6c2889ccff6bdfe631d7c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HINT_MIN_SIZE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga7dd31e80216f3452a1e080bd22fcfd9ca6f1b2d2721554168c23fbf5511c5d7fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HINT_MAX_SIZE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga7dd31e80216f3452a1e080bd22fcfd9ca9caa6d8be32dc1145d6b2fbdb72d21db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HINT_BASE_SIZE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga7dd31e80216f3452a1e080bd22fcfd9ca6570ba85f1847ed61331e70cd3121c71</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HINT_ASPECT</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga7dd31e80216f3452a1e080bd22fcfd9cafeddb62aeda58d2d00bd5d59db24f7b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HINT_RESIZE_INC</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga7dd31e80216f3452a1e080bd22fcfd9ca88856b53da11ef29b36700247aba9576</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HINT_WIN_GRAVITY</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga7dd31e80216f3452a1e080bd22fcfd9caf32fa6210e26185d08a70f2ebb8ba0b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HINT_USER_POS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga7dd31e80216f3452a1e080bd22fcfd9ca78fcabc7726f7bdbb167a4747535bf43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HINT_USER_SIZE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga7dd31e80216f3452a1e080bd22fcfd9ca1b13094505c12a3f032ed14dac1ab64e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WindowTypeHint</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga1f75a8db0f289997ac16bba0891776c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_HINT_NORMAL</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1f75a8db0f289997ac16bba0891776c9afba659fdfa4f16ce95f98ed7253ce173</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_HINT_DIALOG</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1f75a8db0f289997ac16bba0891776c9a24feba55ecafeb3e4fbad87206ff3172</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_HINT_MENU</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1f75a8db0f289997ac16bba0891776c9ae0a386cca9f5a49b481fe3458028ad18</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_HINT_TOOLBAR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1f75a8db0f289997ac16bba0891776c9a641b121e45a472b7ed2f2a545899972a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_HINT_SPLASHSCREEN</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1f75a8db0f289997ac16bba0891776c9a2d3c2f40e87e3f1c995f853422399ca1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_HINT_UTILITY</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1f75a8db0f289997ac16bba0891776c9ab618fa30d004a7be3f6d05960e64cbff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_HINT_DOCK</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1f75a8db0f289997ac16bba0891776c9ae5931e0360036660db2cc9bb5a3df623</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_HINT_DESKTOP</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1f75a8db0f289997ac16bba0891776c9acf26278b8e568dabfa0b518024c6cf82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_HINT_DROPDOWN_MENU</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1f75a8db0f289997ac16bba0891776c9aff869af8a39182da158225889c60b0b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_HINT_POPUP_MENU</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1f75a8db0f289997ac16bba0891776c9a0aa73c7c03e938ce8513d18403e944ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_HINT_TOOLTIP</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1f75a8db0f289997ac16bba0891776c9a8d530049fda61e183f484e9aafff0429</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_HINT_NOTIFICATION</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1f75a8db0f289997ac16bba0891776c9af78c75ed1b8a8193acaae3b66dd40a47</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_HINT_COMBO</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1f75a8db0f289997ac16bba0891776c9ad288bbba09bc7e461f3e42c27f2288b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_TYPE_HINT_DND</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1f75a8db0f289997ac16bba0891776c9ac4c2dc4c00914437e36bd93b900a00e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WMDecoration</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga1164863f498802821810010d1f3202a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECOR_ALL</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1164863f498802821810010d1f3202a4ad579be44d380d629b62efd70909481bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECOR_BORDER</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1164863f498802821810010d1f3202a4a9d95c8dabd0830889355de516f5155be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECOR_RESIZEH</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1164863f498802821810010d1f3202a4a16c2d6224c8635227877266c514ca7a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECOR_TITLE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1164863f498802821810010d1f3202a4a9a69c9a110600bb4ec5449c6aeef7ca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECOR_MENU</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1164863f498802821810010d1f3202a4ab092bedb64e07e1ce6da8e6e4783792f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECOR_MINIMIZE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1164863f498802821810010d1f3202a4aa30de848d6afe6676ad726dc31033ff8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DECOR_MAXIMIZE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga1164863f498802821810010d1f3202a4ad2189f0e4c199f81283577721c654d18</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WMFunction</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gae86c2fc4eac7ecb9c6c9dd841b1ba6af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FUNC_ALL</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gae86c2fc4eac7ecb9c6c9dd841b1ba6afaecfc490889029a4064cb147be8fdec36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FUNC_RESIZE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gae86c2fc4eac7ecb9c6c9dd841b1ba6afa3d0c3109745ca74248f0cbaf5b277015</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FUNC_MOVE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gae86c2fc4eac7ecb9c6c9dd841b1ba6afa0f3357e7e8db6adc9bc8a004db5b117d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FUNC_MINIMIZE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gae86c2fc4eac7ecb9c6c9dd841b1ba6afa2f20fb33acf40248abaf9f7f823e886b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FUNC_MAXIMIZE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gae86c2fc4eac7ecb9c6c9dd841b1ba6afa2b9a0a9da6e1f8e1f4a00a0640121ffc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FUNC_CLOSE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gae86c2fc4eac7ecb9c6c9dd841b1ba6afae371360dffe89e316a2080bd6e290bce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WindowEdge</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gae31896bd6d904848c07ef7f929063c0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_EDGE_NORTH_WEST</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gae31896bd6d904848c07ef7f929063c0ca39482daa0a2e7baeafb2da7d8fefd03b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_EDGE_NORTH</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gae31896bd6d904848c07ef7f929063c0ca5b3359e2690e207f3122a2ce59d04091</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_EDGE_NORTH_EAST</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gae31896bd6d904848c07ef7f929063c0cad99cfdac335ea99c8a216373e76d23c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_EDGE_WEST</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gae31896bd6d904848c07ef7f929063c0ca22e739a42e39b0bd9d2f176e18fc67b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_EDGE_EAST</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gae31896bd6d904848c07ef7f929063c0ca0d7860957a774d5304cb71d59c6bfc46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_EDGE_SOUTH_WEST</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gae31896bd6d904848c07ef7f929063c0ca9b3cc32f10726c4c51284be0cf7bd4b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_EDGE_SOUTH</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gae31896bd6d904848c07ef7f929063c0ca9e6ea2750092b2ea32b0b85745636c52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WINDOW_EDGE_SOUTH_EAST</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gae31896bd6d904848c07ef7f929063c0cade850572e9f1bd40e00c1c0ad4951824</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Gravity</name>
      <anchorfile>group__pangommEnums.html</anchorfile>
      <anchor>ga64db2216c86f2ce624b9ef0489bf1df4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AnchorHints</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga5d54454df602915a5e1fb06202b8a940</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ANCHOR_FLIP_X</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga5d54454df602915a5e1fb06202b8a940a7bc69ce0108081b0f0f33e0103f0d4c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ANCHOR_FLIP_Y</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga5d54454df602915a5e1fb06202b8a940aeb6b4dabb2f1850cde44a7ef16ce7256</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ANCHOR_SLIDE_X</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga5d54454df602915a5e1fb06202b8a940ae9d282a4dc560829a66eb1380838e4fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ANCHOR_SLIDE_Y</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga5d54454df602915a5e1fb06202b8a940a213661599f23d6547e83e3dcdb9d1167</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ANCHOR_RESIZE_X</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga5d54454df602915a5e1fb06202b8a940a514bd9a0f10ed250740ad8da51d71022</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ANCHOR_RESIZE_Y</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga5d54454df602915a5e1fb06202b8a940a85ee58ae40aff5b7846ca24477370bf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ANCHOR_FLIP</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga5d54454df602915a5e1fb06202b8a940a5c537388eafe77b8de9775103a829daa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ANCHOR_SLIDE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga5d54454df602915a5e1fb06202b8a940a9c233db96478cdc499e382a361d13cf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ANCHOR_RESIZE</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>ga5d54454df602915a5e1fb06202b8a940a3e1ded1d4743ac9b3fa14b84bacf51ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FullscreenMode</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gab6878e8f24bf48a74f62573e4f252847</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FULLSCREEN_ON_CURRENT_MONITOR</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gab6878e8f24bf48a74f62573e4f252847ab480177f4f11026b104402904afa0fd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FULLSCREEN_ON_ALL_MONITORS</name>
      <anchorfile>namespaceGdk.html</anchorfile>
      <anchor>gab6878e8f24bf48a74f62573e4f252847a9363747a1dafe6961c1ce8c29f9a6ce0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>EventMask</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gac703a5b48fc77e29d3e78d805c31ff50</anchor>
      <arglist>(EventMask lhs, EventMask rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventMask</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga1b15235305492ed76f7ecdd400aaacd7</anchor>
      <arglist>(EventMask lhs, EventMask rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventMask</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga159399a6133fbcccaabc6f1969daea58</anchor>
      <arglist>(EventMask lhs, EventMask rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventMask</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga19a23026ba33fc076ac249d97587ec2a</anchor>
      <arglist>(EventMask flags)</arglist>
    </member>
    <member kind="function">
      <type>EventMask &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gafe1f9b78e7f8c6d6fc4d24c413899247</anchor>
      <arglist>(EventMask &amp;lhs, EventMask rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventMask &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga5968cef5c4bf27c67001befa472260d7</anchor>
      <arglist>(EventMask &amp;lhs, EventMask rhs)</arglist>
    </member>
    <member kind="function">
      <type>EventMask &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaf9061d2958fffa2bd76c3d11667474e0</anchor>
      <arglist>(EventMask &amp;lhs, EventMask rhs)</arglist>
    </member>
    <member kind="function">
      <type>DragAction</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaf3255f44d3f9fccc900f8264b01ca632</anchor>
      <arglist>(DragAction lhs, DragAction rhs)</arglist>
    </member>
    <member kind="function">
      <type>DragAction</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga9c856185b733dd03866f1b8cd0d3d7f9</anchor>
      <arglist>(DragAction lhs, DragAction rhs)</arglist>
    </member>
    <member kind="function">
      <type>DragAction</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gae19f3b208343da290137dc38d9a32993</anchor>
      <arglist>(DragAction lhs, DragAction rhs)</arglist>
    </member>
    <member kind="function">
      <type>DragAction</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaa94621e5a8456f3db149323d793feeca</anchor>
      <arglist>(DragAction flags)</arglist>
    </member>
    <member kind="function">
      <type>DragAction &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga9d8233eb045b3578dc0ee65b71aa4894</anchor>
      <arglist>(DragAction &amp;lhs, DragAction rhs)</arglist>
    </member>
    <member kind="function">
      <type>DragAction &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gadc215548f83bedbace310af27f3b4f9f</anchor>
      <arglist>(DragAction &amp;lhs, DragAction rhs)</arglist>
    </member>
    <member kind="function">
      <type>DragAction &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gab1540afa3db90f4b5786796dbb4fc811</anchor>
      <arglist>(DragAction &amp;lhs, DragAction rhs)</arglist>
    </member>
    <member kind="function">
      <type>AxisFlags</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga3cbd30b32e1a100503398960f4779dee</anchor>
      <arglist>(AxisFlags lhs, AxisFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AxisFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gae29cee1278e0927f29e5f13f2afcc648</anchor>
      <arglist>(AxisFlags lhs, AxisFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AxisFlags</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga63b86bb3648a3c6eaf3f80bc7c8c53d4</anchor>
      <arglist>(AxisFlags lhs, AxisFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AxisFlags</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gac26bd9e081e5bbdddf758cd63abf6131</anchor>
      <arglist>(AxisFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>AxisFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga9e7ad1d8a3aec3c19fbf39e06af12a9a</anchor>
      <arglist>(AxisFlags &amp;lhs, AxisFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AxisFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga29e9f438ed6380cbd8582d3f243faa7e</anchor>
      <arglist>(AxisFlags &amp;lhs, AxisFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AxisFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga1daa317ebc41b3a6d9bed57ac14ced59</anchor>
      <arglist>(AxisFlags &amp;lhs, AxisFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FrameClockPhase</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaf8d2be6debb82cb133459bbfbce2dc6c</anchor>
      <arglist>(FrameClockPhase lhs, FrameClockPhase rhs)</arglist>
    </member>
    <member kind="function">
      <type>FrameClockPhase</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga5e8503a388161900559b294254754dcc</anchor>
      <arglist>(FrameClockPhase lhs, FrameClockPhase rhs)</arglist>
    </member>
    <member kind="function">
      <type>FrameClockPhase</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gac1c7dda6e8b75c95bc86b66215b980b3</anchor>
      <arglist>(FrameClockPhase lhs, FrameClockPhase rhs)</arglist>
    </member>
    <member kind="function">
      <type>FrameClockPhase</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gab8ab5922c81a4da78c05e8cdd62e8ba5</anchor>
      <arglist>(FrameClockPhase flags)</arglist>
    </member>
    <member kind="function">
      <type>FrameClockPhase &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga405553d5f9c2385f747a33c93f301f03</anchor>
      <arglist>(FrameClockPhase &amp;lhs, FrameClockPhase rhs)</arglist>
    </member>
    <member kind="function">
      <type>FrameClockPhase &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaa4ba43b5dab66183e9e6d3a1b38ed401</anchor>
      <arglist>(FrameClockPhase &amp;lhs, FrameClockPhase rhs)</arglist>
    </member>
    <member kind="function">
      <type>FrameClockPhase &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga653bd925867dcb5fb92b68840d979ddd</anchor>
      <arglist>(FrameClockPhase &amp;lhs, FrameClockPhase rhs)</arglist>
    </member>
    <member kind="function">
      <type>SeatCapabilities</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga8d47c5dd6a76881309092efa93601222</anchor>
      <arglist>(SeatCapabilities lhs, SeatCapabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>SeatCapabilities</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaefe3e443c38ed601a0edd59b1dd41ad3</anchor>
      <arglist>(SeatCapabilities lhs, SeatCapabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>SeatCapabilities</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga4638e687312d4b356fb3ff9516076123</anchor>
      <arglist>(SeatCapabilities lhs, SeatCapabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>SeatCapabilities</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga8ac0934e77bf611229ee4d4e84e0d185</anchor>
      <arglist>(SeatCapabilities flags)</arglist>
    </member>
    <member kind="function">
      <type>SeatCapabilities &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaeaa13e03f57e1dde1d06a77d0d708bed</anchor>
      <arglist>(SeatCapabilities &amp;lhs, SeatCapabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>SeatCapabilities &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga6233e46c4b70d2f126b80faf8851a78d</anchor>
      <arglist>(SeatCapabilities &amp;lhs, SeatCapabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>SeatCapabilities &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga8339f0c77284fbf3af0a8080328566d9</anchor>
      <arglist>(SeatCapabilities &amp;lhs, SeatCapabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>ModifierType</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaea5a44032c938042746ad236bd660cb2</anchor>
      <arglist>(ModifierType lhs, ModifierType rhs)</arglist>
    </member>
    <member kind="function">
      <type>ModifierType</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gad82a54dfc3606ebaa71c019c0f529845</anchor>
      <arglist>(ModifierType lhs, ModifierType rhs)</arglist>
    </member>
    <member kind="function">
      <type>ModifierType</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga0cdb70ae86f6833d530d8342cdea8f4f</anchor>
      <arglist>(ModifierType lhs, ModifierType rhs)</arglist>
    </member>
    <member kind="function">
      <type>ModifierType</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gac4cedd5d88bb8edb2777e6bbccfd1b3b</anchor>
      <arglist>(ModifierType flags)</arglist>
    </member>
    <member kind="function">
      <type>ModifierType &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga99cb90b1d68978ab0c006a66382fc1a7</anchor>
      <arglist>(ModifierType &amp;lhs, ModifierType rhs)</arglist>
    </member>
    <member kind="function">
      <type>ModifierType &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga0639d6eb9650f83675b5195a290a28db</anchor>
      <arglist>(ModifierType &amp;lhs, ModifierType rhs)</arglist>
    </member>
    <member kind="function">
      <type>ModifierType &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gacb25d39f0de616dbd29c3202e75c68bb</anchor>
      <arglist>(ModifierType &amp;lhs, ModifierType rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowState</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaf9969fc71063efb3b37f41955837f771</anchor>
      <arglist>(WindowState lhs, WindowState rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowState</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga58a37376b2be859cbb227deb322a1b36</anchor>
      <arglist>(WindowState lhs, WindowState rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowState</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga8b2d09de757d14d82311f6bcdc6aff8b</anchor>
      <arglist>(WindowState lhs, WindowState rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowState</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga4a73cc31885c48923b08e11d6a555133</anchor>
      <arglist>(WindowState flags)</arglist>
    </member>
    <member kind="function">
      <type>WindowState &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaa2333c283eab1b4a042c5b45613f3eda</anchor>
      <arglist>(WindowState &amp;lhs, WindowState rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowState &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gab99b0a8bf562ae38c140093ae225e46a</anchor>
      <arglist>(WindowState &amp;lhs, WindowState rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowState &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaea54c9b491f737576f0328097bb53e20</anchor>
      <arglist>(WindowState &amp;lhs, WindowState rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowAttributesType</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga07e2d6d83c3eaa35582551e0e55b70ca</anchor>
      <arglist>(WindowAttributesType lhs, WindowAttributesType rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowAttributesType</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga997f4d5502e2f97f49179923c42859a0</anchor>
      <arglist>(WindowAttributesType lhs, WindowAttributesType rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowAttributesType</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gabfbb2c833dad877e1b334c820667a807</anchor>
      <arglist>(WindowAttributesType lhs, WindowAttributesType rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowAttributesType</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga59311672bf7c12c681354cecf621eead</anchor>
      <arglist>(WindowAttributesType flags)</arglist>
    </member>
    <member kind="function">
      <type>WindowAttributesType &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga6d0826df75fa792fea8677eab4e72de5</anchor>
      <arglist>(WindowAttributesType &amp;lhs, WindowAttributesType rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowAttributesType &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gad816e2db5babd124a221a9ef3fb594b5</anchor>
      <arglist>(WindowAttributesType &amp;lhs, WindowAttributesType rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowAttributesType &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gadcc2e9681ffc1cad0b1f6dec443efd65</anchor>
      <arglist>(WindowAttributesType &amp;lhs, WindowAttributesType rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowHints</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaf44475fd95eeceaa08bfb2db0d88daac</anchor>
      <arglist>(WindowHints lhs, WindowHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowHints</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gac07136d5abbd0452a8ccd9d98d299a71</anchor>
      <arglist>(WindowHints lhs, WindowHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowHints</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga7b5bd3db92630db5e9d6440cf74ab02b</anchor>
      <arglist>(WindowHints lhs, WindowHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowHints</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga529b51c729b63b8c19fa3dcdfdb749fe</anchor>
      <arglist>(WindowHints flags)</arglist>
    </member>
    <member kind="function">
      <type>WindowHints &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga1635dce56521da3b2b3358ee09fc98e0</anchor>
      <arglist>(WindowHints &amp;lhs, WindowHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowHints &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga34f1688c041b889955874c86a8d03354</anchor>
      <arglist>(WindowHints &amp;lhs, WindowHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>WindowHints &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga2e79dde61de6c9e2debbd5684f2d7b1b</anchor>
      <arglist>(WindowHints &amp;lhs, WindowHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>WMDecoration</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaf0bf563785e856d25124a5016e91f417</anchor>
      <arglist>(WMDecoration lhs, WMDecoration rhs)</arglist>
    </member>
    <member kind="function">
      <type>WMDecoration</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gac3997bc9abbf55128501c4a0cf2dcf05</anchor>
      <arglist>(WMDecoration lhs, WMDecoration rhs)</arglist>
    </member>
    <member kind="function">
      <type>WMDecoration</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga66504f447e760431ff5eb73d6e9f7204</anchor>
      <arglist>(WMDecoration lhs, WMDecoration rhs)</arglist>
    </member>
    <member kind="function">
      <type>WMDecoration</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaa2de4e22fbf85bfb2aeff16aa23953b4</anchor>
      <arglist>(WMDecoration flags)</arglist>
    </member>
    <member kind="function">
      <type>WMDecoration &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga246daf5cc044a59dc7505d859443aa3f</anchor>
      <arglist>(WMDecoration &amp;lhs, WMDecoration rhs)</arglist>
    </member>
    <member kind="function">
      <type>WMDecoration &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga135087f5fcdfd1390a2ba9e921bfbd8d</anchor>
      <arglist>(WMDecoration &amp;lhs, WMDecoration rhs)</arglist>
    </member>
    <member kind="function">
      <type>WMDecoration &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaf0f371878e37172d2efd3f06fe06497a</anchor>
      <arglist>(WMDecoration &amp;lhs, WMDecoration rhs)</arglist>
    </member>
    <member kind="function">
      <type>WMFunction</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gabbe1ffdfcd4621a50cbb70437535f528</anchor>
      <arglist>(WMFunction lhs, WMFunction rhs)</arglist>
    </member>
    <member kind="function">
      <type>WMFunction</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaa13829345810750d00aecd676ab313b0</anchor>
      <arglist>(WMFunction lhs, WMFunction rhs)</arglist>
    </member>
    <member kind="function">
      <type>WMFunction</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga16cfb561770873a87c607214be549b88</anchor>
      <arglist>(WMFunction lhs, WMFunction rhs)</arglist>
    </member>
    <member kind="function">
      <type>WMFunction</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gae36e99dc9387a7893448a194581a2f12</anchor>
      <arglist>(WMFunction flags)</arglist>
    </member>
    <member kind="function">
      <type>WMFunction &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga81377b8d9bf9a5aef27a9aa0d8365b65</anchor>
      <arglist>(WMFunction &amp;lhs, WMFunction rhs)</arglist>
    </member>
    <member kind="function">
      <type>WMFunction &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga895cce7091acfbb09aa9a8a12e6ce01d</anchor>
      <arglist>(WMFunction &amp;lhs, WMFunction rhs)</arglist>
    </member>
    <member kind="function">
      <type>WMFunction &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga4bc91f69341d0699f9a9f1eb2884d6d2</anchor>
      <arglist>(WMFunction &amp;lhs, WMFunction rhs)</arglist>
    </member>
    <member kind="function">
      <type>AnchorHints</type>
      <name>operator|</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gae484f290e9b5e65cc1477023326d5b7c</anchor>
      <arglist>(AnchorHints lhs, AnchorHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>AnchorHints</type>
      <name>operator&amp;</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gaeab522e4886592c592b0a39cbd2c51ff</anchor>
      <arglist>(AnchorHints lhs, AnchorHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>AnchorHints</type>
      <name>operator^</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga5fba6499c1bef048e61300108ef1961d</anchor>
      <arglist>(AnchorHints lhs, AnchorHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>AnchorHints</type>
      <name>operator~</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga93766424068809b36648ad03f603e14e</anchor>
      <arglist>(AnchorHints flags)</arglist>
    </member>
    <member kind="function">
      <type>AnchorHints &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>gae52c4490f004aee155140e38957e1c2c</anchor>
      <arglist>(AnchorHints &amp;lhs, AnchorHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>AnchorHints &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga7bd3cff4750fe4c7eecc247ec1880ecc</anchor>
      <arglist>(AnchorHints &amp;lhs, AnchorHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>AnchorHints &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gdkmmEnums.html</anchorfile>
      <anchor>ga6dc7a116b6e719d67628be53dd32ad42</anchor>
      <arglist>(AnchorHints &amp;lhs, AnchorHints rhs)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>gtkmmEnums</name>
    <title>gtkmm Enums and Flags</title>
    <filename>group__gtkmmEnums.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>PackOptions</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga83727a1b6fed51566dfd5c8e58890dba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PACK_SHRINK</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gga83727a1b6fed51566dfd5c8e58890dbaac313cacfd3687cf669b07a636b884f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PACK_EXPAND_PADDING</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gga83727a1b6fed51566dfd5c8e58890dbaa074ce079bed2415c97de70acf6afb8f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PACK_EXPAND_WIDGET</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gga83727a1b6fed51566dfd5c8e58890dbaa7b88e2329efd6367522358da92a3a736</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTONBOX_DEFAULT_SPACING</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ggaf6f7a88cac1c71271e56ce8daa01d07eaf17adb822bc4ac658b3f137a5026f773</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NotebookTab</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga804b44857d22ee4305c3c2f333f08062</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOTEBOOK_TAB_FIRST</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gga804b44857d22ee4305c3c2f333f08062a197be870323c8dfd1fc9852671403212</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOTEBOOK_TAB_LAST</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gga804b44857d22ee4305c3c2f333f08062a8feb306c73f894c46c06ce69092de13f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_ERROR</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gga16d8648324de7184c53e7ba888f80bf3ab13b96852791f1cc3d89b1839074b384</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>License</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga31c303a3e473b086b1f8225cd6c47db4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LICENSE_UNKNOWN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga31c303a3e473b086b1f8225cd6c47db4a9648eb20ea568ad97b6b8dbf31cf8e29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LICENSE_CUSTOM</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga31c303a3e473b086b1f8225cd6c47db4ab779d40e56ef3dead5875bc5b217ec42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LICENSE_GPL_2_0</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga31c303a3e473b086b1f8225cd6c47db4a9a7aea7de5e917711d6a4d544d7d90ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LICENSE_GPL_3_0</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga31c303a3e473b086b1f8225cd6c47db4aba961ba84bf5f1f474f26dbb13783e86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LICENSE_LGPL_2_1</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga31c303a3e473b086b1f8225cd6c47db4a0b5632ef1a8e0e2f228171cddd93db89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LICENSE_LGPL_3_0</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga31c303a3e473b086b1f8225cd6c47db4ae69a67304702da30cdd87448dbc43815</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LICENSE_BSD</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga31c303a3e473b086b1f8225cd6c47db4aeb884c4f3b15a34cbc961f21b6c53755</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LICENSE_MIT_X11</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga31c303a3e473b086b1f8225cd6c47db4a5037a3a0f6b1caaae3da1bddbd8d9f8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LICENSE_ARTISTIC</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga31c303a3e473b086b1f8225cd6c47db4a845618db084a3df9af2f52e7565fb2a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LICENSE_GPL_2_0_ONLY</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga31c303a3e473b086b1f8225cd6c47db4a369ea718eef9110cbec8edb50332a489</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LICENSE_GPL_3_0_ONLY</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga31c303a3e473b086b1f8225cd6c47db4a175584c617966cf83ebe15eb6a319d01</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LICENSE_LGPL_2_1_ONLY</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga31c303a3e473b086b1f8225cd6c47db4a9f7a11229c9e65a3bef8c51d068005a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LICENSE_LGPL_3_0_ONLY</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga31c303a3e473b086b1f8225cd6c47db4a42963496a73c5b6c341b12674e93c343</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LICENSE_AGPL_3_0</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga31c303a3e473b086b1f8225cd6c47db4a89125d6f7fadb96a8fc504b784957c9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LICENSE_AGPL_3_0_ONLY</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga31c303a3e473b086b1f8225cd6c47db4a8f117081ffd3c69db9a063eed9ddebd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ApplicationInhibitFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga5214469eb7025397aaecaf904b7e1390</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>APPLICATION_INHIBIT_LOGOUT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5214469eb7025397aaecaf904b7e1390aa8ac700bfd372662de04eebdf191ed30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>APPLICATION_INHIBIT_SWITCH</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5214469eb7025397aaecaf904b7e1390ae80f8f7475c632aa04a3d733d6b1a639</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>APPLICATION_INHIBIT_SUSPEND</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5214469eb7025397aaecaf904b7e1390a5030bca1a33facabb55e93a3634067d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>APPLICATION_INHIBIT_IDLE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5214469eb7025397aaecaf904b7e1390adc1e273b35e06c654489d965d2ac6a92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AssistantPageType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga0cc30724e08e01366c885a8051ffe635</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ASSISTANT_PAGE_CONTENT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0cc30724e08e01366c885a8051ffe635a7fc1ecc8c8e03b66dcb71bb75acfdf8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ASSISTANT_PAGE_INTRO</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0cc30724e08e01366c885a8051ffe635ac723440995c9f9306d9d11f58dd95823</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ASSISTANT_PAGE_CONFIRM</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0cc30724e08e01366c885a8051ffe635af3ff5083682b4a4e2073ebb5ff21e7b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ASSISTANT_PAGE_SUMMARY</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0cc30724e08e01366c885a8051ffe635a53a8055a936c73497ed794e1ef1b6fce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ASSISTANT_PAGE_PROGRESS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0cc30724e08e01366c885a8051ffe635a16e0ed523f027117213868debe9e8050</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ASSISTANT_PAGE_CUSTOM</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0cc30724e08e01366c885a8051ffe635ab28fa803a92e666c7824f43a484ed44e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CalendarDisplayOptions</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad728f6abafdc4512321ff59dd35b4328</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALENDAR_SHOW_HEADING</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gad728f6abafdc4512321ff59dd35b4328a37a27bd0ac788ced46fe9fc2312b0f7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALENDAR_SHOW_DAY_NAMES</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gad728f6abafdc4512321ff59dd35b4328a597be9e7f6556db3694259e4d40ad10e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALENDAR_NO_MONTH_CHANGE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gad728f6abafdc4512321ff59dd35b4328a98ec78725f00dffb0c23196b68696699</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALENDAR_SHOW_WEEK_NUMBERS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gad728f6abafdc4512321ff59dd35b4328a7e24656656961167e559811b697d9f1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CALENDAR_SHOW_DETAILS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gad728f6abafdc4512321ff59dd35b4328af30ee771cd528a318fed75722ae599dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CellRendererState</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga7061270b7c31ba72e053ab001ec2b877</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CELL_RENDERER_SELECTED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7061270b7c31ba72e053ab001ec2b877aea7cf8806fead01dcf55c9de2f516148</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CELL_RENDERER_PRELIT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7061270b7c31ba72e053ab001ec2b877ae77104521fe2844378ed7e21a0a14ffd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CELL_RENDERER_INSENSITIVE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7061270b7c31ba72e053ab001ec2b877a87321b7df12a3464860f2f11f0a332d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CELL_RENDERER_SORTED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7061270b7c31ba72e053ab001ec2b877afe74bd6b585ffeaed2c335b07a817db2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CELL_RENDERER_FOCUSED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7061270b7c31ba72e053ab001ec2b877a83a9e9082d5f28120df0dceb44f8e30e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CELL_RENDERER_EXPANDABLE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7061270b7c31ba72e053ab001ec2b877a732affdb899af485d9ce68e8b80436f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CELL_RENDERER_EXPANDED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7061270b7c31ba72e053ab001ec2b877a5cf4de9f6fc46ccff05e28fbff864d01</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CellRendererMode</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaf272c01b5a3cb656e373301223b1eecf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CELL_RENDERER_MODE_INERT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf272c01b5a3cb656e373301223b1eecfa8c8035c2bd3dd67df12fde128bbdf921</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CELL_RENDERER_MODE_ACTIVATABLE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf272c01b5a3cb656e373301223b1eecfa9797d47dfec3257eed44657f820b044d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CELL_RENDERER_MODE_EDITABLE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf272c01b5a3cb656e373301223b1eecfacd558d4850315ecf50ac7e1d121829dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CellRendererAccelMode</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaef820baa45214a2ba2af8fb144ca9137</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CELL_RENDERER_ACCEL_MODE_GTK</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaef820baa45214a2ba2af8fb144ca9137a4cbe81e1e5d3eeecd84d1384024d4dae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CELL_RENDERER_ACCEL_MODE_OTHER</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaef820baa45214a2ba2af8fb144ca9137ad6c8497e4243d9d0bd75e6a12e10be13</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CssSectionType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga5b38e1f2b7ce6b61f8293cbccd549e2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CSS_SECTION_DOCUMENT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5b38e1f2b7ce6b61f8293cbccd549e2ba80047ec1f3bc5172870cd44374c9416f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CSS_SECTION_IMPORT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5b38e1f2b7ce6b61f8293cbccd549e2bae3fc87b8d9c4065b110de4290b6e7003</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CSS_SECTION_COLOR_DEFINITION</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5b38e1f2b7ce6b61f8293cbccd549e2ba5bc0947828e0c586a9d61cb7ce8d9daa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CSS_SECTION_BINDING_SET</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5b38e1f2b7ce6b61f8293cbccd549e2ba9e3680cce551a123effb29df37459790</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CSS_SECTION_RULESET</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5b38e1f2b7ce6b61f8293cbccd549e2ba33a9124dd0153fccd99cf12d8cd23f0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CSS_SECTION_SELECTOR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5b38e1f2b7ce6b61f8293cbccd549e2baaa08a6765d408ba8d02ac5a4ef3bfbda</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CSS_SECTION_DECLARATION</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5b38e1f2b7ce6b61f8293cbccd549e2ba440dae333464b2c9c1b62887a51095bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CSS_SECTION_VALUE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5b38e1f2b7ce6b61f8293cbccd549e2bae47c16b290bbcfadede5a391080e391e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CSS_SECTION_KEYFRAMES</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5b38e1f2b7ce6b61f8293cbccd549e2ba65be0362005e6dce2e9a880cf4e4ae6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DialogFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gab353a3da9b5bcdc1e81fbfef2db13311</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIALOG_MODAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gab353a3da9b5bcdc1e81fbfef2db13311a64a2415926fcc7be656106bec3592f79</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIALOG_DESTROY_WITH_PARENT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gab353a3da9b5bcdc1e81fbfef2db13311af0a691b2857540e95ee48f0ca8a64bfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIALOG_USE_HEADER_BAR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gab353a3da9b5bcdc1e81fbfef2db13311a272355d12378b77430f3c9381a0ef8ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ResponseType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga407d25a7b827dbdb685077de442e9b38</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESPONSE_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga407d25a7b827dbdb685077de442e9b38a5c7275fe57b1eaf0119bf0f2ca65112c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESPONSE_REJECT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga407d25a7b827dbdb685077de442e9b38a29e122e85bcec7f98d58dfb72f0ce684</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESPONSE_ACCEPT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga407d25a7b827dbdb685077de442e9b38a245efaf9799ba0d286fa2192d86f58eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESPONSE_DELETE_EVENT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga407d25a7b827dbdb685077de442e9b38ad58fdfe87de2ee3c1b066a2d357e6ca3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESPONSE_OK</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga407d25a7b827dbdb685077de442e9b38a47872c2b8ad2edefae6419681b1c7e84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESPONSE_CANCEL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga407d25a7b827dbdb685077de442e9b38a1486658490c768438187a06862643831</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESPONSE_CLOSE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga407d25a7b827dbdb685077de442e9b38ab148ae632c0c04490009bd93673e82b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESPONSE_YES</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga407d25a7b827dbdb685077de442e9b38ab4893ca38fab279f709f1b2a5efd72fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESPONSE_NO</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga407d25a7b827dbdb685077de442e9b38a0485d293a3feb556ac3fb5aebb0d003b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESPONSE_APPLY</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga407d25a7b827dbdb685077de442e9b38a21f976076a45e56820ff3853e5cd39e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESPONSE_HELP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga407d25a7b827dbdb685077de442e9b38ae3af5a737412ee91eef1fd78317dbeb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EntryIconPosition</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae34921e41dbd5ca92e75a80065d62cf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENTRY_ICON_PRIMARY</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae34921e41dbd5ca92e75a80065d62cf0afdf81b56ad8e85b97dd3cec728e56293</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ENTRY_ICON_SECONDARY</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae34921e41dbd5ca92e75a80065d62cf0ab0297b876e8a4ad71e6d1db64d130f1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AccelFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gab431162192e6ad78f2153cae6683238a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ACCEL_VISIBLE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gab431162192e6ad78f2153cae6683238aad7562a0f2f0000a0bce91e7e83bb92a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ACCEL_LOCKED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gab431162192e6ad78f2153cae6683238aa9b89ac31b2eb78022989d052e01e42b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ACCEL_MASK</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gab431162192e6ad78f2153cae6683238aa6d759cfbbc6e94d41662b320ec4817d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Align</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga07dda5f4c3d75f3ccb9fbec43a46b411</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGN_FILL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga07dda5f4c3d75f3ccb9fbec43a46b411ae3d4c67d808533746be100d173746498</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGN_START</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga07dda5f4c3d75f3ccb9fbec43a46b411a3f0677f2866fecc0af32c4935287d7ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGN_END</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga07dda5f4c3d75f3ccb9fbec43a46b411aadcf2166315ddc18b738025fab7d102b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGN_CENTER</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga07dda5f4c3d75f3ccb9fbec43a46b411aa560699006483237ca58e1b4980cd637</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALIGN_BASELINE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga07dda5f4c3d75f3ccb9fbec43a46b411a2c20b5c52d556e3452f3cce1e805cc4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ArrowType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga5f1b4259f10ccf40735a017cff64782a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARROW_UP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5f1b4259f10ccf40735a017cff64782aa2176a17580cff7b35387461894214e6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARROW_DOWN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5f1b4259f10ccf40735a017cff64782aa9c7da4efc5bf0283761391ecd12e4b2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARROW_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5f1b4259f10ccf40735a017cff64782aa140e50343f20f603b6205357c279edb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARROW_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5f1b4259f10ccf40735a017cff64782aa317f40896cf95c72545d4e06b8467807</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ARROW_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5f1b4259f10ccf40735a017cff64782aa5953ea19b33f383c839f6e1fd6a51b19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AttachOptions</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad0ae047e9bb4f262003dbb94468f5d81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPAND</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gad0ae047e9bb4f262003dbb94468f5d81a376c39238459ee8d7dcb06ba100c4259</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHRINK</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gad0ae047e9bb4f262003dbb94468f5d81aa150380dbcd41f196d5fa3b1761c0160</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FILL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gad0ae047e9bb4f262003dbb94468f5d81a036abcca77c9906e325a7bbd2a9787ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ButtonBoxStyle</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaf8380aa1633c0cc444fa28086237e056</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTONBOX_SPREAD</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf8380aa1633c0cc444fa28086237e056a5d2b4fcbd4e36c034ec1467b69bb1fec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTONBOX_EDGE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf8380aa1633c0cc444fa28086237e056a53f2aeec62ad11c4f5a2059ae9850bcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTONBOX_START</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf8380aa1633c0cc444fa28086237e056a206f53b180e95831dde9c8617dd18f6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTONBOX_END</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf8380aa1633c0cc444fa28086237e056a41a16e6765e52df735280b4d605cb78c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTONBOX_CENTER</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf8380aa1633c0cc444fa28086237e056ace269058ee556ffe0deb6181b22f9d49</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTONBOX_EXPAND</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf8380aa1633c0cc444fa28086237e056ac99d72ff0d7c25787439c808ed4a04b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DeleteType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga9c026e86bfa8453a9894d7372046ab3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELETE_CHARS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga9c026e86bfa8453a9894d7372046ab3aa37ad588d7ea168cec4100bc827733b74</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELETE_WORD_ENDS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga9c026e86bfa8453a9894d7372046ab3aa5a3192dc21e92bbae4526f6e5128d09d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELETE_WORDS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga9c026e86bfa8453a9894d7372046ab3aa120d87deb3b71735efd99db32db4eb97</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELETE_DISPLAY_LINES</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga9c026e86bfa8453a9894d7372046ab3aa6356fdd5a3a2d009d2cafc522e809b17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELETE_DISPLAY_LINE_ENDS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga9c026e86bfa8453a9894d7372046ab3aae89e530ac2288476cfa72b481d92a383</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELETE_PARAGRAPH_ENDS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga9c026e86bfa8453a9894d7372046ab3aa2866c2313cd5c3aea3ab9ae59210dd2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELETE_PARAGRAPHS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga9c026e86bfa8453a9894d7372046ab3aa91e0b0a1c4c9e5665c2c3d83080e74e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DELETE_WHITESPACE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga9c026e86bfa8453a9894d7372046ab3aa1821447aecd9ceee9992065b267534b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DirectionType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga6c754c32a8421f746367b43c277e4d7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIR_TAB_FORWARD</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6c754c32a8421f746367b43c277e4d7ba9862c2e5e6ec0b814c9a7efa2dd73451</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIR_TAB_BACKWARD</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6c754c32a8421f746367b43c277e4d7ba26bf66835c56302d2b072cebbfce190b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIR_UP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6c754c32a8421f746367b43c277e4d7baf77a7b57f9a5f6fa5d7cb01899893f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIR_DOWN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6c754c32a8421f746367b43c277e4d7bada1c4b43adee3a13bc86e6ad6b9cefd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIR_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6c754c32a8421f746367b43c277e4d7bab7c09e54d85b8c99b0d24faa8484da3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIR_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6c754c32a8421f746367b43c277e4d7ba7ac7bb87e3d6f52b106f70e3afc51262</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ExpanderStyle</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga89d4d4f59bc9ab0c75c48f24c512ed1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPANDER_COLLAPSED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga89d4d4f59bc9ab0c75c48f24c512ed1caf06d5045b841a68bb0aa37a4d86867ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPANDER_SEMI_COLLAPSED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga89d4d4f59bc9ab0c75c48f24c512ed1ca1df4038af3f26a7b3c431f69e1e3d4b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPANDER_SEMI_EXPANDED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga89d4d4f59bc9ab0c75c48f24c512ed1ca044edf4e87235822b7ee816331bda042</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EXPANDER_EXPANDED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga89d4d4f59bc9ab0c75c48f24c512ed1ca08e6170ea32ae3f383065be8e33ee7ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BuiltinIconSize</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaeb555deb523560fe697977c2f8adbb76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_SIZE_INVALID</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaeb555deb523560fe697977c2f8adbb76a730c38e92a77f6ab3c9ee711ae3aa5c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_SIZE_MENU</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaeb555deb523560fe697977c2f8adbb76ae36e75552853448d657f8ce2932e2347</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_SIZE_SMALL_TOOLBAR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaeb555deb523560fe697977c2f8adbb76a5c456088e657e875dd36fe07958f6411</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_SIZE_LARGE_TOOLBAR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaeb555deb523560fe697977c2f8adbb76a36cb5067991a868d96805ca8415db596</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_SIZE_BUTTON</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaeb555deb523560fe697977c2f8adbb76a4d61489945b35ad6d42eb80f6f2b593d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_SIZE_DND</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaeb555deb523560fe697977c2f8adbb76ae40e0f525de9fc62607612d0ac1cb0ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_SIZE_DIALOG</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaeb555deb523560fe697977c2f8adbb76a36e0dc3dd54cebcf5438d23402299d84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TextDirection</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaabfcae0b9b0cf2aab01ee96352668d3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXT_DIR_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaabfcae0b9b0cf2aab01ee96352668d3da69c1bcdaec2e1b1fc34555ad8517ba66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXT_DIR_LTR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaabfcae0b9b0cf2aab01ee96352668d3da28d53c45c2db804905c1d6bda83bcd29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXT_DIR_RTL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaabfcae0b9b0cf2aab01ee96352668d3da8a89e14b56b45428f734cd2458c2aa2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Justification</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga5ba228222f6b4bfde1d59eb7134549be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUSTIFY_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5ba228222f6b4bfde1d59eb7134549beadee351ce61b32c978134bd10345ec36c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUSTIFY_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5ba228222f6b4bfde1d59eb7134549beabb1df35625b72c982274681b226a3439</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUSTIFY_CENTER</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5ba228222f6b4bfde1d59eb7134549bea0cd28bb1e5223721e47e108025140ae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUSTIFY_FILL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5ba228222f6b4bfde1d59eb7134549bea0cfe49a130f57bc657098506d4d2e6bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MenuDirectionType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae902f8d62fa1e764d6bd22e8a0e8e015</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENU_DIR_PARENT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae902f8d62fa1e764d6bd22e8a0e8e015afb7165662689fc905ca6f35ee2d59450</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENU_DIR_CHILD</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae902f8d62fa1e764d6bd22e8a0e8e015abd6d511559fc92afcf905f1198800c0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENU_DIR_NEXT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae902f8d62fa1e764d6bd22e8a0e8e015a6f6ad369220aebae179aea3851ff1bf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MENU_DIR_PREV</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae902f8d62fa1e764d6bd22e8a0e8e015a7f4f97444c9199686631a3ddffb027f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MessageType</name>
      <anchorfile>group__giommEnums.html</anchorfile>
      <anchor>gadd9b3057ea07b6bb75a7c033678a07b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MovementStep</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga26a9a2bc22d7c9d4a635c54eecd2bdec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOVEMENT_LOGICAL_POSITIONS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga26a9a2bc22d7c9d4a635c54eecd2bdeca3eb679c5a338f917602f09e9ac214cb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOVEMENT_VISUAL_POSITIONS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga26a9a2bc22d7c9d4a635c54eecd2bdecaf87c34a13728a8898630e8b6684dcb8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOVEMENT_WORDS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga26a9a2bc22d7c9d4a635c54eecd2bdecaa1ba25ca801594c8dbe8185b3938604a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOVEMENT_DISPLAY_LINES</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga26a9a2bc22d7c9d4a635c54eecd2bdeca4dd7dc439249289fbf8a0fab8ba0099b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOVEMENT_DISPLAY_LINE_ENDS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga26a9a2bc22d7c9d4a635c54eecd2bdecaa8aa5e1ad0eca65a946a863da14cf2e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOVEMENT_PARAGRAPHS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga26a9a2bc22d7c9d4a635c54eecd2bdecadda7f9206047bf3b0614b128864b8c98</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOVEMENT_PARAGRAPH_ENDS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga26a9a2bc22d7c9d4a635c54eecd2bdecaeaebba22dd0ccf8475d86189a692dfe0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOVEMENT_PAGES</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga26a9a2bc22d7c9d4a635c54eecd2bdeca1f611811ebde97caef097737500739af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOVEMENT_BUFFER_ENDS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga26a9a2bc22d7c9d4a635c54eecd2bdeca0ee138d9060106789677b4bfbe0a3472</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOVEMENT_HORIZONTAL_PAGES</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga26a9a2bc22d7c9d4a635c54eecd2bdecae876ba46f0147ce8961ebf35e2c581ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Orientation</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga84179a467b0ed4f61b4e325eb09b0b1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ORIENTATION_HORIZONTAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga84179a467b0ed4f61b4e325eb09b0b1ca9918e94af1a41d338c12de7e70f263b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ORIENTATION_VERTICAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga84179a467b0ed4f61b4e325eb09b0b1ca8e2f05df3412d16178e1a0e8e699f197</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CornerType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gacb771ef9e379831be8ae9711cf01796a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CORNER_TOP_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gacb771ef9e379831be8ae9711cf01796aae79d63a5073aaac728d89792f9527fb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CORNER_BOTTOM_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gacb771ef9e379831be8ae9711cf01796aa0e97f03ddb7d8329a249aaa7c2d19342</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CORNER_TOP_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gacb771ef9e379831be8ae9711cf01796aad1812d377aac992eb60733525540074c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CORNER_BOTTOM_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gacb771ef9e379831be8ae9711cf01796aa2a95eb38efc0cfef304dddeebfe06ec8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PackType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gafd31781c802e2887a7898b442780662d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PACK_START</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gafd31781c802e2887a7898b442780662daf8e4cb47658ea8e4b9bc4304971c98f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PACK_END</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gafd31781c802e2887a7898b442780662dace98cc48fc4c5573a26a044df6dd90cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PathPriorityType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga1ddc33ed74bc2f243d05391434845397</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PATH_PRIO_LOWEST</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga1ddc33ed74bc2f243d05391434845397acfd1a726a40bc82edd0b1c49fc67bb0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PATH_PRIO_GTK</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga1ddc33ed74bc2f243d05391434845397a6ad24aaf2d67d43278e788da386fed8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PATH_PRIO_APPLICATION</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga1ddc33ed74bc2f243d05391434845397a9f54f24eba293a0ae219c947434164e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PATH_PRIO_THEME</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga1ddc33ed74bc2f243d05391434845397a87a17fa7b8eecffd6200afcffc88219d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PATH_PRIO_RC</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga1ddc33ed74bc2f243d05391434845397a88bd33a30a6a23877a87a54e22f739f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PATH_PRIO_HIGHEST</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga1ddc33ed74bc2f243d05391434845397aee93011afafc66a4aa413aea37d2617d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PathType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga7a597389c9973f73edd08589e12a3798</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PATH_WIDGET</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7a597389c9973f73edd08589e12a3798a77d5ab895e8ada83d1e45de394e850c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PATH_WIDGET_CLASS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7a597389c9973f73edd08589e12a3798ac63908cc1689487118dd8fcb9b4a08de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PATH_CLASS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7a597389c9973f73edd08589e12a3798a48487613c7d2df1606f554beab3ecd9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PlacesOpenFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga2697cced647fdc326af296be5fb56cd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLACES_OPEN_NORMAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2697cced647fdc326af296be5fb56cd0af902611d26ecd18f992dfee9ee26cf65</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLACES_OPEN_NEW_TAB</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2697cced647fdc326af296be5fb56cd0a33b495d58a5ab91ffd01958fe697f11b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PLACES_OPEN_NEW_WINDOW</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2697cced647fdc326af296be5fb56cd0a46c7d4ceb3d7ea68cfbe572ff85e43b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PolicyType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gacb7ebcc442f2bdbeca2bf7436c18ffd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POLICY_ALWAYS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gacb7ebcc442f2bdbeca2bf7436c18ffd9af4930c8ffe7cf28c8e4e5980c964b314</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POLICY_AUTOMATIC</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gacb7ebcc442f2bdbeca2bf7436c18ffd9a71654394d09bd1e064bc3172cb6e030a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POLICY_NEVER</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gacb7ebcc442f2bdbeca2bf7436c18ffd9a9f017f33f350f7bb7d2784b5359fa9fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POLICY_EXTERNAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gacb7ebcc442f2bdbeca2bf7436c18ffd9acc5e00e96081e54a15f1d4012faf2002</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PositionType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3568edcd04af4a2cbd1eb0195513fe6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POS_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga3568edcd04af4a2cbd1eb0195513fe6ba5c6ed0e9d245e51a0e3935bfcc2e8016</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POS_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga3568edcd04af4a2cbd1eb0195513fe6ba77d4efba9fc846f832ee0c6c0d1a32a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POS_TOP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga3568edcd04af4a2cbd1eb0195513fe6ba9d8cbe5c86b9eda147d745732ec4e159</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POS_BOTTOM</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga3568edcd04af4a2cbd1eb0195513fe6ba392d25c1053b73adbacf716dc6b71deb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ReliefStyle</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga11df7b40133f3cd29b07bd87c969ff42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RELIEF_NORMAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga11df7b40133f3cd29b07bd87c969ff42ad12cfa2416bbe7cd16cab7d7640a50cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RELIEF_HALF</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga11df7b40133f3cd29b07bd87c969ff42a161ced4abffb2a538e71f1bf55ab3c55</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RELIEF_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga11df7b40133f3cd29b07bd87c969ff42a70e24f406ab368ed7b4abef302205ad3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ResizeMode</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad226b0aaa5fb1a2d445bee61e7acb9e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESIZE_PARENT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gad226b0aaa5fb1a2d445bee61e7acb9e0a22670bc0a9ae953d808f6478f6d32b62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESIZE_QUEUE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gad226b0aaa5fb1a2d445bee61e7acb9e0aa643c65600ae73d106391466216c410d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RESIZE_IMMEDIATE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gad226b0aaa5fb1a2d445bee61e7acb9e0a81cfd210bfcc60670303ebaef0356d70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RevealerTransitionType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga027016b2a3cb48c00420bd5c883d2542</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REVEALER_TRANSITION_TYPE_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga027016b2a3cb48c00420bd5c883d2542a72868363bb97f2d8fa427b74406d33a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REVEALER_TRANSITION_TYPE_CROSSFADE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga027016b2a3cb48c00420bd5c883d2542a1bbc80fcde9ba9a6aa97c9cdc3385229</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REVEALER_TRANSITION_TYPE_SLIDE_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga027016b2a3cb48c00420bd5c883d2542a56e524e279b378bfbf9059d9c096c1e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REVEALER_TRANSITION_TYPE_SLIDE_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga027016b2a3cb48c00420bd5c883d2542a2c0f667baa48dddd34dbbf44ca8a7955</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REVEALER_TRANSITION_TYPE_SLIDE_UP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga027016b2a3cb48c00420bd5c883d2542a41955103a3ca30cd0b3c9307888c32a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REVEALER_TRANSITION_TYPE_SLIDE_DOWN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga027016b2a3cb48c00420bd5c883d2542a05684b82fb5668ccd944accb2db8b57d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ScrollType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8a36fc0022c4f190a04e739c27c7af4696</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_JUMP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8ac5ffafe75d7632a1f0f82a0950a75348</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_STEP_BACKWARD</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8aa3b301978fcbc81fd5326c7e5e2cc910</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_STEP_FORWARD</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8a7f440f824c5fa0076a67fa001cbb3abb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_PAGE_BACKWARD</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8af781f792cfc680acb1d30503ae9c156f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_PAGE_FORWARD</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8ab11d5ac8f9734174121ad5360b3cd3c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_STEP_UP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8a5fb8c06a5c956eab066ae3cb1216df5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_STEP_DOWN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8a14208fe68d8549b99d4074f2a31be79c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_PAGE_UP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8adcaecd605f3f05e6509a559d5297a8bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_PAGE_DOWN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8affdf6943e771ca1b939cd415952c3929</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_STEP_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8a341b34a41674863c58749d4c9f352a8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_STEP_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8a92816c59cdd70fef2234cac5a763bd38</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_PAGE_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8a400f21ccdc4bad2c95af8d673ca06a91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_PAGE_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8ac78a2ffdf2caa4cfa32a56f7c7bc784c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_START</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8a59f728a4a6606ea877081d4616f97f71</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_END</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga2fd32d0f58465678e475c5cf11b4a0d8a684812272ff99c9930f9ca79ab38e4dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SelectionMode</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3e58167cfed0be4c87474c3bdca80d78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SELECTION_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga3e58167cfed0be4c87474c3bdca80d78a2403cfaa9075ec8697964a06ea1bf784</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SELECTION_SINGLE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga3e58167cfed0be4c87474c3bdca80d78ad13a716e12870c274b1ec2c93ab1ad8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SELECTION_BROWSE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga3e58167cfed0be4c87474c3bdca80d78a20ff440f8431e847329a83c901bcad2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SELECTION_MULTIPLE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga3e58167cfed0be4c87474c3bdca80d78a0001344812be65bc09b8acc4dcf8eec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ShadowType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gac5cfb21bae7f04c83c5eabdacb92512e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHADOW_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac5cfb21bae7f04c83c5eabdacb92512eac6e4e14b2db0f4f33ef61747730cceb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHADOW_IN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac5cfb21bae7f04c83c5eabdacb92512ea42e7aff5d2966a06a71598ed0917057c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHADOW_OUT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac5cfb21bae7f04c83c5eabdacb92512ea0e084c75408cf580fcd1b9a734597c34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHADOW_ETCHED_IN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac5cfb21bae7f04c83c5eabdacb92512ea0afc0f91569d5e26cfb9127fb4995b50</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHADOW_ETCHED_OUT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac5cfb21bae7f04c83c5eabdacb92512ea4ef9d30bcece2a1dd5171caf9fd83e8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StackTransitionType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290aef719e0d8aa77d6e8b64e95702e52a7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_CROSSFADE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290aa8d297dd2e01d1550983aa2ce142ad12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_SLIDE_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290a966cfaf1fcaa3a5ca8b4d484ccb9b699</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_SLIDE_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290abb4662651344b3b0cfa228781294d0a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_SLIDE_UP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290adc9a1ba0c47986f2df0d1c7d04da0db2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_SLIDE_DOWN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290abef5c19753c846491900eb613a1b3b5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_SLIDE_LEFT_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290a777421c0d4c77eeec38a0f419f9e3cdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_SLIDE_UP_DOWN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290a79f37efbc5b01bfa24162f71503c5e38</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_OVER_UP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290aa7ce5b0e2a1d2ac334baeccb36972499</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_OVER_DOWN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290a811203b1285977341a66dbceca60d511</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_OVER_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290a5caf7a14a794d4ab732b15e9178cee04</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_OVER_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290a44a960402e2350011e829145cf04db7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_UNDER_UP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290a473b692e67d1a37931f73b7b4cbaa44d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_UNDER_DOWN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290a2c7cd1d681a89bdd8da1fbeba1270a10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_UNDER_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290a264c3bca7d433eb973c33c86b9331ef1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_UNDER_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290a9e18e802c5e0c11a62b95f018d107f98</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_OVER_UP_DOWN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290a8ec28f833c9824ea5b3906df6fbc4ba4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_OVER_DOWN_UP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290a90bb77445eff2352c68dce1940668131</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_OVER_LEFT_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290a1d42b8f535e321943e9c29bf27cf85c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STACK_TRANSITION_TYPE_OVER_RIGHT_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4d63c0ba7f51164e14950146b30ad290aa10d372c95443c307f678519563c06a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StateType</name>
      <anchorfile>group__atkmmEnums.html</anchorfile>
      <anchor>ga2b925d92032639815edcfd9b0f53d15e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TargetFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gac7b573a509498007baa2ea1ee90c66de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TARGET_SAME_APP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac7b573a509498007baa2ea1ee90c66dea874f95413ec617a74dd0d261dfb5f160</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TARGET_SAME_WIDGET</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac7b573a509498007baa2ea1ee90c66dea2ff4f113f21f90243d89fe84242325d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TARGET_OTHER_APP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac7b573a509498007baa2ea1ee90c66deadd84b78ca4468dcfa423a353e557e1e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TARGET_OTHER_WIDGET</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac7b573a509498007baa2ea1ee90c66dea32816ed2963fba345aa3f3f9daac6357</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ToolbarStyle</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga5aad48684bb486d0aaca8c5aceb64b58</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOOLBAR_ICONS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5aad48684bb486d0aaca8c5aceb64b58ac0641be36b8044e3cb0c5acf34baebeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOOLBAR_TEXT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5aad48684bb486d0aaca8c5aceb64b58aaf11d62f75aedd9adde34f1c79295952</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOOLBAR_BOTH</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5aad48684bb486d0aaca8c5aceb64b58a72a6f5866f58e6d171450b84d7741afa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOOLBAR_BOTH_HORIZ</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5aad48684bb486d0aaca8c5aceb64b58a6bc61cf2744678c173e86f32e3ed8159</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WindowPosition</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gabfa67443f852c48477b2d55b15982e21</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WIN_POS_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gabfa67443f852c48477b2d55b15982e21ad3d5ca98f6fb9fa93839b848bbae55c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WIN_POS_CENTER</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gabfa67443f852c48477b2d55b15982e21a38664c1583bb395801e1416990ee4b1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WIN_POS_MOUSE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gabfa67443f852c48477b2d55b15982e21a07318e190a15f3761a698baa3bfee76f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WIN_POS_CENTER_ALWAYS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gabfa67443f852c48477b2d55b15982e21a17be77abd851915fe9d44c6e4b2fe408</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WIN_POS_CENTER_ON_PARENT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gabfa67443f852c48477b2d55b15982e21ab091a84afb95b87275271257c657faed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WrapMode</name>
      <anchorfile>group__pangommEnums.html</anchorfile>
      <anchor>gad57530f0324d4fd9e8a2fcec904ab240</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SortType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga6052510d27fae00eed4aaa3640ff9fbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SORT_ASCENDING</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6052510d27fae00eed4aaa3640ff9fbea0fdd9cfa6fc0ffe08bde47a2e5427e62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SORT_DESCENDING</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6052510d27fae00eed4aaa3640ff9fbeab5ff002d205cfd26ce7c20e55d6695d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PageOrientation</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga466045b8876a149482ab0034c53302bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAGE_ORIENTATION_PORTRAIT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga466045b8876a149482ab0034c53302bfaa379c057ca758f2ecf7add5a2dd04b85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAGE_ORIENTATION_LANDSCAPE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga466045b8876a149482ab0034c53302bfa7d4cd29dab9c4d3f0ab9d9617545d938</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAGE_ORIENTATION_REVERSE_PORTRAIT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga466045b8876a149482ab0034c53302bfadf701e2cf00716bdc8650d0404d2e42c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAGE_ORIENTATION_REVERSE_LANDSCAPE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga466045b8876a149482ab0034c53302bfa302aec905525b8ab7f618c458e39566c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SensitivityType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga20c60e5d15f0bd720bdbd72567414baa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SENSITIVITY_AUTO</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga20c60e5d15f0bd720bdbd72567414baaad9f626a65e06617d8d99df3358c25260</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SENSITIVITY_ON</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga20c60e5d15f0bd720bdbd72567414baaa9aded8cd00664bec5e0f8a46746600ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SENSITIVITY_OFF</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga20c60e5d15f0bd720bdbd72567414baaabbadfd2bdfc64b1b8a63fb73d53c329a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SizeRequestMode</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga35be6d001d814dbf37bd405433b06cf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIZE_REQUEST_HEIGHT_FOR_WIDTH</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga35be6d001d814dbf37bd405433b06cf5ad76703251eed37bb48ca3afcd648c902</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIZE_REQUEST_WIDTH_FOR_HEIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga35be6d001d814dbf37bd405433b06cf5ade6387b8dbdbf6f1dc6bd86e519bec25</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIZE_REQUEST_CONSTANT_SIZE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga35be6d001d814dbf37bd405433b06cf5a7854e443464b5c01756f2a098280356e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RegionFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gadc4fb4d2dff732ed7c11f2620e3be645</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REGION_EVEN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gadc4fb4d2dff732ed7c11f2620e3be645ad725ca224c74cdfb4dbd9f666943c15c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REGION_ODD</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gadc4fb4d2dff732ed7c11f2620e3be645ab51dbf567248929766a31448ae1bbddf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REGION_FIRST</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gadc4fb4d2dff732ed7c11f2620e3be645aa6e68fa619783e0dcf24bcd79f5f01ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REGION_LAST</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gadc4fb4d2dff732ed7c11f2620e3be645abb8a736fc08a5750fb6f835558fdd18f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REGION_ONLY</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gadc4fb4d2dff732ed7c11f2620e3be645aeeaba253cace0a6f8ae7822710544d69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REGION_SORTED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gadc4fb4d2dff732ed7c11f2620e3be645a5be665c3a99c229c4cad187794a17a25</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>JunctionSides</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga84b9903c70a332deb86a58d31236b20b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUNCTION_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga84b9903c70a332deb86a58d31236b20ba38f18694adab82d5215ac085c18020fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUNCTION_CORNER_TOPLEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga84b9903c70a332deb86a58d31236b20ba2b843b29dc201c8260d57c2f9940accd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUNCTION_CORNER_TOPRIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga84b9903c70a332deb86a58d31236b20ba4ab511b9950c7f610a081b4ae651ef18</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUNCTION_CORNER_BOTTOMLEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga84b9903c70a332deb86a58d31236b20bacffade4ee988af065ae22c7a0ebf7166</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUNCTION_CORNER_BOTTOMRIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga84b9903c70a332deb86a58d31236b20ba97a0caf7af6ab0000259400093ee5560</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUNCTION_TOP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga84b9903c70a332deb86a58d31236b20baa76f6c7c262f1ef52618212202d19769</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUNCTION_BOTTOM</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga84b9903c70a332deb86a58d31236b20ba5cb5788835ac6c08c8182b50108168b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUNCTION_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga84b9903c70a332deb86a58d31236b20baf4da33baac2577a9925cddc69936d3a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUNCTION_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga84b9903c70a332deb86a58d31236b20baab86b06e1c132043a932b29b39fb17d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StateFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga0a5e26de0d09b403a8487431c69c29e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_FLAG_NORMAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0a5e26de0d09b403a8487431c69c29e8a15696a1cc0c337db0c6f9baa8a3ee7bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_FLAG_ACTIVE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0a5e26de0d09b403a8487431c69c29e8a2e4640bea89efda3867020ed078e7b78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_FLAG_PRELIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0a5e26de0d09b403a8487431c69c29e8a40ab773048569ae3bdf7f46bd8d452df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_FLAG_SELECTED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0a5e26de0d09b403a8487431c69c29e8a2662f18924be84868b87426e906a3fde</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_FLAG_INSENSITIVE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0a5e26de0d09b403a8487431c69c29e8a8655295c61306d383e1617146a401c15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_FLAG_INCONSISTENT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0a5e26de0d09b403a8487431c69c29e8af8dc0f4e2a0eaa264ff09c730635daec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_FLAG_FOCUSED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0a5e26de0d09b403a8487431c69c29e8a5ca5c369e7254627e39520e4b316ebbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_FLAG_BACKDROP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0a5e26de0d09b403a8487431c69c29e8aed0e4f340934e7788e822c9a19a8e57d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_FLAG_DIR_LTR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0a5e26de0d09b403a8487431c69c29e8af3af36ae8fdd02c7275c0675e444e7d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_FLAG_DIR_RTL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0a5e26de0d09b403a8487431c69c29e8a197902e80d349b635f6e9393f165f395</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_FLAG_LINK</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0a5e26de0d09b403a8487431c69c29e8a05e22a4454014de89de3eaa75aab8df1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_FLAG_VISITED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0a5e26de0d09b403a8487431c69c29e8a6aef65ca0dbc48aceacb0344da4c6605</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_FLAG_CHECKED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0a5e26de0d09b403a8487431c69c29e8a56943be44a8fe227af25373c933b972a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_FLAG_DROP_ACTIVE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0a5e26de0d09b403a8487431c69c29e8ade7776bbabf261fa5758f2e4e9187e8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>InputPurpose</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaf17b1622b867a2fddd3e0d89641dc5b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_PURPOSE_FREE_FORM</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf17b1622b867a2fddd3e0d89641dc5b6ab63c50974516b950b5e7482bd3302375</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_PURPOSE_ALPHA</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf17b1622b867a2fddd3e0d89641dc5b6a75de7f54065d2e48ef69de686c3c3925</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_PURPOSE_DIGITS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf17b1622b867a2fddd3e0d89641dc5b6ace14eb340cee4d80daac2fcf2602f601</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_PURPOSE_NUMBER</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf17b1622b867a2fddd3e0d89641dc5b6a80673ba3e0001b184d480b5a2d6afb2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_PURPOSE_PHONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf17b1622b867a2fddd3e0d89641dc5b6a1f95797997f98b2c83750f06de9a839d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_PURPOSE_URL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf17b1622b867a2fddd3e0d89641dc5b6a4d13cd51552a58180c3a775dbe1d2a6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_PURPOSE_EMAIL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf17b1622b867a2fddd3e0d89641dc5b6a9c87c44ca3dbeaae45fac181af6248af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_PURPOSE_NAME</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf17b1622b867a2fddd3e0d89641dc5b6ad3bc23414bb8cdf2dc686a378bcbcd11</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_PURPOSE_PASSWORD</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf17b1622b867a2fddd3e0d89641dc5b6a13155ea75559db8626dae11b84986e6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_PURPOSE_PIN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf17b1622b867a2fddd3e0d89641dc5b6ad8ad073688e20c1bb8fab248bd8b33a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>InputHints</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae29290d8d4e5fa9c44bfa8682bfd20d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_HINT_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae29290d8d4e5fa9c44bfa8682bfd20d5aca7e33bf2f10a507b3772bed6f9cacd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_HINT_SPELLCHECK</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae29290d8d4e5fa9c44bfa8682bfd20d5ab964f9c3cf9ba388c4e5419faec076d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_HINT_NO_SPELLCHECK</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae29290d8d4e5fa9c44bfa8682bfd20d5ac646184c450e98a45461079dc9a4b1a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_HINT_WORD_COMPLETION</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae29290d8d4e5fa9c44bfa8682bfd20d5a56815d45525c00d8751190e99106a0bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_HINT_LOWERCASE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae29290d8d4e5fa9c44bfa8682bfd20d5a04eedf282372c47a18ce6ef21ed17b20</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_HINT_UPPERCASE_CHARS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae29290d8d4e5fa9c44bfa8682bfd20d5ad27370352ffaeb1ba2a7f64d015cb60e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_HINT_UPPERCASE_WORDS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae29290d8d4e5fa9c44bfa8682bfd20d5ac95c5c45a5c203e6d43a9cc3562e74f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_HINT_UPPERCASE_SENTENCES</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae29290d8d4e5fa9c44bfa8682bfd20d5a7616247ca3f94277025c83cd4c37f44e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_HINT_INHIBIT_OSK</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae29290d8d4e5fa9c44bfa8682bfd20d5a27c88117dfd4508b232981aff2b7af3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_HINT_VERTICAL_WRITING</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae29290d8d4e5fa9c44bfa8682bfd20d5a2205e5c6c89712e5210b1add5de1d9c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_HINT_EMOJI</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae29290d8d4e5fa9c44bfa8682bfd20d5a8ce1064fcc1032bee40e5c19c1d5816f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT_HINT_NO_EMOJI</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gae29290d8d4e5fa9c44bfa8682bfd20d5adffa509ddf357b1b08abf7ac905433d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BaselinePosition</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga00fac330ed16cf77e1f1e2744d6dcdf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASELINE_POSITION_TOP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga00fac330ed16cf77e1f1e2744d6dcdf2ab31318f6dee083dcd587f8d681bef99f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASELINE_POSITION_CENTER</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga00fac330ed16cf77e1f1e2744d6dcdf2a6d2314a0a9f448536a6fe07ed4b88a4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASELINE_POSITION_BOTTOM</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga00fac330ed16cf77e1f1e2744d6dcdf2a2c4e574d883e779da9c231e9106a1946</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PropagationPhase</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3f2ccdc42fe620ab04147029242efb57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHASE_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga3f2ccdc42fe620ab04147029242efb57a52efe0489bf33841355d3f99214369c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHASE_CAPTURE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga3f2ccdc42fe620ab04147029242efb57ad8e07721c82ebb0f5afb6652db4d79ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHASE_BUBBLE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga3f2ccdc42fe620ab04147029242efb57a97140c46c446805d9ccdb709d38c2012</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PHASE_TARGET</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga3f2ccdc42fe620ab04147029242efb57ac1885e6a3dd9a21e878d6d0c602849e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FileChooserAction</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga0d6076e7637ec501f26296e65fee2212</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FILE_CHOOSER_ACTION_OPEN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0d6076e7637ec501f26296e65fee2212ad5a7a701a84079ac0a66daa6a278292c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FILE_CHOOSER_ACTION_SAVE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0d6076e7637ec501f26296e65fee2212a58b10d83eaf27bd2018d009f5066d6d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FILE_CHOOSER_ACTION_SELECT_FOLDER</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0d6076e7637ec501f26296e65fee2212a31c49ed863b01cfe30a944eed1bfd74e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FILE_CHOOSER_ACTION_CREATE_FOLDER</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga0d6076e7637ec501f26296e65fee2212a7de3b4d18684101830f2a95a510704a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FileChooserConfirmation</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga1a1277039e186174bca107feda453c22</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FILE_CHOOSER_CONFIRMATION_CONFIRM</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga1a1277039e186174bca107feda453c22a28d3e0b8b0fdde485b45c193df8dc4b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FILE_CHOOSER_CONFIRMATION_ACCEPT_FILENAME</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga1a1277039e186174bca107feda453c22ae17ac8465cf76a69db8f5354f612b659</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FILE_CHOOSER_CONFIRMATION_SELECT_AGAIN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga1a1277039e186174bca107feda453c22ac071456eeb8473eea4aaa71e0bd7978a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FileFilterFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaf8205a61123bc5013c12d13335623959</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FILE_FILTER_FILENAME</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf8205a61123bc5013c12d13335623959a0e3c33b62a7eb6a85fbcb244e05e9358</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FILE_FILTER_URI</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf8205a61123bc5013c12d13335623959a30793dc739e71921864b23c65ea34459</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FILE_FILTER_DISPLAY_NAME</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf8205a61123bc5013c12d13335623959aecc26b0c5434f7df14a97df7e430d67a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FILE_FILTER_MIME_TYPE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf8205a61123bc5013c12d13335623959ab7d930aae46afeef5a41b44035d9ef86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EventSequenceState</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gac6cd8c73d758289d36ce3ead17b42b8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_SEQUENCE_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac6cd8c73d758289d36ce3ead17b42b8ea8349618f0fec7bb614c3accccbfc487c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_SEQUENCE_CLAIMED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac6cd8c73d758289d36ce3ead17b42b8ea9e24da93ff0242d6bfae61a7584b5fb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EVENT_SEQUENCE_DENIED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac6cd8c73d758289d36ce3ead17b42b8ea982e208d39348315abea56f495a2efc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PanDirection</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga69b6d95718a927fa162896019abf6ccf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAN_DIRECTION_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga69b6d95718a927fa162896019abf6ccfaa6afe3bd2b78d4352807fdbc45f8bfc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAN_DIRECTION_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga69b6d95718a927fa162896019abf6ccfa7bca8cf86461632c666a9931f7a4229c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAN_DIRECTION_UP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga69b6d95718a927fa162896019abf6ccfaec5c292a9a7bcc930bd393e1b1ed1c20</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAN_DIRECTION_DOWN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga69b6d95718a927fa162896019abf6ccfa671225932cb68396a74c74fec6d1c4c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IconLookupFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga6d0c2193613cfb97ab313746a5bacaa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_LOOKUP_NO_SVG</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6d0c2193613cfb97ab313746a5bacaa2a92c32adce624caec23a9b8f0569bc7cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_LOOKUP_FORCE_SVG</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6d0c2193613cfb97ab313746a5bacaa2a962b0a44a9ba4346948b86e849c2da1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_LOOKUP_USE_BUILTIN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6d0c2193613cfb97ab313746a5bacaa2a0c6c44f5873f9475641055bdf38545d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_LOOKUP_GENERIC_FALLBACK</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6d0c2193613cfb97ab313746a5bacaa2a0d548f98ecfee7e35f7a9456c8b92baf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_LOOKUP_FORCE_SIZE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6d0c2193613cfb97ab313746a5bacaa2a1f1cb7da5c2ee5c65e9b1ece1ce8b85d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_LOOKUP_FORCE_REGULAR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6d0c2193613cfb97ab313746a5bacaa2a34c75c7731ecbb6438a4b54654b0280a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_LOOKUP_FORCE_SYMBOLIC</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6d0c2193613cfb97ab313746a5bacaa2ae2b9d3fb74539c820fa043d17f4f935a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_LOOKUP_DIR_LTR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6d0c2193613cfb97ab313746a5bacaa2abf958408559f8df5d7e3abb841464eed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_LOOKUP_DIR_RTL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6d0c2193613cfb97ab313746a5bacaa2af3faded6e4002aacb99b3955ee748f9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IconViewDropPosition</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga8daabe8a63be70be35f4f23086e7d9af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_VIEW_NO_DROP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga8daabe8a63be70be35f4f23086e7d9afaf99aec7c72621477eccdbfcc1139a0c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_VIEW_DROP_INTO</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga8daabe8a63be70be35f4f23086e7d9afa862128b8626b2c115083d9e3b7f81870</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_VIEW_DROP_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga8daabe8a63be70be35f4f23086e7d9afa7cf087b91a29939f2e76d277520cdfd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_VIEW_DROP_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga8daabe8a63be70be35f4f23086e7d9afa181f33acee9b71d215094e744ccd8ab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_VIEW_DROP_ABOVE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga8daabe8a63be70be35f4f23086e7d9afafae4878ab74e05aba69c0d9f5c15c5a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ICON_VIEW_DROP_BELOW</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga8daabe8a63be70be35f4f23086e7d9afa73d2a8d6f98ea65353391de8510a5967</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ImageType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga92e349952b9dba45f2b008e3fcec013b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMAGE_EMPTY</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga92e349952b9dba45f2b008e3fcec013ba7ed45230e3819d347328db6cd9451a22</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMAGE_PIXBUF</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga92e349952b9dba45f2b008e3fcec013ba46c0f19cb4c577357ad742833d7d42d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMAGE_STOCK</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga92e349952b9dba45f2b008e3fcec013baab43d5f87147c0ff5067f9a531c8a2f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMAGE_ICON_SET</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga92e349952b9dba45f2b008e3fcec013babcecd66d0cc005a6d83cddc238ca84cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMAGE_ANIMATION</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga92e349952b9dba45f2b008e3fcec013ba31f342429da436b94c418e0c83203543</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMAGE_ICON_NAME</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga92e349952b9dba45f2b008e3fcec013ba9bbcfdf3162f01ccf462686b7ddb01ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMAGE_GICON</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga92e349952b9dba45f2b008e3fcec013baf62159d8de5d3ca24388e7825f92fe70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IMAGE_SURFACE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga92e349952b9dba45f2b008e3fcec013bae3c45dfb27137847656459bb4115748c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LevelBarMode</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gafe658a50de3c9d63860bac04f47ecb3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LEVEL_BAR_MODE_CONTINUOUS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gafe658a50de3c9d63860bac04f47ecb3aaf97dfa11508534afb83b4326e1ec1bab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LEVEL_BAR_MODE_DISCRETE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gafe658a50de3c9d63860bac04f47ecb3aab83ff5417bbadf9c4423df4c79e05194</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PackDirection</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaf96b2ca081fb2549f583182bbb629d2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PACK_DIRECTION_LTR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf96b2ca081fb2549f583182bbb629d2caaa5e4d34c8e623d316c835ebba4950c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PACK_DIRECTION_RTL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf96b2ca081fb2549f583182bbb629d2ca449587f09bbe7191299beb022af651a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PACK_DIRECTION_TTB</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf96b2ca081fb2549f583182bbb629d2ca19c857000737014b8cbaf787c1486ed0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PACK_DIRECTION_BTT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf96b2ca081fb2549f583182bbb629d2cacbd62f33d3cd59cf0ee2e219f2b35e5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ButtonsType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga13107e98e788d2cd5f823a58dcb094ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTONS_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga13107e98e788d2cd5f823a58dcb094abad2949d906bce39744dc6f08f0bd1e340</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTONS_OK</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga13107e98e788d2cd5f823a58dcb094abaa0f550b4f7e5e689bcf7c7cc37cf9caa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTONS_CLOSE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga13107e98e788d2cd5f823a58dcb094abab1f8dfe4d366bd3ee4ad6159649b1d90</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTONS_CANCEL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga13107e98e788d2cd5f823a58dcb094ababf32428218815da407835c4fffac4271</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTONS_YES_NO</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga13107e98e788d2cd5f823a58dcb094aba134ca971f40f33f0794dc93cbf255991</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTONS_OK_CANCEL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga13107e98e788d2cd5f823a58dcb094aba71c348c9e1cf376039ee2df52954d4ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ButtonRole</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga4082d65ff064ee2cdcc23ecca0af50bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON_ROLE_NORMAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4082d65ff064ee2cdcc23ecca0af50bca486e8e0f84bf21db85522f1d762e41e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON_ROLE_CHECK</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4082d65ff064ee2cdcc23ecca0af50bca2923877753c8fce1696656fbaeac7a06</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BUTTON_ROLE_RADIO</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga4082d65ff064ee2cdcc23ecca0af50bca995cf149c316291277b3a293a2da1e0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Unit</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga9cdd3adb4017a5c706e205aa914ba6fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNIT_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga9cdd3adb4017a5c706e205aa914ba6fba0eb676d3f8c323f5df2d84f1826c0bb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNIT_POINTS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga9cdd3adb4017a5c706e205aa914ba6fbac6b1df24b563890c08b66d8fd4817ac9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNIT_INCH</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga9cdd3adb4017a5c706e205aa914ba6fba1c5d1b055175cd25803fae3c6274fc39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNIT_MM</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga9cdd3adb4017a5c706e205aa914ba6fba4beaa93c4fd12107565d7c607c980626</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PopoverConstraint</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga92be4c914d0652067ce26d4bd964937e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POPOVER_CONSTRAINT_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga92be4c914d0652067ce26d4bd964937ea36d4ab60130b1d6c0b2f056fd23b6e75</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POPOVER_CONSTRAINT_WINDOW</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga92be4c914d0652067ce26d4bd964937eacd98baf51cf0a8a61f9061a3572ebe02</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PrintStatus</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga55cc984b17f826539f78a64c4b9022a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_STATUS_INITIAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga55cc984b17f826539f78a64c4b9022a2a40793af917b8fdc99c02cdf6ca3fd179</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_STATUS_PREPARING</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga55cc984b17f826539f78a64c4b9022a2a0f05825f33ada52306f1d378aaa1a16d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_STATUS_GENERATING_DATA</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga55cc984b17f826539f78a64c4b9022a2a22b71039c6f4d7fe58c92deebc6a8f44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_STATUS_SENDING_DATA</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga55cc984b17f826539f78a64c4b9022a2a727241f06f9e2a24757ab86170bd8c05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_STATUS_PENDING</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga55cc984b17f826539f78a64c4b9022a2a2f82f4d7a209da86ddcff37d3a59f188</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_STATUS_PENDING_ISSUE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga55cc984b17f826539f78a64c4b9022a2ab021541dc7a0c88213ecb10343b75707</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_STATUS_PRINTING</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga55cc984b17f826539f78a64c4b9022a2ab4abcc6e2fcc936d62c90966a621a0fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_STATUS_FINISHED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga55cc984b17f826539f78a64c4b9022a2ab3fc15f7d7b12a4cdbd2cc3daf9f9aa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_STATUS_FINISHED_ABORTED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga55cc984b17f826539f78a64c4b9022a2a1b973c050ba471062209daacf4cda80c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PrintOperationResult</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga6881ef70e8c3bc460ba179a84bee78d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_OPERATION_RESULT_ERROR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6881ef70e8c3bc460ba179a84bee78d0ad0c8487bdce5b6ce87efc9bf14a87f03</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_OPERATION_RESULT_APPLY</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6881ef70e8c3bc460ba179a84bee78d0ab8d2a921eeb1264faec9e64fa3c9fec8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_OPERATION_RESULT_CANCEL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6881ef70e8c3bc460ba179a84bee78d0a4e4ceaaf3283cc1fce51a984145a3d6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_OPERATION_RESULT_IN_PROGRESS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga6881ef70e8c3bc460ba179a84bee78d0a29b5dc59153ab58e17ea8613656038c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PrintOperationAction</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gab4b10c2e7079a2137daf871c261c2443</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_OPERATION_ACTION_PRINT_DIALOG</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gab4b10c2e7079a2137daf871c261c2443affad9f4df93b843a56ffdb2de077cc56</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_OPERATION_ACTION_PRINT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gab4b10c2e7079a2137daf871c261c2443add63e8d563203e07ae08b33c457febdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_OPERATION_ACTION_PREVIEW</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gab4b10c2e7079a2137daf871c261c2443ae2753f957d8fbacd9decdedb7968d298</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_OPERATION_ACTION_EXPORT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gab4b10c2e7079a2137daf871c261c2443ab9080dab7f29e51e1dc5c9965c34e71f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PrintDuplex</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga50af48ce5ffc122b50924230939b78e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_DUPLEX_SIMPLEX</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga50af48ce5ffc122b50924230939b78e3afe50c764a536f77d72e975a8e9a30939</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_DUPLEX_HORIZONTAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga50af48ce5ffc122b50924230939b78e3ae08fa948547b36eb7413afcb2ddddc9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_DUPLEX_VERTICAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga50af48ce5ffc122b50924230939b78e3a73d199d3edbb61775e825afa980553cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PrintQuality</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gab282abd83fff59a70ddba9e26cd30e04</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_QUALITY_LOW</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gab282abd83fff59a70ddba9e26cd30e04a771e91286314ee4a6777bff39f8964cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_QUALITY_NORMAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gab282abd83fff59a70ddba9e26cd30e04ab91b6cf5483233abe878034cfaa8a9f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_QUALITY_HIGH</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gab282abd83fff59a70ddba9e26cd30e04afb9be071fe89d424b229bf0b1141f834</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_QUALITY_DRAFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gab282abd83fff59a70ddba9e26cd30e04a333f3c6a0613bda02b25da80318319ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PrintPages</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga003abcb0f8711428f85e3c54c68ee25e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_PAGES_ALL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga003abcb0f8711428f85e3c54c68ee25eabf98a8c8442bd1b0fb1736b8d21c0a1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_PAGES_CURRENT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga003abcb0f8711428f85e3c54c68ee25ea5e480a5c781bc71c8483da6d16a2c436</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_PAGES_RANGES</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga003abcb0f8711428f85e3c54c68ee25ea0db89ac6f058215853d29c5cd9467ac1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_PAGES_SELECTION</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga003abcb0f8711428f85e3c54c68ee25ea811b394dd03365c14fabb08a3142a269</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PageSet</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga26726525983cb55ec0633b7485143cf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAGE_SET_ALL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga26726525983cb55ec0633b7485143cf3af67a5c38f72a14809502cbf43bcbf537</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAGE_SET_EVEN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga26726525983cb55ec0633b7485143cf3a47adf4314f0d3d4d3b5e458689369a20</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PAGE_SET_ODD</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga26726525983cb55ec0633b7485143cf3a22949b5d59fe9beb19dd8bf8f7663ffd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NumberUpLayout</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga439c4b003562e9c4f6e20f76134d9da9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_TOP_TO_BOTTOM</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga439c4b003562e9c4f6e20f76134d9da9a309bddcde1c1bfc22102ae47116f0749</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_BOTTOM_TO_TOP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga439c4b003562e9c4f6e20f76134d9da9a5d696ac6874fd56f6e81272b12667a37</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_TOP_TO_BOTTOM</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga439c4b003562e9c4f6e20f76134d9da9a44ce766db0c57f16e80f7796e7027b49</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_BOTTOM_TO_TOP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga439c4b003562e9c4f6e20f76134d9da9a9be542f31c6065aff531b74e919df215</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_LEFT_TO_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga439c4b003562e9c4f6e20f76134d9da9a472fd42eec4812d30f64f8771b0bffda</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_RIGHT_TO_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga439c4b003562e9c4f6e20f76134d9da9a05b5ef5aeccf95faa3cd3cfe03fcc7f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_LEFT_TO_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga439c4b003562e9c4f6e20f76134d9da9a63490d66c46231027f69106b5dbd25be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_RIGHT_TO_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga439c4b003562e9c4f6e20f76134d9da9a18203a0358842997cd75b30e4a78f1b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RecentSortType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gac02d49f6d49650abf59e27291e3ef111</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RECENT_SORT_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac02d49f6d49650abf59e27291e3ef111a5420d8d9280a1412d65db38fd90a3678</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RECENT_SORT_MRU</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac02d49f6d49650abf59e27291e3ef111af1b389d1a7abdb686f98aec734c2d92f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RECENT_SORT_LRU</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac02d49f6d49650abf59e27291e3ef111ab1d3f5e0191682b01002f5566a1b6029</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RECENT_SORT_CUSTOM</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac02d49f6d49650abf59e27291e3ef111ac831bed4ef1afdd9e61ad27ec4c94d33</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RecentFilterFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga367108566a3e735eccbfd86db71ac02a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RECENT_FILTER_URI</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga367108566a3e735eccbfd86db71ac02aa8c86efcda66edea6fa079037d6f7b291</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RECENT_FILTER_DISPLAY_NAME</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga367108566a3e735eccbfd86db71ac02aa5df9f41b69c21b356a133223b914e787</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RECENT_FILTER_MIME_TYPE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga367108566a3e735eccbfd86db71ac02aad0454a5cd689c91e64fa5c183665d54d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RECENT_FILTER_APPLICATION</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga367108566a3e735eccbfd86db71ac02aa884d30087455f4571fc54fe1c706a774</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RECENT_FILTER_GROUP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga367108566a3e735eccbfd86db71ac02aa713a446811437ec970db357bfc16617c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RECENT_FILTER_AGE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga367108566a3e735eccbfd86db71ac02aa22f5375bc9986f1316709ed088886b79</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ScrollablePolicy</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga5bcedb5840dd94012405d0e33b2a18c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_MINIMUM</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5bcedb5840dd94012405d0e33b2a18c5ad3abaaa65ca30cf5c64f03680365f1e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCROLL_NATURAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga5bcedb5840dd94012405d0e33b2a18c5aa34361b9aeea9089ae8b8f111e442cd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IMPreeditStyle</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga415072adab5698928d2d340d279d57af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IM_PREEDIT_NOTHING</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga415072adab5698928d2d340d279d57afa3f54b0b2bc3966f2bb84c1effe604803</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IM_PREEDIT_CALLBACK</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga415072adab5698928d2d340d279d57afaa34892a093c132adefa5a4cc5a262531</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IM_PREEDIT_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga415072adab5698928d2d340d279d57afae62366aae37b5285c2804339a5f16364</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IMStatusStyle</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gac5721e3548b652cb118d89f2d4c601ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IM_STATUS_NOTHING</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac5721e3548b652cb118d89f2d4c601ecad5f163d687323c080f168515d7d18869</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IM_STATUS_CALLBACK</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac5721e3548b652cb118d89f2d4c601ecac03d41b8db7b83910f0a7c9ba996a4ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IM_STATUS_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gac5721e3548b652cb118d89f2d4c601eca0320c38cea95b203f35f2ee525605029</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ShortcutType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga379230abb3c93aad74b3d2859960db02</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHORTCUT_ACCELERATOR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga379230abb3c93aad74b3d2859960db02abc9503b74ff331c1efd1b3f40013fd39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHORTCUT_GESTURE_PINCH</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga379230abb3c93aad74b3d2859960db02aa6c35d743dfa230f1f67fd7ed6bd0892</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHORTCUT_GESTURE_STRETCH</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga379230abb3c93aad74b3d2859960db02a70ffd674262a1878050185f30458ae3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHORTCUT_GESTURE_ROTATE_CLOCKWISE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga379230abb3c93aad74b3d2859960db02a0b55d14caa7e410cb2285a56d32e64af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHORTCUT_GESTURE_ROTATE_COUNTERCLOCKWISE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga379230abb3c93aad74b3d2859960db02a0d6cc62e9b786d1887e88dc2a6806e0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHORTCUT_GESTURE_TWO_FINGER_SWIPE_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga379230abb3c93aad74b3d2859960db02af1fabdfdd94ed124469d1d3a7374b884</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHORTCUT_GESTURE_TWO_FINGER_SWIPE_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga379230abb3c93aad74b3d2859960db02a21e55c79f4d35510e41009c19b6aa9ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHORTCUT_GESTURE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga379230abb3c93aad74b3d2859960db02a1c0b0755cef7e26c69e6c5deba88927b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SizeGroupMode</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga7230c54c268363becedfd97bc42f7d05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIZE_GROUP_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7230c54c268363becedfd97bc42f7d05a9be38183fb711ddd13e0423c9b0bb149</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIZE_GROUP_HORIZONTAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7230c54c268363becedfd97bc42f7d05ad04cfc90778f458fbb638489a742785d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIZE_GROUP_VERTICAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7230c54c268363becedfd97bc42f7d05a1bfef1a40cfb4c4bf2b47b22a6affdeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIZE_GROUP_BOTH</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7230c54c268363becedfd97bc42f7d05a9b253c06358cd0c6c049f7cc535d37db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SpinButtonUpdatePolicy</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad6ac4f99aa79bca0ff4daa89d6e5e8db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UPDATE_ALWAYS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gad6ac4f99aa79bca0ff4daa89d6e5e8dbaa637cfe297b94024feec236777bce060</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UPDATE_IF_VALID</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gad6ac4f99aa79bca0ff4daa89d6e5e8dba76c81d2b4dac8fbd33c58b82fe36ded2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SpinType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga1fdcff1634130369780165ddce65575c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIN_STEP_FORWARD</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga1fdcff1634130369780165ddce65575ca5e00431387edb1572c76aeac971ca43b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIN_STEP_BACKWARD</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga1fdcff1634130369780165ddce65575cae4946b4810d70388531fe9abf1ddd7f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIN_PAGE_FORWARD</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga1fdcff1634130369780165ddce65575caeee387b5ab3b414e5df2091deb9b6576</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIN_PAGE_BACKWARD</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga1fdcff1634130369780165ddce65575ca6e78dfe07284ab0a89579d2f9342da58</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIN_HOME</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga1fdcff1634130369780165ddce65575ca849fae22a8039308b02e69ac43a46985</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIN_END</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga1fdcff1634130369780165ddce65575cab67d96e1aa705773a3a678b4c619daaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIN_USER_DEFINED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga1fdcff1634130369780165ddce65575ca9f664d914691584b404e9df132bcf6db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TextSearchFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga45bb48ef86a7da2535de94066029bc29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXT_SEARCH_VISIBLE_ONLY</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga45bb48ef86a7da2535de94066029bc29ae527fc589a79c421b76fb421a1689daf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXT_SEARCH_TEXT_ONLY</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga45bb48ef86a7da2535de94066029bc29a323f538e8768e07994fde82c85a991e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXT_SEARCH_CASE_INSENSITIVE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga45bb48ef86a7da2535de94066029bc29a194d21cbac8963ec39e1f38ff978ca42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TextWindowType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga7a67e20499adf4787fa20ca51cb848c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXT_WINDOW_PRIVATE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7a67e20499adf4787fa20ca51cb848c4a53c1e561995e89fab1635f8afcba766d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXT_WINDOW_WIDGET</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7a67e20499adf4787fa20ca51cb848c4aea034500af52670685eef35c928b7e04</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXT_WINDOW_TEXT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7a67e20499adf4787fa20ca51cb848c4ae27b9712be2df51ea62c6d74ce3e118d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXT_WINDOW_LEFT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7a67e20499adf4787fa20ca51cb848c4a47910b74a040b14c3797ea83e5a76489</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXT_WINDOW_RIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7a67e20499adf4787fa20ca51cb848c4a09609356b16198adeb38a0f830b8b7ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXT_WINDOW_TOP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7a67e20499adf4787fa20ca51cb848c4a41fde904679ac4b6fa11f3bbd483e32f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEXT_WINDOW_BOTTOM</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga7a67e20499adf4787fa20ca51cb848c4a32e6f546fd57630d72591e12de839279</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ToolPaletteDragTargets</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga12f8b782727425486ccd6fb29a5ad8c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOOL_PALETTE_DRAG_ITEMS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga12f8b782727425486ccd6fb29a5ad8c8acd42b75f8427390aaa680400b127538d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOOL_PALETTE_DRAG_GROUPS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga12f8b782727425486ccd6fb29a5ad8c8a8ea0bd9ddfc3cc96bae6dcabc107f278</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TreeModelFlags</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga8db2110062643eb26461ec23b63e2cb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TREE_MODEL_ITERS_PERSIST</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga8db2110062643eb26461ec23b63e2cb2a751b4e7f738f5d11ec139e93b8842e02</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TREE_MODEL_LIST_ONLY</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga8db2110062643eb26461ec23b63e2cb2af904d3863b4e8de9ded73f2a4e87f2ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TreeViewDropPosition</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga13ae619b02491e21302ca02d94649844</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TREE_VIEW_DROP_BEFORE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga13ae619b02491e21302ca02d94649844af2c094b6eebd182d057e33c00123f8c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TREE_VIEW_DROP_AFTER</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga13ae619b02491e21302ca02d94649844a374d594b8ad1ed7bfea517489f9ca7c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TREE_VIEW_DROP_INTO_OR_BEFORE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga13ae619b02491e21302ca02d94649844a56ccdb98f4531dfe17ad1fd865a03357</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TREE_VIEW_DROP_INTO_OR_AFTER</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga13ae619b02491e21302ca02d94649844a5a2a2e9aaaeac74539d4a44c7d68a9e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TreeViewGridLines</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad31d2169f6fed4a27e4e42072822c43e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TREE_VIEW_GRID_LINES_NONE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gad31d2169f6fed4a27e4e42072822c43ea184cd6082238a07c3017470fc0c3f04f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TREE_VIEW_GRID_LINES_HORIZONTAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gad31d2169f6fed4a27e4e42072822c43eaf3b6f50a69d459b2baffa0b302344f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TREE_VIEW_GRID_LINES_VERTICAL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gad31d2169f6fed4a27e4e42072822c43eaa10e949f959fce209ad18d506d0bdf9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TREE_VIEW_GRID_LINES_BOTH</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gad31d2169f6fed4a27e4e42072822c43ea6863c222e31f25a48a4f61425bbf78b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TreeViewColumnSizing</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga48e69dbd33a70f5b13c8ceaef1bbf06c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TREE_VIEW_COLUMN_GROW_ONLY</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga48e69dbd33a70f5b13c8ceaef1bbf06ca70b06c621fd0aaed5d9182d5dd2c3e36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TREE_VIEW_COLUMN_AUTOSIZE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga48e69dbd33a70f5b13c8ceaef1bbf06cad79ba3bb1bbd28ea7c4d90a81eb7a1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TREE_VIEW_COLUMN_FIXED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga48e69dbd33a70f5b13c8ceaef1bbf06ca9eca07d5cdce6d0259d70e8495a2ca90</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DestDefaults</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaf2f1ae1fbd332c3a3b420bb10ed73a65</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEST_DEFAULT_MOTION</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf2f1ae1fbd332c3a3b420bb10ed73a65a584274cfa5f10fe057f2b9513e4baec1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEST_DEFAULT_HIGHLIGHT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf2f1ae1fbd332c3a3b420bb10ed73a65a37d742bfeb7fc7f9f999a29343827b06</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEST_DEFAULT_DROP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf2f1ae1fbd332c3a3b420bb10ed73a65a3cf93f14e3a94f94f8d6ccae37e12b20</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEST_DEFAULT_ALL</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaf2f1ae1fbd332c3a3b420bb10ed73a65a5ac16e0c257a677b264b3b5a0c144459</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WidgetHelpType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3e92630d8db9a7591552c9d38c8df1c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WIDGET_HELP_TOOLTIP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga3e92630d8db9a7591552c9d38c8df1c3a3d2069803e9fa6333ce23b91d5227493</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WIDGET_HELP_WHATS_THIS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga3e92630d8db9a7591552c9d38c8df1c3aeef0cb60b72c46c64f29bcee26b9f8f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DragResult</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga83e9371a4c82c7b87d30da8107e06977</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_RESULT_SUCCESS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga83e9371a4c82c7b87d30da8107e06977a01acfd538e7781605f4f4ece976b1057</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_RESULT_NO_TARGET</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga83e9371a4c82c7b87d30da8107e06977ac738359e99685eca717ba6d8b4be7097</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_RESULT_USER_CANCELLED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga83e9371a4c82c7b87d30da8107e06977ae82f91e332d5f3a1033d75d4b36ada0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_RESULT_TIMEOUT_EXPIRED</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga83e9371a4c82c7b87d30da8107e06977acea2896283926537b33d8d3960df012b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_RESULT_GRAB_BROKEN</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga83e9371a4c82c7b87d30da8107e06977a0509d5076c9c66cde01b18f4ff1d44c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DRAG_RESULT_ERROR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga83e9371a4c82c7b87d30da8107e06977ad652a4d8677cd0d41a3aed9bbeba1a24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PrintCapabilities</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaba4fee25db9350d20b61ec5c3f468bcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_CAPABILITY_PAGE_SET</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaba4fee25db9350d20b61ec5c3f468bcbac8c270ad95144fc613d15581b43188b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_CAPABILITY_COPIES</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaba4fee25db9350d20b61ec5c3f468bcba433115c157ea275d4d5e87bb6cd0ae41</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_CAPABILITY_COLLATE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaba4fee25db9350d20b61ec5c3f468bcba4fe69a4d12cf8006fa316a9a7a650223</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_CAPABILITY_REVERSE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaba4fee25db9350d20b61ec5c3f468bcba04d9b09123c77fdb651a1885502b8704</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_CAPABILITY_SCALE</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaba4fee25db9350d20b61ec5c3f468bcba3c6c9723fe14c7ec590757735a4fafbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_CAPABILITY_GENERATE_PDF</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaba4fee25db9350d20b61ec5c3f468bcba202d90969f9ca05887ac558983442ab8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_CAPABILITY_GENERATE_PS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaba4fee25db9350d20b61ec5c3f468bcba3845dda4395a5fc1e179b8ed874f7edc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_CAPABILITY_PREVIEW</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaba4fee25db9350d20b61ec5c3f468bcba31e0707ec91d347b4fb337dd60e50695</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_CAPABILITY_NUMBER_UP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaba4fee25db9350d20b61ec5c3f468bcba4003b630728dc48d737cce742cdf9881</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRINT_CAPABILITY_NUMBER_UP_LAYOUT</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>gaba4fee25db9350d20b61ec5c3f468bcbaf4e2d52c9054102b528a5c9372b74a94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UIManagerItemType</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga91226ea137a67080d9b487225aa41d7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UI_MANAGER_AUTO</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga91226ea137a67080d9b487225aa41d7bae758e6cca4e5a1577aae97b77c28b2a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UI_MANAGER_MENUBAR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga91226ea137a67080d9b487225aa41d7ba16490d879f37144ade6b94017f19cfd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UI_MANAGER_MENU</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga91226ea137a67080d9b487225aa41d7baa8ff47c71257a5f8ad51490c08dd67a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UI_MANAGER_TOOLBAR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga91226ea137a67080d9b487225aa41d7babb2303ed366403a1dc589c9717a4e793</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UI_MANAGER_PLACEHOLDER</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga91226ea137a67080d9b487225aa41d7ba313e29e15813501275b01604034500d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UI_MANAGER_POPUP</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga91226ea137a67080d9b487225aa41d7ba3f148f432ba87e1bb574988292356425</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UI_MANAGER_MENUITEM</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga91226ea137a67080d9b487225aa41d7babfeb9663a46f709abdbe8ddfec223319</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UI_MANAGER_TOOLITEM</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga91226ea137a67080d9b487225aa41d7ba0f4f5e1e494d3b52e3c2f2fa1a2480c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UI_MANAGER_SEPARATOR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga91226ea137a67080d9b487225aa41d7bae92872b64039e1a22edb9e46d20213f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UI_MANAGER_ACCELERATOR</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga91226ea137a67080d9b487225aa41d7ba6ec181f8abd4339b0914f1e5588c9d8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UI_MANAGER_POPUP_WITH_ACCELS</name>
      <anchorfile>namespaceGtk.html</anchorfile>
      <anchor>ga91226ea137a67080d9b487225aa41d7ba9eede5a34d207545019446098750faf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ApplicationInhibitFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gab3871388e3b3c3a5bc191ad1262f6b75</anchor>
      <arglist>(ApplicationInhibitFlags lhs, ApplicationInhibitFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ApplicationInhibitFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaa7ef4c13c11735946b946b2251ebe342</anchor>
      <arglist>(ApplicationInhibitFlags lhs, ApplicationInhibitFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ApplicationInhibitFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaa6c7ba177dd7640b98c02a6df5440524</anchor>
      <arglist>(ApplicationInhibitFlags lhs, ApplicationInhibitFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ApplicationInhibitFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga2cac6efa3949289ee3d9f315efc65946</anchor>
      <arglist>(ApplicationInhibitFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>ApplicationInhibitFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga70da0f72d6f80e7ae46b4a7c637b6c69</anchor>
      <arglist>(ApplicationInhibitFlags &amp;lhs, ApplicationInhibitFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ApplicationInhibitFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga15b43589151a46ed7f6d454f5dc598f5</anchor>
      <arglist>(ApplicationInhibitFlags &amp;lhs, ApplicationInhibitFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ApplicationInhibitFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga060255392e1ac889406a7f2ab16addf3</anchor>
      <arglist>(ApplicationInhibitFlags &amp;lhs, ApplicationInhibitFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>CalendarDisplayOptions</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga95b3448e56544d00d50925ebbe190137</anchor>
      <arglist>(CalendarDisplayOptions lhs, CalendarDisplayOptions rhs)</arglist>
    </member>
    <member kind="function">
      <type>CalendarDisplayOptions</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gace44b8e4670cb96f899a305fd567a875</anchor>
      <arglist>(CalendarDisplayOptions lhs, CalendarDisplayOptions rhs)</arglist>
    </member>
    <member kind="function">
      <type>CalendarDisplayOptions</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3809a7e22d1fba7b99a6c80b07bf1cba</anchor>
      <arglist>(CalendarDisplayOptions lhs, CalendarDisplayOptions rhs)</arglist>
    </member>
    <member kind="function">
      <type>CalendarDisplayOptions</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga4761531f78f03c1f4871f2cab422d2da</anchor>
      <arglist>(CalendarDisplayOptions flags)</arglist>
    </member>
    <member kind="function">
      <type>CalendarDisplayOptions &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaefb72e931e7f44f9fa5a5fb469562395</anchor>
      <arglist>(CalendarDisplayOptions &amp;lhs, CalendarDisplayOptions rhs)</arglist>
    </member>
    <member kind="function">
      <type>CalendarDisplayOptions &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga308dc9d79d50662d6c9770a3c824ec11</anchor>
      <arglist>(CalendarDisplayOptions &amp;lhs, CalendarDisplayOptions rhs)</arglist>
    </member>
    <member kind="function">
      <type>CalendarDisplayOptions &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga96c630fb80a32f236164a576478cc10e</anchor>
      <arglist>(CalendarDisplayOptions &amp;lhs, CalendarDisplayOptions rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellRendererState</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga95ae2f1836dd939955d64dfda0734032</anchor>
      <arglist>(CellRendererState lhs, CellRendererState rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellRendererState</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga347757f95f45cafb39eff727d14b22fa</anchor>
      <arglist>(CellRendererState lhs, CellRendererState rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellRendererState</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga55d02129ec54aed65c659d1ef73261e5</anchor>
      <arglist>(CellRendererState lhs, CellRendererState rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellRendererState</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga5afd3653c32defe9fc0c788ba865ed0d</anchor>
      <arglist>(CellRendererState flags)</arglist>
    </member>
    <member kind="function">
      <type>CellRendererState &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga1c2c79ca5b77d866e386bc29560ba66c</anchor>
      <arglist>(CellRendererState &amp;lhs, CellRendererState rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellRendererState &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga73c38048d39ad525c36ac18208c0b5d3</anchor>
      <arglist>(CellRendererState &amp;lhs, CellRendererState rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellRendererState &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gac60535e95befe7132bc7a2a29ebbc2ce</anchor>
      <arglist>(CellRendererState &amp;lhs, CellRendererState rhs)</arglist>
    </member>
    <member kind="function">
      <type>DialogFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3b82085a73fc81dd0cc467274b657795</anchor>
      <arglist>(DialogFlags lhs, DialogFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>DialogFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae7535e4ef79b707689a48379e5edf205</anchor>
      <arglist>(DialogFlags lhs, DialogFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>DialogFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad06038ee99394c76ff8fda55112133fe</anchor>
      <arglist>(DialogFlags lhs, DialogFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>DialogFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga8e68efedff247bf01dde15ddddc27990</anchor>
      <arglist>(DialogFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>DialogFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga0e5c8bc2979e1916d83e523d8f995ff9</anchor>
      <arglist>(DialogFlags &amp;lhs, DialogFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>DialogFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga205d0d1ee778d684f168922d976a102a</anchor>
      <arglist>(DialogFlags &amp;lhs, DialogFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>DialogFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaf0acfc2799a8e022b074e090728aca01</anchor>
      <arglist>(DialogFlags &amp;lhs, DialogFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AccelFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga24fd2d1cb6839ef86ce7a6b2d75c8f26</anchor>
      <arglist>(AccelFlags lhs, AccelFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AccelFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gafe48a3d029478a94658470a2cd1bf743</anchor>
      <arglist>(AccelFlags lhs, AccelFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AccelFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga2470fdd72dcfe56242bd53c4cc7d4860</anchor>
      <arglist>(AccelFlags lhs, AccelFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AccelFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad7e9a60d61a3d88550b105c346762301</anchor>
      <arglist>(AccelFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>AccelFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga73fc84d22787312866827ccd8031eb6c</anchor>
      <arglist>(AccelFlags &amp;lhs, AccelFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AccelFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga393ca9d4e0a5a61eebd9b19a67c341a1</anchor>
      <arglist>(AccelFlags &amp;lhs, AccelFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AccelFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga711fb9ea4d4f97b5dd66a6dad8387c1b</anchor>
      <arglist>(AccelFlags &amp;lhs, AccelFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>AttachOptions</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gacbda89c53fffbf710c773c1042998462</anchor>
      <arglist>(AttachOptions lhs, AttachOptions rhs)</arglist>
    </member>
    <member kind="function">
      <type>AttachOptions</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga2aadad1af9a73f8225ef6665e50bc1ca</anchor>
      <arglist>(AttachOptions lhs, AttachOptions rhs)</arglist>
    </member>
    <member kind="function">
      <type>AttachOptions</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga8218f49c48d9e7e93cf872c57cf897c0</anchor>
      <arglist>(AttachOptions lhs, AttachOptions rhs)</arglist>
    </member>
    <member kind="function">
      <type>AttachOptions</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gadc9e80fec7475ffd43cf3e7d2b0e95fd</anchor>
      <arglist>(AttachOptions flags)</arglist>
    </member>
    <member kind="function">
      <type>AttachOptions &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga0420be2f6abd3c9f193e993fedfee500</anchor>
      <arglist>(AttachOptions &amp;lhs, AttachOptions rhs)</arglist>
    </member>
    <member kind="function">
      <type>AttachOptions &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaf78081f6b56e1e4df42c34ee03e87dc7</anchor>
      <arglist>(AttachOptions &amp;lhs, AttachOptions rhs)</arglist>
    </member>
    <member kind="function">
      <type>AttachOptions &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga4f001a825ba2be47358c1e75e182daaf</anchor>
      <arglist>(AttachOptions &amp;lhs, AttachOptions rhs)</arglist>
    </member>
    <member kind="function">
      <type>PlacesOpenFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga923466ccaa16fb6c19eb09aae3178fdd</anchor>
      <arglist>(PlacesOpenFlags lhs, PlacesOpenFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PlacesOpenFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae1941608ce57aa1ef8ef4ec49b5bc9ab</anchor>
      <arglist>(PlacesOpenFlags lhs, PlacesOpenFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PlacesOpenFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gac99a607261bf16d15451233f642e22f3</anchor>
      <arglist>(PlacesOpenFlags lhs, PlacesOpenFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PlacesOpenFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaf2bf3fe654b6821158419ebe014c5dfc</anchor>
      <arglist>(PlacesOpenFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>PlacesOpenFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga2658f3fc323ceef480b862d44732e7dc</anchor>
      <arglist>(PlacesOpenFlags &amp;lhs, PlacesOpenFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PlacesOpenFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga2478ac7728c49445d471f7015acb02af</anchor>
      <arglist>(PlacesOpenFlags &amp;lhs, PlacesOpenFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>PlacesOpenFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaa128f5e9d9a2148a4c419f56cad0b5ec</anchor>
      <arglist>(PlacesOpenFlags &amp;lhs, PlacesOpenFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TargetFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga64342f7fe4d6b5fea652e5665d2e46cb</anchor>
      <arglist>(TargetFlags lhs, TargetFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TargetFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3ad4468fabf318ff689eea091277c14b</anchor>
      <arglist>(TargetFlags lhs, TargetFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TargetFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga8064038c09a5cdadceb16d47364ada09</anchor>
      <arglist>(TargetFlags lhs, TargetFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TargetFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga0c128df6a28725a9f0cde3ae13105045</anchor>
      <arglist>(TargetFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>TargetFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga33f31ee8ba96613e93f24e9720d26aee</anchor>
      <arglist>(TargetFlags &amp;lhs, TargetFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TargetFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga7bae79ced32ada911acb65bebdfd905a</anchor>
      <arglist>(TargetFlags &amp;lhs, TargetFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TargetFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga7f55d6ef80eaff46bbc91d1641b470ee</anchor>
      <arglist>(TargetFlags &amp;lhs, TargetFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RegionFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gace6dc97ced2760793b6661627f198c57</anchor>
      <arglist>(RegionFlags lhs, RegionFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RegionFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga291d71e741a69f8ada8a5828802ff971</anchor>
      <arglist>(RegionFlags lhs, RegionFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RegionFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga9de1b68ef88eef2a50d5ebb3a752a96d</anchor>
      <arglist>(RegionFlags lhs, RegionFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RegionFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga7ab05505095789dd94d0b48acdb5a262</anchor>
      <arglist>(RegionFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>RegionFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga18952cbf1727db3f3f013339ccb2a87a</anchor>
      <arglist>(RegionFlags &amp;lhs, RegionFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RegionFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga662ff56232ba842f403c4799ecdcd4d0</anchor>
      <arglist>(RegionFlags &amp;lhs, RegionFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RegionFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga282ae58caea6e63b16e2a62705261cdd</anchor>
      <arglist>(RegionFlags &amp;lhs, RegionFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>JunctionSides</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga8f57a113abb1b042614c8a070c30aee9</anchor>
      <arglist>(JunctionSides lhs, JunctionSides rhs)</arglist>
    </member>
    <member kind="function">
      <type>JunctionSides</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga2fee05161818f37a908dcbd024e1a5f2</anchor>
      <arglist>(JunctionSides lhs, JunctionSides rhs)</arglist>
    </member>
    <member kind="function">
      <type>JunctionSides</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gacdcc03b9f35f262d5641d75fb4e61e3f</anchor>
      <arglist>(JunctionSides lhs, JunctionSides rhs)</arglist>
    </member>
    <member kind="function">
      <type>JunctionSides</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad3653126aa89e938877ad82e5b453065</anchor>
      <arglist>(JunctionSides flags)</arglist>
    </member>
    <member kind="function">
      <type>JunctionSides &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gadea901fa174f0bd8285461a05a0809a4</anchor>
      <arglist>(JunctionSides &amp;lhs, JunctionSides rhs)</arglist>
    </member>
    <member kind="function">
      <type>JunctionSides &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga783678ce4482ee6ce5a65f3476397431</anchor>
      <arglist>(JunctionSides &amp;lhs, JunctionSides rhs)</arglist>
    </member>
    <member kind="function">
      <type>JunctionSides &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga99ef1cfce385c11c99c220d4e321b75a</anchor>
      <arglist>(JunctionSides &amp;lhs, JunctionSides rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaa430c6d062989989c878a4f1409376f8</anchor>
      <arglist>(StateFlags lhs, StateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga2cbf355a938231d81ffe937654fd4599</anchor>
      <arglist>(StateFlags lhs, StateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gadf47fccda70b738a0e6b6dde1dbb2ea9</anchor>
      <arglist>(StateFlags lhs, StateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga2c413d343ec83522dd8a42c6987fc0eb</anchor>
      <arglist>(StateFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>StateFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga37d7a45c257f87eb52d62dbae44255dc</anchor>
      <arglist>(StateFlags &amp;lhs, StateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gac2be079f075e21089339425f4c3f6a3b</anchor>
      <arglist>(StateFlags &amp;lhs, StateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>StateFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga46591e2dc834d86e904e55fa39e9f8e8</anchor>
      <arglist>(StateFlags &amp;lhs, StateFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>InputHints</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga6ba3c52bbebec0f97b48f59b9f84a3a8</anchor>
      <arglist>(InputHints lhs, InputHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>InputHints</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae5bb58fae80b9d328ffeabaeace1ded9</anchor>
      <arglist>(InputHints lhs, InputHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>InputHints</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga9ed94f7dab42eacdb9de8713c965bad1</anchor>
      <arglist>(InputHints lhs, InputHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>InputHints</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gacaad3c53584466e69c8f244367e977c6</anchor>
      <arglist>(InputHints flags)</arglist>
    </member>
    <member kind="function">
      <type>InputHints &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae8ca47a4563565d1f33971ad81cfce4c</anchor>
      <arglist>(InputHints &amp;lhs, InputHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>InputHints &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga1e13e262c767b57c682bc11f155adcef</anchor>
      <arglist>(InputHints &amp;lhs, InputHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>InputHints &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga6b376ffed88b71a4f7ded7a0389775b3</anchor>
      <arglist>(InputHints &amp;lhs, InputHints rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileFilterFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaf276384194b5b066483fcfc80ae44a8f</anchor>
      <arglist>(FileFilterFlags lhs, FileFilterFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileFilterFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaa7a0e9d419b5f5fa6b1667b41be8dce6</anchor>
      <arglist>(FileFilterFlags lhs, FileFilterFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileFilterFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga8a315e478dd2a634891759dc2a36893d</anchor>
      <arglist>(FileFilterFlags lhs, FileFilterFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileFilterFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga06f04a55d677c29ebbe05a66788c974e</anchor>
      <arglist>(FileFilterFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>FileFilterFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3291cedc4ee2b65f6aaf6e1920314a7e</anchor>
      <arglist>(FileFilterFlags &amp;lhs, FileFilterFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileFilterFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad93576f7621bf253dbb24ae441c3369e</anchor>
      <arglist>(FileFilterFlags &amp;lhs, FileFilterFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>FileFilterFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga7f9085428bfebc0fcbe07b60de0ac2fa</anchor>
      <arglist>(FileFilterFlags &amp;lhs, FileFilterFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>IconLookupFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae43eefc56e404acd25aa5088fa9eab40</anchor>
      <arglist>(IconLookupFlags lhs, IconLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>IconLookupFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga396c2a966305f85991a6a63247438d4b</anchor>
      <arglist>(IconLookupFlags lhs, IconLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>IconLookupFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga5042237701d1e7cb3210bb46cdb41b87</anchor>
      <arglist>(IconLookupFlags lhs, IconLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>IconLookupFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga8f097ce72dcecce314f18303ed06bfac</anchor>
      <arglist>(IconLookupFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>IconLookupFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga4151cc515d6ce6b6d99c5f9c7c3822f1</anchor>
      <arglist>(IconLookupFlags &amp;lhs, IconLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>IconLookupFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga9037d2bb6e8f05b4210a596cfd8fda9c</anchor>
      <arglist>(IconLookupFlags &amp;lhs, IconLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>IconLookupFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gab5daff6317f96dc6602f9d300d597eef</anchor>
      <arglist>(IconLookupFlags &amp;lhs, IconLookupFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RecentFilterFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga2a23c80769d64fe8064e8d2f2df34b5f</anchor>
      <arglist>(RecentFilterFlags lhs, RecentFilterFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RecentFilterFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga592044aec001cebdd21eb115991d7c02</anchor>
      <arglist>(RecentFilterFlags lhs, RecentFilterFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RecentFilterFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga781baf4e4d527ec65e061923717b71e3</anchor>
      <arglist>(RecentFilterFlags lhs, RecentFilterFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RecentFilterFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gac009d3aa1a81fe70daf3c99a065cd007</anchor>
      <arglist>(RecentFilterFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>RecentFilterFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga95f2298e8acb574a7a51ae2bf355ae7e</anchor>
      <arglist>(RecentFilterFlags &amp;lhs, RecentFilterFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RecentFilterFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae07b330895b2c7c3f62793a632a77fc6</anchor>
      <arglist>(RecentFilterFlags &amp;lhs, RecentFilterFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>RecentFilterFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaa3dd79412594212617e6091508e0e3d2</anchor>
      <arglist>(RecentFilterFlags &amp;lhs, RecentFilterFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TextSearchFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga00496c69b32a8eddccf163fb11e00327</anchor>
      <arglist>(TextSearchFlags lhs, TextSearchFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TextSearchFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga7360481e7db3ee22b52891b45b801f89</anchor>
      <arglist>(TextSearchFlags lhs, TextSearchFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TextSearchFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaac266d954271ea5fe49d534864f2d5f1</anchor>
      <arglist>(TextSearchFlags lhs, TextSearchFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TextSearchFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga0f9d38cf1bed3e028260e13b8fbc9870</anchor>
      <arglist>(TextSearchFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>TextSearchFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae0035cd1212a0d562b3c4dc774282b69</anchor>
      <arglist>(TextSearchFlags &amp;lhs, TextSearchFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TextSearchFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad8778fcc2c2c67aa28abdec698207600</anchor>
      <arglist>(TextSearchFlags &amp;lhs, TextSearchFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TextSearchFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3171b3210f43ed5468a094117b7c36eb</anchor>
      <arglist>(TextSearchFlags &amp;lhs, TextSearchFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>ToolPaletteDragTargets</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gab58a3872c7a4739ec349d6f5b324f944</anchor>
      <arglist>(ToolPaletteDragTargets lhs, ToolPaletteDragTargets rhs)</arglist>
    </member>
    <member kind="function">
      <type>ToolPaletteDragTargets</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3ae17c1cd719d4f3b83fb837bca77414</anchor>
      <arglist>(ToolPaletteDragTargets lhs, ToolPaletteDragTargets rhs)</arglist>
    </member>
    <member kind="function">
      <type>ToolPaletteDragTargets</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga90e60b61cb3b83380b785d460058e3c8</anchor>
      <arglist>(ToolPaletteDragTargets lhs, ToolPaletteDragTargets rhs)</arglist>
    </member>
    <member kind="function">
      <type>ToolPaletteDragTargets</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae20bf064b0327c2bfe202ed68f54c376</anchor>
      <arglist>(ToolPaletteDragTargets flags)</arglist>
    </member>
    <member kind="function">
      <type>ToolPaletteDragTargets &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga39d5044fc340a759d3fb7e97c3b9a6eb</anchor>
      <arglist>(ToolPaletteDragTargets &amp;lhs, ToolPaletteDragTargets rhs)</arglist>
    </member>
    <member kind="function">
      <type>ToolPaletteDragTargets &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga9e922c5bc0991e8ed49043de2a2d4c87</anchor>
      <arglist>(ToolPaletteDragTargets &amp;lhs, ToolPaletteDragTargets rhs)</arglist>
    </member>
    <member kind="function">
      <type>ToolPaletteDragTargets &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga5dc5ff391b857ce0b981b26f3ea233c0</anchor>
      <arglist>(ToolPaletteDragTargets &amp;lhs, ToolPaletteDragTargets rhs)</arglist>
    </member>
    <member kind="function">
      <type>TreeModelFlags</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga4c93ffcbc6c7f5dbb811f3541a72f191</anchor>
      <arglist>(TreeModelFlags lhs, TreeModelFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TreeModelFlags</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gafc752abf2fd6a0e4761765291d130a72</anchor>
      <arglist>(TreeModelFlags lhs, TreeModelFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TreeModelFlags</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga914b4d0c9afe671965097f7228ffb01e</anchor>
      <arglist>(TreeModelFlags lhs, TreeModelFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TreeModelFlags</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gab17753d3b215df816676f0741fa8ba91</anchor>
      <arglist>(TreeModelFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>TreeModelFlags &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gabfcb14fc2c3e23016669427e080dfd1c</anchor>
      <arglist>(TreeModelFlags &amp;lhs, TreeModelFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TreeModelFlags &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga0e4401e477b00648d7680d1d1ecc69fe</anchor>
      <arglist>(TreeModelFlags &amp;lhs, TreeModelFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>TreeModelFlags &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga17dfbab3cbd754fd2295d875cc2d9a67</anchor>
      <arglist>(TreeModelFlags &amp;lhs, TreeModelFlags rhs)</arglist>
    </member>
    <member kind="function">
      <type>DestDefaults</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gad53569ea5ff70233b03b41b870a08d37</anchor>
      <arglist>(DestDefaults lhs, DestDefaults rhs)</arglist>
    </member>
    <member kind="function">
      <type>DestDefaults</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga4350db281aab8769c9326925b7ee834e</anchor>
      <arglist>(DestDefaults lhs, DestDefaults rhs)</arglist>
    </member>
    <member kind="function">
      <type>DestDefaults</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga600559f88f10f14551d6b2c50b50bf68</anchor>
      <arglist>(DestDefaults lhs, DestDefaults rhs)</arglist>
    </member>
    <member kind="function">
      <type>DestDefaults</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gace29957c0b7dc5d2e8461a4ca4226b81</anchor>
      <arglist>(DestDefaults flags)</arglist>
    </member>
    <member kind="function">
      <type>DestDefaults &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga051f1d7cb86c9c5513bd83ecf3b2dd4c</anchor>
      <arglist>(DestDefaults &amp;lhs, DestDefaults rhs)</arglist>
    </member>
    <member kind="function">
      <type>DestDefaults &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga3969d3a13a2ea793f50e81e25cb4cbf9</anchor>
      <arglist>(DestDefaults &amp;lhs, DestDefaults rhs)</arglist>
    </member>
    <member kind="function">
      <type>DestDefaults &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaa9df1befb72008c547eec239bdb33c54</anchor>
      <arglist>(DestDefaults &amp;lhs, DestDefaults rhs)</arglist>
    </member>
    <member kind="function">
      <type>PrintCapabilities</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaad61a9471f6ee6484f965ad54b5afb80</anchor>
      <arglist>(PrintCapabilities lhs, PrintCapabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>PrintCapabilities</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga76b2f115d9c93812b98e55c298fa5a88</anchor>
      <arglist>(PrintCapabilities lhs, PrintCapabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>PrintCapabilities</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga89e437a62c5057f51524d52555f83208</anchor>
      <arglist>(PrintCapabilities lhs, PrintCapabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>PrintCapabilities</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga45759a0732ecd7ebcf69e83924465de5</anchor>
      <arglist>(PrintCapabilities flags)</arglist>
    </member>
    <member kind="function">
      <type>PrintCapabilities &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaacc1cca7058c9611b24e6f631e07a4e2</anchor>
      <arglist>(PrintCapabilities &amp;lhs, PrintCapabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>PrintCapabilities &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga828daae7b326f2fedde6b21401fb05fa</anchor>
      <arglist>(PrintCapabilities &amp;lhs, PrintCapabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>PrintCapabilities &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gae5d504a32337e05514b2fb747d61d058</anchor>
      <arglist>(PrintCapabilities &amp;lhs, PrintCapabilities rhs)</arglist>
    </member>
    <member kind="function">
      <type>UIManagerItemType</type>
      <name>operator|</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga436aeccc08950dd6cd8fc208b4d7abda</anchor>
      <arglist>(UIManagerItemType lhs, UIManagerItemType rhs)</arglist>
    </member>
    <member kind="function">
      <type>UIManagerItemType</type>
      <name>operator&amp;</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gab927be6214138245d093b316f6f64154</anchor>
      <arglist>(UIManagerItemType lhs, UIManagerItemType rhs)</arglist>
    </member>
    <member kind="function">
      <type>UIManagerItemType</type>
      <name>operator^</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga81aeb45830ac510a4e5d5a8916ffcfb7</anchor>
      <arglist>(UIManagerItemType lhs, UIManagerItemType rhs)</arglist>
    </member>
    <member kind="function">
      <type>UIManagerItemType</type>
      <name>operator~</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>ga22a9ae52041e93f31989d1e429098659</anchor>
      <arglist>(UIManagerItemType flags)</arglist>
    </member>
    <member kind="function">
      <type>UIManagerItemType &amp;</type>
      <name>operator|=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gadc7f0e3a0ea2d418a9db741cf63f3f24</anchor>
      <arglist>(UIManagerItemType &amp;lhs, UIManagerItemType rhs)</arglist>
    </member>
    <member kind="function">
      <type>UIManagerItemType &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gaedcbdcccbdf482d610227cacbf85b0a0</anchor>
      <arglist>(UIManagerItemType &amp;lhs, UIManagerItemType rhs)</arglist>
    </member>
    <member kind="function">
      <type>UIManagerItemType &amp;</type>
      <name>operator^=</name>
      <anchorfile>group__gtkmmEnums.html</anchorfile>
      <anchor>gabca912b053aba7c694b25bfa0fce9447</anchor>
      <arglist>(UIManagerItemType &amp;lhs, UIManagerItemType rhs)</arglist>
    </member>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>gtkmm Reference Manual</title>
    <filename>index</filename>
    <docanchor file="index" title="Introduction and History">intro</docanchor>
    <docanchor file="index" title="Contents">contents</docanchor>
    <docanchor file="index" title="General Features">general</docanchor>
    <docanchor file="index" title="Argument Promotion">promotion</docanchor>
    <docanchor file="index" title="NaN Arguments">NaN</docanchor>
    <docanchor file="index" title="Implementation">impl</docanchor>
    <docanchor file="index" title="Testing">testing</docanchor>
    <docanchor file="index" title="General Bibliography">bibliography</docanchor>
    <docanchor file="index" title="Description">description</docanchor>
    <docanchor file="index" title="Features">features</docanchor>
    <docanchor file="index" title="Basic Usage">basics</docanchor>
    <docanchor file="index" title="Using Meson">meson</docanchor>
    <docanchor file="index" title="Using Autotools">autotools</docanchor>
    <docanchor file="index" title="Using CMake">cmake</docanchor>
    <docanchor file="index" title="Scope of Documentation">scope</docanchor>
    <docanchor file="index">License</docanchor>
    <docanchor file="index">Introduction</docanchor>
  </compound>
</tagfile>
